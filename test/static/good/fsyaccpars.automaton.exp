State 0:
## Known stack suffix:
##
## LR(1) items:
spec' -> . spec [ # ]
## Transitions:
-- On HEADER shift to state 1
-- On spec shift to state 2
-- On headeropt shift to state 3
## Reductions:
-- On TYPE reduce production headeropt ->
-- On TOKEN reduce production headeropt ->
-- On START reduce production headeropt ->
-- On RIGHT reduce production headeropt ->
-- On PERCENT_PERCENT reduce production headeropt ->
-- On NONASSOC reduce production headeropt ->
-- On LEFT reduce production headeropt ->

State 1:
## Known stack suffix:
## HEADER
## LR(1) items:
headeropt -> HEADER . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production headeropt -> HEADER
-- On TOKEN reduce production headeropt -> HEADER
-- On START reduce production headeropt -> HEADER
-- On RIGHT reduce production headeropt -> HEADER
-- On PERCENT_PERCENT reduce production headeropt -> HEADER
-- On NONASSOC reduce production headeropt -> HEADER
-- On LEFT reduce production headeropt -> HEADER

State 2:
## Known stack suffix:
## spec
## LR(1) items:
spec' -> spec . [ # ]
## Transitions:
## Reductions:
-- On # accept spec

State 3:
## Known stack suffix:
## headeropt
## LR(1) items:
spec -> headeropt . decls PERCENT_PERCENT rules [ # ]
## Transitions:
-- On TYPE shift to state 4
-- On TOKEN shift to state 8
-- On START shift to state 10
-- On RIGHT shift to state 12
-- On NONASSOC shift to state 14
-- On LEFT shift to state 16
-- On decls shift to state 18
-- On decl shift to state 42
## Reductions:
-- On PERCENT_PERCENT reduce production decls ->

State 4:
## Known stack suffix:
## TYPE
## LR(1) items:
decl -> TYPE . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 7
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 5:
## Known stack suffix:
## IDENT
## LR(1) items:
idents -> IDENT . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 6
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 6:
## Known stack suffix:
## IDENT idents
## LR(1) items:
idents -> IDENT idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production idents -> IDENT idents
-- On TOKEN reduce production idents -> IDENT idents
-- On START reduce production idents -> IDENT idents
-- On RIGHT reduce production idents -> IDENT idents
-- On PERCENT_PERCENT reduce production idents -> IDENT idents
-- On NONASSOC reduce production idents -> IDENT idents
-- On LEFT reduce production idents -> IDENT idents

State 7:
## Known stack suffix:
## TYPE idents
## LR(1) items:
decl -> TYPE idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> TYPE idents
-- On TOKEN reduce production decl -> TYPE idents
-- On START reduce production decl -> TYPE idents
-- On RIGHT reduce production decl -> TYPE idents
-- On PERCENT_PERCENT reduce production decl -> TYPE idents
-- On NONASSOC reduce production decl -> TYPE idents
-- On LEFT reduce production decl -> TYPE idents

State 8:
## Known stack suffix:
## TOKEN
## LR(1) items:
decl -> TOKEN . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 9
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 9:
## Known stack suffix:
## TOKEN idents
## LR(1) items:
decl -> TOKEN idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> TOKEN idents
-- On TOKEN reduce production decl -> TOKEN idents
-- On START reduce production decl -> TOKEN idents
-- On RIGHT reduce production decl -> TOKEN idents
-- On PERCENT_PERCENT reduce production decl -> TOKEN idents
-- On NONASSOC reduce production decl -> TOKEN idents
-- On LEFT reduce production decl -> TOKEN idents

State 10:
## Known stack suffix:
## START
## LR(1) items:
decl -> START . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 11
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 11:
## Known stack suffix:
## START idents
## LR(1) items:
decl -> START idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> START idents
-- On TOKEN reduce production decl -> START idents
-- On START reduce production decl -> START idents
-- On RIGHT reduce production decl -> START idents
-- On PERCENT_PERCENT reduce production decl -> START idents
-- On NONASSOC reduce production decl -> START idents
-- On LEFT reduce production decl -> START idents

State 12:
## Known stack suffix:
## RIGHT
## LR(1) items:
decl -> RIGHT . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 13
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 13:
## Known stack suffix:
## RIGHT idents
## LR(1) items:
decl -> RIGHT idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> RIGHT idents
-- On TOKEN reduce production decl -> RIGHT idents
-- On START reduce production decl -> RIGHT idents
-- On RIGHT reduce production decl -> RIGHT idents
-- On PERCENT_PERCENT reduce production decl -> RIGHT idents
-- On NONASSOC reduce production decl -> RIGHT idents
-- On LEFT reduce production decl -> RIGHT idents

State 14:
## Known stack suffix:
## NONASSOC
## LR(1) items:
decl -> NONASSOC . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 15
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 15:
## Known stack suffix:
## NONASSOC idents
## LR(1) items:
decl -> NONASSOC idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> NONASSOC idents
-- On TOKEN reduce production decl -> NONASSOC idents
-- On START reduce production decl -> NONASSOC idents
-- On RIGHT reduce production decl -> NONASSOC idents
-- On PERCENT_PERCENT reduce production decl -> NONASSOC idents
-- On NONASSOC reduce production decl -> NONASSOC idents
-- On LEFT reduce production decl -> NONASSOC idents

State 16:
## Known stack suffix:
## LEFT
## LR(1) items:
decl -> LEFT . idents [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
-- On IDENT shift to state 5
-- On idents shift to state 17
## Reductions:
-- On TYPE reduce production idents ->
-- On TOKEN reduce production idents ->
-- On START reduce production idents ->
-- On RIGHT reduce production idents ->
-- On PERCENT_PERCENT reduce production idents ->
-- On NONASSOC reduce production idents ->
-- On LEFT reduce production idents ->

State 17:
## Known stack suffix:
## LEFT idents
## LR(1) items:
decl -> LEFT idents . [ TYPE TOKEN START RIGHT PERCENT_PERCENT NONASSOC LEFT ]
## Transitions:
## Reductions:
-- On TYPE reduce production decl -> LEFT idents
-- On TOKEN reduce production decl -> LEFT idents
-- On START reduce production decl -> LEFT idents
-- On RIGHT reduce production decl -> LEFT idents
-- On PERCENT_PERCENT reduce production decl -> LEFT idents
-- On NONASSOC reduce production decl -> LEFT idents
-- On LEFT reduce production decl -> LEFT idents

State 18:
## Known stack suffix:
## headeropt decls
## LR(1) items:
spec -> headeropt decls . PERCENT_PERCENT rules [ # ]
## Transitions:
-- On PERCENT_PERCENT shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## headeropt decls PERCENT_PERCENT
## LR(1) items:
spec -> headeropt decls PERCENT_PERCENT . rules [ # ]
## Transitions:
-- On IDENT shift to state 20
-- On rules shift to state 39
-- On rule shift to state 40
## Reductions:

State 20:
## Known stack suffix:
## IDENT
## LR(1) items:
rule -> IDENT . COLON optbar clauses optsemi [ IDENT # ]
## Transitions:
-- On COLON shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
rule -> IDENT COLON . optbar clauses optsemi [ IDENT # ]
## Transitions:
-- On BAR shift to state 22
-- On optbar shift to state 23
## Reductions:
-- On PREC reduce production optbar ->
-- On IDENT reduce production optbar ->
-- On ERROR reduce production optbar ->
-- On CODE reduce production optbar ->

State 22:
## Known stack suffix:
## BAR
## LR(1) items:
optbar -> BAR . [ PREC IDENT ERROR CODE ]
## Transitions:
## Reductions:
-- On PREC reduce production optbar -> BAR
-- On IDENT reduce production optbar -> BAR
-- On ERROR reduce production optbar -> BAR
-- On CODE reduce production optbar -> BAR

State 23:
## Known stack suffix:
## IDENT COLON optbar
## LR(1) items:
rule -> IDENT COLON optbar . clauses optsemi [ IDENT # ]
## Transitions:
-- On IDENT shift to state 24
-- On ERROR shift to state 25
-- On syms shift to state 28
-- On clauses shift to state 33
-- On clause shift to state 36
## Reductions:
-- On PREC reduce production syms ->
-- On CODE reduce production syms ->

State 24:
## Known stack suffix:
## IDENT
## LR(1) items:
syms -> IDENT . syms [ PREC CODE ]
## Transitions:
-- On IDENT shift to state 24
-- On ERROR shift to state 25
-- On syms shift to state 27
## Reductions:
-- On PREC reduce production syms ->
-- On CODE reduce production syms ->

State 25:
## Known stack suffix:
## ERROR
## LR(1) items:
syms -> ERROR . syms [ PREC CODE ]
## Transitions:
-- On IDENT shift to state 24
-- On ERROR shift to state 25
-- On syms shift to state 26
## Reductions:
-- On PREC reduce production syms ->
-- On CODE reduce production syms ->

State 26:
## Known stack suffix:
## ERROR syms
## LR(1) items:
syms -> ERROR syms . [ PREC CODE ]
## Transitions:
## Reductions:
-- On PREC reduce production syms -> ERROR syms
-- On CODE reduce production syms -> ERROR syms

State 27:
## Known stack suffix:
## IDENT syms
## LR(1) items:
syms -> IDENT syms . [ PREC CODE ]
## Transitions:
## Reductions:
-- On PREC reduce production syms -> IDENT syms
-- On CODE reduce production syms -> IDENT syms

State 28:
## Known stack suffix:
## syms
## LR(1) items:
clause -> syms . optprec CODE [ SEMI IDENT BAR # ]
## Transitions:
-- On PREC shift to state 29
-- On optprec shift to state 31
## Reductions:
-- On CODE reduce production optprec ->

State 29:
## Known stack suffix:
## PREC
## LR(1) items:
optprec -> PREC . IDENT [ CODE ]
## Transitions:
-- On IDENT shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## PREC IDENT
## LR(1) items:
optprec -> PREC IDENT . [ CODE ]
## Transitions:
## Reductions:
-- On CODE reduce production optprec -> PREC IDENT

State 31:
## Known stack suffix:
## syms optprec
## LR(1) items:
clause -> syms optprec . CODE [ SEMI IDENT BAR # ]
## Transitions:
-- On CODE shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## syms optprec CODE
## LR(1) items:
clause -> syms optprec CODE . [ SEMI IDENT BAR # ]
## Transitions:
## Reductions:
-- On SEMI reduce production clause -> syms optprec CODE
-- On IDENT reduce production clause -> syms optprec CODE
-- On BAR reduce production clause -> syms optprec CODE
-- On # reduce production clause -> syms optprec CODE
** End-of-stream conflict on SEMI IDENT BAR
**   There is a tension between
**   (1) reducing production clause -> syms optprec CODE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 33:
## Known stack suffix:
## IDENT COLON optbar clauses
## LR(1) items:
rule -> IDENT COLON optbar clauses . optsemi [ IDENT # ]
## Transitions:
-- On SEMI shift to state 34
-- On optsemi shift to state 35
## Reductions:
-- On IDENT reduce production optsemi ->
-- On # reduce production optsemi ->
** End-of-stream conflict on SEMI IDENT
**   There is a tension between
**   (1) reducing production optsemi ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 34:
## Known stack suffix:
## SEMI
## LR(1) items:
optsemi -> SEMI . [ IDENT # ]
## Transitions:
## Reductions:
-- On IDENT reduce production optsemi -> SEMI
-- On # reduce production optsemi -> SEMI
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production optsemi -> SEMI
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 35:
## Known stack suffix:
## IDENT COLON optbar clauses optsemi
## LR(1) items:
rule -> IDENT COLON optbar clauses optsemi . [ IDENT # ]
## Transitions:
## Reductions:
-- On IDENT reduce production rule -> IDENT COLON optbar clauses optsemi
-- On # reduce production rule -> IDENT COLON optbar clauses optsemi
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production rule -> IDENT COLON optbar clauses optsemi
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 36:
## Known stack suffix:
## clause
## LR(1) items:
clauses -> clause . BAR clauses [ SEMI IDENT # ]
clauses -> clause . [ SEMI IDENT # ]
## Transitions:
-- On BAR shift to state 37
## Reductions:
-- On SEMI reduce production clauses -> clause
-- On IDENT reduce production clauses -> clause
-- On # reduce production clauses -> clause
** End-of-stream conflict on SEMI IDENT BAR
**   There is a tension between
**   (1) reducing production clauses -> clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 37:
## Known stack suffix:
## clause BAR
## LR(1) items:
clauses -> clause BAR . clauses [ SEMI IDENT # ]
## Transitions:
-- On IDENT shift to state 24
-- On ERROR shift to state 25
-- On syms shift to state 28
-- On clauses shift to state 38
-- On clause shift to state 36
## Reductions:
-- On PREC reduce production syms ->
-- On CODE reduce production syms ->

State 38:
## Known stack suffix:
## clause BAR clauses
## LR(1) items:
clauses -> clause BAR clauses . [ SEMI IDENT # ]
## Transitions:
## Reductions:
-- On SEMI reduce production clauses -> clause BAR clauses
-- On IDENT reduce production clauses -> clause BAR clauses
-- On # reduce production clauses -> clause BAR clauses
** End-of-stream conflict on SEMI IDENT
**   There is a tension between
**   (1) reducing production clauses -> clause BAR clauses
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 39:
## Known stack suffix:
## headeropt decls PERCENT_PERCENT rules
## LR(1) items:
spec -> headeropt decls PERCENT_PERCENT rules . [ # ]
## Transitions:
## Reductions:
-- On # reduce production spec -> headeropt decls PERCENT_PERCENT rules

State 40:
## Known stack suffix:
## rule
## LR(1) items:
rules -> rule . rules [ # ]
rules -> rule . [ # ]
## Transitions:
-- On IDENT shift to state 20
-- On rules shift to state 41
-- On rule shift to state 40
## Reductions:
-- On # reduce production rules -> rule
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production rules -> rule
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 41:
## Known stack suffix:
## rule rules
## LR(1) items:
rules -> rule rules . [ # ]
## Transitions:
## Reductions:
-- On # reduce production rules -> rule rules

State 42:
## Known stack suffix:
## decl
## LR(1) items:
decls -> decl . decls [ PERCENT_PERCENT ]
## Transitions:
-- On TYPE shift to state 4
-- On TOKEN shift to state 8
-- On START shift to state 10
-- On RIGHT shift to state 12
-- On NONASSOC shift to state 14
-- On LEFT shift to state 16
-- On decls shift to state 43
-- On decl shift to state 42
## Reductions:
-- On PERCENT_PERCENT reduce production decls ->

State 43:
## Known stack suffix:
## decl decls
## LR(1) items:
decls -> decl decls . [ PERCENT_PERCENT ]
## Transitions:
## Reductions:
-- On PERCENT_PERCENT reduce production decls -> decl decls

