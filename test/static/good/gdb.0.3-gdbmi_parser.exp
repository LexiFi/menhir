Grammar has 13 nonterminal symbols, among which 2 start symbols.
Grammar has 18 terminal symbols.
Grammar has 30 productions.
nullable(value) = false
nullable(stream_type) = false
nullable(separated_nonempty_list(COMMA,value)) = false
nullable(separated_nonempty_list(COMMA,result)) = false
nullable(result) = false
nullable(output_record) = false
nullable(output) = false
nullable(option(TOKEN)) = true
nullable(loption(separated_nonempty_list(COMMA,result))) = true
nullable(list(preceded(COMMA,result))) = true
nullable(input_prefix) = false
nullable(input_output) = false
nullable(async_type) = false
first(value) = STRING LCURLY LBRACKET
first(stream_type) = TILDE AT AMPERSAND
first(separated_nonempty_list(COMMA,value)) = STRING LCURLY LBRACKET
first(separated_nonempty_list(COMMA,result)) = IDENT
first(result) = IDENT
first(output_record) = TOKEN TILDE PLUS EQUAL CARET AT ASTERISK AMPERSAND
first(output) = TOKEN TILDE PLUS EQUAL CARET AT ASTERISK AMPERSAND
first(option(TOKEN)) = TOKEN
first(loption(separated_nonempty_list(COMMA,result))) = IDENT
first(list(preceded(COMMA,result))) = COMMA
first(input_prefix) = TOKEN MINUS IDENT
first(input_output) = TOKEN TILDE PROMPT PLUS MINUS IDENT EQUAL CARET AT ASTERISK AMPERSAND
first(async_type) = PLUS EQUAL ASTERISK
minimal(value) = (* 1 *) STRING
minimal(stream_type) = (* 1 *) TILDE
minimal(separated_nonempty_list(COMMA,value)) = (* 1 *) STRING
minimal(separated_nonempty_list(COMMA,result)) = (* 3 *) IDENT EQUAL STRING
minimal(result) = (* 3 *) IDENT EQUAL STRING
minimal(output_record) = (* 2 *) TILDE STRING
minimal(output) = (* 3 *) TILDE STRING EOF
minimal(option(TOKEN)) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,result))) = (* 0 *)
minimal(list(preceded(COMMA,result))) = (* 0 *)
minimal(input_prefix) = (* 1 *) MINUS
minimal(input_output) = (* 1 *) MINUS
minimal(async_type) = (* 1 *) ASTERISK
follow(value) = RCURLY RBRACKET EOF COMMA
follow(stream_type) = STRING
follow(separated_nonempty_list(COMMA,value)) = RBRACKET
follow(separated_nonempty_list(COMMA,result)) = RCURLY RBRACKET
follow(result) = RCURLY RBRACKET EOF COMMA
follow(output_record) = EOF
follow(output) = #
follow(option(TOKEN)) = PLUS MINUS EQUAL CARET ASTERISK
follow(loption(separated_nonempty_list(COMMA,result))) = RCURLY RBRACKET
follow(list(preceded(COMMA,result))) = EOF
follow(input_prefix) = #
follow(input_output) = #
follow(async_type) = IDENT
Built an LR(0) automaton with 51 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 51 states.
27 out of 51 states have a default reduction.
11 out of 51 states are represented.
0 out of 35 symbols keep track of their start position.
0 out of 35 symbols keep track of their end position.
25 out of 32 productions exploit shiftreduce optimization.
101 functions before inlining, 31 functions after inlining.
