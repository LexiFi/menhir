Grammar has 11 nonterminal symbols, among which 2 start symbols.
Grammar has 48 terminal symbols.
Grammar has 74 productions.
nullable(semi_opt) = true
nullable(reg) = false
nullable(proc_list) = false
nullable(opt) = false
nullable(main) = false
nullable(k) = false
nullable(iol_list) = false
nullable(instr_option_seq) = true
nullable(instr_option_list) = true
nullable(instr_option) = true
nullable(instr) = false
first(semi_opt) = SEMI
first(reg) = SYMB_REG ARCH_REG
first(proc_list) = PROC
first(opt) = I_SY I_ST I_OSHST I_OSH I_NSHST I_NSH I_ISHST I_ISH
first(main) = SEMI PROC
first(k) = NUM META
first(iol_list) = SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD CODEVAR
first(instr_option_seq) = SEMI NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD CODEVAR
first(instr_option_list) = PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD CODEVAR
first(instr_option) = NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD CODEVAR
first(instr) = I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD
minimal(semi_opt) = (* 0 *)
minimal(reg) = (* 1 *) SYMB_REG
minimal(proc_list) = (* 2 *) PROC SEMI
minimal(opt) = (* 1 *) I_SY
minimal(main) = (* 4 *) PROC SEMI SEMI EOF
minimal(k) = (* 1 *) NUM
minimal(iol_list) = (* 1 *) SEMI
minimal(instr_option_seq) = (* 0 *)
minimal(instr_option_list) = (* 0 *)
minimal(instr_option) = (* 0 *)
minimal(instr) = (* 1 *) I_DMB
maximal(semi_opt) = 1
maximal(reg) = 1
maximal(proc_list) = infinity
maximal(opt) = 1
maximal(main) = infinity
maximal(k) = 1
maximal(iol_list) = infinity
maximal(instr_option_seq) = infinity
maximal(instr_option_list) = infinity
maximal(instr_option) = infinity
maximal(instr) = 8
follow(semi_opt) = PROC
follow(reg) = SEMI RBRK PIPE COMMA #
follow(proc_list) = SEMI PIPE NAME I_XORS I_XOR I_STRNE I_STREX I_STREQ I_STR I_MOVNE I_MOVEQ I_MOV I_LDRNE I_LDREX I_LDREQ I_LDR I_ISB I_DSB I_DMB I_CMP I_CBZ I_CBNZ I_BNE I_BEQ I_B I_ANDS I_AND I_ADDS I_ADD CODEVAR
follow(opt) = SEMI PIPE #
follow(main) = #
follow(k) = SEMI PIPE #
follow(iol_list) = EOF
follow(instr_option_seq) = #
follow(instr_option_list) = SEMI
follow(instr_option) = SEMI PIPE #
follow(instr) = SEMI PIPE #
Built an LR(0) automaton with 191 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 191 states.
File "herdtools7.7.51-ARMParser.mly", line 44, characters 0-9:
Warning: the precedence level assigned to SEMI is never useful.
Warning: 66 end-of-stream conflicts were arbitrarily resolved.
File "herdtools7.7.51-ARMParser.mly", line 72, characters 4-16:
Warning: production instr_option_seq -> instr_option is never reduced.
Warning: in total, 1 production is never reduced.
69 out of 191 states have a default reduction.
68 out of 191 states are represented.
0 out of 63 symbols keep track of their start position.
0 out of 63 symbols keep track of their end position.
51 out of 76 productions exploit shiftreduce optimization.
0 out of 191 states can peek at an error.
474 functions before inlining, 56 functions after inlining.
