State 0:
deep_main' -> . deep_main [ # ]
-- On VOID shift to state 1
-- On voidopt shift to state 2
-- On trans_unit shift to state 342
-- On function_def shift to state 345
-- On deep_main shift to state 346
-- On PROC reduce production voidopt -> 

State 1:
voidopt -> VOID . [ PROC ]
-- On PROC reduce production voidopt -> VOID 

State 2:
function_def -> voidopt . PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
-- On PROC shift to state 3

State 3:
function_def -> voidopt PROC . LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
-- On LPAR shift to state 4

State 4:
function_def -> voidopt PROC LPAR . parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 28
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
-- On RPAR reduce production parameter_list -> 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 5:
typ -> VOLATILE . base0 [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOID shift to state 6
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ty_attr shift to state 9
-- On base0 shift to state 14
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 6:
base0 -> VOID . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> VOID 
-- On STAR reduce production base0 -> VOID 
-- On RPAR reduce production base0 -> VOID 
-- On IDENTIFIER reduce production base0 -> VOID 

State 7:
base0 -> BASE_TYPE . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> BASE_TYPE 
-- On STAR reduce production base0 -> BASE_TYPE 
-- On RPAR reduce production base0 -> BASE_TYPE 
-- On IDENTIFIER reduce production base0 -> BASE_TYPE 

State 8:
base0 -> ATOMIC_TYPE . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> ATOMIC_TYPE 
-- On STAR reduce production base0 -> ATOMIC_TYPE 
-- On RPAR reduce production base0 -> ATOMIC_TYPE 
-- On IDENTIFIER reduce production base0 -> ATOMIC_TYPE 

State 9:
base0 -> ty_attr . MUTEX [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . CHAR [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . INT [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . LONG [ VOLATILE STAR RPAR IDENTIFIER ]
-- On MUTEX shift to state 10
-- On LONG shift to state 11
-- On INT shift to state 12
-- On CHAR shift to state 13

State 10:
base0 -> ty_attr MUTEX . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> ty_attr MUTEX 
-- On STAR reduce production base0 -> ty_attr MUTEX 
-- On RPAR reduce production base0 -> ty_attr MUTEX 
-- On IDENTIFIER reduce production base0 -> ty_attr MUTEX 

State 11:
base0 -> ty_attr LONG . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> ty_attr LONG 
-- On STAR reduce production base0 -> ty_attr LONG 
-- On RPAR reduce production base0 -> ty_attr LONG 
-- On IDENTIFIER reduce production base0 -> ty_attr LONG 

State 12:
base0 -> ty_attr INT . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> ty_attr INT 
-- On STAR reduce production base0 -> ty_attr INT 
-- On RPAR reduce production base0 -> ty_attr INT 
-- On IDENTIFIER reduce production base0 -> ty_attr INT 

State 13:
base0 -> ty_attr CHAR . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base0 -> ty_attr CHAR 
-- On STAR reduce production base0 -> ty_attr CHAR 
-- On RPAR reduce production base0 -> ty_attr CHAR 
-- On IDENTIFIER reduce production base0 -> ty_attr CHAR 

State 14:
typ -> VOLATILE base0 . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production typ -> VOLATILE base0 
-- On STAR reduce production typ -> VOLATILE base0 
-- On RPAR reduce production typ -> VOLATILE base0 
-- On IDENTIFIER reduce production typ -> VOLATILE base0 

State 15:
base -> LPAR . typ RPAR [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 19
-- On ty_attr shift to state 9
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 16:
typ -> ATOMIC . base [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ty_attr shift to state 9
-- On base0 shift to state 17
-- On base shift to state 18
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 17:
base -> base0 . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base -> base0 
-- On STAR reduce production base -> base0 
-- On RPAR reduce production base -> base0 
-- On IDENTIFIER reduce production base -> base0 

State 18:
typ -> ATOMIC base . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production typ -> ATOMIC base 
-- On STAR reduce production typ -> ATOMIC base 
-- On RPAR reduce production typ -> ATOMIC base 
-- On IDENTIFIER reduce production typ -> ATOMIC base 

State 19:
base -> LPAR typ . RPAR [ VOLATILE STAR RPAR IDENTIFIER ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 22

State 20:
typ -> typ VOLATILE . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production typ -> typ VOLATILE 
-- On STAR reduce production typ -> typ VOLATILE 
-- On RPAR reduce production typ -> typ VOLATILE 
-- On IDENTIFIER reduce production typ -> typ VOLATILE 

State 21:
typ -> typ STAR . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production typ -> typ STAR 
-- On STAR reduce production typ -> typ STAR 
-- On RPAR reduce production typ -> typ STAR 
-- On IDENTIFIER reduce production typ -> typ STAR 

State 22:
base -> LPAR typ RPAR . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production base -> LPAR typ RPAR 
-- On STAR reduce production base -> LPAR typ RPAR 
-- On RPAR reduce production base -> LPAR typ RPAR 
-- On IDENTIFIER reduce production base -> LPAR typ RPAR 

State 23:
typ -> base . [ VOLATILE STAR RPAR IDENTIFIER ]
-- On VOLATILE reduce production typ -> base 
-- On STAR reduce production typ -> base 
-- On RPAR reduce production typ -> base 
-- On IDENTIFIER reduce production typ -> base 

State 24:
toptyp -> typ . STAR [ IDENTIFIER ]
typ -> typ . STAR [ VOLATILE STAR ]
typ -> typ . VOLATILE [ VOLATILE STAR ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 25

State 25:
toptyp -> typ STAR . [ IDENTIFIER ]
typ -> typ STAR . [ VOLATILE STAR ]
-- On VOLATILE reduce production typ -> typ STAR 
-- On STAR reduce production typ -> typ STAR 
-- On IDENTIFIER reduce production toptyp -> typ STAR 

State 26:
parameter_declaration -> toptyp . IDENTIFIER [ RPAR COMMA ]
-- On IDENTIFIER shift to state 27

State 27:
parameter_declaration -> toptyp IDENTIFIER . [ RPAR COMMA ]
-- On RPAR reduce production parameter_declaration -> toptyp IDENTIFIER 
-- On COMMA reduce production parameter_declaration -> toptyp IDENTIFIER 

State 28:
function_def -> voidopt PROC LPAR parameter_list . RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
-- On RPAR shift to state 29

State 29:
function_def -> voidopt PROC LPAR parameter_list RPAR . LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
-- On LBRACE shift to state 30

State 30:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE . pseudo_seq RBRACE [ VOID PROC EOF ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 333
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 31:
instruction -> UNLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 32

State 32:
instruction -> UNLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 232

State 33:
expr -> XCHG . LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LBRACE shift to state 34

State 34:
expr -> XCHG LBRACE . annot_list RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 38
-- On annot_base shift to state 135
-- On annot shift to state 138

State 35:
annot_base -> UNLOCK . [ SUB RBRACE COMMA ]
-- On SUB reduce production annot_base -> UNLOCK 
-- On RBRACE reduce production annot_base -> UNLOCK 
-- On COMMA reduce production annot_base -> UNLOCK 

State 36:
annot_base -> LOCK . [ SUB RBRACE COMMA ]
-- On SUB reduce production annot_base -> LOCK 
-- On RBRACE reduce production annot_base -> LOCK 
-- On COMMA reduce production annot_base -> LOCK 

State 37:
annot_base -> IDENTIFIER . [ SUB RBRACE COMMA ]
-- On SUB reduce production annot_base -> IDENTIFIER 
-- On RBRACE reduce production annot_base -> IDENTIFIER 
-- On COMMA reduce production annot_base -> IDENTIFIER 

State 38:
expr -> XCHG LBRACE annot_list . RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RBRACE shift to state 39

State 39:
expr -> XCHG LBRACE annot_list RBRACE . LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 40

State 40:
expr -> XCHG LBRACE annot_list RBRACE LPAR . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 228

State 41:
expr -> WCAS_EXPLICIT . LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 42

State 42:
expr -> WCAS_EXPLICIT LPAR . expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 218

State 43:
expr -> WCAS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 44

State 44:
expr -> WCAS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 212

State 45:
expr -> UNDERATOMICOPRETURN . LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LBRACE shift to state 46

State 46:
expr -> UNDERATOMICOPRETURN LBRACE . annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 47
-- On annot_base shift to state 135
-- On annot shift to state 138

State 47:
expr -> UNDERATOMICOPRETURN LBRACE annot_list . RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RBRACE shift to state 48

State 48:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE . LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 49

State 49:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR . expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 206

State 50:
expr -> UNDERATOMICFETCHOP . LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LBRACE shift to state 51

State 51:
expr -> UNDERATOMICFETCHOP LBRACE . annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 52
-- On annot_base shift to state 135
-- On annot shift to state 138

State 52:
expr -> UNDERATOMICFETCHOP LBRACE annot_list . RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RBRACE shift to state 53

State 53:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE . LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 54

State 54:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR . expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 198

State 55:
expr -> UNDERATOMICADDUNLESS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 56

State 56:
expr -> UNDERATOMICADDUNLESS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 192

State 57:
expr -> STAR . IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR . LPAR typ RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 58
-- On IDENTIFIER shift to state 191

State 58:
expr -> STAR LPAR . typ RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 186
-- On ty_attr shift to state 9
-- On expr shift to state 189
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 59:
expr -> SPINTRYLOCK . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 60

State 60:
expr -> SPINTRYLOCK LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 184

State 61:
expr -> SPINISLOCKED . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 62

State 62:
expr -> SPINISLOCKED LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 182

State 63:
expr -> SCAS_EXPLICIT . LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 64

State 64:
expr -> SCAS_EXPLICIT LPAR . expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 172

State 65:
expr -> SCAS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 66

State 66:
expr -> SCAS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 166

State 67:
expr -> LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> LPAR . typ RPAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 164
-- On ty_attr shift to state 9
-- On expr shift to state 162
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 68:
base -> LPAR . typ RPAR [ VOLATILE STAR RPAR ]
expr -> LPAR . expr RPAR [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> LPAR . typ RPAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 159
-- On ty_attr shift to state 9
-- On expr shift to state 162
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 69:
expr -> LOAD . LBRACE annot_list RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LBRACE shift to state 70

State 70:
expr -> LOAD LBRACE . annot_list RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 71
-- On annot_base shift to state 135
-- On annot shift to state 138

State 71:
expr -> LOAD LBRACE annot_list . RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RBRACE shift to state 72

State 72:
expr -> LOAD LBRACE annot_list RBRACE . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 73

State 73:
expr -> LOAD LBRACE annot_list RBRACE LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 157

State 74:
expr -> LD_EXPLICIT . LPAR expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 75

State 75:
expr -> LD_EXPLICIT LPAR . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 153

State 76:
expr -> IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> IDENTIFIER . LPAR args RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 77
-- On XOR reduce production expr -> IDENTIFIER 
-- On SUB reduce production expr -> IDENTIFIER 
-- On STAR reduce production expr -> IDENTIFIER 
-- On SEMI reduce production expr -> IDENTIFIER 
-- On RPAR reduce production expr -> IDENTIFIER 
-- On PIPE reduce production expr -> IDENTIFIER 
-- On NEQ_OP reduce production expr -> IDENTIFIER 
-- On LT reduce production expr -> IDENTIFIER 
-- On LE reduce production expr -> IDENTIFIER 
-- On LAND reduce production expr -> IDENTIFIER 
-- On IDENTIFIER reduce production expr -> IDENTIFIER 
-- On GT reduce production expr -> IDENTIFIER 
-- On GE reduce production expr -> IDENTIFIER 
-- On EQ_OP reduce production expr -> IDENTIFIER 
-- On DIV reduce production expr -> IDENTIFIER 
-- On COMMA reduce production expr -> IDENTIFIER 
-- On ADD reduce production expr -> IDENTIFIER 
-- On # reduce production expr -> IDENTIFIER 

State 77:
expr -> IDENTIFIER LPAR . args RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 150
-- On args shift to state 151
-- On RPAR reduce production args -> 

State 78:
expr -> EXC_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 79

State 79:
expr -> EXC_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 141

State 80:
expr -> CONSTVAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> CONSTVAR 
-- On SUB reduce production expr -> CONSTVAR 
-- On STAR reduce production expr -> CONSTVAR 
-- On SEMI reduce production expr -> CONSTVAR 
-- On RPAR reduce production expr -> CONSTVAR 
-- On PIPE reduce production expr -> CONSTVAR 
-- On NEQ_OP reduce production expr -> CONSTVAR 
-- On LT reduce production expr -> CONSTVAR 
-- On LE reduce production expr -> CONSTVAR 
-- On LAND reduce production expr -> CONSTVAR 
-- On IDENTIFIER reduce production expr -> CONSTVAR 
-- On GT reduce production expr -> CONSTVAR 
-- On GE reduce production expr -> CONSTVAR 
-- On EQ_OP reduce production expr -> CONSTVAR 
-- On DIV reduce production expr -> CONSTVAR 
-- On COMMA reduce production expr -> CONSTVAR 
-- On ADD reduce production expr -> CONSTVAR 
-- On # reduce production expr -> CONSTVAR 

State 81:
expr -> CONSTANT . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> CONSTANT 
-- On SUB reduce production expr -> CONSTANT 
-- On STAR reduce production expr -> CONSTANT 
-- On SEMI reduce production expr -> CONSTANT 
-- On RPAR reduce production expr -> CONSTANT 
-- On PIPE reduce production expr -> CONSTANT 
-- On NEQ_OP reduce production expr -> CONSTANT 
-- On LT reduce production expr -> CONSTANT 
-- On LE reduce production expr -> CONSTANT 
-- On LAND reduce production expr -> CONSTANT 
-- On IDENTIFIER reduce production expr -> CONSTANT 
-- On GT reduce production expr -> CONSTANT 
-- On GE reduce production expr -> CONSTANT 
-- On EQ_OP reduce production expr -> CONSTANT 
-- On DIV reduce production expr -> CONSTANT 
-- On COMMA reduce production expr -> CONSTANT 
-- On ADD reduce production expr -> CONSTANT 
-- On # reduce production expr -> CONSTANT 

State 82:
expr -> CMPXCHG . LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LBRACE shift to state 83

State 83:
expr -> CMPXCHG LBRACE . annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 84
-- On annot_base shift to state 135
-- On annot shift to state 138

State 84:
expr -> CMPXCHG LBRACE annot_list . RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RBRACE shift to state 85

State 85:
expr -> CMPXCHG LBRACE annot_list RBRACE . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 86

State 86:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 129

State 87:
expr -> ATOMIC_FETCH_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 88

State 88:
expr -> ATOMIC_FETCH_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 123

State 89:
expr -> ATOMICADDUNLESS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On LPAR shift to state 90

State 90:
expr -> ATOMICADDUNLESS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 91

State 91:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMICADDUNLESS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 118
-- On ADD shift to state 102

State 92:
expr -> expr XOR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 93

State 93:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr XOR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr XOR expr 
-- On SEMI reduce production expr -> expr XOR expr 
-- On RPAR reduce production expr -> expr XOR expr 
-- On PIPE reduce production expr -> expr XOR expr 
-- On IDENTIFIER reduce production expr -> expr XOR expr 
-- On COMMA reduce production expr -> expr XOR expr 
-- On # reduce production expr -> expr XOR expr 

State 94:
expr -> expr SUB . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 95

State 95:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr SUB expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On XOR reduce production expr -> expr SUB expr 
-- On SUB reduce production expr -> expr SUB expr 
-- On SEMI reduce production expr -> expr SUB expr 
-- On RPAR reduce production expr -> expr SUB expr 
-- On PIPE reduce production expr -> expr SUB expr 
-- On NEQ_OP reduce production expr -> expr SUB expr 
-- On LT reduce production expr -> expr SUB expr 
-- On LE reduce production expr -> expr SUB expr 
-- On LAND reduce production expr -> expr SUB expr 
-- On IDENTIFIER reduce production expr -> expr SUB expr 
-- On GT reduce production expr -> expr SUB expr 
-- On GE reduce production expr -> expr SUB expr 
-- On EQ_OP reduce production expr -> expr SUB expr 
-- On COMMA reduce production expr -> expr SUB expr 
-- On ADD reduce production expr -> expr SUB expr 
-- On # reduce production expr -> expr SUB expr 

State 96:
expr -> expr STAR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 97

State 97:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr STAR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> expr STAR expr 
-- On SUB reduce production expr -> expr STAR expr 
-- On STAR reduce production expr -> expr STAR expr 
-- On SEMI reduce production expr -> expr STAR expr 
-- On RPAR reduce production expr -> expr STAR expr 
-- On PIPE reduce production expr -> expr STAR expr 
-- On NEQ_OP reduce production expr -> expr STAR expr 
-- On LT reduce production expr -> expr STAR expr 
-- On LE reduce production expr -> expr STAR expr 
-- On LAND reduce production expr -> expr STAR expr 
-- On IDENTIFIER reduce production expr -> expr STAR expr 
-- On GT reduce production expr -> expr STAR expr 
-- On GE reduce production expr -> expr STAR expr 
-- On EQ_OP reduce production expr -> expr STAR expr 
-- On DIV reduce production expr -> expr STAR expr 
-- On COMMA reduce production expr -> expr STAR expr 
-- On ADD reduce production expr -> expr STAR expr 
-- On # reduce production expr -> expr STAR expr 

State 98:
expr -> expr DIV . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 99

State 99:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr DIV expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> expr DIV expr 
-- On SUB reduce production expr -> expr DIV expr 
-- On STAR reduce production expr -> expr DIV expr 
-- On SEMI reduce production expr -> expr DIV expr 
-- On RPAR reduce production expr -> expr DIV expr 
-- On PIPE reduce production expr -> expr DIV expr 
-- On NEQ_OP reduce production expr -> expr DIV expr 
-- On LT reduce production expr -> expr DIV expr 
-- On LE reduce production expr -> expr DIV expr 
-- On LAND reduce production expr -> expr DIV expr 
-- On IDENTIFIER reduce production expr -> expr DIV expr 
-- On GT reduce production expr -> expr DIV expr 
-- On GE reduce production expr -> expr DIV expr 
-- On EQ_OP reduce production expr -> expr DIV expr 
-- On DIV reduce production expr -> expr DIV expr 
-- On COMMA reduce production expr -> expr DIV expr 
-- On ADD reduce production expr -> expr DIV expr 
-- On # reduce production expr -> expr DIV expr 

State 100:
expr -> expr NEQ_OP . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 101

State 101:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr NEQ_OP expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr NEQ_OP expr 
-- On SEMI reduce production expr -> expr NEQ_OP expr 
-- On RPAR reduce production expr -> expr NEQ_OP expr 
-- On PIPE reduce production expr -> expr NEQ_OP expr 
-- On LAND reduce production expr -> expr NEQ_OP expr 
-- On IDENTIFIER reduce production expr -> expr NEQ_OP expr 
-- On COMMA reduce production expr -> expr NEQ_OP expr 
-- On # reduce production expr -> expr NEQ_OP expr 

State 102:
expr -> expr ADD . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 103

State 103:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr ADD expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On XOR reduce production expr -> expr ADD expr 
-- On SUB reduce production expr -> expr ADD expr 
-- On SEMI reduce production expr -> expr ADD expr 
-- On RPAR reduce production expr -> expr ADD expr 
-- On PIPE reduce production expr -> expr ADD expr 
-- On NEQ_OP reduce production expr -> expr ADD expr 
-- On LT reduce production expr -> expr ADD expr 
-- On LE reduce production expr -> expr ADD expr 
-- On LAND reduce production expr -> expr ADD expr 
-- On IDENTIFIER reduce production expr -> expr ADD expr 
-- On GT reduce production expr -> expr ADD expr 
-- On GE reduce production expr -> expr ADD expr 
-- On EQ_OP reduce production expr -> expr ADD expr 
-- On COMMA reduce production expr -> expr ADD expr 
-- On ADD reduce production expr -> expr ADD expr 
-- On # reduce production expr -> expr ADD expr 

State 104:
expr -> expr LT . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 105

State 105:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LT expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr LT expr 
-- On SEMI reduce production expr -> expr LT expr 
-- On RPAR reduce production expr -> expr LT expr 
-- On PIPE reduce production expr -> expr LT expr 
-- On LAND reduce production expr -> expr LT expr 
-- On IDENTIFIER reduce production expr -> expr LT expr 
-- On COMMA reduce production expr -> expr LT expr 
-- On # reduce production expr -> expr LT expr 

State 106:
expr -> expr LE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 107

State 107:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr LE expr 
-- On SEMI reduce production expr -> expr LE expr 
-- On RPAR reduce production expr -> expr LE expr 
-- On PIPE reduce production expr -> expr LE expr 
-- On LAND reduce production expr -> expr LE expr 
-- On IDENTIFIER reduce production expr -> expr LE expr 
-- On COMMA reduce production expr -> expr LE expr 
-- On # reduce production expr -> expr LE expr 

State 108:
expr -> expr LAND . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 109

State 109:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LAND expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr LAND expr 
-- On SEMI reduce production expr -> expr LAND expr 
-- On RPAR reduce production expr -> expr LAND expr 
-- On PIPE reduce production expr -> expr LAND expr 
-- On LAND reduce production expr -> expr LAND expr 
-- On IDENTIFIER reduce production expr -> expr LAND expr 
-- On COMMA reduce production expr -> expr LAND expr 
-- On # reduce production expr -> expr LAND expr 

State 110:
expr -> expr GT . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 111

State 111:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr GT expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr GT expr 
-- On SEMI reduce production expr -> expr GT expr 
-- On RPAR reduce production expr -> expr GT expr 
-- On PIPE reduce production expr -> expr GT expr 
-- On LAND reduce production expr -> expr GT expr 
-- On IDENTIFIER reduce production expr -> expr GT expr 
-- On COMMA reduce production expr -> expr GT expr 
-- On # reduce production expr -> expr GT expr 

State 112:
expr -> expr GE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 113

State 113:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr GE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr GE expr 
-- On SEMI reduce production expr -> expr GE expr 
-- On RPAR reduce production expr -> expr GE expr 
-- On PIPE reduce production expr -> expr GE expr 
-- On LAND reduce production expr -> expr GE expr 
-- On IDENTIFIER reduce production expr -> expr GE expr 
-- On COMMA reduce production expr -> expr GE expr 
-- On # reduce production expr -> expr GE expr 

State 114:
expr -> expr EQ_OP . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 115

State 115:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr EQ_OP expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On XOR reduce production expr -> expr EQ_OP expr 
-- On SEMI reduce production expr -> expr EQ_OP expr 
-- On RPAR reduce production expr -> expr EQ_OP expr 
-- On PIPE reduce production expr -> expr EQ_OP expr 
-- On LAND reduce production expr -> expr EQ_OP expr 
-- On IDENTIFIER reduce production expr -> expr EQ_OP expr 
-- On COMMA reduce production expr -> expr EQ_OP expr 
-- On # reduce production expr -> expr EQ_OP expr 

State 116:
expr -> expr PIPE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 117

State 117:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr PIPE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On SEMI reduce production expr -> expr PIPE expr 
-- On RPAR reduce production expr -> expr PIPE expr 
-- On PIPE reduce production expr -> expr PIPE expr 
-- On IDENTIFIER reduce production expr -> expr PIPE expr 
-- On COMMA reduce production expr -> expr PIPE expr 
-- On # reduce production expr -> expr PIPE expr 

State 118:
expr -> ATOMICADDUNLESS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 119

State 119:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMICADDUNLESS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 120
-- On ADD shift to state 102

State 120:
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 121

State 121:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 122
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 122:
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On SUB reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On STAR reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On SEMI reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On RPAR reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On PIPE reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LT reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LE reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LAND reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On GT reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On GE reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On DIV reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On COMMA reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On ADD reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On # reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 

State 123:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 124
-- On ADD shift to state 102

State 124:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 125

State 125:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 126
-- On ADD shift to state 102

State 126:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 127

State 127:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 128

State 128:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On SUB reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On STAR reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On SEMI reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On RPAR reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On PIPE reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On NEQ_OP reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LT reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LE reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LAND reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On IDENTIFIER reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On GT reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On GE reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On EQ_OP reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On DIV reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On COMMA reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On ADD reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On # reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 

State 129:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 130
-- On ADD shift to state 102

State 130:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 131

State 131:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 132
-- On ADD shift to state 102

State 132:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 133

State 133:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 134
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 134:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On SUB reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On STAR reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On SEMI reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On RPAR reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On PIPE reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On LT reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On LE reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On LAND reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On GT reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On GE reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On DIV reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On COMMA reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On ADD reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
-- On # reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 

State 135:
annot -> annot_base . [ RBRACE COMMA ]
annot -> annot_base . SUB annot [ RBRACE COMMA ]
-- On SUB shift to state 136
-- On RBRACE reduce production annot -> annot_base 
-- On COMMA reduce production annot -> annot_base 

State 136:
annot -> annot_base SUB . annot [ RBRACE COMMA ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_base shift to state 135
-- On annot shift to state 137

State 137:
annot -> annot_base SUB annot . [ RBRACE COMMA ]
-- On RBRACE reduce production annot -> annot_base SUB annot 
-- On COMMA reduce production annot -> annot_base SUB annot 

State 138:
annot_list -> annot . COMMA annot_list [ RBRACE ]
annot_list -> annot . [ RBRACE ]
-- On COMMA shift to state 139
-- On RBRACE reduce production annot_list -> annot 

State 139:
annot_list -> annot COMMA . annot_list [ RBRACE ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 140
-- On annot_base shift to state 135
-- On annot shift to state 138

State 140:
annot_list -> annot COMMA annot_list . [ RBRACE ]
-- On RBRACE reduce production annot_list -> annot COMMA annot_list 

State 141:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> EXC_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 142
-- On ADD shift to state 102

State 142:
expr -> EXC_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 143

State 143:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> EXC_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 144
-- On ADD shift to state 102

State 144:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 145

State 145:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 146

State 146:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On SUB reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On STAR reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On SEMI reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On RPAR reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On PIPE reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On NEQ_OP reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LT reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LE reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On LAND reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On IDENTIFIER reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On GT reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On GE reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On EQ_OP reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On DIV reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On COMMA reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On ADD reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
-- On # reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 

State 147:
args_ne -> expr . [ RPAR ]
args_ne -> expr . COMMA args_ne [ RPAR ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 148
-- On ADD shift to state 102
-- On RPAR reduce production args_ne -> expr 

State 148:
args_ne -> expr COMMA . args_ne [ RPAR ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 149

State 149:
args_ne -> expr COMMA args_ne . [ RPAR ]
-- On RPAR reduce production args_ne -> expr COMMA args_ne 

State 150:
args -> args_ne . [ RPAR ]
-- On RPAR reduce production args -> args_ne 

State 151:
expr -> IDENTIFIER LPAR args . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 152

State 152:
expr -> IDENTIFIER LPAR args RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On SUB reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On STAR reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On SEMI reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On RPAR reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On PIPE reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On NEQ_OP reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On LT reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On LE reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On LAND reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On IDENTIFIER reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On GT reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On GE reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On EQ_OP reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On DIV reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On COMMA reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On ADD reduce production expr -> IDENTIFIER LPAR args RPAR 
-- On # reduce production expr -> IDENTIFIER LPAR args RPAR 

State 153:
expr -> LD_EXPLICIT LPAR expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 154
-- On ADD shift to state 102

State 154:
expr -> LD_EXPLICIT LPAR expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 155

State 155:
expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 156

State 156:
expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On SUB reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On STAR reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On SEMI reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On RPAR reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On PIPE reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On NEQ_OP reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On LT reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On LE reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On LAND reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On IDENTIFIER reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On GT reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On GE reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On EQ_OP reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On DIV reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On COMMA reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On ADD reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
-- On # reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 

State 157:
expr -> LOAD LBRACE annot_list RBRACE LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 158
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 158:
expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On SUB reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On STAR reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On SEMI reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On RPAR reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On PIPE reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On NEQ_OP reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On LT reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On LE reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On LAND reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On IDENTIFIER reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On GT reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On GE reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On EQ_OP reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On DIV reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On COMMA reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On ADD reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
-- On # reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 

State 159:
base -> LPAR typ . RPAR [ VOLATILE STAR RPAR ]
expr -> LPAR typ . RPAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 160

State 160:
base -> LPAR typ RPAR . [ VOLATILE STAR RPAR ]
expr -> LPAR typ RPAR . expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 161
-- On VOLATILE reduce production base -> LPAR typ RPAR 
-- On STAR reduce production base -> LPAR typ RPAR 
-- On RPAR reduce production base -> LPAR typ RPAR 

State 161:
expr -> LPAR typ RPAR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> LPAR typ RPAR expr 
-- On SUB reduce production expr -> LPAR typ RPAR expr 
-- On STAR reduce production expr -> LPAR typ RPAR expr 
-- On SEMI reduce production expr -> LPAR typ RPAR expr 
-- On RPAR reduce production expr -> LPAR typ RPAR expr 
-- On PIPE reduce production expr -> LPAR typ RPAR expr 
-- On NEQ_OP reduce production expr -> LPAR typ RPAR expr 
-- On LT reduce production expr -> LPAR typ RPAR expr 
-- On LE reduce production expr -> LPAR typ RPAR expr 
-- On LAND reduce production expr -> LPAR typ RPAR expr 
-- On IDENTIFIER reduce production expr -> LPAR typ RPAR expr 
-- On GT reduce production expr -> LPAR typ RPAR expr 
-- On GE reduce production expr -> LPAR typ RPAR expr 
-- On EQ_OP reduce production expr -> LPAR typ RPAR expr 
-- On DIV reduce production expr -> LPAR typ RPAR expr 
-- On COMMA reduce production expr -> LPAR typ RPAR expr 
-- On ADD reduce production expr -> LPAR typ RPAR expr 
-- On # reduce production expr -> LPAR typ RPAR expr 

State 162:
expr -> LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 163
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 163:
expr -> LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> LPAR expr RPAR 
-- On SUB reduce production expr -> LPAR expr RPAR 
-- On STAR reduce production expr -> LPAR expr RPAR 
-- On SEMI reduce production expr -> LPAR expr RPAR 
-- On RPAR reduce production expr -> LPAR expr RPAR 
-- On PIPE reduce production expr -> LPAR expr RPAR 
-- On NEQ_OP reduce production expr -> LPAR expr RPAR 
-- On LT reduce production expr -> LPAR expr RPAR 
-- On LE reduce production expr -> LPAR expr RPAR 
-- On LAND reduce production expr -> LPAR expr RPAR 
-- On IDENTIFIER reduce production expr -> LPAR expr RPAR 
-- On GT reduce production expr -> LPAR expr RPAR 
-- On GE reduce production expr -> LPAR expr RPAR 
-- On EQ_OP reduce production expr -> LPAR expr RPAR 
-- On DIV reduce production expr -> LPAR expr RPAR 
-- On COMMA reduce production expr -> LPAR expr RPAR 
-- On ADD reduce production expr -> LPAR expr RPAR 
-- On # reduce production expr -> LPAR expr RPAR 

State 164:
expr -> LPAR typ . RPAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 165

State 165:
expr -> LPAR typ RPAR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 161

State 166:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 167
-- On ADD shift to state 102

State 167:
expr -> SCAS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 168

State 168:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 169
-- On ADD shift to state 102

State 169:
expr -> SCAS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 170

State 170:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SCAS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 171
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 171:
expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On SUB reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On STAR reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On SEMI reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On RPAR reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On PIPE reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LT reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LE reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LAND reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On GT reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On GE reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On DIV reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On COMMA reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On ADD reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On # reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 

State 172:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr . COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 173
-- On ADD shift to state 102

State 173:
expr -> SCAS_EXPLICIT LPAR expr COMMA . expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 174

State 174:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr COMMA expr . COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 175
-- On ADD shift to state 102

State 175:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA . expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 176

State 176:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr . COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 177
-- On ADD shift to state 102

State 177:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA . MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 178

State 178:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On COMMA shift to state 179

State 179:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 180

State 180:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 181

State 181:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On SUB reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On STAR reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On SEMI reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On RPAR reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On PIPE reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On NEQ_OP reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LT reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LE reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LAND reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On IDENTIFIER reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On GT reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On GE reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On EQ_OP reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On DIV reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On COMMA reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On ADD reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On # reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 

State 182:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SPINISLOCKED LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 183
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 183:
expr -> SPINISLOCKED LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On SUB reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On STAR reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On SEMI reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On RPAR reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On PIPE reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On NEQ_OP reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On LT reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On LE reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On LAND reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On IDENTIFIER reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On GT reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On GE reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On EQ_OP reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On DIV reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On COMMA reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On ADD reduce production expr -> SPINISLOCKED LPAR expr RPAR 
-- On # reduce production expr -> SPINISLOCKED LPAR expr RPAR 

State 184:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SPINTRYLOCK LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 185
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 185:
expr -> SPINTRYLOCK LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On SUB reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On STAR reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On SEMI reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On RPAR reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On PIPE reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On NEQ_OP reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On LT reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On LE reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On LAND reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On IDENTIFIER reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On GT reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On GE reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On EQ_OP reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On DIV reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On COMMA reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On ADD reduce production expr -> SPINTRYLOCK LPAR expr RPAR 
-- On # reduce production expr -> SPINTRYLOCK LPAR expr RPAR 

State 186:
expr -> STAR LPAR typ . RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 187

State 187:
expr -> STAR LPAR typ RPAR . IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On IDENTIFIER shift to state 188

State 188:
expr -> STAR LPAR typ RPAR IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On SUB reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On STAR reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On SEMI reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On RPAR reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On PIPE reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On NEQ_OP reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On LT reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On LE reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On LAND reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On IDENTIFIER reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On GT reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On GE reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On EQ_OP reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On DIV reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On COMMA reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On ADD reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 
-- On # reduce production expr -> STAR LPAR typ RPAR IDENTIFIER 

State 189:
expr -> STAR LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 190
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 190:
expr -> STAR LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> STAR LPAR expr RPAR 
-- On SUB reduce production expr -> STAR LPAR expr RPAR 
-- On STAR reduce production expr -> STAR LPAR expr RPAR 
-- On SEMI reduce production expr -> STAR LPAR expr RPAR 
-- On RPAR reduce production expr -> STAR LPAR expr RPAR 
-- On PIPE reduce production expr -> STAR LPAR expr RPAR 
-- On NEQ_OP reduce production expr -> STAR LPAR expr RPAR 
-- On LT reduce production expr -> STAR LPAR expr RPAR 
-- On LE reduce production expr -> STAR LPAR expr RPAR 
-- On LAND reduce production expr -> STAR LPAR expr RPAR 
-- On IDENTIFIER reduce production expr -> STAR LPAR expr RPAR 
-- On GT reduce production expr -> STAR LPAR expr RPAR 
-- On GE reduce production expr -> STAR LPAR expr RPAR 
-- On EQ_OP reduce production expr -> STAR LPAR expr RPAR 
-- On DIV reduce production expr -> STAR LPAR expr RPAR 
-- On COMMA reduce production expr -> STAR LPAR expr RPAR 
-- On ADD reduce production expr -> STAR LPAR expr RPAR 
-- On # reduce production expr -> STAR LPAR expr RPAR 

State 191:
expr -> STAR IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> STAR IDENTIFIER 
-- On SUB reduce production expr -> STAR IDENTIFIER 
-- On STAR reduce production expr -> STAR IDENTIFIER 
-- On SEMI reduce production expr -> STAR IDENTIFIER 
-- On RPAR reduce production expr -> STAR IDENTIFIER 
-- On PIPE reduce production expr -> STAR IDENTIFIER 
-- On NEQ_OP reduce production expr -> STAR IDENTIFIER 
-- On LT reduce production expr -> STAR IDENTIFIER 
-- On LE reduce production expr -> STAR IDENTIFIER 
-- On LAND reduce production expr -> STAR IDENTIFIER 
-- On IDENTIFIER reduce production expr -> STAR IDENTIFIER 
-- On GT reduce production expr -> STAR IDENTIFIER 
-- On GE reduce production expr -> STAR IDENTIFIER 
-- On EQ_OP reduce production expr -> STAR IDENTIFIER 
-- On DIV reduce production expr -> STAR IDENTIFIER 
-- On COMMA reduce production expr -> STAR IDENTIFIER 
-- On ADD reduce production expr -> STAR IDENTIFIER 
-- On # reduce production expr -> STAR IDENTIFIER 

State 192:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 193
-- On ADD shift to state 102

State 193:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 194

State 194:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 195
-- On ADD shift to state 102

State 195:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 196

State 196:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 197
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 197:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On SUB reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On STAR reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On SEMI reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On RPAR reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On PIPE reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LT reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LE reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On LAND reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On GT reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On GE reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On DIV reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On COMMA reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On ADD reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
-- On # reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 

State 198:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr . COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 199
-- On ADD shift to state 102

State 199:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA . atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 202

State 200:
atomic_op -> SUB . [ COMMA ]
-- On COMMA reduce production atomic_op -> SUB 

State 201:
atomic_op -> ADD . [ COMMA ]
-- On COMMA reduce production atomic_op -> ADD 

State 202:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On COMMA shift to state 203

State 203:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 204

State 204:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 205
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 205:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On SUB reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On STAR reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On SEMI reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On RPAR reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On PIPE reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LT reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LE reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LAND reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On GT reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On GE reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On EQ_OP reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On DIV reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On COMMA reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On ADD reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On # reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 

State 206:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr . COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 207
-- On ADD shift to state 102

State 207:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA . atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 208

State 208:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On COMMA shift to state 209

State 209:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 210

State 210:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 211
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 211:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On SUB reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On STAR reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On SEMI reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On RPAR reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On PIPE reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LT reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LE reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On LAND reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On GT reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On GE reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On EQ_OP reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On DIV reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On COMMA reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On ADD reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
-- On # reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 

State 212:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 213
-- On ADD shift to state 102

State 213:
expr -> WCAS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 214

State 214:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 215
-- On ADD shift to state 102

State 215:
expr -> WCAS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 216

State 216:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> WCAS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 217
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 217:
expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On SUB reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On STAR reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On SEMI reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On RPAR reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On PIPE reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LT reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LE reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On LAND reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On GT reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On GE reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On DIV reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On COMMA reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On ADD reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
-- On # reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 

State 218:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr . COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 219
-- On ADD shift to state 102

State 219:
expr -> WCAS_EXPLICIT LPAR expr COMMA . expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 220

State 220:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr COMMA expr . COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 221
-- On ADD shift to state 102

State 221:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA . expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 222

State 222:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr . COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 223
-- On ADD shift to state 102

State 223:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA . MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 224

State 224:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On COMMA shift to state 225

State 225:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On MEMORDER shift to state 226

State 226:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On RPAR shift to state 227

State 227:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On SUB reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On STAR reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On SEMI reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On RPAR reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On PIPE reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On NEQ_OP reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LT reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LE reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On LAND reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On IDENTIFIER reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On GT reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On GE reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On EQ_OP reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On DIV reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On COMMA reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On ADD reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
-- On # reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 

State 228:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> XCHG LBRACE annot_list RBRACE LPAR expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 229
-- On ADD shift to state 102

State 229:
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 230

State 230:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 231
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 231:
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
-- On XOR reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On SUB reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On STAR reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On SEMI reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On RPAR reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On PIPE reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On NEQ_OP reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On LT reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On LE reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On LAND reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On IDENTIFIER reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On GT reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On GE reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On EQ_OP reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On DIV reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On COMMA reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On ADD reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
-- On # reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 

State 232:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> UNLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 233
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 233:
instruction -> UNLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 234

State 234:
instruction -> UNLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On VOID reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On STORE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On STAR reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On RBRACE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On MUTEX reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On LPAR reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On LONG reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On LOCK reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On LBRACE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On INT reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On IF reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On FENCE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On ELSE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On CHAR reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 
-- On # reduce production instruction -> UNLOCK LPAR expr RPAR SEMI 

State 235:
instruction -> UNDERFENCE . LBRACE annot_list RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LBRACE shift to state 236

State 236:
instruction -> UNDERFENCE LBRACE . annot_list RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 237
-- On annot_base shift to state 135
-- On annot shift to state 138

State 237:
instruction -> UNDERFENCE LBRACE annot_list . RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RBRACE shift to state 238

State 238:
instruction -> UNDERFENCE LBRACE annot_list RBRACE . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 239

State 239:
instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On VOID reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On UNLOCK reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On UNDERFENCE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On UNDERATOMICOP reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On ST_EXPLICIT reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On STORE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On STAR reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On SPINUNLOCK reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On SPINLOCK reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On RBRACE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On MUTEX reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On LPAR reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On LONG reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On LOCK reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On LBRACE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On INT reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On IF reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On IDENTIFIER reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On FENCE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On ELSE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On CODEVAR reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On CHAR reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On BASE_TYPE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On ATOMIC_TYPE reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On ATOMIC reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
-- On # reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 

State 240:
instruction -> UNDERATOMICOP . LPAR expr COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 241

State 241:
instruction -> UNDERATOMICOP LPAR . expr COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 242

State 242:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> UNDERATOMICOP LPAR expr . COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 243
-- On ADD shift to state 102

State 243:
instruction -> UNDERATOMICOP LPAR expr COMMA . atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 244

State 244:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op . COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On COMMA shift to state 245

State 245:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 246

State 246:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 247
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 247:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 248

State 248:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On VOID reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On STORE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On STAR reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On RBRACE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On MUTEX reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On LPAR reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On LONG reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On LOCK reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On LBRACE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On INT reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On IF reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On FENCE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On ELSE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On CHAR reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
-- On # reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 

State 249:
instruction -> ST_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 250

State 250:
instruction -> ST_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 251

State 251:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> ST_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 252
-- On ADD shift to state 102

State 252:
instruction -> ST_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 253

State 253:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> ST_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 254
-- On ADD shift to state 102

State 254:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On MEMORDER shift to state 255

State 255:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RPAR shift to state 256

State 256:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 257

State 257:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On VOID reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On UNLOCK reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On STORE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On STAR reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On SPINLOCK reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On RBRACE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On MUTEX reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On LPAR reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On LONG reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On LOCK reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On LBRACE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On INT reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On IF reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On FENCE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On ELSE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On CODEVAR reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On CHAR reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On ATOMIC reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
-- On # reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 

State 258:
instruction -> STORE . LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LBRACE shift to state 259

State 259:
instruction -> STORE LBRACE . annot_list RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 260
-- On annot_base shift to state 135
-- On annot shift to state 138

State 260:
instruction -> STORE LBRACE annot_list . RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RBRACE shift to state 261

State 261:
instruction -> STORE LBRACE annot_list RBRACE . LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 262

State 262:
instruction -> STORE LBRACE annot_list RBRACE LPAR . expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 263

State 263:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> STORE LBRACE annot_list RBRACE LPAR expr . COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 264
-- On ADD shift to state 102

State 264:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 265

State 265:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 266
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 266:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 267

State 267:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On VOID reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On STORE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On STAR reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On RBRACE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On MUTEX reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On LPAR reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On LONG reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On LOCK reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On LBRACE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On INT reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On IF reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On FENCE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On ELSE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On CHAR reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
-- On # reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 

State 268:
instruction -> STAR . location EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On STAR shift to state 269
-- On LPAR shift to state 270
-- On IDENTIFIER shift to state 273
-- On location shift to state 275

State 269:
location -> STAR . location [ EQ ]
-- On STAR shift to state 269
-- On LPAR shift to state 270
-- On IDENTIFIER shift to state 273
-- On location shift to state 274

State 270:
location -> LPAR . expr RPAR [ EQ ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 271

State 271:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
location -> LPAR expr . RPAR [ EQ ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 272
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 272:
location -> LPAR expr RPAR . [ EQ ]
-- On EQ reduce production location -> LPAR expr RPAR 

State 273:
location -> IDENTIFIER . [ EQ ]
-- On EQ reduce production location -> IDENTIFIER 

State 274:
location -> STAR location . [ EQ ]
-- On EQ reduce production location -> STAR location 

State 275:
instruction -> STAR location . EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On EQ shift to state 276

State 276:
instruction -> STAR location EQ . expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 277

State 277:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> STAR location EQ expr . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On SEMI shift to state 278
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 278:
instruction -> STAR location EQ expr SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> STAR location EQ expr SEMI 
-- On VOID reduce production instruction -> STAR location EQ expr SEMI 
-- On UNLOCK reduce production instruction -> STAR location EQ expr SEMI 
-- On UNDERFENCE reduce production instruction -> STAR location EQ expr SEMI 
-- On UNDERATOMICOP reduce production instruction -> STAR location EQ expr SEMI 
-- On ST_EXPLICIT reduce production instruction -> STAR location EQ expr SEMI 
-- On STORE reduce production instruction -> STAR location EQ expr SEMI 
-- On STAR reduce production instruction -> STAR location EQ expr SEMI 
-- On SPINUNLOCK reduce production instruction -> STAR location EQ expr SEMI 
-- On SPINLOCK reduce production instruction -> STAR location EQ expr SEMI 
-- On RBRACE reduce production instruction -> STAR location EQ expr SEMI 
-- On MUTEX reduce production instruction -> STAR location EQ expr SEMI 
-- On LPAR reduce production instruction -> STAR location EQ expr SEMI 
-- On LONG reduce production instruction -> STAR location EQ expr SEMI 
-- On LOCK reduce production instruction -> STAR location EQ expr SEMI 
-- On LBRACE reduce production instruction -> STAR location EQ expr SEMI 
-- On INT reduce production instruction -> STAR location EQ expr SEMI 
-- On IF reduce production instruction -> STAR location EQ expr SEMI 
-- On IDENTIFIER reduce production instruction -> STAR location EQ expr SEMI 
-- On FENCE reduce production instruction -> STAR location EQ expr SEMI 
-- On ELSE reduce production instruction -> STAR location EQ expr SEMI 
-- On CODEVAR reduce production instruction -> STAR location EQ expr SEMI 
-- On CHAR reduce production instruction -> STAR location EQ expr SEMI 
-- On BASE_TYPE reduce production instruction -> STAR location EQ expr SEMI 
-- On ATOMIC_TYPE reduce production instruction -> STAR location EQ expr SEMI 
-- On ATOMIC reduce production instruction -> STAR location EQ expr SEMI 
-- On # reduce production instruction -> STAR location EQ expr SEMI 

State 279:
instruction -> SPINUNLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 280

State 280:
instruction -> SPINUNLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 281

State 281:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> SPINUNLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 282
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 282:
instruction -> SPINUNLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 283

State 283:
instruction -> SPINUNLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On VOID reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On STORE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On STAR reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On RBRACE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On MUTEX reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On LPAR reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On LONG reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On LOCK reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On LBRACE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On INT reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On IF reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On FENCE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On ELSE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On CHAR reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
-- On # reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 

State 284:
instruction -> SPINLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 285

State 285:
instruction -> SPINLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 286

State 286:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> SPINLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 287
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 287:
instruction -> SPINLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 288

State 288:
instruction -> SPINLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On VOID reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On STORE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On STAR reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On RBRACE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On MUTEX reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On LPAR reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On LONG reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On LOCK reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On LBRACE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On INT reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On IF reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On FENCE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On ELSE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On CHAR reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 
-- On # reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI 

State 289:
instruction -> LOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 290

State 290:
instruction -> LOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 291

State 291:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> LOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 292
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 292:
instruction -> LOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 293

State 293:
instruction -> LOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On VOID reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On UNLOCK reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On STORE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On STAR reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On SPINLOCK reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On RBRACE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On MUTEX reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On LPAR reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On LONG reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On LOCK reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On LBRACE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On INT reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On IF reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On FENCE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On ELSE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On CODEVAR reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On CHAR reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On ATOMIC reduce production instruction -> LOCK LPAR expr RPAR SEMI 
-- On # reduce production instruction -> LOCK LPAR expr RPAR SEMI 

State 294:
block_ins -> LBRACE . ins_seq RBRACE [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 327
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 295:
instruction -> IF . LPAR expr RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF . LPAR expr RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 296

State 296:
instruction -> IF LPAR . expr RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR . expr RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 297

State 297:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> IF LPAR expr . RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr . RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 298
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 298:
instruction -> IF LPAR expr RPAR . block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr RPAR . block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 314
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On block_ins shift to state 321
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 299:
instruction -> IDENTIFIER . EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IDENTIFIER . LPAR args RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 300
-- On EQ shift to state 304

State 300:
instruction -> IDENTIFIER LPAR . args RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 150
-- On args shift to state 301
-- On RPAR reduce production args -> 

State 301:
instruction -> IDENTIFIER LPAR args . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RPAR shift to state 302

State 302:
instruction -> IDENTIFIER LPAR args RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 303

State 303:
instruction -> IDENTIFIER LPAR args RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On VOID reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On UNLOCK reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On STORE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On STAR reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On SPINLOCK reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On RBRACE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On MUTEX reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On LPAR reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On LONG reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On LOCK reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On LBRACE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On INT reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On IF reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On FENCE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On ELSE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On CODEVAR reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On CHAR reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On ATOMIC reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 
-- On # reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI 

State 304:
instruction -> IDENTIFIER EQ . expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 305

State 305:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> IDENTIFIER EQ expr . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On SEMI shift to state 306
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102

State 306:
instruction -> IDENTIFIER EQ expr SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On VOID reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On UNLOCK reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On UNDERFENCE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On UNDERATOMICOP reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On ST_EXPLICIT reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On STORE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On STAR reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On SPINUNLOCK reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On SPINLOCK reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On RBRACE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On MUTEX reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On LPAR reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On LONG reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On LOCK reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On LBRACE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On INT reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On IF reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On IDENTIFIER reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On FENCE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On ELSE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On CODEVAR reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On CHAR reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On BASE_TYPE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On ATOMIC_TYPE reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On ATOMIC reduce production instruction -> IDENTIFIER EQ expr SEMI 
-- On # reduce production instruction -> IDENTIFIER EQ expr SEMI 

State 307:
instruction -> FENCE . LPAR MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On LPAR shift to state 308

State 308:
instruction -> FENCE LPAR . MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On MEMORDER shift to state 309

State 309:
instruction -> FENCE LPAR MEMORDER . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RPAR shift to state 310

State 310:
instruction -> FENCE LPAR MEMORDER RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 311

State 311:
instruction -> FENCE LPAR MEMORDER RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On VOID reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On UNLOCK reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On UNDERFENCE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On STORE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On STAR reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On SPINUNLOCK reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On SPINLOCK reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On RBRACE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On MUTEX reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On LPAR reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On LONG reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On LOCK reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On LBRACE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On INT reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On IF reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On IDENTIFIER reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On FENCE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On ELSE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On CODEVAR reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On CHAR reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On BASE_TYPE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On ATOMIC reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
-- On # reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI 

State 312:
instruction -> CODEVAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 313

State 313:
instruction -> CODEVAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> CODEVAR SEMI 
-- On VOID reduce production instruction -> CODEVAR SEMI 
-- On UNLOCK reduce production instruction -> CODEVAR SEMI 
-- On UNDERFENCE reduce production instruction -> CODEVAR SEMI 
-- On UNDERATOMICOP reduce production instruction -> CODEVAR SEMI 
-- On ST_EXPLICIT reduce production instruction -> CODEVAR SEMI 
-- On STORE reduce production instruction -> CODEVAR SEMI 
-- On STAR reduce production instruction -> CODEVAR SEMI 
-- On SPINUNLOCK reduce production instruction -> CODEVAR SEMI 
-- On SPINLOCK reduce production instruction -> CODEVAR SEMI 
-- On RBRACE reduce production instruction -> CODEVAR SEMI 
-- On MUTEX reduce production instruction -> CODEVAR SEMI 
-- On LPAR reduce production instruction -> CODEVAR SEMI 
-- On LONG reduce production instruction -> CODEVAR SEMI 
-- On LOCK reduce production instruction -> CODEVAR SEMI 
-- On LBRACE reduce production instruction -> CODEVAR SEMI 
-- On INT reduce production instruction -> CODEVAR SEMI 
-- On IF reduce production instruction -> CODEVAR SEMI 
-- On IDENTIFIER reduce production instruction -> CODEVAR SEMI 
-- On FENCE reduce production instruction -> CODEVAR SEMI 
-- On ELSE reduce production instruction -> CODEVAR SEMI 
-- On CODEVAR reduce production instruction -> CODEVAR SEMI 
-- On CHAR reduce production instruction -> CODEVAR SEMI 
-- On BASE_TYPE reduce production instruction -> CODEVAR SEMI 
-- On ATOMIC_TYPE reduce production instruction -> CODEVAR SEMI 
-- On ATOMIC reduce production instruction -> CODEVAR SEMI 
-- On # reduce production instruction -> CODEVAR SEMI 

State 314:
initialisation -> typ . IDENTIFIER EQ expr [ SEMI ]
typ -> typ . STAR [ VOLATILE STAR IDENTIFIER ]
typ -> typ . VOLATILE [ VOLATILE STAR IDENTIFIER ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On IDENTIFIER shift to state 315

State 315:
initialisation -> typ IDENTIFIER . EQ expr [ SEMI ]
-- On EQ shift to state 316

State 316:
initialisation -> typ IDENTIFIER EQ . expr [ SEMI ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 317

State 317:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
initialisation -> typ IDENTIFIER EQ expr . [ SEMI ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On SEMI reduce production initialisation -> typ IDENTIFIER EQ expr 

State 318:
block_ins -> instruction . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production block_ins -> instruction 
-- On VOID reduce production block_ins -> instruction 
-- On UNLOCK reduce production block_ins -> instruction 
-- On UNDERFENCE reduce production block_ins -> instruction 
-- On UNDERATOMICOP reduce production block_ins -> instruction 
-- On ST_EXPLICIT reduce production block_ins -> instruction 
-- On STORE reduce production block_ins -> instruction 
-- On STAR reduce production block_ins -> instruction 
-- On SPINUNLOCK reduce production block_ins -> instruction 
-- On SPINLOCK reduce production block_ins -> instruction 
-- On RBRACE reduce production block_ins -> instruction 
-- On MUTEX reduce production block_ins -> instruction 
-- On LPAR reduce production block_ins -> instruction 
-- On LONG reduce production block_ins -> instruction 
-- On LOCK reduce production block_ins -> instruction 
-- On LBRACE reduce production block_ins -> instruction 
-- On INT reduce production block_ins -> instruction 
-- On IF reduce production block_ins -> instruction 
-- On IDENTIFIER reduce production block_ins -> instruction 
-- On FENCE reduce production block_ins -> instruction 
-- On ELSE reduce production block_ins -> instruction 
-- On CODEVAR reduce production block_ins -> instruction 
-- On CHAR reduce production block_ins -> instruction 
-- On BASE_TYPE reduce production block_ins -> instruction 
-- On ATOMIC_TYPE reduce production block_ins -> instruction 
-- On ATOMIC reduce production block_ins -> instruction 
-- On # reduce production block_ins -> instruction 

State 319:
instruction -> initialisation . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On SEMI shift to state 320

State 320:
instruction -> initialisation SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> initialisation SEMI 
-- On VOID reduce production instruction -> initialisation SEMI 
-- On UNLOCK reduce production instruction -> initialisation SEMI 
-- On UNDERFENCE reduce production instruction -> initialisation SEMI 
-- On UNDERATOMICOP reduce production instruction -> initialisation SEMI 
-- On ST_EXPLICIT reduce production instruction -> initialisation SEMI 
-- On STORE reduce production instruction -> initialisation SEMI 
-- On STAR reduce production instruction -> initialisation SEMI 
-- On SPINUNLOCK reduce production instruction -> initialisation SEMI 
-- On SPINLOCK reduce production instruction -> initialisation SEMI 
-- On RBRACE reduce production instruction -> initialisation SEMI 
-- On MUTEX reduce production instruction -> initialisation SEMI 
-- On LPAR reduce production instruction -> initialisation SEMI 
-- On LONG reduce production instruction -> initialisation SEMI 
-- On LOCK reduce production instruction -> initialisation SEMI 
-- On LBRACE reduce production instruction -> initialisation SEMI 
-- On INT reduce production instruction -> initialisation SEMI 
-- On IF reduce production instruction -> initialisation SEMI 
-- On IDENTIFIER reduce production instruction -> initialisation SEMI 
-- On FENCE reduce production instruction -> initialisation SEMI 
-- On ELSE reduce production instruction -> initialisation SEMI 
-- On CODEVAR reduce production instruction -> initialisation SEMI 
-- On CHAR reduce production instruction -> initialisation SEMI 
-- On BASE_TYPE reduce production instruction -> initialisation SEMI 
-- On ATOMIC_TYPE reduce production instruction -> initialisation SEMI 
-- On ATOMIC reduce production instruction -> initialisation SEMI 
-- On # reduce production instruction -> initialisation SEMI 

State 321:
instruction -> IF LPAR expr RPAR block_ins . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr RPAR block_ins . ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On ELSE shift to state 322
-- On VOLATILE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On VOID reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On UNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On UNDERFENCE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On UNDERATOMICOP reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On ST_EXPLICIT reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On STORE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On STAR reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On SPINUNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On SPINLOCK reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On RBRACE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On MUTEX reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On LPAR reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On LONG reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On LOCK reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On LBRACE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On INT reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On IF reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On IDENTIFIER reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On FENCE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On CODEVAR reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On CHAR reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On BASE_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On ATOMIC_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On ATOMIC reduce production instruction -> IF LPAR expr RPAR block_ins 
-- On # reduce production instruction -> IF LPAR expr RPAR block_ins 

State 322:
instruction -> IF LPAR expr RPAR block_ins ELSE . block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 314
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On block_ins shift to state 323
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 323:
instruction -> IF LPAR expr RPAR block_ins ELSE block_ins . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On VOID reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On UNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On UNDERFENCE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On UNDERATOMICOP reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On ST_EXPLICIT reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On STORE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On STAR reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On SPINUNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On SPINLOCK reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On RBRACE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On MUTEX reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On LPAR reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On LONG reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On LOCK reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On LBRACE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On INT reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On IF reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On IDENTIFIER reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On FENCE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On ELSE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On CODEVAR reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On CHAR reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On BASE_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On ATOMIC_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On ATOMIC reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
-- On # reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 

State 324:
declaration -> typ . IDENTIFIER SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
initialisation -> typ . IDENTIFIER EQ expr [ SEMI ]
typ -> typ . STAR [ VOLATILE STAR IDENTIFIER ]
typ -> typ . VOLATILE [ VOLATILE STAR IDENTIFIER ]
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On IDENTIFIER shift to state 325

State 325:
declaration -> typ IDENTIFIER . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
initialisation -> typ IDENTIFIER . EQ expr [ SEMI ]
-- On SEMI shift to state 326
-- On EQ shift to state 316

State 326:
declaration -> typ IDENTIFIER SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production declaration -> typ IDENTIFIER SEMI 
-- On VOID reduce production declaration -> typ IDENTIFIER SEMI 
-- On UNLOCK reduce production declaration -> typ IDENTIFIER SEMI 
-- On UNDERFENCE reduce production declaration -> typ IDENTIFIER SEMI 
-- On UNDERATOMICOP reduce production declaration -> typ IDENTIFIER SEMI 
-- On ST_EXPLICIT reduce production declaration -> typ IDENTIFIER SEMI 
-- On STORE reduce production declaration -> typ IDENTIFIER SEMI 
-- On STAR reduce production declaration -> typ IDENTIFIER SEMI 
-- On SPINUNLOCK reduce production declaration -> typ IDENTIFIER SEMI 
-- On SPINLOCK reduce production declaration -> typ IDENTIFIER SEMI 
-- On RBRACE reduce production declaration -> typ IDENTIFIER SEMI 
-- On MUTEX reduce production declaration -> typ IDENTIFIER SEMI 
-- On LPAR reduce production declaration -> typ IDENTIFIER SEMI 
-- On LONG reduce production declaration -> typ IDENTIFIER SEMI 
-- On LOCK reduce production declaration -> typ IDENTIFIER SEMI 
-- On LBRACE reduce production declaration -> typ IDENTIFIER SEMI 
-- On INT reduce production declaration -> typ IDENTIFIER SEMI 
-- On IF reduce production declaration -> typ IDENTIFIER SEMI 
-- On IDENTIFIER reduce production declaration -> typ IDENTIFIER SEMI 
-- On FENCE reduce production declaration -> typ IDENTIFIER SEMI 
-- On CODEVAR reduce production declaration -> typ IDENTIFIER SEMI 
-- On CHAR reduce production declaration -> typ IDENTIFIER SEMI 
-- On BASE_TYPE reduce production declaration -> typ IDENTIFIER SEMI 
-- On ATOMIC_TYPE reduce production declaration -> typ IDENTIFIER SEMI 
-- On ATOMIC reduce production declaration -> typ IDENTIFIER SEMI 
-- On # reduce production declaration -> typ IDENTIFIER SEMI 

State 327:
block_ins -> LBRACE ins_seq . RBRACE [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On RBRACE shift to state 328

State 328:
block_ins -> LBRACE ins_seq RBRACE . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
-- On VOLATILE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On VOID reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On UNLOCK reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On UNDERFENCE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On UNDERATOMICOP reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On ST_EXPLICIT reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On STORE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On STAR reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On SPINUNLOCK reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On SPINLOCK reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On RBRACE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On MUTEX reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On LPAR reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On LONG reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On LOCK reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On LBRACE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On INT reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On IF reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On IDENTIFIER reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On FENCE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On ELSE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On CODEVAR reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On CHAR reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On BASE_TYPE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On ATOMIC_TYPE reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On ATOMIC reduce production block_ins -> LBRACE ins_seq RBRACE 
-- On # reduce production block_ins -> LBRACE ins_seq RBRACE 

State 329:
ins_seq -> declaration . [ RBRACE ]
ins_seq -> declaration . ins_seq [ RBRACE ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 330
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
-- On RBRACE reduce production ins_seq -> declaration 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 330:
ins_seq -> declaration ins_seq . [ RBRACE ]
-- On RBRACE reduce production ins_seq -> declaration ins_seq 

State 331:
ins_seq -> block_ins . [ RBRACE ]
ins_seq -> block_ins . ins_seq [ RBRACE ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 332
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
-- On RBRACE reduce production ins_seq -> block_ins 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 332:
ins_seq -> block_ins ins_seq . [ RBRACE ]
-- On RBRACE reduce production ins_seq -> block_ins ins_seq 

State 333:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq . RBRACE [ VOID PROC EOF ]
-- On RBRACE shift to state 334

State 334:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE . [ VOID PROC EOF ]
-- On VOID reduce production function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE 
-- On PROC reduce production function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE 
-- On EOF reduce production function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE 

State 335:
pseudo_seq -> declaration . [ RBRACE ]
pseudo_seq -> declaration . pseudo_seq [ RBRACE ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 336
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
-- On RBRACE reduce production pseudo_seq -> declaration 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 336:
pseudo_seq -> declaration pseudo_seq . [ RBRACE ]
-- On RBRACE reduce production pseudo_seq -> declaration pseudo_seq 

State 337:
pseudo_seq -> block_ins . [ RBRACE ]
pseudo_seq -> block_ins . pseudo_seq [ RBRACE ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 338
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
-- On RBRACE reduce production pseudo_seq -> block_ins 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 338:
pseudo_seq -> block_ins pseudo_seq . [ RBRACE ]
-- On RBRACE reduce production pseudo_seq -> block_ins pseudo_seq 

State 339:
parameter_list -> parameter_declaration . [ RPAR ]
parameter_list -> parameter_declaration . COMMA parameter_list [ RPAR ]
-- On COMMA shift to state 340
-- On RPAR reduce production parameter_list -> parameter_declaration 

State 340:
parameter_list -> parameter_declaration COMMA . parameter_list [ RPAR ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 341
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
-- On RPAR reduce production parameter_list -> 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 341:
parameter_list -> parameter_declaration COMMA parameter_list . [ RPAR ]
-- On RPAR reduce production parameter_list -> parameter_declaration COMMA parameter_list 

State 342:
deep_main -> trans_unit . EOF [ # ]
trans_unit -> trans_unit . function_def [ VOID PROC EOF ]
-- On VOID shift to state 1
-- On EOF shift to state 343
-- On voidopt shift to state 2
-- On function_def shift to state 344
-- On PROC reduce production voidopt -> 

State 343:
deep_main -> trans_unit EOF . [ # ]
-- On # reduce production deep_main -> trans_unit EOF 

State 344:
trans_unit -> trans_unit function_def . [ VOID PROC EOF ]
-- On VOID reduce production trans_unit -> trans_unit function_def 
-- On PROC reduce production trans_unit -> trans_unit function_def 
-- On EOF reduce production trans_unit -> trans_unit function_def 

State 345:
trans_unit -> function_def . [ VOID PROC EOF ]
-- On VOID reduce production trans_unit -> function_def 
-- On PROC reduce production trans_unit -> function_def 
-- On EOF reduce production trans_unit -> function_def 

State 346:
deep_main' -> deep_main . [ # ]
-- On # accept deep_main

State 347:
macros' -> . macros [ # ]
-- On IDENTIFIER shift to state 348
-- On macros shift to state 361
-- On macro shift to state 362
-- On # reduce production macros -> 

State 348:
macro -> IDENTIFIER . LPAR formals RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER . LPAR formals RPAR body [ IDENTIFIER # ]
-- On LPAR shift to state 349

State 349:
macro -> IDENTIFIER LPAR . formals RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR . formals RPAR body [ IDENTIFIER # ]
-- On IDENTIFIER shift to state 350
-- On formals_ne shift to state 353
-- On formals shift to state 354
-- On RPAR reduce production formals -> 

State 350:
formals_ne -> IDENTIFIER . [ RPAR ]
formals_ne -> IDENTIFIER . COMMA formals_ne [ RPAR ]
-- On COMMA shift to state 351
-- On RPAR reduce production formals_ne -> IDENTIFIER 

State 351:
formals_ne -> IDENTIFIER COMMA . formals_ne [ RPAR ]
-- On IDENTIFIER shift to state 350
-- On formals_ne shift to state 352

State 352:
formals_ne -> IDENTIFIER COMMA formals_ne . [ RPAR ]
-- On RPAR reduce production formals_ne -> IDENTIFIER COMMA formals_ne 

State 353:
formals -> formals_ne . [ RPAR ]
-- On RPAR reduce production formals -> formals_ne 

State 354:
macro -> IDENTIFIER LPAR formals . RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR formals . RPAR body [ IDENTIFIER # ]
-- On RPAR shift to state 355

State 355:
macro -> IDENTIFIER LPAR formals RPAR . expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR formals RPAR . body [ IDENTIFIER # ]
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On LBRACE shift to state 356
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 359
-- On body shift to state 360

State 356:
body -> LBRACE . ins_seq RBRACE [ IDENTIFIER # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 357
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 357:
body -> LBRACE ins_seq . RBRACE [ IDENTIFIER # ]
-- On RBRACE shift to state 358

State 358:
body -> LBRACE ins_seq RBRACE . [ IDENTIFIER # ]
-- On IDENTIFIER reduce production body -> LBRACE ins_seq RBRACE 
-- On # reduce production body -> LBRACE ins_seq RBRACE 

State 359:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
macro -> IDENTIFIER LPAR formals RPAR expr . [ IDENTIFIER # ]
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
-- On IDENTIFIER reduce production macro -> IDENTIFIER LPAR formals RPAR expr 
-- On # reduce production macro -> IDENTIFIER LPAR formals RPAR expr 

State 360:
macro -> IDENTIFIER LPAR formals RPAR body . [ IDENTIFIER # ]
-- On IDENTIFIER reduce production macro -> IDENTIFIER LPAR formals RPAR body 
-- On # reduce production macro -> IDENTIFIER LPAR formals RPAR body 

State 361:
macros' -> macros . [ # ]
-- On # accept macros

State 362:
macros -> macro . macros [ # ]
-- On IDENTIFIER shift to state 348
-- On macros shift to state 363
-- On macro shift to state 362
-- On # reduce production macros -> 

State 363:
macros -> macro macros . [ # ]
-- On # reduce production macros -> macro macros 

State 364:
pseudo_seq' -> . pseudo_seq [ # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 365
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 365:
pseudo_seq' -> pseudo_seq . [ # ]
-- On # accept pseudo_seq

State 366:
pseudo_seq -> declaration . [ # ]
pseudo_seq -> declaration . pseudo_seq [ # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 367
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 
-- On # reduce production pseudo_seq -> declaration 

State 367:
pseudo_seq -> declaration pseudo_seq . [ # ]
-- On # reduce production pseudo_seq -> declaration pseudo_seq 

State 368:
pseudo_seq -> block_ins . [ # ]
pseudo_seq -> block_ins . pseudo_seq [ # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 369
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 
-- On # reduce production pseudo_seq -> block_ins 

State 369:
pseudo_seq -> block_ins pseudo_seq . [ # ]
-- On # reduce production pseudo_seq -> block_ins pseudo_seq 

State 370:
shallow_main' -> . shallow_main [ # ]
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 381
-- On PROC reduce production voidopt -> 

State 371:
shallow_main -> EOF . [ # ]
-- On # reduce production shallow_main -> EOF 

State 372:
shallow_main -> BODY . shallow_main [ # ]
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 380
-- On PROC reduce production voidopt -> 

State 373:
shallow_main -> voidopt . PROC LPAR parameter_list RPAR BODY shallow_main [ # ]
-- On PROC shift to state 374

State 374:
shallow_main -> voidopt PROC . LPAR parameter_list RPAR BODY shallow_main [ # ]
-- On LPAR shift to state 375

State 375:
shallow_main -> voidopt PROC LPAR . parameter_list RPAR BODY shallow_main [ # ]
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 376
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
-- On RPAR reduce production parameter_list -> 
-- On MUTEX reduce production ty_attr -> 
-- On LONG reduce production ty_attr -> 
-- On INT reduce production ty_attr -> 
-- On CHAR reduce production ty_attr -> 

State 376:
shallow_main -> voidopt PROC LPAR parameter_list . RPAR BODY shallow_main [ # ]
-- On RPAR shift to state 377

State 377:
shallow_main -> voidopt PROC LPAR parameter_list RPAR . BODY shallow_main [ # ]
-- On BODY shift to state 378

State 378:
shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY . shallow_main [ # ]
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 379
-- On PROC reduce production voidopt -> 

State 379:
shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY shallow_main . [ # ]
-- On # reduce production shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY shallow_main 

State 380:
shallow_main -> BODY shallow_main . [ # ]
-- On # reduce production shallow_main -> BODY shallow_main 

State 381:
shallow_main' -> shallow_main . [ # ]
-- On # accept shallow_main

State 76 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> IDENTIFIER 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LPAR LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 80 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> CONSTVAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 81 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> CONSTANT 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 93 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr XOR expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 95 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr SUB expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 97 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr STAR expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 99 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr DIV expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 101 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr NEQ_OP expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 103 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr ADD expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 105 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr LT expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 107 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr LE expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 109 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr LAND expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 111 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr GT expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 113 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr GE expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 115 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr EQ_OP expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE LAND IDENTIFIER DIV COMMA ADD,
which would require some other action.

State 117 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> expr PIPE expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 122 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 128 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 134 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 146 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 152 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> IDENTIFIER LPAR args RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 156 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 158 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 161 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> LPAR typ RPAR expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 163 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> LPAR expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 171 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 181 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 183 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> SPINISLOCKED LPAR expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 185 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> SPINTRYLOCK LPAR expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 188 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> STAR LPAR typ RPAR IDENTIFIER 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 190 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> STAR LPAR expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 191 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> STAR IDENTIFIER 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 197 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 205 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 211 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 217 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 227 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 231 has an end-of-stream conflict. There is a tension between
(1) reducing production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD,
which would require some other action.

State 234 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> UNLOCK LPAR expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 239 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 248 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 257 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 267 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 278 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> STAR location EQ expr SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 283 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> SPINUNLOCK LPAR expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 288 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> SPINLOCK LPAR expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 293 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> LOCK LPAR expr RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 303 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> IDENTIFIER LPAR args RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 306 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> IDENTIFIER EQ expr SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 311 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> FENCE LPAR MEMORDER RPAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 313 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> CODEVAR SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 318 has an end-of-stream conflict. There is a tension between
(1) reducing production block_ins -> instruction 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 320 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> initialisation SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 321 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> IF LPAR expr RPAR block_ins 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 323 has an end-of-stream conflict. There is a tension between
(1) reducing production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 326 has an end-of-stream conflict. There is a tension between
(1) reducing production declaration -> typ IDENTIFIER SEMI 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 328 has an end-of-stream conflict. There is a tension between
(1) reducing production block_ins -> LBRACE ins_seq RBRACE 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 347 has an end-of-stream conflict. There is a tension between
(1) reducing production macros -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is IDENTIFIER,
which would require some other action.

State 358 has an end-of-stream conflict. There is a tension between
(1) reducing production body -> LBRACE ins_seq RBRACE 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is IDENTIFIER,
which would require some other action.

State 359 has an end-of-stream conflict. There is a tension between
(1) reducing production macro -> IDENTIFIER LPAR formals RPAR expr 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD,
which would require some other action.

State 360 has an end-of-stream conflict. There is a tension between
(1) reducing production macro -> IDENTIFIER LPAR formals RPAR body 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is IDENTIFIER,
which would require some other action.

State 362 has an end-of-stream conflict. There is a tension between
(1) reducing production macros -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is IDENTIFIER,
which would require some other action.

State 366 has an end-of-stream conflict. There is a tension between
(1) reducing production pseudo_seq -> declaration 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

State 368 has an end-of-stream conflict. There is a tension between
(1) reducing production pseudo_seq -> block_ins 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC,
which would require some other action.

