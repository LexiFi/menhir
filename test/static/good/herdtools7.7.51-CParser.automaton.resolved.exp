State 0:
## Known stack suffix:
##
## LR(1) items:
deep_main' -> . deep_main [ # ]
## Transitions:
-- On VOID shift to state 1
-- On voidopt shift to state 2
-- On trans_unit shift to state 342
-- On function_def shift to state 345
-- On deep_main shift to state 346
## Reductions:
-- On PROC reduce production voidopt ->

State 1:
## Known stack suffix:
## VOID
## LR(1) items:
voidopt -> VOID . [ PROC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production voidopt -> VOID

State 2:
## Known stack suffix:
## voidopt
## LR(1) items:
function_def -> voidopt . PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On PROC shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## voidopt PROC
## LR(1) items:
function_def -> voidopt PROC . LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On LPAR shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## voidopt PROC LPAR
## LR(1) items:
function_def -> voidopt PROC LPAR . parameter_list RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 28
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RPAR reduce production parameter_list ->
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 5:
## Known stack suffix:
## VOLATILE
## LR(1) items:
typ -> VOLATILE . base0 [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
-- On VOID shift to state 6
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ty_attr shift to state 9
-- On base0 shift to state 14
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 6:
## Known stack suffix:
## VOID
## LR(1) items:
base0 -> VOID . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> VOID

State 7:
## Known stack suffix:
## BASE_TYPE
## LR(1) items:
base0 -> BASE_TYPE . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> BASE_TYPE

State 8:
## Known stack suffix:
## ATOMIC_TYPE
## LR(1) items:
base0 -> ATOMIC_TYPE . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> ATOMIC_TYPE

State 9:
## Known stack suffix:
## ty_attr
## LR(1) items:
base0 -> ty_attr . MUTEX [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . CHAR [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . INT [ VOLATILE STAR RPAR IDENTIFIER ]
base0 -> ty_attr . LONG [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
-- On MUTEX shift to state 10
-- On LONG shift to state 11
-- On INT shift to state 12
-- On CHAR shift to state 13
## Reductions:

State 10:
## Known stack suffix:
## ty_attr MUTEX
## LR(1) items:
base0 -> ty_attr MUTEX . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> ty_attr MUTEX

State 11:
## Known stack suffix:
## ty_attr LONG
## LR(1) items:
base0 -> ty_attr LONG . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> ty_attr LONG

State 12:
## Known stack suffix:
## ty_attr INT
## LR(1) items:
base0 -> ty_attr INT . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> ty_attr INT

State 13:
## Known stack suffix:
## ty_attr CHAR
## LR(1) items:
base0 -> ty_attr CHAR . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base0 -> ty_attr CHAR

State 14:
## Known stack suffix:
## VOLATILE base0
## LR(1) items:
typ -> VOLATILE base0 . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> VOLATILE base0

State 15:
## Known stack suffix:
## LPAR
## LR(1) items:
base -> LPAR . typ RPAR [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 19
-- On ty_attr shift to state 9
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 16:
## Known stack suffix:
## ATOMIC
## LR(1) items:
typ -> ATOMIC . base [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ty_attr shift to state 9
-- On base0 shift to state 17
-- On base shift to state 18
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 17:
## Known stack suffix:
## base0
## LR(1) items:
base -> base0 . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> base0

State 18:
## Known stack suffix:
## ATOMIC base
## LR(1) items:
typ -> ATOMIC base . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> ATOMIC base

State 19:
## Known stack suffix:
## LPAR typ
## LR(1) items:
base -> LPAR typ . RPAR [ VOLATILE STAR RPAR IDENTIFIER ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 22
## Reductions:

State 20:
## Known stack suffix:
## typ VOLATILE
## LR(1) items:
typ -> typ VOLATILE . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> typ VOLATILE

State 21:
## Known stack suffix:
## typ STAR
## LR(1) items:
typ -> typ STAR . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> typ STAR

State 22:
## Known stack suffix:
## LPAR typ RPAR
## LR(1) items:
base -> LPAR typ RPAR . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> LPAR typ RPAR

State 23:
## Known stack suffix:
## base
## LR(1) items:
typ -> base . [ VOLATILE STAR RPAR IDENTIFIER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typ -> base

State 24:
## Known stack suffix:
## typ
## LR(1) items:
toptyp -> typ . STAR [ IDENTIFIER ]
typ -> typ . STAR [ VOLATILE STAR ]
typ -> typ . VOLATILE [ VOLATILE STAR ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## typ STAR
## LR(1) items:
toptyp -> typ STAR . [ IDENTIFIER ]
typ -> typ STAR . [ VOLATILE STAR ]
## Transitions:
## Reductions:
-- On VOLATILE reduce production typ -> typ STAR
-- On STAR reduce production typ -> typ STAR
-- On IDENTIFIER reduce production toptyp -> typ STAR

State 26:
## Known stack suffix:
## toptyp
## LR(1) items:
parameter_declaration -> toptyp . IDENTIFIER [ RPAR COMMA ]
## Transitions:
-- On IDENTIFIER shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## toptyp IDENTIFIER
## LR(1) items:
parameter_declaration -> toptyp IDENTIFIER . [ RPAR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_declaration -> toptyp IDENTIFIER

State 28:
## Known stack suffix:
## voidopt PROC LPAR parameter_list
## LR(1) items:
function_def -> voidopt PROC LPAR parameter_list . RPAR LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On RPAR shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR
## LR(1) items:
function_def -> voidopt PROC LPAR parameter_list RPAR . LBRACE pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On LBRACE shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR LBRACE
## LR(1) items:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE . pseudo_seq RBRACE [ VOID PROC EOF ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 333
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 31:
## Known stack suffix:
## UNLOCK
## LR(1) items:
instruction -> UNLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## UNLOCK LPAR
## LR(1) items:
instruction -> UNLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 232
## Reductions:

State 33:
## Known stack suffix:
## XCHG
## LR(1) items:
expr -> XCHG . LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LBRACE shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## XCHG LBRACE
## LR(1) items:
expr -> XCHG LBRACE . annot_list RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 38
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 35:
## Known stack suffix:
## UNLOCK
## LR(1) items:
annot_base -> UNLOCK . [ SUB RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production annot_base -> UNLOCK

State 36:
## Known stack suffix:
## LOCK
## LR(1) items:
annot_base -> LOCK . [ SUB RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production annot_base -> LOCK

State 37:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
annot_base -> IDENTIFIER . [ SUB RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production annot_base -> IDENTIFIER

State 38:
## Known stack suffix:
## XCHG LBRACE annot_list
## LR(1) items:
expr -> XCHG LBRACE annot_list . RBRACE LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RBRACE shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE
## LR(1) items:
expr -> XCHG LBRACE annot_list RBRACE . LPAR expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE LPAR
## LR(1) items:
expr -> XCHG LBRACE annot_list RBRACE LPAR . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 228
## Reductions:

State 41:
## Known stack suffix:
## WCAS_EXPLICIT
## LR(1) items:
expr -> WCAS_EXPLICIT . LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## WCAS_EXPLICIT LPAR
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR . expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 218
## Reductions:

State 43:
## Known stack suffix:
## WCAS
## LR(1) items:
expr -> WCAS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## WCAS LPAR
## LR(1) items:
expr -> WCAS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 212
## Reductions:

State 45:
## Known stack suffix:
## UNDERATOMICOPRETURN
## LR(1) items:
expr -> UNDERATOMICOPRETURN . LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LBRACE shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE . annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 47
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 47:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list . RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RBRACE shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE . LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR . expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 206
## Reductions:

State 50:
## Known stack suffix:
## UNDERATOMICFETCHOP
## LR(1) items:
expr -> UNDERATOMICFETCHOP . LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LBRACE shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE . annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 52
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 52:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list . RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RBRACE shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE . LPAR expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR . expr COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 198
## Reductions:

State 55:
## Known stack suffix:
## UNDERATOMICADDUNLESS
## LR(1) items:
expr -> UNDERATOMICADDUNLESS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR
## LR(1) items:
expr -> UNDERATOMICADDUNLESS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 192
## Reductions:

State 57:
## Known stack suffix:
## STAR
## LR(1) items:
expr -> STAR . IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR . LPAR typ RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 58
-- On IDENTIFIER shift to state 191
## Reductions:

State 58:
## Known stack suffix:
## STAR LPAR
## LR(1) items:
expr -> STAR LPAR . typ RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> STAR LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 186
-- On ty_attr shift to state 9
-- On expr shift to state 189
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 59:
## Known stack suffix:
## SPINTRYLOCK
## LR(1) items:
expr -> SPINTRYLOCK . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## SPINTRYLOCK LPAR
## LR(1) items:
expr -> SPINTRYLOCK LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 184
## Reductions:

State 61:
## Known stack suffix:
## SPINISLOCKED
## LR(1) items:
expr -> SPINISLOCKED . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## SPINISLOCKED LPAR
## LR(1) items:
expr -> SPINISLOCKED LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 182
## Reductions:

State 63:
## Known stack suffix:
## SCAS_EXPLICIT
## LR(1) items:
expr -> SCAS_EXPLICIT . LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## SCAS_EXPLICIT LPAR
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR . expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 172
## Reductions:

State 65:
## Known stack suffix:
## SCAS
## LR(1) items:
expr -> SCAS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## SCAS LPAR
## LR(1) items:
expr -> SCAS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 166
## Reductions:

State 67:
## Known stack suffix:
## LPAR
## LR(1) items:
expr -> LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> LPAR . typ RPAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 164
-- On ty_attr shift to state 9
-- On expr shift to state 162
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 68:
## Known stack suffix:
## LPAR
## LR(1) items:
base -> LPAR . typ RPAR [ VOLATILE STAR RPAR ]
expr -> LPAR . expr RPAR [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> LPAR . typ RPAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 68
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On ATOMIC shift to state 16
-- On typ shift to state 159
-- On ty_attr shift to state 9
-- On expr shift to state 162
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 69:
## Known stack suffix:
## LOAD
## LR(1) items:
expr -> LOAD . LBRACE annot_list RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LBRACE shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## LOAD LBRACE
## LR(1) items:
expr -> LOAD LBRACE . annot_list RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 71
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 71:
## Known stack suffix:
## LOAD LBRACE annot_list
## LR(1) items:
expr -> LOAD LBRACE annot_list . RBRACE LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RBRACE shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## LOAD LBRACE annot_list RBRACE
## LR(1) items:
expr -> LOAD LBRACE annot_list RBRACE . LPAR expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## LOAD LBRACE annot_list RBRACE LPAR
## LR(1) items:
expr -> LOAD LBRACE annot_list RBRACE LPAR . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 157
## Reductions:

State 74:
## Known stack suffix:
## LD_EXPLICIT
## LR(1) items:
expr -> LD_EXPLICIT . LPAR expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## LD_EXPLICIT LPAR
## LR(1) items:
expr -> LD_EXPLICIT LPAR . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 153
## Reductions:

State 76:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
expr -> IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> IDENTIFIER . LPAR args RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 77
## Reductions:
-- On XOR reduce production expr -> IDENTIFIER
-- On SUB reduce production expr -> IDENTIFIER
-- On STAR reduce production expr -> IDENTIFIER
-- On SEMI reduce production expr -> IDENTIFIER
-- On RPAR reduce production expr -> IDENTIFIER
-- On PIPE reduce production expr -> IDENTIFIER
-- On NEQ_OP reduce production expr -> IDENTIFIER
-- On LT reduce production expr -> IDENTIFIER
-- On LE reduce production expr -> IDENTIFIER
-- On LAND reduce production expr -> IDENTIFIER
-- On IDENTIFIER reduce production expr -> IDENTIFIER
-- On GT reduce production expr -> IDENTIFIER
-- On GE reduce production expr -> IDENTIFIER
-- On EQ_OP reduce production expr -> IDENTIFIER
-- On DIV reduce production expr -> IDENTIFIER
-- On COMMA reduce production expr -> IDENTIFIER
-- On ADD reduce production expr -> IDENTIFIER

State 77:
## Known stack suffix:
## IDENTIFIER LPAR
## LR(1) items:
expr -> IDENTIFIER LPAR . args RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 150
-- On args shift to state 151
## Reductions:
-- On RPAR reduce production args ->

State 78:
## Known stack suffix:
## EXC_EXPLICIT
## LR(1) items:
expr -> EXC_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## EXC_EXPLICIT LPAR
## LR(1) items:
expr -> EXC_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 141
## Reductions:

State 80:
## Known stack suffix:
## CONSTVAR
## LR(1) items:
expr -> CONSTVAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> CONSTVAR

State 81:
## Known stack suffix:
## CONSTANT
## LR(1) items:
expr -> CONSTANT . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> CONSTANT

State 82:
## Known stack suffix:
## CMPXCHG
## LR(1) items:
expr -> CMPXCHG . LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LBRACE shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## CMPXCHG LBRACE
## LR(1) items:
expr -> CMPXCHG LBRACE . annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 84
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 84:
## Known stack suffix:
## CMPXCHG LBRACE annot_list
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list . RBRACE LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RBRACE shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list RBRACE . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 129
## Reductions:

State 87:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 123
## Reductions:

State 89:
## Known stack suffix:
## ATOMICADDUNLESS
## LR(1) items:
expr -> ATOMICADDUNLESS . LPAR expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On LPAR shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## ATOMICADDUNLESS LPAR
## LR(1) items:
expr -> ATOMICADDUNLESS LPAR . expr COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMICADDUNLESS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 118
-- On ADD shift to state 102
## Reductions:

State 92:
## Known stack suffix:
## expr XOR
## LR(1) items:
expr -> expr XOR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## expr XOR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr XOR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr XOR expr
-- On SEMI reduce production expr -> expr XOR expr
-- On RPAR reduce production expr -> expr XOR expr
-- On PIPE reduce production expr -> expr XOR expr
-- On IDENTIFIER reduce production expr -> expr XOR expr
-- On COMMA reduce production expr -> expr XOR expr

State 94:
## Known stack suffix:
## expr SUB
## LR(1) items:
expr -> expr SUB . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## expr SUB expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr SUB expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On STAR shift to state 96
-- On DIV shift to state 98
## Reductions:
-- On XOR reduce production expr -> expr SUB expr
-- On SUB reduce production expr -> expr SUB expr
-- On SEMI reduce production expr -> expr SUB expr
-- On RPAR reduce production expr -> expr SUB expr
-- On PIPE reduce production expr -> expr SUB expr
-- On NEQ_OP reduce production expr -> expr SUB expr
-- On LT reduce production expr -> expr SUB expr
-- On LE reduce production expr -> expr SUB expr
-- On LAND reduce production expr -> expr SUB expr
-- On IDENTIFIER reduce production expr -> expr SUB expr
-- On GT reduce production expr -> expr SUB expr
-- On GE reduce production expr -> expr SUB expr
-- On EQ_OP reduce production expr -> expr SUB expr
-- On COMMA reduce production expr -> expr SUB expr
-- On ADD reduce production expr -> expr SUB expr

State 96:
## Known stack suffix:
## expr STAR
## LR(1) items:
expr -> expr STAR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## expr STAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr STAR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr STAR expr

State 98:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr DIV expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr DIV expr

State 100:
## Known stack suffix:
## expr NEQ_OP
## LR(1) items:
expr -> expr NEQ_OP . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## expr NEQ_OP expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr NEQ_OP expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr NEQ_OP expr
-- On SEMI reduce production expr -> expr NEQ_OP expr
-- On RPAR reduce production expr -> expr NEQ_OP expr
-- On PIPE reduce production expr -> expr NEQ_OP expr
-- On LAND reduce production expr -> expr NEQ_OP expr
-- On IDENTIFIER reduce production expr -> expr NEQ_OP expr
-- On COMMA reduce production expr -> expr NEQ_OP expr

State 102:
## Known stack suffix:
## expr ADD
## LR(1) items:
expr -> expr ADD . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## expr ADD expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr ADD expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On STAR shift to state 96
-- On DIV shift to state 98
## Reductions:
-- On XOR reduce production expr -> expr ADD expr
-- On SUB reduce production expr -> expr ADD expr
-- On SEMI reduce production expr -> expr ADD expr
-- On RPAR reduce production expr -> expr ADD expr
-- On PIPE reduce production expr -> expr ADD expr
-- On NEQ_OP reduce production expr -> expr ADD expr
-- On LT reduce production expr -> expr ADD expr
-- On LE reduce production expr -> expr ADD expr
-- On LAND reduce production expr -> expr ADD expr
-- On IDENTIFIER reduce production expr -> expr ADD expr
-- On GT reduce production expr -> expr ADD expr
-- On GE reduce production expr -> expr ADD expr
-- On EQ_OP reduce production expr -> expr ADD expr
-- On COMMA reduce production expr -> expr ADD expr
-- On ADD reduce production expr -> expr ADD expr

State 104:
## Known stack suffix:
## expr LT
## LR(1) items:
expr -> expr LT . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## expr LT expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LT expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr LT expr
-- On SEMI reduce production expr -> expr LT expr
-- On RPAR reduce production expr -> expr LT expr
-- On PIPE reduce production expr -> expr LT expr
-- On LAND reduce production expr -> expr LT expr
-- On IDENTIFIER reduce production expr -> expr LT expr
-- On COMMA reduce production expr -> expr LT expr

State 106:
## Known stack suffix:
## expr LE
## LR(1) items:
expr -> expr LE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## expr LE expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr LE expr
-- On SEMI reduce production expr -> expr LE expr
-- On RPAR reduce production expr -> expr LE expr
-- On PIPE reduce production expr -> expr LE expr
-- On LAND reduce production expr -> expr LE expr
-- On IDENTIFIER reduce production expr -> expr LE expr
-- On COMMA reduce production expr -> expr LE expr

State 108:
## Known stack suffix:
## expr LAND
## LR(1) items:
expr -> expr LAND . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## expr LAND expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr LAND expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr LAND expr
-- On SEMI reduce production expr -> expr LAND expr
-- On RPAR reduce production expr -> expr LAND expr
-- On PIPE reduce production expr -> expr LAND expr
-- On LAND reduce production expr -> expr LAND expr
-- On IDENTIFIER reduce production expr -> expr LAND expr
-- On COMMA reduce production expr -> expr LAND expr

State 110:
## Known stack suffix:
## expr GT
## LR(1) items:
expr -> expr GT . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## expr GT expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr GT expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr GT expr
-- On SEMI reduce production expr -> expr GT expr
-- On RPAR reduce production expr -> expr GT expr
-- On PIPE reduce production expr -> expr GT expr
-- On LAND reduce production expr -> expr GT expr
-- On IDENTIFIER reduce production expr -> expr GT expr
-- On COMMA reduce production expr -> expr GT expr

State 112:
## Known stack suffix:
## expr GE
## LR(1) items:
expr -> expr GE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## expr GE expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr GE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr GE expr
-- On SEMI reduce production expr -> expr GE expr
-- On RPAR reduce production expr -> expr GE expr
-- On PIPE reduce production expr -> expr GE expr
-- On LAND reduce production expr -> expr GE expr
-- On IDENTIFIER reduce production expr -> expr GE expr
-- On COMMA reduce production expr -> expr GE expr

State 114:
## Known stack suffix:
## expr EQ_OP
## LR(1) items:
expr -> expr EQ_OP . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## expr EQ_OP expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr EQ_OP expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On XOR reduce production expr -> expr EQ_OP expr
-- On SEMI reduce production expr -> expr EQ_OP expr
-- On RPAR reduce production expr -> expr EQ_OP expr
-- On PIPE reduce production expr -> expr EQ_OP expr
-- On LAND reduce production expr -> expr EQ_OP expr
-- On IDENTIFIER reduce production expr -> expr EQ_OP expr
-- On COMMA reduce production expr -> expr EQ_OP expr

State 116:
## Known stack suffix:
## expr PIPE
## LR(1) items:
expr -> expr PIPE . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## expr PIPE expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr PIPE expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On SEMI reduce production expr -> expr PIPE expr
-- On RPAR reduce production expr -> expr PIPE expr
-- On PIPE reduce production expr -> expr PIPE expr
-- On IDENTIFIER reduce production expr -> expr PIPE expr
-- On COMMA reduce production expr -> expr PIPE expr

State 118:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr COMMA
## LR(1) items:
expr -> ATOMICADDUNLESS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMICADDUNLESS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 120
-- On ADD shift to state 102
## Reductions:

State 120:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 122
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 122:
## Known stack suffix:
## ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR
## LR(1) items:
expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> ATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR

State 123:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 124
-- On ADD shift to state 102
## Reductions:

State 124:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr COMMA
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 126
-- On ADD shift to state 102
## Reductions:

State 126:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR
## LR(1) items:
expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> ATOMIC_FETCH_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR

State 129:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 130
-- On ADD shift to state 102
## Reductions:

State 130:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 132
-- On ADD shift to state 102
## Reductions:

State 132:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 134
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 134:
## Known stack suffix:
## CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR
## LR(1) items:
expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> CMPXCHG LBRACE annot_list RBRACE LPAR expr COMMA expr COMMA expr RPAR

State 135:
## Known stack suffix:
## annot_base
## LR(1) items:
annot -> annot_base . [ RBRACE COMMA ]
annot -> annot_base . SUB annot [ RBRACE COMMA ]
## Transitions:
-- On SUB shift to state 136
## Reductions:
-- On RBRACE reduce production annot -> annot_base
-- On COMMA reduce production annot -> annot_base

State 136:
## Known stack suffix:
## annot_base SUB
## LR(1) items:
annot -> annot_base SUB . annot [ RBRACE COMMA ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_base shift to state 135
-- On annot shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## annot_base SUB annot
## LR(1) items:
annot -> annot_base SUB annot . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production annot -> annot_base SUB annot

State 138:
## Known stack suffix:
## annot
## LR(1) items:
annot_list -> annot . COMMA annot_list [ RBRACE ]
annot_list -> annot . [ RBRACE ]
## Transitions:
-- On COMMA shift to state 139
## Reductions:
-- On RBRACE reduce production annot_list -> annot

State 139:
## Known stack suffix:
## annot COMMA
## LR(1) items:
annot_list -> annot COMMA . annot_list [ RBRACE ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 140
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 140:
## Known stack suffix:
## annot COMMA annot_list
## LR(1) items:
annot_list -> annot COMMA annot_list . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production annot_list -> annot COMMA annot_list

State 141:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> EXC_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 142
-- On ADD shift to state 102
## Reductions:

State 142:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr COMMA
## LR(1) items:
expr -> EXC_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> EXC_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 144
-- On ADD shift to state 102
## Reductions:

State 144:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER
## LR(1) items:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR
## LR(1) items:
expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> EXC_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR

State 147:
## Known stack suffix:
## expr
## LR(1) items:
args_ne -> expr . [ RPAR ]
args_ne -> expr . COMMA args_ne [ RPAR ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 148
-- On ADD shift to state 102
## Reductions:
-- On RPAR reduce production args_ne -> expr

State 148:
## Known stack suffix:
## expr COMMA
## LR(1) items:
args_ne -> expr COMMA . args_ne [ RPAR ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## expr COMMA args_ne
## LR(1) items:
args_ne -> expr COMMA args_ne . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production args_ne -> expr COMMA args_ne

State 150:
## Known stack suffix:
## args_ne
## LR(1) items:
args -> args_ne . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production args -> args_ne

State 151:
## Known stack suffix:
## IDENTIFIER LPAR args
## LR(1) items:
expr -> IDENTIFIER LPAR args . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## IDENTIFIER LPAR args RPAR
## LR(1) items:
expr -> IDENTIFIER LPAR args RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> IDENTIFIER LPAR args RPAR

State 153:
## Known stack suffix:
## LD_EXPLICIT LPAR expr
## LR(1) items:
expr -> LD_EXPLICIT LPAR expr . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 154
-- On ADD shift to state 102
## Reductions:

State 154:
## Known stack suffix:
## LD_EXPLICIT LPAR expr COMMA
## LR(1) items:
expr -> LD_EXPLICIT LPAR expr COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## LD_EXPLICIT LPAR expr COMMA MEMORDER
## LR(1) items:
expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR
## LR(1) items:
expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LD_EXPLICIT LPAR expr COMMA MEMORDER RPAR

State 157:
## Known stack suffix:
## LOAD LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> LOAD LBRACE annot_list RBRACE LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 158
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 158:
## Known stack suffix:
## LOAD LBRACE annot_list RBRACE LPAR expr RPAR
## LR(1) items:
expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LOAD LBRACE annot_list RBRACE LPAR expr RPAR

State 159:
## Known stack suffix:
## LPAR typ
## LR(1) items:
base -> LPAR typ . RPAR [ VOLATILE STAR RPAR ]
expr -> LPAR typ . RPAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## LPAR typ RPAR
## LR(1) items:
base -> LPAR typ RPAR . [ VOLATILE STAR RPAR ]
expr -> LPAR typ RPAR . expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 161
## Reductions:
-- On VOLATILE reduce production base -> LPAR typ RPAR
-- On STAR reduce production base -> LPAR typ RPAR
-- On RPAR reduce production base -> LPAR typ RPAR

State 161:
## Known stack suffix:
## LPAR typ RPAR expr
## LR(1) items:
expr -> LPAR typ RPAR expr . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GT expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . LE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . GE expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LPAR typ RPAR expr

State 162:
## Known stack suffix:
## LPAR expr
## LR(1) items:
expr -> LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 163
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 163:
## Known stack suffix:
## LPAR expr RPAR
## LR(1) items:
expr -> LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> LPAR expr RPAR

State 164:
## Known stack suffix:
## LPAR typ
## LR(1) items:
expr -> LPAR typ . RPAR expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## LPAR typ RPAR
## LR(1) items:
expr -> LPAR typ RPAR . expr [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 161
## Reductions:

State 166:
## Known stack suffix:
## SCAS LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 167
-- On ADD shift to state 102
## Reductions:

State 167:
## Known stack suffix:
## SCAS LPAR expr COMMA
## LR(1) items:
expr -> SCAS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## SCAS LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 169
-- On ADD shift to state 102
## Reductions:

State 169:
## Known stack suffix:
## SCAS LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> SCAS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## SCAS LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SCAS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 171
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 171:
## Known stack suffix:
## SCAS LPAR expr COMMA expr COMMA expr RPAR
## LR(1) items:
expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> SCAS LPAR expr COMMA expr COMMA expr RPAR

State 172:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr . COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 173
-- On ADD shift to state 102
## Reductions:

State 173:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA . expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr COMMA expr . COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 175
-- On ADD shift to state 102
## Reductions:

State 175:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA . expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr . COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 177
-- On ADD shift to state 102
## Reductions:

State 177:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA . MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On COMMA shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR
## LR(1) items:
expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> SCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR

State 182:
## Known stack suffix:
## SPINISLOCKED LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SPINISLOCKED LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 183
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 183:
## Known stack suffix:
## SPINISLOCKED LPAR expr RPAR
## LR(1) items:
expr -> SPINISLOCKED LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> SPINISLOCKED LPAR expr RPAR

State 184:
## Known stack suffix:
## SPINTRYLOCK LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> SPINTRYLOCK LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 185
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 185:
## Known stack suffix:
## SPINTRYLOCK LPAR expr RPAR
## LR(1) items:
expr -> SPINTRYLOCK LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> SPINTRYLOCK LPAR expr RPAR

State 186:
## Known stack suffix:
## STAR LPAR typ
## LR(1) items:
expr -> STAR LPAR typ . RPAR IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
typ -> typ . STAR [ VOLATILE STAR RPAR ]
typ -> typ . VOLATILE [ VOLATILE STAR RPAR ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On RPAR shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## STAR LPAR typ RPAR
## LR(1) items:
expr -> STAR LPAR typ RPAR . IDENTIFIER [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On IDENTIFIER shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## STAR LPAR typ RPAR IDENTIFIER
## LR(1) items:
expr -> STAR LPAR typ RPAR IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> STAR LPAR typ RPAR IDENTIFIER

State 189:
## Known stack suffix:
## STAR LPAR expr
## LR(1) items:
expr -> STAR LPAR expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 190
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 190:
## Known stack suffix:
## STAR LPAR expr RPAR
## LR(1) items:
expr -> STAR LPAR expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> STAR LPAR expr RPAR

State 191:
## Known stack suffix:
## STAR IDENTIFIER
## LR(1) items:
expr -> STAR IDENTIFIER . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> STAR IDENTIFIER

State 192:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 193
-- On ADD shift to state 102
## Reductions:

State 193:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr COMMA
## LR(1) items:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 195
-- On ADD shift to state 102
## Reductions:

State 195:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 197
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 197:
## Known stack suffix:
## UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR
## LR(1) items:
expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> UNDERATOMICADDUNLESS LPAR expr COMMA expr COMMA expr RPAR

State 198:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr . COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 199
-- On ADD shift to state 102
## Reductions:

State 199:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA . atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 202
## Reductions:

State 200:
## Known stack suffix:
## SUB
## LR(1) items:
atomic_op -> SUB . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_op -> SUB

State 201:
## Known stack suffix:
## ADD
## LR(1) items:
atomic_op -> ADD . [ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atomic_op -> ADD

State 202:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On COMMA shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 205
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 205:
## Known stack suffix:
## UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR
## LR(1) items:
expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> UNDERATOMICFETCHOP LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR

State 206:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr . COMMA atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 207
-- On ADD shift to state 102
## Reductions:

State 207:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA . atomic_op COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On COMMA shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 211
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 211:
## Known stack suffix:
## UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR
## LR(1) items:
expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> UNDERATOMICOPRETURN LBRACE annot_list RBRACE LPAR expr COMMA atomic_op COMMA expr RPAR

State 212:
## Known stack suffix:
## WCAS LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS LPAR expr . COMMA expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 213
-- On ADD shift to state 102
## Reductions:

State 213:
## Known stack suffix:
## WCAS LPAR expr COMMA
## LR(1) items:
expr -> WCAS LPAR expr COMMA . expr COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## WCAS LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS LPAR expr COMMA expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 215
-- On ADD shift to state 102
## Reductions:

State 215:
## Known stack suffix:
## WCAS LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> WCAS LPAR expr COMMA expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## WCAS LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> WCAS LPAR expr COMMA expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 217
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 217:
## Known stack suffix:
## WCAS LPAR expr COMMA expr COMMA expr RPAR
## LR(1) items:
expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> WCAS LPAR expr COMMA expr COMMA expr RPAR

State 218:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr . COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 219
-- On ADD shift to state 102
## Reductions:

State 219:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA . expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr COMMA expr . COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 221
-- On ADD shift to state 102
## Reductions:

State 221:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA . expr COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr . COMMA MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 223
-- On ADD shift to state 102
## Reductions:

State 223:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA . MEMORDER COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER . COMMA MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On COMMA shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA . MEMORDER RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On MEMORDER shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On RPAR shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR
## LR(1) items:
expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> WCAS_EXPLICIT LPAR expr COMMA expr COMMA expr COMMA MEMORDER COMMA MEMORDER RPAR

State 228:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> XCHG LBRACE annot_list RBRACE LPAR expr . COMMA expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 229
-- On ADD shift to state 102
## Reductions:

State 229:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE LPAR expr COMMA
## LR(1) items:
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA . expr RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 230
## Reductions:

State 230:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr . RPAR [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 231
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 231:
## Known stack suffix:
## XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR
## LR(1) items:
expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR . [ XOR SUB STAR SEMI RPAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV COMMA ADD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> XCHG LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR

State 232:
## Known stack suffix:
## UNLOCK LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> UNLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 233
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 233:
## Known stack suffix:
## UNLOCK LPAR expr RPAR
## LR(1) items:
instruction -> UNLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## UNLOCK LPAR expr RPAR SEMI
## LR(1) items:
instruction -> UNLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> UNLOCK LPAR expr RPAR SEMI

State 235:
## Known stack suffix:
## UNDERFENCE
## LR(1) items:
instruction -> UNDERFENCE . LBRACE annot_list RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LBRACE shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## UNDERFENCE LBRACE
## LR(1) items:
instruction -> UNDERFENCE LBRACE . annot_list RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 237
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 237:
## Known stack suffix:
## UNDERFENCE LBRACE annot_list
## LR(1) items:
instruction -> UNDERFENCE LBRACE annot_list . RBRACE SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RBRACE shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## UNDERFENCE LBRACE annot_list RBRACE
## LR(1) items:
instruction -> UNDERFENCE LBRACE annot_list RBRACE . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## UNDERFENCE LBRACE annot_list RBRACE SEMI
## LR(1) items:
instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> UNDERFENCE LBRACE annot_list RBRACE SEMI

State 240:
## Known stack suffix:
## UNDERATOMICOP
## LR(1) items:
instruction -> UNDERATOMICOP . LPAR expr COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## UNDERATOMICOP LPAR
## LR(1) items:
instruction -> UNDERATOMICOP LPAR . expr COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## UNDERATOMICOP LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> UNDERATOMICOP LPAR expr . COMMA atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 243
-- On ADD shift to state 102
## Reductions:

State 243:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA
## LR(1) items:
instruction -> UNDERATOMICOP LPAR expr COMMA . atomic_op COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SUB shift to state 200
-- On ADD shift to state 201
-- On atomic_op shift to state 244
## Reductions:

State 244:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA atomic_op
## LR(1) items:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op . COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On COMMA shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA atomic_op COMMA
## LR(1) items:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 247
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 247:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR
## LR(1) items:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI
## LR(1) items:
instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> UNDERATOMICOP LPAR expr COMMA atomic_op COMMA expr RPAR SEMI

State 249:
## Known stack suffix:
## ST_EXPLICIT
## LR(1) items:
instruction -> ST_EXPLICIT . LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## ST_EXPLICIT LPAR
## LR(1) items:
instruction -> ST_EXPLICIT LPAR . expr COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## ST_EXPLICIT LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> ST_EXPLICIT LPAR expr . COMMA expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 252
-- On ADD shift to state 102
## Reductions:

State 252:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA
## LR(1) items:
instruction -> ST_EXPLICIT LPAR expr COMMA . expr COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> ST_EXPLICIT LPAR expr COMMA expr . COMMA MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 254
-- On ADD shift to state 102
## Reductions:

State 254:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA expr COMMA
## LR(1) items:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA . MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On MEMORDER shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER
## LR(1) items:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RPAR shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR
## LR(1) items:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI
## LR(1) items:
instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> ST_EXPLICIT LPAR expr COMMA expr COMMA MEMORDER RPAR SEMI

State 258:
## Known stack suffix:
## STORE
## LR(1) items:
instruction -> STORE . LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LBRACE shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## STORE LBRACE
## LR(1) items:
instruction -> STORE LBRACE . annot_list RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On UNLOCK shift to state 35
-- On LOCK shift to state 36
-- On IDENTIFIER shift to state 37
-- On annot_list shift to state 260
-- On annot_base shift to state 135
-- On annot shift to state 138
## Reductions:

State 260:
## Known stack suffix:
## STORE LBRACE annot_list
## LR(1) items:
instruction -> STORE LBRACE annot_list . RBRACE LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RBRACE shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE
## LR(1) items:
instruction -> STORE LBRACE annot_list RBRACE . LPAR expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR
## LR(1) items:
instruction -> STORE LBRACE annot_list RBRACE LPAR . expr COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV COMMA ADD ]
instruction -> STORE LBRACE annot_list RBRACE LPAR expr . COMMA expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On COMMA shift to state 264
-- On ADD shift to state 102
## Reductions:

State 264:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR expr COMMA
## LR(1) items:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR expr COMMA expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 266
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 266:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR
## LR(1) items:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI
## LR(1) items:
instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> STORE LBRACE annot_list RBRACE LPAR expr COMMA expr RPAR SEMI

State 268:
## Known stack suffix:
## STAR
## LR(1) items:
instruction -> STAR . location EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On STAR shift to state 269
-- On LPAR shift to state 270
-- On IDENTIFIER shift to state 273
-- On location shift to state 275
## Reductions:

State 269:
## Known stack suffix:
## STAR
## LR(1) items:
location -> STAR . location [ EQ ]
## Transitions:
-- On STAR shift to state 269
-- On LPAR shift to state 270
-- On IDENTIFIER shift to state 273
-- On location shift to state 274
## Reductions:

State 270:
## Known stack suffix:
## LPAR
## LR(1) items:
location -> LPAR . expr RPAR [ EQ ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
location -> LPAR expr . RPAR [ EQ ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 272
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 272:
## Known stack suffix:
## LPAR expr RPAR
## LR(1) items:
location -> LPAR expr RPAR . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production location -> LPAR expr RPAR

State 273:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
location -> IDENTIFIER . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production location -> IDENTIFIER

State 274:
## Known stack suffix:
## STAR location
## LR(1) items:
location -> STAR location . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production location -> STAR location

State 275:
## Known stack suffix:
## STAR location
## LR(1) items:
instruction -> STAR location . EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On EQ shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## STAR location EQ
## LR(1) items:
instruction -> STAR location EQ . expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## STAR location EQ expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> STAR location EQ expr . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On SEMI shift to state 278
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 278:
## Known stack suffix:
## STAR location EQ expr SEMI
## LR(1) items:
instruction -> STAR location EQ expr SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> STAR location EQ expr SEMI

State 279:
## Known stack suffix:
## SPINUNLOCK
## LR(1) items:
instruction -> SPINUNLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## SPINUNLOCK LPAR
## LR(1) items:
instruction -> SPINUNLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## SPINUNLOCK LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> SPINUNLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 282
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 282:
## Known stack suffix:
## SPINUNLOCK LPAR expr RPAR
## LR(1) items:
instruction -> SPINUNLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## SPINUNLOCK LPAR expr RPAR SEMI
## LR(1) items:
instruction -> SPINUNLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> SPINUNLOCK LPAR expr RPAR SEMI

State 284:
## Known stack suffix:
## SPINLOCK
## LR(1) items:
instruction -> SPINLOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## SPINLOCK LPAR
## LR(1) items:
instruction -> SPINLOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## SPINLOCK LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> SPINLOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 287
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 287:
## Known stack suffix:
## SPINLOCK LPAR expr RPAR
## LR(1) items:
instruction -> SPINLOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## SPINLOCK LPAR expr RPAR SEMI
## LR(1) items:
instruction -> SPINLOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> SPINLOCK LPAR expr RPAR SEMI

State 289:
## Known stack suffix:
## LOCK
## LR(1) items:
instruction -> LOCK . LPAR expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## LOCK LPAR
## LR(1) items:
instruction -> LOCK LPAR . expr RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## LOCK LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> LOCK LPAR expr . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 292
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 292:
## Known stack suffix:
## LOCK LPAR expr RPAR
## LR(1) items:
instruction -> LOCK LPAR expr RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## LOCK LPAR expr RPAR SEMI
## LR(1) items:
instruction -> LOCK LPAR expr RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> LOCK LPAR expr RPAR SEMI

State 294:
## Known stack suffix:
## LBRACE
## LR(1) items:
block_ins -> LBRACE . ins_seq RBRACE [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 327
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 295:
## Known stack suffix:
## IF
## LR(1) items:
instruction -> IF . LPAR expr RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF . LPAR expr RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 296
## Reductions:

State 296:
## Known stack suffix:
## IF LPAR
## LR(1) items:
instruction -> IF LPAR . expr RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR . expr RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 297
## Reductions:

State 297:
## Known stack suffix:
## IF LPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR RPAR PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> IF LPAR expr . RPAR block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr . RPAR block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On RPAR shift to state 298
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 298:
## Known stack suffix:
## IF LPAR expr RPAR
## LR(1) items:
instruction -> IF LPAR expr RPAR . block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr RPAR . block_ins ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 314
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On block_ins shift to state 321
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 299:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
instruction -> IDENTIFIER . EQ expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IDENTIFIER . LPAR args RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 300
-- On EQ shift to state 304
## Reductions:

State 300:
## Known stack suffix:
## IDENTIFIER LPAR
## LR(1) items:
instruction -> IDENTIFIER LPAR . args RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 147
-- On args_ne shift to state 150
-- On args shift to state 301
## Reductions:
-- On RPAR reduce production args ->

State 301:
## Known stack suffix:
## IDENTIFIER LPAR args
## LR(1) items:
instruction -> IDENTIFIER LPAR args . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RPAR shift to state 302
## Reductions:

State 302:
## Known stack suffix:
## IDENTIFIER LPAR args RPAR
## LR(1) items:
instruction -> IDENTIFIER LPAR args RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## IDENTIFIER LPAR args RPAR SEMI
## LR(1) items:
instruction -> IDENTIFIER LPAR args RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> IDENTIFIER LPAR args RPAR SEMI

State 304:
## Known stack suffix:
## IDENTIFIER EQ
## LR(1) items:
instruction -> IDENTIFIER EQ . expr SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## IDENTIFIER EQ expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
instruction -> IDENTIFIER EQ expr . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On SEMI shift to state 306
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:

State 306:
## Known stack suffix:
## IDENTIFIER EQ expr SEMI
## LR(1) items:
instruction -> IDENTIFIER EQ expr SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> IDENTIFIER EQ expr SEMI

State 307:
## Known stack suffix:
## FENCE
## LR(1) items:
instruction -> FENCE . LPAR MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On LPAR shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## FENCE LPAR
## LR(1) items:
instruction -> FENCE LPAR . MEMORDER RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On MEMORDER shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## FENCE LPAR MEMORDER
## LR(1) items:
instruction -> FENCE LPAR MEMORDER . RPAR SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RPAR shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## FENCE LPAR MEMORDER RPAR
## LR(1) items:
instruction -> FENCE LPAR MEMORDER RPAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 311
## Reductions:

State 311:
## Known stack suffix:
## FENCE LPAR MEMORDER RPAR SEMI
## LR(1) items:
instruction -> FENCE LPAR MEMORDER RPAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> FENCE LPAR MEMORDER RPAR SEMI

State 312:
## Known stack suffix:
## CODEVAR
## LR(1) items:
instruction -> CODEVAR . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## CODEVAR SEMI
## LR(1) items:
instruction -> CODEVAR SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> CODEVAR SEMI

State 314:
## Known stack suffix:
## typ
## LR(1) items:
initialisation -> typ . IDENTIFIER EQ expr [ SEMI ]
typ -> typ . STAR [ VOLATILE STAR IDENTIFIER ]
typ -> typ . VOLATILE [ VOLATILE STAR IDENTIFIER ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On IDENTIFIER shift to state 315
## Reductions:

State 315:
## Known stack suffix:
## typ IDENTIFIER
## LR(1) items:
initialisation -> typ IDENTIFIER . EQ expr [ SEMI ]
## Transitions:
-- On EQ shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## typ IDENTIFIER EQ
## LR(1) items:
initialisation -> typ IDENTIFIER EQ . expr [ SEMI ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 317
## Reductions:

State 317:
## Known stack suffix:
## typ IDENTIFIER EQ expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . ADD expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . SUB expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . DIV expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LAND expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . PIPE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . XOR expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . EQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GT expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . LE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
expr -> expr . GE expr [ XOR SUB STAR SEMI PIPE NEQ_OP LT LE LAND GT GE EQ_OP DIV ADD ]
initialisation -> typ IDENTIFIER EQ expr . [ SEMI ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On SEMI reduce production initialisation -> typ IDENTIFIER EQ expr

State 318:
## Known stack suffix:
## instruction
## LR(1) items:
block_ins -> instruction . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_ins -> instruction

State 319:
## Known stack suffix:
## initialisation
## LR(1) items:
instruction -> initialisation . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On SEMI shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## initialisation SEMI
## LR(1) items:
instruction -> initialisation SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> initialisation SEMI

State 321:
## Known stack suffix:
## IF LPAR expr RPAR block_ins
## LR(1) items:
instruction -> IF LPAR expr RPAR block_ins . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
instruction -> IF LPAR expr RPAR block_ins . ELSE block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On ELSE shift to state 322
## Reductions:
-- On VOLATILE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On VOID reduce production instruction -> IF LPAR expr RPAR block_ins
-- On UNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins
-- On UNDERFENCE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On UNDERATOMICOP reduce production instruction -> IF LPAR expr RPAR block_ins
-- On ST_EXPLICIT reduce production instruction -> IF LPAR expr RPAR block_ins
-- On STORE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On STAR reduce production instruction -> IF LPAR expr RPAR block_ins
-- On SPINUNLOCK reduce production instruction -> IF LPAR expr RPAR block_ins
-- On SPINLOCK reduce production instruction -> IF LPAR expr RPAR block_ins
-- On RBRACE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On MUTEX reduce production instruction -> IF LPAR expr RPAR block_ins
-- On LPAR reduce production instruction -> IF LPAR expr RPAR block_ins
-- On LONG reduce production instruction -> IF LPAR expr RPAR block_ins
-- On LOCK reduce production instruction -> IF LPAR expr RPAR block_ins
-- On LBRACE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On INT reduce production instruction -> IF LPAR expr RPAR block_ins
-- On IF reduce production instruction -> IF LPAR expr RPAR block_ins
-- On IDENTIFIER reduce production instruction -> IF LPAR expr RPAR block_ins
-- On FENCE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On CODEVAR reduce production instruction -> IF LPAR expr RPAR block_ins
-- On CHAR reduce production instruction -> IF LPAR expr RPAR block_ins
-- On BASE_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On ATOMIC_TYPE reduce production instruction -> IF LPAR expr RPAR block_ins
-- On ATOMIC reduce production instruction -> IF LPAR expr RPAR block_ins

State 322:
## Known stack suffix:
## IF LPAR expr RPAR block_ins ELSE
## LR(1) items:
instruction -> IF LPAR expr RPAR block_ins ELSE . block_ins [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 314
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On block_ins shift to state 323
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 323:
## Known stack suffix:
## IF LPAR expr RPAR block_ins ELSE block_ins
## LR(1) items:
instruction -> IF LPAR expr RPAR block_ins ELSE block_ins . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> IF LPAR expr RPAR block_ins ELSE block_ins

State 324:
## Known stack suffix:
## typ
## LR(1) items:
declaration -> typ . IDENTIFIER SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
initialisation -> typ . IDENTIFIER EQ expr [ SEMI ]
typ -> typ . STAR [ VOLATILE STAR IDENTIFIER ]
typ -> typ . VOLATILE [ VOLATILE STAR IDENTIFIER ]
## Transitions:
-- On VOLATILE shift to state 20
-- On STAR shift to state 21
-- On IDENTIFIER shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## typ IDENTIFIER
## LR(1) items:
declaration -> typ IDENTIFIER . SEMI [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
initialisation -> typ IDENTIFIER . EQ expr [ SEMI ]
## Transitions:
-- On SEMI shift to state 326
-- On EQ shift to state 316
## Reductions:

State 326:
## Known stack suffix:
## typ IDENTIFIER SEMI
## LR(1) items:
declaration -> typ IDENTIFIER SEMI . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> typ IDENTIFIER SEMI

State 327:
## Known stack suffix:
## LBRACE ins_seq
## LR(1) items:
block_ins -> LBRACE ins_seq . RBRACE [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
-- On RBRACE shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## LBRACE ins_seq RBRACE
## LR(1) items:
block_ins -> LBRACE ins_seq RBRACE . [ VOLATILE VOID UNLOCK UNDERFENCE UNDERATOMICOP ST_EXPLICIT STORE STAR SPINUNLOCK SPINLOCK RBRACE MUTEX LPAR LONG LOCK LBRACE INT IF IDENTIFIER FENCE ELSE CODEVAR CHAR BASE_TYPE ATOMIC_TYPE ATOMIC # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_ins -> LBRACE ins_seq RBRACE

State 329:
## Known stack suffix:
## declaration
## LR(1) items:
ins_seq -> declaration . [ RBRACE ]
ins_seq -> declaration . ins_seq [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 330
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RBRACE reduce production ins_seq -> declaration
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 330:
## Known stack suffix:
## declaration ins_seq
## LR(1) items:
ins_seq -> declaration ins_seq . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_seq -> declaration ins_seq

State 331:
## Known stack suffix:
## block_ins
## LR(1) items:
ins_seq -> block_ins . [ RBRACE ]
ins_seq -> block_ins . ins_seq [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 332
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RBRACE reduce production ins_seq -> block_ins
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 332:
## Known stack suffix:
## block_ins ins_seq
## LR(1) items:
ins_seq -> block_ins ins_seq . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_seq -> block_ins ins_seq

State 333:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq
## LR(1) items:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq . RBRACE [ VOID PROC EOF ]
## Transitions:
-- On RBRACE shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE
## LR(1) items:
function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE . [ VOID PROC EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_def -> voidopt PROC LPAR parameter_list RPAR LBRACE pseudo_seq RBRACE

State 335:
## Known stack suffix:
## declaration
## LR(1) items:
pseudo_seq -> declaration . [ RBRACE ]
pseudo_seq -> declaration . pseudo_seq [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 336
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RBRACE reduce production pseudo_seq -> declaration
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 336:
## Known stack suffix:
## declaration pseudo_seq
## LR(1) items:
pseudo_seq -> declaration pseudo_seq . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pseudo_seq -> declaration pseudo_seq

State 337:
## Known stack suffix:
## block_ins
## LR(1) items:
pseudo_seq -> block_ins . [ RBRACE ]
pseudo_seq -> block_ins . pseudo_seq [ RBRACE ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 338
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 335
-- On block_ins shift to state 337
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RBRACE reduce production pseudo_seq -> block_ins
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 338:
## Known stack suffix:
## block_ins pseudo_seq
## LR(1) items:
pseudo_seq -> block_ins pseudo_seq . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pseudo_seq -> block_ins pseudo_seq

State 339:
## Known stack suffix:
## parameter_declaration
## LR(1) items:
parameter_list -> parameter_declaration . [ RPAR ]
parameter_list -> parameter_declaration . COMMA parameter_list [ RPAR ]
## Transitions:
-- On COMMA shift to state 340
## Reductions:
-- On RPAR reduce production parameter_list -> parameter_declaration

State 340:
## Known stack suffix:
## parameter_declaration COMMA
## LR(1) items:
parameter_list -> parameter_declaration COMMA . parameter_list [ RPAR ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 341
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RPAR reduce production parameter_list ->
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 341:
## Known stack suffix:
## parameter_declaration COMMA parameter_list
## LR(1) items:
parameter_list -> parameter_declaration COMMA parameter_list . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_declaration COMMA parameter_list

State 342:
## Known stack suffix:
## trans_unit
## LR(1) items:
deep_main -> trans_unit . EOF [ # ]
trans_unit -> trans_unit . function_def [ VOID PROC EOF ]
## Transitions:
-- On VOID shift to state 1
-- On EOF shift to state 343
-- On voidopt shift to state 2
-- On function_def shift to state 344
## Reductions:
-- On PROC reduce production voidopt ->

State 343:
## Known stack suffix:
## trans_unit EOF
## LR(1) items:
deep_main -> trans_unit EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production deep_main -> trans_unit EOF

State 344:
## Known stack suffix:
## trans_unit function_def
## LR(1) items:
trans_unit -> trans_unit function_def . [ VOID PROC EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trans_unit -> trans_unit function_def

State 345:
## Known stack suffix:
## function_def
## LR(1) items:
trans_unit -> function_def . [ VOID PROC EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trans_unit -> function_def

State 346:
## Known stack suffix:
## deep_main
## LR(1) items:
deep_main' -> deep_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept deep_main

State 347:
## Known stack suffix:
##
## LR(1) items:
macros' -> . macros [ # ]
## Transitions:
-- On IDENTIFIER shift to state 348
-- On macros shift to state 361
-- On macro shift to state 362
## Reductions:

State 348:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
macro -> IDENTIFIER . LPAR formals RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER . LPAR formals RPAR body [ IDENTIFIER # ]
## Transitions:
-- On LPAR shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## IDENTIFIER LPAR
## LR(1) items:
macro -> IDENTIFIER LPAR . formals RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR . formals RPAR body [ IDENTIFIER # ]
## Transitions:
-- On IDENTIFIER shift to state 350
-- On formals_ne shift to state 353
-- On formals shift to state 354
## Reductions:
-- On RPAR reduce production formals ->

State 350:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
formals_ne -> IDENTIFIER . [ RPAR ]
formals_ne -> IDENTIFIER . COMMA formals_ne [ RPAR ]
## Transitions:
-- On COMMA shift to state 351
## Reductions:
-- On RPAR reduce production formals_ne -> IDENTIFIER

State 351:
## Known stack suffix:
## IDENTIFIER COMMA
## LR(1) items:
formals_ne -> IDENTIFIER COMMA . formals_ne [ RPAR ]
## Transitions:
-- On IDENTIFIER shift to state 350
-- On formals_ne shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## IDENTIFIER COMMA formals_ne
## LR(1) items:
formals_ne -> IDENTIFIER COMMA formals_ne . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formals_ne -> IDENTIFIER COMMA formals_ne

State 353:
## Known stack suffix:
## formals_ne
## LR(1) items:
formals -> formals_ne . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formals -> formals_ne

State 354:
## Known stack suffix:
## IDENTIFIER LPAR formals
## LR(1) items:
macro -> IDENTIFIER LPAR formals . RPAR expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR formals . RPAR body [ IDENTIFIER # ]
## Transitions:
-- On RPAR shift to state 355
## Reductions:

State 355:
## Known stack suffix:
## IDENTIFIER LPAR formals RPAR
## LR(1) items:
macro -> IDENTIFIER LPAR formals RPAR . expr [ IDENTIFIER # ]
macro -> IDENTIFIER LPAR formals RPAR . body [ IDENTIFIER # ]
## Transitions:
-- On XCHG shift to state 33
-- On WCAS_EXPLICIT shift to state 41
-- On WCAS shift to state 43
-- On UNDERATOMICOPRETURN shift to state 45
-- On UNDERATOMICFETCHOP shift to state 50
-- On UNDERATOMICADDUNLESS shift to state 55
-- On STAR shift to state 57
-- On SPINTRYLOCK shift to state 59
-- On SPINISLOCKED shift to state 61
-- On SCAS_EXPLICIT shift to state 63
-- On SCAS shift to state 65
-- On LPAR shift to state 67
-- On LOAD shift to state 69
-- On LD_EXPLICIT shift to state 74
-- On LBRACE shift to state 356
-- On IDENTIFIER shift to state 76
-- On EXC_EXPLICIT shift to state 78
-- On CONSTVAR shift to state 80
-- On CONSTANT shift to state 81
-- On CMPXCHG shift to state 82
-- On ATOMIC_FETCH_EXPLICIT shift to state 87
-- On ATOMICADDUNLESS shift to state 89
-- On expr shift to state 359
-- On body shift to state 360
## Reductions:

State 356:
## Known stack suffix:
## LBRACE
## LR(1) items:
body -> LBRACE . ins_seq RBRACE [ IDENTIFIER # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On instruction shift to state 318
-- On ins_seq shift to state 357
-- On initialisation shift to state 319
-- On declaration shift to state 329
-- On block_ins shift to state 331
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 357:
## Known stack suffix:
## LBRACE ins_seq
## LR(1) items:
body -> LBRACE ins_seq . RBRACE [ IDENTIFIER # ]
## Transitions:
-- On RBRACE shift to state 358
## Reductions:

State 358:
## Known stack suffix:
## LBRACE ins_seq RBRACE
## LR(1) items:
body -> LBRACE ins_seq RBRACE . [ IDENTIFIER # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production body -> LBRACE ins_seq RBRACE

State 359:
## Known stack suffix:
## IDENTIFIER LPAR formals RPAR expr
## LR(1) items:
expr -> expr . STAR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . ADD expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . SUB expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . DIV expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LAND expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . PIPE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . XOR expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . EQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . NEQ_OP expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . GT expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . LE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
expr -> expr . GE expr [ XOR SUB STAR PIPE NEQ_OP LT LE LAND IDENTIFIER GT GE EQ_OP DIV ADD # ]
macro -> IDENTIFIER LPAR formals RPAR expr . [ IDENTIFIER # ]
## Transitions:
-- On XOR shift to state 92
-- On SUB shift to state 94
-- On STAR shift to state 96
-- On PIPE shift to state 116
-- On NEQ_OP shift to state 100
-- On LT shift to state 104
-- On LE shift to state 106
-- On LAND shift to state 108
-- On GT shift to state 110
-- On GE shift to state 112
-- On EQ_OP shift to state 114
-- On DIV shift to state 98
-- On ADD shift to state 102
## Reductions:
-- On IDENTIFIER reduce production macro -> IDENTIFIER LPAR formals RPAR expr

State 360:
## Known stack suffix:
## IDENTIFIER LPAR formals RPAR body
## LR(1) items:
macro -> IDENTIFIER LPAR formals RPAR body . [ IDENTIFIER # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production macro -> IDENTIFIER LPAR formals RPAR body

State 361:
## Known stack suffix:
## macros
## LR(1) items:
macros' -> macros . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept macros

State 362:
## Known stack suffix:
## macro
## LR(1) items:
macros -> macro . macros [ # ]
## Transitions:
-- On IDENTIFIER shift to state 348
-- On macros shift to state 363
-- On macro shift to state 362
## Reductions:

State 363:
## Known stack suffix:
## macro macros
## LR(1) items:
macros -> macro macros . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production macros -> macro macros

State 364:
## Known stack suffix:
##
## LR(1) items:
pseudo_seq' -> . pseudo_seq [ # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 365
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 365:
## Known stack suffix:
## pseudo_seq
## LR(1) items:
pseudo_seq' -> pseudo_seq . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept pseudo_seq

State 366:
## Known stack suffix:
## declaration
## LR(1) items:
pseudo_seq -> declaration . [ # ]
pseudo_seq -> declaration . pseudo_seq [ # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 367
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 367:
## Known stack suffix:
## declaration pseudo_seq
## LR(1) items:
pseudo_seq -> declaration pseudo_seq . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production pseudo_seq -> declaration pseudo_seq

State 368:
## Known stack suffix:
## block_ins
## LR(1) items:
pseudo_seq -> block_ins . [ # ]
pseudo_seq -> block_ins . pseudo_seq [ # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On UNLOCK shift to state 31
-- On UNDERFENCE shift to state 235
-- On UNDERATOMICOP shift to state 240
-- On ST_EXPLICIT shift to state 249
-- On STORE shift to state 258
-- On STAR shift to state 268
-- On SPINUNLOCK shift to state 279
-- On SPINLOCK shift to state 284
-- On LPAR shift to state 15
-- On LOCK shift to state 289
-- On LBRACE shift to state 294
-- On IF shift to state 295
-- On IDENTIFIER shift to state 299
-- On FENCE shift to state 307
-- On CODEVAR shift to state 312
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 324
-- On ty_attr shift to state 9
-- On pseudo_seq shift to state 369
-- On instruction shift to state 318
-- On initialisation shift to state 319
-- On declaration shift to state 366
-- On block_ins shift to state 368
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 369:
## Known stack suffix:
## block_ins pseudo_seq
## LR(1) items:
pseudo_seq -> block_ins pseudo_seq . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production pseudo_seq -> block_ins pseudo_seq

State 370:
## Known stack suffix:
##
## LR(1) items:
shallow_main' -> . shallow_main [ # ]
## Transitions:
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 381
## Reductions:
-- On PROC reduce production voidopt ->

State 371:
## Known stack suffix:
## EOF
## LR(1) items:
shallow_main -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production shallow_main -> EOF

State 372:
## Known stack suffix:
## BODY
## LR(1) items:
shallow_main -> BODY . shallow_main [ # ]
## Transitions:
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 380
## Reductions:
-- On PROC reduce production voidopt ->

State 373:
## Known stack suffix:
## voidopt
## LR(1) items:
shallow_main -> voidopt . PROC LPAR parameter_list RPAR BODY shallow_main [ # ]
## Transitions:
-- On PROC shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## voidopt PROC
## LR(1) items:
shallow_main -> voidopt PROC . LPAR parameter_list RPAR BODY shallow_main [ # ]
## Transitions:
-- On LPAR shift to state 375
## Reductions:

State 375:
## Known stack suffix:
## voidopt PROC LPAR
## LR(1) items:
shallow_main -> voidopt PROC LPAR . parameter_list RPAR BODY shallow_main [ # ]
## Transitions:
-- On VOLATILE shift to state 5
-- On VOID shift to state 6
-- On LPAR shift to state 15
-- On BASE_TYPE shift to state 7
-- On ATOMIC_TYPE shift to state 8
-- On ATOMIC shift to state 16
-- On typ shift to state 24
-- On ty_attr shift to state 9
-- On toptyp shift to state 26
-- On parameter_list shift to state 376
-- On parameter_declaration shift to state 339
-- On base0 shift to state 17
-- On base shift to state 23
## Reductions:
-- On RPAR reduce production parameter_list ->
-- On MUTEX reduce production ty_attr ->
-- On LONG reduce production ty_attr ->
-- On INT reduce production ty_attr ->
-- On CHAR reduce production ty_attr ->

State 376:
## Known stack suffix:
## voidopt PROC LPAR parameter_list
## LR(1) items:
shallow_main -> voidopt PROC LPAR parameter_list . RPAR BODY shallow_main [ # ]
## Transitions:
-- On RPAR shift to state 377
## Reductions:

State 377:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR
## LR(1) items:
shallow_main -> voidopt PROC LPAR parameter_list RPAR . BODY shallow_main [ # ]
## Transitions:
-- On BODY shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR BODY
## LR(1) items:
shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY . shallow_main [ # ]
## Transitions:
-- On VOID shift to state 1
-- On EOF shift to state 371
-- On BODY shift to state 372
-- On voidopt shift to state 373
-- On shallow_main shift to state 379
## Reductions:
-- On PROC reduce production voidopt ->

State 379:
## Known stack suffix:
## voidopt PROC LPAR parameter_list RPAR BODY shallow_main
## LR(1) items:
shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY shallow_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production shallow_main -> voidopt PROC LPAR parameter_list RPAR BODY shallow_main

State 380:
## Known stack suffix:
## BODY shallow_main
## LR(1) items:
shallow_main -> BODY shallow_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production shallow_main -> BODY shallow_main

State 381:
## Known stack suffix:
## shallow_main
## LR(1) items:
shallow_main' -> shallow_main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept shallow_main

