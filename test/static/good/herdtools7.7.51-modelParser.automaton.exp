State 0:
main' -> . main [ # ]
-- On VAR shift to state 1
-- On STRING shift to state 2
-- On main shift to state 3
-- On identity shift to state 4
-- On WITHSC reduce production identity -> 
-- On WITHOUTSC reduce production identity -> 
-- On WITHOUTINIT reduce production identity -> 
-- On WITHOUTCO reduce production identity -> 
-- On WITHINIT reduce production identity -> 
-- On WITHCO reduce production identity -> 
-- On WITH reduce production identity -> 
-- On UNSHOW reduce production identity -> 
-- On TESTEMPTY reduce production identity -> 
-- On SHOW reduce production identity -> 
-- On REQUIRES reduce production identity -> 
-- On PROCEDURE reduce production identity -> 
-- On MATCH reduce production identity -> 
-- On LET reduce production identity -> 
-- On LATEX reduce production identity -> 
-- On IRREFLEXIVE reduce production identity -> 
-- On INSTRUCTIONS reduce production identity -> 
-- On INCLUDE reduce production identity -> 
-- On FORALL reduce production identity -> 
-- On FLAG reduce production identity -> 
-- On EOF reduce production identity -> 
-- On ENUM reduce production identity -> 
-- On DEFAULT reduce production identity -> 
-- On DEBUG reduce production identity -> 
-- On COMP reduce production identity -> 
-- On CALL reduce production identity -> 
-- On ACYCLIC reduce production identity -> 

State 1:
identity -> VAR . [ WITHSC WITHOUTSC WITHOUTINIT WITHOUTCO WITHINIT WITHCO WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC reduce production identity -> VAR
-- On WITHOUTSC reduce production identity -> VAR
-- On WITHOUTINIT reduce production identity -> VAR
-- On WITHOUTCO reduce production identity -> VAR
-- On WITHINIT reduce production identity -> VAR
-- On WITHCO reduce production identity -> VAR
-- On WITH reduce production identity -> VAR
-- On UNSHOW reduce production identity -> VAR
-- On TESTEMPTY reduce production identity -> VAR
-- On SHOW reduce production identity -> VAR
-- On REQUIRES reduce production identity -> VAR
-- On PROCEDURE reduce production identity -> VAR
-- On MATCH reduce production identity -> VAR
-- On LET reduce production identity -> VAR
-- On LATEX reduce production identity -> VAR
-- On IRREFLEXIVE reduce production identity -> VAR
-- On INSTRUCTIONS reduce production identity -> VAR
-- On INCLUDE reduce production identity -> VAR
-- On FORALL reduce production identity -> VAR
-- On FLAG reduce production identity -> VAR
-- On EOF reduce production identity -> VAR
-- On ENUM reduce production identity -> VAR
-- On DEFAULT reduce production identity -> VAR
-- On DEBUG reduce production identity -> VAR
-- On COMP reduce production identity -> VAR
-- On CALL reduce production identity -> VAR
-- On ACYCLIC reduce production identity -> VAR

State 2:
identity -> STRING . [ WITHSC WITHOUTSC WITHOUTINIT WITHOUTCO WITHINIT WITHCO WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC reduce production identity -> STRING
-- On WITHOUTSC reduce production identity -> STRING
-- On WITHOUTINIT reduce production identity -> STRING
-- On WITHOUTCO reduce production identity -> STRING
-- On WITHINIT reduce production identity -> STRING
-- On WITHCO reduce production identity -> STRING
-- On WITH reduce production identity -> STRING
-- On UNSHOW reduce production identity -> STRING
-- On TESTEMPTY reduce production identity -> STRING
-- On SHOW reduce production identity -> STRING
-- On REQUIRES reduce production identity -> STRING
-- On PROCEDURE reduce production identity -> STRING
-- On MATCH reduce production identity -> STRING
-- On LET reduce production identity -> STRING
-- On LATEX reduce production identity -> STRING
-- On IRREFLEXIVE reduce production identity -> STRING
-- On INSTRUCTIONS reduce production identity -> STRING
-- On INCLUDE reduce production identity -> STRING
-- On FORALL reduce production identity -> STRING
-- On FLAG reduce production identity -> STRING
-- On EOF reduce production identity -> STRING
-- On ENUM reduce production identity -> STRING
-- On DEFAULT reduce production identity -> STRING
-- On DEBUG reduce production identity -> STRING
-- On COMP reduce production identity -> STRING
-- On CALL reduce production identity -> STRING
-- On ACYCLIC reduce production identity -> STRING

State 3:
main' -> main . [ # ]
-- On # accept main

State 4:
main -> identity . options topins_list EOF [ # ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 17
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 5:
options -> WITHSC . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 16
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 6:
options -> WITHOUTSC . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 15
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 7:
options -> WITHOUTINIT . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 14
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 8:
options -> WITHOUTCO . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 13
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 9:
options -> WITHINIT . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 12
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 10:
options -> WITHCO . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 11
-- On WITH reduce production options -> 
-- On UNSHOW reduce production options -> 
-- On TESTEMPTY reduce production options -> 
-- On SHOW reduce production options -> 
-- On REQUIRES reduce production options -> 
-- On PROCEDURE reduce production options -> 
-- On MATCH reduce production options -> 
-- On LET reduce production options -> 
-- On LATEX reduce production options -> 
-- On IRREFLEXIVE reduce production options -> 
-- On INSTRUCTIONS reduce production options -> 
-- On INCLUDE reduce production options -> 
-- On FORALL reduce production options -> 
-- On FLAG reduce production options -> 
-- On EOF reduce production options -> 
-- On ENUM reduce production options -> 
-- On DEFAULT reduce production options -> 
-- On DEBUG reduce production options -> 
-- On COMP reduce production options -> 
-- On CALL reduce production options -> 
-- On ACYCLIC reduce production options -> 

State 11:
options -> WITHCO options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHCO options
-- On UNSHOW reduce production options -> WITHCO options
-- On TESTEMPTY reduce production options -> WITHCO options
-- On SHOW reduce production options -> WITHCO options
-- On REQUIRES reduce production options -> WITHCO options
-- On PROCEDURE reduce production options -> WITHCO options
-- On MATCH reduce production options -> WITHCO options
-- On LET reduce production options -> WITHCO options
-- On LATEX reduce production options -> WITHCO options
-- On IRREFLEXIVE reduce production options -> WITHCO options
-- On INSTRUCTIONS reduce production options -> WITHCO options
-- On INCLUDE reduce production options -> WITHCO options
-- On FORALL reduce production options -> WITHCO options
-- On FLAG reduce production options -> WITHCO options
-- On EOF reduce production options -> WITHCO options
-- On ENUM reduce production options -> WITHCO options
-- On DEFAULT reduce production options -> WITHCO options
-- On DEBUG reduce production options -> WITHCO options
-- On COMP reduce production options -> WITHCO options
-- On CALL reduce production options -> WITHCO options
-- On ACYCLIC reduce production options -> WITHCO options

State 12:
options -> WITHINIT options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHINIT options
-- On UNSHOW reduce production options -> WITHINIT options
-- On TESTEMPTY reduce production options -> WITHINIT options
-- On SHOW reduce production options -> WITHINIT options
-- On REQUIRES reduce production options -> WITHINIT options
-- On PROCEDURE reduce production options -> WITHINIT options
-- On MATCH reduce production options -> WITHINIT options
-- On LET reduce production options -> WITHINIT options
-- On LATEX reduce production options -> WITHINIT options
-- On IRREFLEXIVE reduce production options -> WITHINIT options
-- On INSTRUCTIONS reduce production options -> WITHINIT options
-- On INCLUDE reduce production options -> WITHINIT options
-- On FORALL reduce production options -> WITHINIT options
-- On FLAG reduce production options -> WITHINIT options
-- On EOF reduce production options -> WITHINIT options
-- On ENUM reduce production options -> WITHINIT options
-- On DEFAULT reduce production options -> WITHINIT options
-- On DEBUG reduce production options -> WITHINIT options
-- On COMP reduce production options -> WITHINIT options
-- On CALL reduce production options -> WITHINIT options
-- On ACYCLIC reduce production options -> WITHINIT options

State 13:
options -> WITHOUTCO options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHOUTCO options
-- On UNSHOW reduce production options -> WITHOUTCO options
-- On TESTEMPTY reduce production options -> WITHOUTCO options
-- On SHOW reduce production options -> WITHOUTCO options
-- On REQUIRES reduce production options -> WITHOUTCO options
-- On PROCEDURE reduce production options -> WITHOUTCO options
-- On MATCH reduce production options -> WITHOUTCO options
-- On LET reduce production options -> WITHOUTCO options
-- On LATEX reduce production options -> WITHOUTCO options
-- On IRREFLEXIVE reduce production options -> WITHOUTCO options
-- On INSTRUCTIONS reduce production options -> WITHOUTCO options
-- On INCLUDE reduce production options -> WITHOUTCO options
-- On FORALL reduce production options -> WITHOUTCO options
-- On FLAG reduce production options -> WITHOUTCO options
-- On EOF reduce production options -> WITHOUTCO options
-- On ENUM reduce production options -> WITHOUTCO options
-- On DEFAULT reduce production options -> WITHOUTCO options
-- On DEBUG reduce production options -> WITHOUTCO options
-- On COMP reduce production options -> WITHOUTCO options
-- On CALL reduce production options -> WITHOUTCO options
-- On ACYCLIC reduce production options -> WITHOUTCO options

State 14:
options -> WITHOUTINIT options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHOUTINIT options
-- On UNSHOW reduce production options -> WITHOUTINIT options
-- On TESTEMPTY reduce production options -> WITHOUTINIT options
-- On SHOW reduce production options -> WITHOUTINIT options
-- On REQUIRES reduce production options -> WITHOUTINIT options
-- On PROCEDURE reduce production options -> WITHOUTINIT options
-- On MATCH reduce production options -> WITHOUTINIT options
-- On LET reduce production options -> WITHOUTINIT options
-- On LATEX reduce production options -> WITHOUTINIT options
-- On IRREFLEXIVE reduce production options -> WITHOUTINIT options
-- On INSTRUCTIONS reduce production options -> WITHOUTINIT options
-- On INCLUDE reduce production options -> WITHOUTINIT options
-- On FORALL reduce production options -> WITHOUTINIT options
-- On FLAG reduce production options -> WITHOUTINIT options
-- On EOF reduce production options -> WITHOUTINIT options
-- On ENUM reduce production options -> WITHOUTINIT options
-- On DEFAULT reduce production options -> WITHOUTINIT options
-- On DEBUG reduce production options -> WITHOUTINIT options
-- On COMP reduce production options -> WITHOUTINIT options
-- On CALL reduce production options -> WITHOUTINIT options
-- On ACYCLIC reduce production options -> WITHOUTINIT options

State 15:
options -> WITHOUTSC options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHOUTSC options
-- On UNSHOW reduce production options -> WITHOUTSC options
-- On TESTEMPTY reduce production options -> WITHOUTSC options
-- On SHOW reduce production options -> WITHOUTSC options
-- On REQUIRES reduce production options -> WITHOUTSC options
-- On PROCEDURE reduce production options -> WITHOUTSC options
-- On MATCH reduce production options -> WITHOUTSC options
-- On LET reduce production options -> WITHOUTSC options
-- On LATEX reduce production options -> WITHOUTSC options
-- On IRREFLEXIVE reduce production options -> WITHOUTSC options
-- On INSTRUCTIONS reduce production options -> WITHOUTSC options
-- On INCLUDE reduce production options -> WITHOUTSC options
-- On FORALL reduce production options -> WITHOUTSC options
-- On FLAG reduce production options -> WITHOUTSC options
-- On EOF reduce production options -> WITHOUTSC options
-- On ENUM reduce production options -> WITHOUTSC options
-- On DEFAULT reduce production options -> WITHOUTSC options
-- On DEBUG reduce production options -> WITHOUTSC options
-- On COMP reduce production options -> WITHOUTSC options
-- On CALL reduce production options -> WITHOUTSC options
-- On ACYCLIC reduce production options -> WITHOUTSC options

State 16:
options -> WITHSC options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production options -> WITHSC options
-- On UNSHOW reduce production options -> WITHSC options
-- On TESTEMPTY reduce production options -> WITHSC options
-- On SHOW reduce production options -> WITHSC options
-- On REQUIRES reduce production options -> WITHSC options
-- On PROCEDURE reduce production options -> WITHSC options
-- On MATCH reduce production options -> WITHSC options
-- On LET reduce production options -> WITHSC options
-- On LATEX reduce production options -> WITHSC options
-- On IRREFLEXIVE reduce production options -> WITHSC options
-- On INSTRUCTIONS reduce production options -> WITHSC options
-- On INCLUDE reduce production options -> WITHSC options
-- On FORALL reduce production options -> WITHSC options
-- On FLAG reduce production options -> WITHSC options
-- On EOF reduce production options -> WITHSC options
-- On ENUM reduce production options -> WITHSC options
-- On DEFAULT reduce production options -> WITHSC options
-- On DEBUG reduce production options -> WITHSC options
-- On COMP reduce production options -> WITHSC options
-- On CALL reduce production options -> WITHSC options
-- On ACYCLIC reduce production options -> WITHSC options

State 17:
main -> identity options . topins_list EOF [ # ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On ENUM shift to state 280
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On topins_list shift to state 288
-- On topins shift to state 290
-- On test_type shift to state 244
-- On ins shift to state 292
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On EOF reduce production topins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 18:
ins -> WITH . VAR FROM exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 19

State 19:
ins -> WITH VAR . FROM exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On FROM shift to state 20

State 20:
ins -> WITH VAR FROM . exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 170
-- On base shift to state 48

State 21:
exp0 -> VAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production exp0 -> VAR
-- On WHEN reduce production exp0 -> VAR
-- On VAR reduce production exp0 -> VAR
-- On UNSHOW reduce production exp0 -> VAR
-- On UNION reduce production exp0 -> VAR
-- On UNDERSCORE reduce production exp0 -> VAR
-- On THEN reduce production exp0 -> VAR
-- On TESTEMPTY reduce production exp0 -> VAR
-- On TAG reduce production exp0 -> VAR
-- On SUBSET reduce production exp0 -> VAR
-- On STAR reduce production exp0 -> VAR
-- On SHOW reduce production exp0 -> VAR
-- On SEMI reduce production exp0 -> VAR
-- On RPAR reduce production exp0 -> VAR
-- On REQUIRES reduce production exp0 -> VAR
-- On RBRAC reduce production exp0 -> VAR
-- On RACC reduce production exp0 -> VAR
-- On PROCEDURE reduce production exp0 -> VAR
-- On PLUSPLUS reduce production exp0 -> VAR
-- On PLUS reduce production exp0 -> VAR
-- On OPT reduce production exp0 -> VAR
-- On MATCH reduce production exp0 -> VAR
-- On LPAR reduce production exp0 -> VAR
-- On LET reduce production exp0 -> VAR
-- On LBRAC reduce production exp0 -> VAR
-- On LATEX reduce production exp0 -> VAR
-- On LACC reduce production exp0 -> VAR
-- On IRREFLEXIVE reduce production exp0 -> VAR
-- On INTER reduce production exp0 -> VAR
-- On INSTRUCTIONS reduce production exp0 -> VAR
-- On INCLUDE reduce production exp0 -> VAR
-- On IN reduce production exp0 -> VAR
-- On HAT reduce production exp0 -> VAR
-- On FORALL reduce production exp0 -> VAR
-- On FLAG reduce production exp0 -> VAR
-- On EQUAL reduce production exp0 -> VAR
-- On EOF reduce production exp0 -> VAR
-- On ENUM reduce production exp0 -> VAR
-- On END reduce production exp0 -> VAR
-- On EMPTY reduce production exp0 -> VAR
-- On ELSE reduce production exp0 -> VAR
-- On DO reduce production exp0 -> VAR
-- On DIFF reduce production exp0 -> VAR
-- On DEFAULT reduce production exp0 -> VAR
-- On DEBUG reduce production exp0 -> VAR
-- On COMP reduce production exp0 -> VAR
-- On COMMA reduce production exp0 -> VAR
-- On CALL reduce production exp0 -> VAR
-- On BEGIN reduce production exp0 -> VAR
-- On AS reduce production exp0 -> VAR
-- On AND reduce production exp0 -> VAR
-- On ALT reduce production exp0 -> VAR
-- On ACYCLIC reduce production exp0 -> VAR

State 22:
simple -> UNDERSCORE . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> UNDERSCORE
-- On WHEN reduce production simple -> UNDERSCORE
-- On VAR reduce production simple -> UNDERSCORE
-- On UNSHOW reduce production simple -> UNDERSCORE
-- On UNION reduce production simple -> UNDERSCORE
-- On UNDERSCORE reduce production simple -> UNDERSCORE
-- On THEN reduce production simple -> UNDERSCORE
-- On TESTEMPTY reduce production simple -> UNDERSCORE
-- On TAG reduce production simple -> UNDERSCORE
-- On SUBSET reduce production simple -> UNDERSCORE
-- On STAR reduce production simple -> UNDERSCORE
-- On SHOW reduce production simple -> UNDERSCORE
-- On SEMI reduce production simple -> UNDERSCORE
-- On RPAR reduce production simple -> UNDERSCORE
-- On REQUIRES reduce production simple -> UNDERSCORE
-- On RBRAC reduce production simple -> UNDERSCORE
-- On RACC reduce production simple -> UNDERSCORE
-- On PROCEDURE reduce production simple -> UNDERSCORE
-- On PLUSPLUS reduce production simple -> UNDERSCORE
-- On PLUS reduce production simple -> UNDERSCORE
-- On OPT reduce production simple -> UNDERSCORE
-- On MATCH reduce production simple -> UNDERSCORE
-- On LPAR reduce production simple -> UNDERSCORE
-- On LET reduce production simple -> UNDERSCORE
-- On LBRAC reduce production simple -> UNDERSCORE
-- On LATEX reduce production simple -> UNDERSCORE
-- On LACC reduce production simple -> UNDERSCORE
-- On IRREFLEXIVE reduce production simple -> UNDERSCORE
-- On INTER reduce production simple -> UNDERSCORE
-- On INSTRUCTIONS reduce production simple -> UNDERSCORE
-- On INCLUDE reduce production simple -> UNDERSCORE
-- On IN reduce production simple -> UNDERSCORE
-- On HAT reduce production simple -> UNDERSCORE
-- On FORALL reduce production simple -> UNDERSCORE
-- On FLAG reduce production simple -> UNDERSCORE
-- On EQUAL reduce production simple -> UNDERSCORE
-- On EOF reduce production simple -> UNDERSCORE
-- On ENUM reduce production simple -> UNDERSCORE
-- On END reduce production simple -> UNDERSCORE
-- On EMPTY reduce production simple -> UNDERSCORE
-- On ELSE reduce production simple -> UNDERSCORE
-- On DO reduce production simple -> UNDERSCORE
-- On DIFF reduce production simple -> UNDERSCORE
-- On DEFAULT reduce production simple -> UNDERSCORE
-- On DEBUG reduce production simple -> UNDERSCORE
-- On COMP reduce production simple -> UNDERSCORE
-- On COMMA reduce production simple -> UNDERSCORE
-- On CALL reduce production simple -> UNDERSCORE
-- On BEGIN reduce production simple -> UNDERSCORE
-- On AS reduce production simple -> UNDERSCORE
-- On AND reduce production simple -> UNDERSCORE
-- On ALT reduce production simple -> UNDERSCORE
-- On ACYCLIC reduce production simple -> UNDERSCORE

State 23:
exp -> TRY . exp WITH exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 167
-- On base shift to state 48

State 24:
simple -> TAG . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> TAG
-- On WHEN reduce production simple -> TAG
-- On VAR reduce production simple -> TAG
-- On UNSHOW reduce production simple -> TAG
-- On UNION reduce production simple -> TAG
-- On UNDERSCORE reduce production simple -> TAG
-- On THEN reduce production simple -> TAG
-- On TESTEMPTY reduce production simple -> TAG
-- On TAG reduce production simple -> TAG
-- On SUBSET reduce production simple -> TAG
-- On STAR reduce production simple -> TAG
-- On SHOW reduce production simple -> TAG
-- On SEMI reduce production simple -> TAG
-- On RPAR reduce production simple -> TAG
-- On REQUIRES reduce production simple -> TAG
-- On RBRAC reduce production simple -> TAG
-- On RACC reduce production simple -> TAG
-- On PROCEDURE reduce production simple -> TAG
-- On PLUSPLUS reduce production simple -> TAG
-- On PLUS reduce production simple -> TAG
-- On OPT reduce production simple -> TAG
-- On MATCH reduce production simple -> TAG
-- On LPAR reduce production simple -> TAG
-- On LET reduce production simple -> TAG
-- On LBRAC reduce production simple -> TAG
-- On LATEX reduce production simple -> TAG
-- On LACC reduce production simple -> TAG
-- On IRREFLEXIVE reduce production simple -> TAG
-- On INTER reduce production simple -> TAG
-- On INSTRUCTIONS reduce production simple -> TAG
-- On INCLUDE reduce production simple -> TAG
-- On IN reduce production simple -> TAG
-- On HAT reduce production simple -> TAG
-- On FORALL reduce production simple -> TAG
-- On FLAG reduce production simple -> TAG
-- On EQUAL reduce production simple -> TAG
-- On EOF reduce production simple -> TAG
-- On ENUM reduce production simple -> TAG
-- On END reduce production simple -> TAG
-- On EMPTY reduce production simple -> TAG
-- On ELSE reduce production simple -> TAG
-- On DO reduce production simple -> TAG
-- On DIFF reduce production simple -> TAG
-- On DEFAULT reduce production simple -> TAG
-- On DEBUG reduce production simple -> TAG
-- On COMP reduce production simple -> TAG
-- On COMMA reduce production simple -> TAG
-- On CALL reduce production simple -> TAG
-- On BEGIN reduce production simple -> TAG
-- On AS reduce production simple -> TAG
-- On AND reduce production simple -> TAG
-- On ALT reduce production simple -> TAG
-- On ACYCLIC reduce production simple -> TAG

State 25:
exp -> MATCH . exp WITH altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH . exp WITH altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 127
-- On base shift to state 48

State 26:
simple -> LPAR . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
simple -> LPAR . tupleargs RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
simple -> LPAR . exp RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On RPAR shift to state 27
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleargs shift to state 118
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 120
-- On base shift to state 48

State 27:
simple -> LPAR RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> LPAR RPAR
-- On WHEN reduce production simple -> LPAR RPAR
-- On VAR reduce production simple -> LPAR RPAR
-- On UNSHOW reduce production simple -> LPAR RPAR
-- On UNION reduce production simple -> LPAR RPAR
-- On UNDERSCORE reduce production simple -> LPAR RPAR
-- On THEN reduce production simple -> LPAR RPAR
-- On TESTEMPTY reduce production simple -> LPAR RPAR
-- On TAG reduce production simple -> LPAR RPAR
-- On SUBSET reduce production simple -> LPAR RPAR
-- On STAR reduce production simple -> LPAR RPAR
-- On SHOW reduce production simple -> LPAR RPAR
-- On SEMI reduce production simple -> LPAR RPAR
-- On RPAR reduce production simple -> LPAR RPAR
-- On REQUIRES reduce production simple -> LPAR RPAR
-- On RBRAC reduce production simple -> LPAR RPAR
-- On RACC reduce production simple -> LPAR RPAR
-- On PROCEDURE reduce production simple -> LPAR RPAR
-- On PLUSPLUS reduce production simple -> LPAR RPAR
-- On PLUS reduce production simple -> LPAR RPAR
-- On OPT reduce production simple -> LPAR RPAR
-- On MATCH reduce production simple -> LPAR RPAR
-- On LPAR reduce production simple -> LPAR RPAR
-- On LET reduce production simple -> LPAR RPAR
-- On LBRAC reduce production simple -> LPAR RPAR
-- On LATEX reduce production simple -> LPAR RPAR
-- On LACC reduce production simple -> LPAR RPAR
-- On IRREFLEXIVE reduce production simple -> LPAR RPAR
-- On INTER reduce production simple -> LPAR RPAR
-- On INSTRUCTIONS reduce production simple -> LPAR RPAR
-- On INCLUDE reduce production simple -> LPAR RPAR
-- On IN reduce production simple -> LPAR RPAR
-- On HAT reduce production simple -> LPAR RPAR
-- On FORALL reduce production simple -> LPAR RPAR
-- On FLAG reduce production simple -> LPAR RPAR
-- On EQUAL reduce production simple -> LPAR RPAR
-- On EOF reduce production simple -> LPAR RPAR
-- On ENUM reduce production simple -> LPAR RPAR
-- On END reduce production simple -> LPAR RPAR
-- On EMPTY reduce production simple -> LPAR RPAR
-- On ELSE reduce production simple -> LPAR RPAR
-- On DO reduce production simple -> LPAR RPAR
-- On DIFF reduce production simple -> LPAR RPAR
-- On DEFAULT reduce production simple -> LPAR RPAR
-- On DEBUG reduce production simple -> LPAR RPAR
-- On COMP reduce production simple -> LPAR RPAR
-- On COMMA reduce production simple -> LPAR RPAR
-- On CALL reduce production simple -> LPAR RPAR
-- On BEGIN reduce production simple -> LPAR RPAR
-- On AS reduce production simple -> LPAR RPAR
-- On AND reduce production simple -> LPAR RPAR
-- On ALT reduce production simple -> LPAR RPAR
-- On ACYCLIC reduce production simple -> LPAR RPAR

State 28:
exp -> LET . pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> LET . REC pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 29
-- On REC shift to state 102
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 115
-- On pat_bind shift to state 111
-- On bind shift to state 114

State 29:
bind -> VAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
pat_bind -> VAR . VAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
pat_bind -> VAR . LPAR formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 30
-- On LPAR shift to state 95
-- On EQUAL shift to state 100

State 30:
pat_bind -> VAR VAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On EQUAL shift to state 31

State 31:
pat_bind -> VAR VAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 94
-- On base shift to state 48

State 32:
simple -> LBRAC . exp RBRAC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 92
-- On base shift to state 48

State 33:
simple -> LACC . args RACC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 86
-- On base shift to state 48
-- On argsN shift to state 89
-- On args shift to state 90
-- On RACC reduce production args -> 

State 34:
exp -> IF . cond THEN exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 76
-- On cond shift to state 81
-- On base shift to state 48

State 35:
exp -> FUN . VAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> FUN . LPAR formals RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 36
-- On LPAR shift to state 67

State 36:
exp -> FUN VAR . ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On ARROW shift to state 37

State 37:
exp -> FUN VAR ARROW . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 66
-- On base shift to state 48

State 38:
simple -> EMPTY . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> EMPTY
-- On WHEN reduce production simple -> EMPTY
-- On VAR reduce production simple -> EMPTY
-- On UNSHOW reduce production simple -> EMPTY
-- On UNION reduce production simple -> EMPTY
-- On UNDERSCORE reduce production simple -> EMPTY
-- On THEN reduce production simple -> EMPTY
-- On TESTEMPTY reduce production simple -> EMPTY
-- On TAG reduce production simple -> EMPTY
-- On SUBSET reduce production simple -> EMPTY
-- On STAR reduce production simple -> EMPTY
-- On SHOW reduce production simple -> EMPTY
-- On SEMI reduce production simple -> EMPTY
-- On RPAR reduce production simple -> EMPTY
-- On REQUIRES reduce production simple -> EMPTY
-- On RBRAC reduce production simple -> EMPTY
-- On RACC reduce production simple -> EMPTY
-- On PROCEDURE reduce production simple -> EMPTY
-- On PLUSPLUS reduce production simple -> EMPTY
-- On PLUS reduce production simple -> EMPTY
-- On OPT reduce production simple -> EMPTY
-- On MATCH reduce production simple -> EMPTY
-- On LPAR reduce production simple -> EMPTY
-- On LET reduce production simple -> EMPTY
-- On LBRAC reduce production simple -> EMPTY
-- On LATEX reduce production simple -> EMPTY
-- On LACC reduce production simple -> EMPTY
-- On IRREFLEXIVE reduce production simple -> EMPTY
-- On INTER reduce production simple -> EMPTY
-- On INSTRUCTIONS reduce production simple -> EMPTY
-- On INCLUDE reduce production simple -> EMPTY
-- On IN reduce production simple -> EMPTY
-- On HAT reduce production simple -> EMPTY
-- On FORALL reduce production simple -> EMPTY
-- On FLAG reduce production simple -> EMPTY
-- On EQUAL reduce production simple -> EMPTY
-- On EOF reduce production simple -> EMPTY
-- On ENUM reduce production simple -> EMPTY
-- On END reduce production simple -> EMPTY
-- On EMPTY reduce production simple -> EMPTY
-- On ELSE reduce production simple -> EMPTY
-- On DO reduce production simple -> EMPTY
-- On DIFF reduce production simple -> EMPTY
-- On DEFAULT reduce production simple -> EMPTY
-- On DEBUG reduce production simple -> EMPTY
-- On COMP reduce production simple -> EMPTY
-- On COMMA reduce production simple -> EMPTY
-- On CALL reduce production simple -> EMPTY
-- On BEGIN reduce production simple -> EMPTY
-- On AS reduce production simple -> EMPTY
-- On AND reduce production simple -> EMPTY
-- On ALT reduce production simple -> EMPTY
-- On ACYCLIC reduce production simple -> EMPTY

State 39:
base -> COMP . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 65

State 40:
simple -> BEGIN . exp END [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 46
-- On base shift to state 48

State 41:
base -> simple . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production base -> simple
-- On WHEN reduce production base -> simple
-- On UNSHOW reduce production base -> simple
-- On UNION reduce production base -> simple
-- On THEN reduce production base -> simple
-- On TESTEMPTY reduce production base -> simple
-- On SUBSET reduce production base -> simple
-- On STAR reduce production base -> simple
-- On SHOW reduce production base -> simple
-- On SEMI reduce production base -> simple
-- On RPAR reduce production base -> simple
-- On REQUIRES reduce production base -> simple
-- On RBRAC reduce production base -> simple
-- On RACC reduce production base -> simple
-- On PROCEDURE reduce production base -> simple
-- On PLUSPLUS reduce production base -> simple
-- On PLUS reduce production base -> simple
-- On OPT reduce production base -> simple
-- On MATCH reduce production base -> simple
-- On LET reduce production base -> simple
-- On LATEX reduce production base -> simple
-- On IRREFLEXIVE reduce production base -> simple
-- On INTER reduce production base -> simple
-- On INSTRUCTIONS reduce production base -> simple
-- On INCLUDE reduce production base -> simple
-- On IN reduce production base -> simple
-- On HAT reduce production base -> simple
-- On FORALL reduce production base -> simple
-- On FLAG reduce production base -> simple
-- On EQUAL reduce production base -> simple
-- On EOF reduce production base -> simple
-- On ENUM reduce production base -> simple
-- On END reduce production base -> simple
-- On ELSE reduce production base -> simple
-- On DO reduce production base -> simple
-- On DIFF reduce production base -> simple
-- On DEFAULT reduce production base -> simple
-- On DEBUG reduce production base -> simple
-- On COMP reduce production base -> simple
-- On COMMA reduce production base -> simple
-- On CALL reduce production base -> simple
-- On AS reduce production base -> simple
-- On AND reduce production base -> simple
-- On ALT reduce production base -> simple
-- On ACYCLIC reduce production base -> simple

State 42:
base -> exp0 . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp0 -> exp0 . arg [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On VAR shift to state 43
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 44
-- On arg shift to state 45
-- On WITH reduce production base -> exp0
-- On WHEN reduce production base -> exp0
-- On UNSHOW reduce production base -> exp0
-- On UNION reduce production base -> exp0
-- On THEN reduce production base -> exp0
-- On TESTEMPTY reduce production base -> exp0
-- On SUBSET reduce production base -> exp0
-- On STAR reduce production base -> exp0
-- On SHOW reduce production base -> exp0
-- On SEMI reduce production base -> exp0
-- On RPAR reduce production base -> exp0
-- On REQUIRES reduce production base -> exp0
-- On RBRAC reduce production base -> exp0
-- On RACC reduce production base -> exp0
-- On PROCEDURE reduce production base -> exp0
-- On PLUSPLUS reduce production base -> exp0
-- On PLUS reduce production base -> exp0
-- On OPT reduce production base -> exp0
-- On MATCH reduce production base -> exp0
-- On LET reduce production base -> exp0
-- On LATEX reduce production base -> exp0
-- On IRREFLEXIVE reduce production base -> exp0
-- On INTER reduce production base -> exp0
-- On INSTRUCTIONS reduce production base -> exp0
-- On INCLUDE reduce production base -> exp0
-- On IN reduce production base -> exp0
-- On HAT reduce production base -> exp0
-- On FORALL reduce production base -> exp0
-- On FLAG reduce production base -> exp0
-- On EQUAL reduce production base -> exp0
-- On EOF reduce production base -> exp0
-- On ENUM reduce production base -> exp0
-- On END reduce production base -> exp0
-- On ELSE reduce production base -> exp0
-- On DO reduce production base -> exp0
-- On DIFF reduce production base -> exp0
-- On DEFAULT reduce production base -> exp0
-- On DEBUG reduce production base -> exp0
-- On COMP reduce production base -> exp0
-- On COMMA reduce production base -> exp0
-- On CALL reduce production base -> exp0
-- On AS reduce production base -> exp0
-- On AND reduce production base -> exp0
-- On ALT reduce production base -> exp0
-- On ACYCLIC reduce production base -> exp0

State 43:
arg -> VAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production arg -> VAR
-- On WHEN reduce production arg -> VAR
-- On VAR reduce production arg -> VAR
-- On UNSHOW reduce production arg -> VAR
-- On UNION reduce production arg -> VAR
-- On UNDERSCORE reduce production arg -> VAR
-- On THEN reduce production arg -> VAR
-- On TESTEMPTY reduce production arg -> VAR
-- On TAG reduce production arg -> VAR
-- On SUBSET reduce production arg -> VAR
-- On STAR reduce production arg -> VAR
-- On SHOW reduce production arg -> VAR
-- On SEMI reduce production arg -> VAR
-- On RPAR reduce production arg -> VAR
-- On REQUIRES reduce production arg -> VAR
-- On RBRAC reduce production arg -> VAR
-- On RACC reduce production arg -> VAR
-- On PROCEDURE reduce production arg -> VAR
-- On PLUSPLUS reduce production arg -> VAR
-- On PLUS reduce production arg -> VAR
-- On OPT reduce production arg -> VAR
-- On MATCH reduce production arg -> VAR
-- On LPAR reduce production arg -> VAR
-- On LET reduce production arg -> VAR
-- On LBRAC reduce production arg -> VAR
-- On LATEX reduce production arg -> VAR
-- On LACC reduce production arg -> VAR
-- On IRREFLEXIVE reduce production arg -> VAR
-- On INTER reduce production arg -> VAR
-- On INSTRUCTIONS reduce production arg -> VAR
-- On INCLUDE reduce production arg -> VAR
-- On IN reduce production arg -> VAR
-- On HAT reduce production arg -> VAR
-- On FORALL reduce production arg -> VAR
-- On FLAG reduce production arg -> VAR
-- On EQUAL reduce production arg -> VAR
-- On EOF reduce production arg -> VAR
-- On ENUM reduce production arg -> VAR
-- On END reduce production arg -> VAR
-- On EMPTY reduce production arg -> VAR
-- On ELSE reduce production arg -> VAR
-- On DO reduce production arg -> VAR
-- On DIFF reduce production arg -> VAR
-- On DEFAULT reduce production arg -> VAR
-- On DEBUG reduce production arg -> VAR
-- On COMP reduce production arg -> VAR
-- On COMMA reduce production arg -> VAR
-- On CALL reduce production arg -> VAR
-- On BEGIN reduce production arg -> VAR
-- On AS reduce production arg -> VAR
-- On AND reduce production arg -> VAR
-- On ALT reduce production arg -> VAR
-- On ACYCLIC reduce production arg -> VAR

State 44:
arg -> simple . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production arg -> simple
-- On WHEN reduce production arg -> simple
-- On VAR reduce production arg -> simple
-- On UNSHOW reduce production arg -> simple
-- On UNION reduce production arg -> simple
-- On UNDERSCORE reduce production arg -> simple
-- On THEN reduce production arg -> simple
-- On TESTEMPTY reduce production arg -> simple
-- On TAG reduce production arg -> simple
-- On SUBSET reduce production arg -> simple
-- On STAR reduce production arg -> simple
-- On SHOW reduce production arg -> simple
-- On SEMI reduce production arg -> simple
-- On RPAR reduce production arg -> simple
-- On REQUIRES reduce production arg -> simple
-- On RBRAC reduce production arg -> simple
-- On RACC reduce production arg -> simple
-- On PROCEDURE reduce production arg -> simple
-- On PLUSPLUS reduce production arg -> simple
-- On PLUS reduce production arg -> simple
-- On OPT reduce production arg -> simple
-- On MATCH reduce production arg -> simple
-- On LPAR reduce production arg -> simple
-- On LET reduce production arg -> simple
-- On LBRAC reduce production arg -> simple
-- On LATEX reduce production arg -> simple
-- On LACC reduce production arg -> simple
-- On IRREFLEXIVE reduce production arg -> simple
-- On INTER reduce production arg -> simple
-- On INSTRUCTIONS reduce production arg -> simple
-- On INCLUDE reduce production arg -> simple
-- On IN reduce production arg -> simple
-- On HAT reduce production arg -> simple
-- On FORALL reduce production arg -> simple
-- On FLAG reduce production arg -> simple
-- On EQUAL reduce production arg -> simple
-- On EOF reduce production arg -> simple
-- On ENUM reduce production arg -> simple
-- On END reduce production arg -> simple
-- On EMPTY reduce production arg -> simple
-- On ELSE reduce production arg -> simple
-- On DO reduce production arg -> simple
-- On DIFF reduce production arg -> simple
-- On DEFAULT reduce production arg -> simple
-- On DEBUG reduce production arg -> simple
-- On COMP reduce production arg -> simple
-- On COMMA reduce production arg -> simple
-- On CALL reduce production arg -> simple
-- On BEGIN reduce production arg -> simple
-- On AS reduce production arg -> simple
-- On AND reduce production arg -> simple
-- On ALT reduce production arg -> simple
-- On ACYCLIC reduce production arg -> simple

State 45:
exp0 -> exp0 arg . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production exp0 -> exp0 arg
-- On WHEN reduce production exp0 -> exp0 arg
-- On VAR reduce production exp0 -> exp0 arg
-- On UNSHOW reduce production exp0 -> exp0 arg
-- On UNION reduce production exp0 -> exp0 arg
-- On UNDERSCORE reduce production exp0 -> exp0 arg
-- On THEN reduce production exp0 -> exp0 arg
-- On TESTEMPTY reduce production exp0 -> exp0 arg
-- On TAG reduce production exp0 -> exp0 arg
-- On SUBSET reduce production exp0 -> exp0 arg
-- On STAR reduce production exp0 -> exp0 arg
-- On SHOW reduce production exp0 -> exp0 arg
-- On SEMI reduce production exp0 -> exp0 arg
-- On RPAR reduce production exp0 -> exp0 arg
-- On REQUIRES reduce production exp0 -> exp0 arg
-- On RBRAC reduce production exp0 -> exp0 arg
-- On RACC reduce production exp0 -> exp0 arg
-- On PROCEDURE reduce production exp0 -> exp0 arg
-- On PLUSPLUS reduce production exp0 -> exp0 arg
-- On PLUS reduce production exp0 -> exp0 arg
-- On OPT reduce production exp0 -> exp0 arg
-- On MATCH reduce production exp0 -> exp0 arg
-- On LPAR reduce production exp0 -> exp0 arg
-- On LET reduce production exp0 -> exp0 arg
-- On LBRAC reduce production exp0 -> exp0 arg
-- On LATEX reduce production exp0 -> exp0 arg
-- On LACC reduce production exp0 -> exp0 arg
-- On IRREFLEXIVE reduce production exp0 -> exp0 arg
-- On INTER reduce production exp0 -> exp0 arg
-- On INSTRUCTIONS reduce production exp0 -> exp0 arg
-- On INCLUDE reduce production exp0 -> exp0 arg
-- On IN reduce production exp0 -> exp0 arg
-- On HAT reduce production exp0 -> exp0 arg
-- On FORALL reduce production exp0 -> exp0 arg
-- On FLAG reduce production exp0 -> exp0 arg
-- On EQUAL reduce production exp0 -> exp0 arg
-- On EOF reduce production exp0 -> exp0 arg
-- On ENUM reduce production exp0 -> exp0 arg
-- On END reduce production exp0 -> exp0 arg
-- On EMPTY reduce production exp0 -> exp0 arg
-- On ELSE reduce production exp0 -> exp0 arg
-- On DO reduce production exp0 -> exp0 arg
-- On DIFF reduce production exp0 -> exp0 arg
-- On DEFAULT reduce production exp0 -> exp0 arg
-- On DEBUG reduce production exp0 -> exp0 arg
-- On COMP reduce production exp0 -> exp0 arg
-- On COMMA reduce production exp0 -> exp0 arg
-- On CALL reduce production exp0 -> exp0 arg
-- On BEGIN reduce production exp0 -> exp0 arg
-- On AS reduce production exp0 -> exp0 arg
-- On AND reduce production exp0 -> exp0 arg
-- On ALT reduce production exp0 -> exp0 arg
-- On ACYCLIC reduce production exp0 -> exp0 arg

State 46:
simple -> BEGIN exp . END [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On END shift to state 47

State 47:
simple -> BEGIN exp END . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> BEGIN exp END
-- On WHEN reduce production simple -> BEGIN exp END
-- On VAR reduce production simple -> BEGIN exp END
-- On UNSHOW reduce production simple -> BEGIN exp END
-- On UNION reduce production simple -> BEGIN exp END
-- On UNDERSCORE reduce production simple -> BEGIN exp END
-- On THEN reduce production simple -> BEGIN exp END
-- On TESTEMPTY reduce production simple -> BEGIN exp END
-- On TAG reduce production simple -> BEGIN exp END
-- On SUBSET reduce production simple -> BEGIN exp END
-- On STAR reduce production simple -> BEGIN exp END
-- On SHOW reduce production simple -> BEGIN exp END
-- On SEMI reduce production simple -> BEGIN exp END
-- On RPAR reduce production simple -> BEGIN exp END
-- On REQUIRES reduce production simple -> BEGIN exp END
-- On RBRAC reduce production simple -> BEGIN exp END
-- On RACC reduce production simple -> BEGIN exp END
-- On PROCEDURE reduce production simple -> BEGIN exp END
-- On PLUSPLUS reduce production simple -> BEGIN exp END
-- On PLUS reduce production simple -> BEGIN exp END
-- On OPT reduce production simple -> BEGIN exp END
-- On MATCH reduce production simple -> BEGIN exp END
-- On LPAR reduce production simple -> BEGIN exp END
-- On LET reduce production simple -> BEGIN exp END
-- On LBRAC reduce production simple -> BEGIN exp END
-- On LATEX reduce production simple -> BEGIN exp END
-- On LACC reduce production simple -> BEGIN exp END
-- On IRREFLEXIVE reduce production simple -> BEGIN exp END
-- On INTER reduce production simple -> BEGIN exp END
-- On INSTRUCTIONS reduce production simple -> BEGIN exp END
-- On INCLUDE reduce production simple -> BEGIN exp END
-- On IN reduce production simple -> BEGIN exp END
-- On HAT reduce production simple -> BEGIN exp END
-- On FORALL reduce production simple -> BEGIN exp END
-- On FLAG reduce production simple -> BEGIN exp END
-- On EQUAL reduce production simple -> BEGIN exp END
-- On EOF reduce production simple -> BEGIN exp END
-- On ENUM reduce production simple -> BEGIN exp END
-- On END reduce production simple -> BEGIN exp END
-- On EMPTY reduce production simple -> BEGIN exp END
-- On ELSE reduce production simple -> BEGIN exp END
-- On DO reduce production simple -> BEGIN exp END
-- On DIFF reduce production simple -> BEGIN exp END
-- On DEFAULT reduce production simple -> BEGIN exp END
-- On DEBUG reduce production simple -> BEGIN exp END
-- On COMP reduce production simple -> BEGIN exp END
-- On COMMA reduce production simple -> BEGIN exp END
-- On CALL reduce production simple -> BEGIN exp END
-- On BEGIN reduce production simple -> BEGIN exp END
-- On AS reduce production simple -> BEGIN exp END
-- On AND reduce production simple -> BEGIN exp END
-- On ALT reduce production simple -> BEGIN exp END
-- On ACYCLIC reduce production simple -> BEGIN exp END

State 48:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> base . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On UNION shift to state 49
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
-- On WITH reduce production exp -> base
-- On WHEN reduce production exp -> base
-- On UNSHOW reduce production exp -> base
-- On THEN reduce production exp -> base
-- On TESTEMPTY reduce production exp -> base
-- On SUBSET reduce production exp -> base
-- On SHOW reduce production exp -> base
-- On RPAR reduce production exp -> base
-- On REQUIRES reduce production exp -> base
-- On RBRAC reduce production exp -> base
-- On RACC reduce production exp -> base
-- On PROCEDURE reduce production exp -> base
-- On MATCH reduce production exp -> base
-- On LET reduce production exp -> base
-- On LATEX reduce production exp -> base
-- On IRREFLEXIVE reduce production exp -> base
-- On INSTRUCTIONS reduce production exp -> base
-- On INCLUDE reduce production exp -> base
-- On IN reduce production exp -> base
-- On FORALL reduce production exp -> base
-- On FLAG reduce production exp -> base
-- On EQUAL reduce production exp -> base
-- On EOF reduce production exp -> base
-- On ENUM reduce production exp -> base
-- On END reduce production exp -> base
-- On ELSE reduce production exp -> base
-- On DO reduce production exp -> base
-- On DEFAULT reduce production exp -> base
-- On DEBUG reduce production exp -> base
-- On COMP reduce production exp -> base
-- On COMMA reduce production exp -> base
-- On CALL reduce production exp -> base
-- On AS reduce production exp -> base
-- On AND reduce production exp -> base
-- On ALT reduce production exp -> base
-- On ACYCLIC reduce production exp -> base

State 49:
base -> base UNION . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 50

State 50:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base UNION base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On UNION shift to state 49
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
-- On WITH reduce production base -> base UNION base
-- On WHEN reduce production base -> base UNION base
-- On UNSHOW reduce production base -> base UNION base
-- On THEN reduce production base -> base UNION base
-- On TESTEMPTY reduce production base -> base UNION base
-- On SUBSET reduce production base -> base UNION base
-- On SHOW reduce production base -> base UNION base
-- On RPAR reduce production base -> base UNION base
-- On REQUIRES reduce production base -> base UNION base
-- On RBRAC reduce production base -> base UNION base
-- On RACC reduce production base -> base UNION base
-- On PROCEDURE reduce production base -> base UNION base
-- On MATCH reduce production base -> base UNION base
-- On LET reduce production base -> base UNION base
-- On LATEX reduce production base -> base UNION base
-- On IRREFLEXIVE reduce production base -> base UNION base
-- On INSTRUCTIONS reduce production base -> base UNION base
-- On INCLUDE reduce production base -> base UNION base
-- On IN reduce production base -> base UNION base
-- On FORALL reduce production base -> base UNION base
-- On FLAG reduce production base -> base UNION base
-- On EQUAL reduce production base -> base UNION base
-- On EOF reduce production base -> base UNION base
-- On ENUM reduce production base -> base UNION base
-- On END reduce production base -> base UNION base
-- On ELSE reduce production base -> base UNION base
-- On DO reduce production base -> base UNION base
-- On DEFAULT reduce production base -> base UNION base
-- On DEBUG reduce production base -> base UNION base
-- On COMP reduce production base -> base UNION base
-- On COMMA reduce production base -> base UNION base
-- On CALL reduce production base -> base UNION base
-- On AS reduce production base -> base UNION base
-- On AND reduce production base -> base UNION base
-- On ALT reduce production base -> base UNION base
-- On ACYCLIC reduce production base -> base UNION base

State 51:
base -> base STAR . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base STAR . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 52
-- On WITH reduce production base -> base STAR
-- On WHEN reduce production base -> base STAR
-- On UNSHOW reduce production base -> base STAR
-- On UNION reduce production base -> base STAR
-- On THEN reduce production base -> base STAR
-- On TESTEMPTY reduce production base -> base STAR
-- On SUBSET reduce production base -> base STAR
-- On STAR reduce production base -> base STAR
-- On SHOW reduce production base -> base STAR
-- On SEMI reduce production base -> base STAR
-- On RPAR reduce production base -> base STAR
-- On REQUIRES reduce production base -> base STAR
-- On RBRAC reduce production base -> base STAR
-- On RACC reduce production base -> base STAR
-- On PROCEDURE reduce production base -> base STAR
-- On PLUSPLUS reduce production base -> base STAR
-- On PLUS reduce production base -> base STAR
-- On OPT reduce production base -> base STAR
-- On MATCH reduce production base -> base STAR
-- On LET reduce production base -> base STAR
-- On LATEX reduce production base -> base STAR
-- On IRREFLEXIVE reduce production base -> base STAR
-- On INTER reduce production base -> base STAR
-- On INSTRUCTIONS reduce production base -> base STAR
-- On INCLUDE reduce production base -> base STAR
-- On IN reduce production base -> base STAR
-- On HAT reduce production base -> base STAR
-- On FORALL reduce production base -> base STAR
-- On FLAG reduce production base -> base STAR
-- On EQUAL reduce production base -> base STAR
-- On EOF reduce production base -> base STAR
-- On ENUM reduce production base -> base STAR
-- On END reduce production base -> base STAR
-- On ELSE reduce production base -> base STAR
-- On DO reduce production base -> base STAR
-- On DIFF reduce production base -> base STAR
-- On DEFAULT reduce production base -> base STAR
-- On DEBUG reduce production base -> base STAR
-- On COMMA reduce production base -> base STAR
-- On CALL reduce production base -> base STAR
-- On AS reduce production base -> base STAR
-- On AND reduce production base -> base STAR
-- On ALT reduce production base -> base STAR
-- On ACYCLIC reduce production base -> base STAR

State 52:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base STAR base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On HAT shift to state 53
-- On WITH reduce production base -> base STAR base
-- On WHEN reduce production base -> base STAR base
-- On UNSHOW reduce production base -> base STAR base
-- On UNION reduce production base -> base STAR base
-- On THEN reduce production base -> base STAR base
-- On TESTEMPTY reduce production base -> base STAR base
-- On SUBSET reduce production base -> base STAR base
-- On SHOW reduce production base -> base STAR base
-- On SEMI reduce production base -> base STAR base
-- On RPAR reduce production base -> base STAR base
-- On REQUIRES reduce production base -> base STAR base
-- On RBRAC reduce production base -> base STAR base
-- On RACC reduce production base -> base STAR base
-- On PROCEDURE reduce production base -> base STAR base
-- On PLUSPLUS reduce production base -> base STAR base
-- On MATCH reduce production base -> base STAR base
-- On LET reduce production base -> base STAR base
-- On LATEX reduce production base -> base STAR base
-- On IRREFLEXIVE reduce production base -> base STAR base
-- On INTER reduce production base -> base STAR base
-- On INSTRUCTIONS reduce production base -> base STAR base
-- On INCLUDE reduce production base -> base STAR base
-- On IN reduce production base -> base STAR base
-- On FORALL reduce production base -> base STAR base
-- On FLAG reduce production base -> base STAR base
-- On EQUAL reduce production base -> base STAR base
-- On EOF reduce production base -> base STAR base
-- On ENUM reduce production base -> base STAR base
-- On END reduce production base -> base STAR base
-- On ELSE reduce production base -> base STAR base
-- On DO reduce production base -> base STAR base
-- On DIFF reduce production base -> base STAR base
-- On DEFAULT reduce production base -> base STAR base
-- On DEBUG reduce production base -> base STAR base
-- On COMP reduce production base -> base STAR base
-- On COMMA reduce production base -> base STAR base
-- On CALL reduce production base -> base STAR base
-- On AS reduce production base -> base STAR base
-- On AND reduce production base -> base STAR base
-- On ALT reduce production base -> base STAR base
-- On ACYCLIC reduce production base -> base STAR base

State 53:
base -> base HAT . INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On INV shift to state 54

State 54:
base -> base HAT INV . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production base -> base HAT INV
-- On WHEN reduce production base -> base HAT INV
-- On UNSHOW reduce production base -> base HAT INV
-- On UNION reduce production base -> base HAT INV
-- On THEN reduce production base -> base HAT INV
-- On TESTEMPTY reduce production base -> base HAT INV
-- On SUBSET reduce production base -> base HAT INV
-- On STAR reduce production base -> base HAT INV
-- On SHOW reduce production base -> base HAT INV
-- On SEMI reduce production base -> base HAT INV
-- On RPAR reduce production base -> base HAT INV
-- On REQUIRES reduce production base -> base HAT INV
-- On RBRAC reduce production base -> base HAT INV
-- On RACC reduce production base -> base HAT INV
-- On PROCEDURE reduce production base -> base HAT INV
-- On PLUSPLUS reduce production base -> base HAT INV
-- On PLUS reduce production base -> base HAT INV
-- On OPT reduce production base -> base HAT INV
-- On MATCH reduce production base -> base HAT INV
-- On LET reduce production base -> base HAT INV
-- On LATEX reduce production base -> base HAT INV
-- On IRREFLEXIVE reduce production base -> base HAT INV
-- On INTER reduce production base -> base HAT INV
-- On INSTRUCTIONS reduce production base -> base HAT INV
-- On INCLUDE reduce production base -> base HAT INV
-- On IN reduce production base -> base HAT INV
-- On HAT reduce production base -> base HAT INV
-- On FORALL reduce production base -> base HAT INV
-- On FLAG reduce production base -> base HAT INV
-- On EQUAL reduce production base -> base HAT INV
-- On EOF reduce production base -> base HAT INV
-- On ENUM reduce production base -> base HAT INV
-- On END reduce production base -> base HAT INV
-- On ELSE reduce production base -> base HAT INV
-- On DO reduce production base -> base HAT INV
-- On DIFF reduce production base -> base HAT INV
-- On DEFAULT reduce production base -> base HAT INV
-- On DEBUG reduce production base -> base HAT INV
-- On COMP reduce production base -> base HAT INV
-- On COMMA reduce production base -> base HAT INV
-- On CALL reduce production base -> base HAT INV
-- On AS reduce production base -> base HAT INV
-- On AND reduce production base -> base HAT INV
-- On ALT reduce production base -> base HAT INV
-- On ACYCLIC reduce production base -> base HAT INV

State 55:
base -> base SEMI . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 56

State 56:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base SEMI base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
-- On WITH reduce production base -> base SEMI base
-- On WHEN reduce production base -> base SEMI base
-- On UNSHOW reduce production base -> base SEMI base
-- On UNION reduce production base -> base SEMI base
-- On THEN reduce production base -> base SEMI base
-- On TESTEMPTY reduce production base -> base SEMI base
-- On SUBSET reduce production base -> base SEMI base
-- On SHOW reduce production base -> base SEMI base
-- On RPAR reduce production base -> base SEMI base
-- On REQUIRES reduce production base -> base SEMI base
-- On RBRAC reduce production base -> base SEMI base
-- On RACC reduce production base -> base SEMI base
-- On PROCEDURE reduce production base -> base SEMI base
-- On PLUSPLUS reduce production base -> base SEMI base
-- On MATCH reduce production base -> base SEMI base
-- On LET reduce production base -> base SEMI base
-- On LATEX reduce production base -> base SEMI base
-- On IRREFLEXIVE reduce production base -> base SEMI base
-- On INSTRUCTIONS reduce production base -> base SEMI base
-- On INCLUDE reduce production base -> base SEMI base
-- On IN reduce production base -> base SEMI base
-- On FORALL reduce production base -> base SEMI base
-- On FLAG reduce production base -> base SEMI base
-- On EQUAL reduce production base -> base SEMI base
-- On EOF reduce production base -> base SEMI base
-- On ENUM reduce production base -> base SEMI base
-- On END reduce production base -> base SEMI base
-- On ELSE reduce production base -> base SEMI base
-- On DO reduce production base -> base SEMI base
-- On DEFAULT reduce production base -> base SEMI base
-- On DEBUG reduce production base -> base SEMI base
-- On COMP reduce production base -> base SEMI base
-- On COMMA reduce production base -> base SEMI base
-- On CALL reduce production base -> base SEMI base
-- On AS reduce production base -> base SEMI base
-- On AND reduce production base -> base SEMI base
-- On ALT reduce production base -> base SEMI base
-- On ACYCLIC reduce production base -> base SEMI base

State 57:
base -> base PLUS . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production base -> base PLUS
-- On WHEN reduce production base -> base PLUS
-- On UNSHOW reduce production base -> base PLUS
-- On UNION reduce production base -> base PLUS
-- On THEN reduce production base -> base PLUS
-- On TESTEMPTY reduce production base -> base PLUS
-- On SUBSET reduce production base -> base PLUS
-- On STAR reduce production base -> base PLUS
-- On SHOW reduce production base -> base PLUS
-- On SEMI reduce production base -> base PLUS
-- On RPAR reduce production base -> base PLUS
-- On REQUIRES reduce production base -> base PLUS
-- On RBRAC reduce production base -> base PLUS
-- On RACC reduce production base -> base PLUS
-- On PROCEDURE reduce production base -> base PLUS
-- On PLUSPLUS reduce production base -> base PLUS
-- On PLUS reduce production base -> base PLUS
-- On OPT reduce production base -> base PLUS
-- On MATCH reduce production base -> base PLUS
-- On LET reduce production base -> base PLUS
-- On LATEX reduce production base -> base PLUS
-- On IRREFLEXIVE reduce production base -> base PLUS
-- On INTER reduce production base -> base PLUS
-- On INSTRUCTIONS reduce production base -> base PLUS
-- On INCLUDE reduce production base -> base PLUS
-- On IN reduce production base -> base PLUS
-- On HAT reduce production base -> base PLUS
-- On FORALL reduce production base -> base PLUS
-- On FLAG reduce production base -> base PLUS
-- On EQUAL reduce production base -> base PLUS
-- On EOF reduce production base -> base PLUS
-- On ENUM reduce production base -> base PLUS
-- On END reduce production base -> base PLUS
-- On ELSE reduce production base -> base PLUS
-- On DO reduce production base -> base PLUS
-- On DIFF reduce production base -> base PLUS
-- On DEFAULT reduce production base -> base PLUS
-- On DEBUG reduce production base -> base PLUS
-- On COMP reduce production base -> base PLUS
-- On COMMA reduce production base -> base PLUS
-- On CALL reduce production base -> base PLUS
-- On AS reduce production base -> base PLUS
-- On AND reduce production base -> base PLUS
-- On ALT reduce production base -> base PLUS
-- On ACYCLIC reduce production base -> base PLUS

State 58:
base -> base OPT . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production base -> base OPT
-- On WHEN reduce production base -> base OPT
-- On UNSHOW reduce production base -> base OPT
-- On UNION reduce production base -> base OPT
-- On THEN reduce production base -> base OPT
-- On TESTEMPTY reduce production base -> base OPT
-- On SUBSET reduce production base -> base OPT
-- On STAR reduce production base -> base OPT
-- On SHOW reduce production base -> base OPT
-- On SEMI reduce production base -> base OPT
-- On RPAR reduce production base -> base OPT
-- On REQUIRES reduce production base -> base OPT
-- On RBRAC reduce production base -> base OPT
-- On RACC reduce production base -> base OPT
-- On PROCEDURE reduce production base -> base OPT
-- On PLUSPLUS reduce production base -> base OPT
-- On PLUS reduce production base -> base OPT
-- On OPT reduce production base -> base OPT
-- On MATCH reduce production base -> base OPT
-- On LET reduce production base -> base OPT
-- On LATEX reduce production base -> base OPT
-- On IRREFLEXIVE reduce production base -> base OPT
-- On INTER reduce production base -> base OPT
-- On INSTRUCTIONS reduce production base -> base OPT
-- On INCLUDE reduce production base -> base OPT
-- On IN reduce production base -> base OPT
-- On HAT reduce production base -> base OPT
-- On FORALL reduce production base -> base OPT
-- On FLAG reduce production base -> base OPT
-- On EQUAL reduce production base -> base OPT
-- On EOF reduce production base -> base OPT
-- On ENUM reduce production base -> base OPT
-- On END reduce production base -> base OPT
-- On ELSE reduce production base -> base OPT
-- On DO reduce production base -> base OPT
-- On DIFF reduce production base -> base OPT
-- On DEFAULT reduce production base -> base OPT
-- On DEBUG reduce production base -> base OPT
-- On COMP reduce production base -> base OPT
-- On COMMA reduce production base -> base OPT
-- On CALL reduce production base -> base OPT
-- On AS reduce production base -> base OPT
-- On AND reduce production base -> base OPT
-- On ALT reduce production base -> base OPT
-- On ACYCLIC reduce production base -> base OPT

State 59:
base -> base INTER . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 60

State 60:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base INTER base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On STAR shift to state 51
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On WITH reduce production base -> base INTER base
-- On WHEN reduce production base -> base INTER base
-- On UNSHOW reduce production base -> base INTER base
-- On UNION reduce production base -> base INTER base
-- On THEN reduce production base -> base INTER base
-- On TESTEMPTY reduce production base -> base INTER base
-- On SUBSET reduce production base -> base INTER base
-- On SHOW reduce production base -> base INTER base
-- On SEMI reduce production base -> base INTER base
-- On RPAR reduce production base -> base INTER base
-- On REQUIRES reduce production base -> base INTER base
-- On RBRAC reduce production base -> base INTER base
-- On RACC reduce production base -> base INTER base
-- On PROCEDURE reduce production base -> base INTER base
-- On PLUSPLUS reduce production base -> base INTER base
-- On MATCH reduce production base -> base INTER base
-- On LET reduce production base -> base INTER base
-- On LATEX reduce production base -> base INTER base
-- On IRREFLEXIVE reduce production base -> base INTER base
-- On INSTRUCTIONS reduce production base -> base INTER base
-- On INCLUDE reduce production base -> base INTER base
-- On IN reduce production base -> base INTER base
-- On FORALL reduce production base -> base INTER base
-- On FLAG reduce production base -> base INTER base
-- On EQUAL reduce production base -> base INTER base
-- On EOF reduce production base -> base INTER base
-- On ENUM reduce production base -> base INTER base
-- On END reduce production base -> base INTER base
-- On ELSE reduce production base -> base INTER base
-- On DO reduce production base -> base INTER base
-- On DIFF reduce production base -> base INTER base
-- On DEFAULT reduce production base -> base INTER base
-- On DEBUG reduce production base -> base INTER base
-- On COMP reduce production base -> base INTER base
-- On COMMA reduce production base -> base INTER base
-- On CALL reduce production base -> base INTER base
-- On AS reduce production base -> base INTER base
-- On AND reduce production base -> base INTER base
-- On ALT reduce production base -> base INTER base
-- On ACYCLIC reduce production base -> base INTER base

State 61:
base -> base DIFF . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 62

State 62:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base DIFF base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On STAR shift to state 51
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On WITH reduce production base -> base DIFF base
-- On WHEN reduce production base -> base DIFF base
-- On UNSHOW reduce production base -> base DIFF base
-- On UNION reduce production base -> base DIFF base
-- On THEN reduce production base -> base DIFF base
-- On TESTEMPTY reduce production base -> base DIFF base
-- On SUBSET reduce production base -> base DIFF base
-- On SHOW reduce production base -> base DIFF base
-- On SEMI reduce production base -> base DIFF base
-- On RPAR reduce production base -> base DIFF base
-- On REQUIRES reduce production base -> base DIFF base
-- On RBRAC reduce production base -> base DIFF base
-- On RACC reduce production base -> base DIFF base
-- On PROCEDURE reduce production base -> base DIFF base
-- On PLUSPLUS reduce production base -> base DIFF base
-- On MATCH reduce production base -> base DIFF base
-- On LET reduce production base -> base DIFF base
-- On LATEX reduce production base -> base DIFF base
-- On IRREFLEXIVE reduce production base -> base DIFF base
-- On INSTRUCTIONS reduce production base -> base DIFF base
-- On INCLUDE reduce production base -> base DIFF base
-- On IN reduce production base -> base DIFF base
-- On FORALL reduce production base -> base DIFF base
-- On FLAG reduce production base -> base DIFF base
-- On EQUAL reduce production base -> base DIFF base
-- On EOF reduce production base -> base DIFF base
-- On ENUM reduce production base -> base DIFF base
-- On END reduce production base -> base DIFF base
-- On ELSE reduce production base -> base DIFF base
-- On DO reduce production base -> base DIFF base
-- On DIFF reduce production base -> base DIFF base
-- On DEFAULT reduce production base -> base DIFF base
-- On DEBUG reduce production base -> base DIFF base
-- On COMP reduce production base -> base DIFF base
-- On COMMA reduce production base -> base DIFF base
-- On CALL reduce production base -> base DIFF base
-- On AS reduce production base -> base DIFF base
-- On AND reduce production base -> base DIFF base
-- On ALT reduce production base -> base DIFF base
-- On ACYCLIC reduce production base -> base DIFF base

State 63:
base -> base PLUSPLUS . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 64

State 64:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base PLUSPLUS base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
-- On WITH reduce production base -> base PLUSPLUS base
-- On WHEN reduce production base -> base PLUSPLUS base
-- On UNSHOW reduce production base -> base PLUSPLUS base
-- On UNION reduce production base -> base PLUSPLUS base
-- On THEN reduce production base -> base PLUSPLUS base
-- On TESTEMPTY reduce production base -> base PLUSPLUS base
-- On SUBSET reduce production base -> base PLUSPLUS base
-- On SHOW reduce production base -> base PLUSPLUS base
-- On RPAR reduce production base -> base PLUSPLUS base
-- On REQUIRES reduce production base -> base PLUSPLUS base
-- On RBRAC reduce production base -> base PLUSPLUS base
-- On RACC reduce production base -> base PLUSPLUS base
-- On PROCEDURE reduce production base -> base PLUSPLUS base
-- On MATCH reduce production base -> base PLUSPLUS base
-- On LET reduce production base -> base PLUSPLUS base
-- On LATEX reduce production base -> base PLUSPLUS base
-- On IRREFLEXIVE reduce production base -> base PLUSPLUS base
-- On INSTRUCTIONS reduce production base -> base PLUSPLUS base
-- On INCLUDE reduce production base -> base PLUSPLUS base
-- On IN reduce production base -> base PLUSPLUS base
-- On FORALL reduce production base -> base PLUSPLUS base
-- On FLAG reduce production base -> base PLUSPLUS base
-- On EQUAL reduce production base -> base PLUSPLUS base
-- On EOF reduce production base -> base PLUSPLUS base
-- On ENUM reduce production base -> base PLUSPLUS base
-- On END reduce production base -> base PLUSPLUS base
-- On ELSE reduce production base -> base PLUSPLUS base
-- On DO reduce production base -> base PLUSPLUS base
-- On DEFAULT reduce production base -> base PLUSPLUS base
-- On DEBUG reduce production base -> base PLUSPLUS base
-- On COMP reduce production base -> base PLUSPLUS base
-- On COMMA reduce production base -> base PLUSPLUS base
-- On CALL reduce production base -> base PLUSPLUS base
-- On AS reduce production base -> base PLUSPLUS base
-- On AND reduce production base -> base PLUSPLUS base
-- On ALT reduce production base -> base PLUSPLUS base
-- On ACYCLIC reduce production base -> base PLUSPLUS base

State 65:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> COMP base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On HAT shift to state 53
-- On WITH reduce production base -> COMP base
-- On WHEN reduce production base -> COMP base
-- On UNSHOW reduce production base -> COMP base
-- On UNION reduce production base -> COMP base
-- On THEN reduce production base -> COMP base
-- On TESTEMPTY reduce production base -> COMP base
-- On SUBSET reduce production base -> COMP base
-- On SHOW reduce production base -> COMP base
-- On SEMI reduce production base -> COMP base
-- On RPAR reduce production base -> COMP base
-- On REQUIRES reduce production base -> COMP base
-- On RBRAC reduce production base -> COMP base
-- On RACC reduce production base -> COMP base
-- On PROCEDURE reduce production base -> COMP base
-- On PLUSPLUS reduce production base -> COMP base
-- On MATCH reduce production base -> COMP base
-- On LET reduce production base -> COMP base
-- On LATEX reduce production base -> COMP base
-- On IRREFLEXIVE reduce production base -> COMP base
-- On INTER reduce production base -> COMP base
-- On INSTRUCTIONS reduce production base -> COMP base
-- On INCLUDE reduce production base -> COMP base
-- On IN reduce production base -> COMP base
-- On FORALL reduce production base -> COMP base
-- On FLAG reduce production base -> COMP base
-- On EQUAL reduce production base -> COMP base
-- On EOF reduce production base -> COMP base
-- On ENUM reduce production base -> COMP base
-- On END reduce production base -> COMP base
-- On ELSE reduce production base -> COMP base
-- On DO reduce production base -> COMP base
-- On DIFF reduce production base -> COMP base
-- On DEFAULT reduce production base -> COMP base
-- On DEBUG reduce production base -> COMP base
-- On COMP reduce production base -> COMP base
-- On COMMA reduce production base -> COMP base
-- On CALL reduce production base -> COMP base
-- On AS reduce production base -> COMP base
-- On AND reduce production base -> COMP base
-- On ALT reduce production base -> COMP base
-- On ACYCLIC reduce production base -> COMP base

State 66:
exp -> FUN VAR ARROW exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> FUN VAR ARROW exp
-- On WHEN reduce production exp -> FUN VAR ARROW exp
-- On UNSHOW reduce production exp -> FUN VAR ARROW exp
-- On THEN reduce production exp -> FUN VAR ARROW exp
-- On TESTEMPTY reduce production exp -> FUN VAR ARROW exp
-- On SUBSET reduce production exp -> FUN VAR ARROW exp
-- On SHOW reduce production exp -> FUN VAR ARROW exp
-- On RPAR reduce production exp -> FUN VAR ARROW exp
-- On REQUIRES reduce production exp -> FUN VAR ARROW exp
-- On RBRAC reduce production exp -> FUN VAR ARROW exp
-- On RACC reduce production exp -> FUN VAR ARROW exp
-- On PROCEDURE reduce production exp -> FUN VAR ARROW exp
-- On MATCH reduce production exp -> FUN VAR ARROW exp
-- On LET reduce production exp -> FUN VAR ARROW exp
-- On LATEX reduce production exp -> FUN VAR ARROW exp
-- On IRREFLEXIVE reduce production exp -> FUN VAR ARROW exp
-- On INSTRUCTIONS reduce production exp -> FUN VAR ARROW exp
-- On INCLUDE reduce production exp -> FUN VAR ARROW exp
-- On IN reduce production exp -> FUN VAR ARROW exp
-- On FORALL reduce production exp -> FUN VAR ARROW exp
-- On FLAG reduce production exp -> FUN VAR ARROW exp
-- On EQUAL reduce production exp -> FUN VAR ARROW exp
-- On EOF reduce production exp -> FUN VAR ARROW exp
-- On ENUM reduce production exp -> FUN VAR ARROW exp
-- On END reduce production exp -> FUN VAR ARROW exp
-- On ELSE reduce production exp -> FUN VAR ARROW exp
-- On DO reduce production exp -> FUN VAR ARROW exp
-- On DEFAULT reduce production exp -> FUN VAR ARROW exp
-- On DEBUG reduce production exp -> FUN VAR ARROW exp
-- On COMP reduce production exp -> FUN VAR ARROW exp
-- On COMMA reduce production exp -> FUN VAR ARROW exp
-- On CALL reduce production exp -> FUN VAR ARROW exp
-- On AS reduce production exp -> FUN VAR ARROW exp
-- On AND reduce production exp -> FUN VAR ARROW exp
-- On ALT reduce production exp -> FUN VAR ARROW exp
-- On ACYCLIC reduce production exp -> FUN VAR ARROW exp

State 67:
exp -> FUN LPAR . formals RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 72
-- On RPAR reduce production formals -> 

State 68:
formalsN -> VAR . [ RPAR ]
formalsN -> VAR . COMMA formalsN [ RPAR ]
-- On COMMA shift to state 69
-- On RPAR reduce production formalsN -> VAR

State 69:
formalsN -> VAR COMMA . formalsN [ RPAR ]
-- On VAR shift to state 68
-- On formalsN shift to state 70

State 70:
formalsN -> VAR COMMA formalsN . [ RPAR ]
-- On RPAR reduce production formalsN -> VAR COMMA formalsN

State 71:
formals -> formalsN . [ RPAR ]
-- On RPAR reduce production formals -> formalsN

State 72:
exp -> FUN LPAR formals . RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On RPAR shift to state 73

State 73:
exp -> FUN LPAR formals RPAR . ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On ARROW shift to state 74

State 74:
exp -> FUN LPAR formals RPAR ARROW . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 75
-- On base shift to state 48

State 75:
exp -> FUN LPAR formals RPAR ARROW exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On WHEN reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On UNSHOW reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On THEN reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On TESTEMPTY reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On SUBSET reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On SHOW reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On RPAR reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On REQUIRES reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On RBRAC reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On RACC reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On PROCEDURE reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On MATCH reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On LET reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On LATEX reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On IRREFLEXIVE reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On INSTRUCTIONS reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On INCLUDE reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On IN reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On FORALL reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On FLAG reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On EQUAL reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On EOF reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On ENUM reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On END reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On ELSE reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On DO reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On DEFAULT reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On DEBUG reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On COMP reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On COMMA reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On CALL reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On AS reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On AND reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On ALT reduce production exp -> FUN LPAR formals RPAR ARROW exp
-- On ACYCLIC reduce production exp -> FUN LPAR formals RPAR ARROW exp

State 76:
cond -> exp . EQUAL exp [ THEN ]
cond -> exp . SUBSET exp [ THEN ]
-- On SUBSET shift to state 77
-- On EQUAL shift to state 79

State 77:
cond -> exp SUBSET . exp [ THEN ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 78
-- On base shift to state 48

State 78:
cond -> exp SUBSET exp . [ THEN ]
-- On THEN reduce production cond -> exp SUBSET exp

State 79:
cond -> exp EQUAL . exp [ THEN ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 80
-- On base shift to state 48

State 80:
cond -> exp EQUAL exp . [ THEN ]
-- On THEN reduce production cond -> exp EQUAL exp

State 81:
exp -> IF cond . THEN exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On THEN shift to state 82

State 82:
exp -> IF cond THEN . exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 83
-- On base shift to state 48

State 83:
exp -> IF cond THEN exp . ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On ELSE shift to state 84

State 84:
exp -> IF cond THEN exp ELSE . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 85
-- On base shift to state 48

State 85:
exp -> IF cond THEN exp ELSE exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> IF cond THEN exp ELSE exp
-- On WHEN reduce production exp -> IF cond THEN exp ELSE exp
-- On UNSHOW reduce production exp -> IF cond THEN exp ELSE exp
-- On THEN reduce production exp -> IF cond THEN exp ELSE exp
-- On TESTEMPTY reduce production exp -> IF cond THEN exp ELSE exp
-- On SUBSET reduce production exp -> IF cond THEN exp ELSE exp
-- On SHOW reduce production exp -> IF cond THEN exp ELSE exp
-- On RPAR reduce production exp -> IF cond THEN exp ELSE exp
-- On REQUIRES reduce production exp -> IF cond THEN exp ELSE exp
-- On RBRAC reduce production exp -> IF cond THEN exp ELSE exp
-- On RACC reduce production exp -> IF cond THEN exp ELSE exp
-- On PROCEDURE reduce production exp -> IF cond THEN exp ELSE exp
-- On MATCH reduce production exp -> IF cond THEN exp ELSE exp
-- On LET reduce production exp -> IF cond THEN exp ELSE exp
-- On LATEX reduce production exp -> IF cond THEN exp ELSE exp
-- On IRREFLEXIVE reduce production exp -> IF cond THEN exp ELSE exp
-- On INSTRUCTIONS reduce production exp -> IF cond THEN exp ELSE exp
-- On INCLUDE reduce production exp -> IF cond THEN exp ELSE exp
-- On IN reduce production exp -> IF cond THEN exp ELSE exp
-- On FORALL reduce production exp -> IF cond THEN exp ELSE exp
-- On FLAG reduce production exp -> IF cond THEN exp ELSE exp
-- On EQUAL reduce production exp -> IF cond THEN exp ELSE exp
-- On EOF reduce production exp -> IF cond THEN exp ELSE exp
-- On ENUM reduce production exp -> IF cond THEN exp ELSE exp
-- On END reduce production exp -> IF cond THEN exp ELSE exp
-- On ELSE reduce production exp -> IF cond THEN exp ELSE exp
-- On DO reduce production exp -> IF cond THEN exp ELSE exp
-- On DEFAULT reduce production exp -> IF cond THEN exp ELSE exp
-- On DEBUG reduce production exp -> IF cond THEN exp ELSE exp
-- On COMP reduce production exp -> IF cond THEN exp ELSE exp
-- On COMMA reduce production exp -> IF cond THEN exp ELSE exp
-- On CALL reduce production exp -> IF cond THEN exp ELSE exp
-- On AS reduce production exp -> IF cond THEN exp ELSE exp
-- On AND reduce production exp -> IF cond THEN exp ELSE exp
-- On ALT reduce production exp -> IF cond THEN exp ELSE exp
-- On ACYCLIC reduce production exp -> IF cond THEN exp ELSE exp

State 86:
argsN -> exp . [ RACC ]
argsN -> exp . COMMA argsN [ RACC ]
-- On COMMA shift to state 87
-- On RACC reduce production argsN -> exp

State 87:
argsN -> exp COMMA . argsN [ RACC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 86
-- On base shift to state 48
-- On argsN shift to state 88

State 88:
argsN -> exp COMMA argsN . [ RACC ]
-- On RACC reduce production argsN -> exp COMMA argsN

State 89:
args -> argsN . [ RACC ]
-- On RACC reduce production args -> argsN

State 90:
simple -> LACC args . RACC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On RACC shift to state 91

State 91:
simple -> LACC args RACC . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> LACC args RACC
-- On WHEN reduce production simple -> LACC args RACC
-- On VAR reduce production simple -> LACC args RACC
-- On UNSHOW reduce production simple -> LACC args RACC
-- On UNION reduce production simple -> LACC args RACC
-- On UNDERSCORE reduce production simple -> LACC args RACC
-- On THEN reduce production simple -> LACC args RACC
-- On TESTEMPTY reduce production simple -> LACC args RACC
-- On TAG reduce production simple -> LACC args RACC
-- On SUBSET reduce production simple -> LACC args RACC
-- On STAR reduce production simple -> LACC args RACC
-- On SHOW reduce production simple -> LACC args RACC
-- On SEMI reduce production simple -> LACC args RACC
-- On RPAR reduce production simple -> LACC args RACC
-- On REQUIRES reduce production simple -> LACC args RACC
-- On RBRAC reduce production simple -> LACC args RACC
-- On RACC reduce production simple -> LACC args RACC
-- On PROCEDURE reduce production simple -> LACC args RACC
-- On PLUSPLUS reduce production simple -> LACC args RACC
-- On PLUS reduce production simple -> LACC args RACC
-- On OPT reduce production simple -> LACC args RACC
-- On MATCH reduce production simple -> LACC args RACC
-- On LPAR reduce production simple -> LACC args RACC
-- On LET reduce production simple -> LACC args RACC
-- On LBRAC reduce production simple -> LACC args RACC
-- On LATEX reduce production simple -> LACC args RACC
-- On LACC reduce production simple -> LACC args RACC
-- On IRREFLEXIVE reduce production simple -> LACC args RACC
-- On INTER reduce production simple -> LACC args RACC
-- On INSTRUCTIONS reduce production simple -> LACC args RACC
-- On INCLUDE reduce production simple -> LACC args RACC
-- On IN reduce production simple -> LACC args RACC
-- On HAT reduce production simple -> LACC args RACC
-- On FORALL reduce production simple -> LACC args RACC
-- On FLAG reduce production simple -> LACC args RACC
-- On EQUAL reduce production simple -> LACC args RACC
-- On EOF reduce production simple -> LACC args RACC
-- On ENUM reduce production simple -> LACC args RACC
-- On END reduce production simple -> LACC args RACC
-- On EMPTY reduce production simple -> LACC args RACC
-- On ELSE reduce production simple -> LACC args RACC
-- On DO reduce production simple -> LACC args RACC
-- On DIFF reduce production simple -> LACC args RACC
-- On DEFAULT reduce production simple -> LACC args RACC
-- On DEBUG reduce production simple -> LACC args RACC
-- On COMP reduce production simple -> LACC args RACC
-- On COMMA reduce production simple -> LACC args RACC
-- On CALL reduce production simple -> LACC args RACC
-- On BEGIN reduce production simple -> LACC args RACC
-- On AS reduce production simple -> LACC args RACC
-- On AND reduce production simple -> LACC args RACC
-- On ALT reduce production simple -> LACC args RACC
-- On ACYCLIC reduce production simple -> LACC args RACC

State 92:
simple -> LBRAC exp . RBRAC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On RBRAC shift to state 93

State 93:
simple -> LBRAC exp RBRAC . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> LBRAC exp RBRAC
-- On WHEN reduce production simple -> LBRAC exp RBRAC
-- On VAR reduce production simple -> LBRAC exp RBRAC
-- On UNSHOW reduce production simple -> LBRAC exp RBRAC
-- On UNION reduce production simple -> LBRAC exp RBRAC
-- On UNDERSCORE reduce production simple -> LBRAC exp RBRAC
-- On THEN reduce production simple -> LBRAC exp RBRAC
-- On TESTEMPTY reduce production simple -> LBRAC exp RBRAC
-- On TAG reduce production simple -> LBRAC exp RBRAC
-- On SUBSET reduce production simple -> LBRAC exp RBRAC
-- On STAR reduce production simple -> LBRAC exp RBRAC
-- On SHOW reduce production simple -> LBRAC exp RBRAC
-- On SEMI reduce production simple -> LBRAC exp RBRAC
-- On RPAR reduce production simple -> LBRAC exp RBRAC
-- On REQUIRES reduce production simple -> LBRAC exp RBRAC
-- On RBRAC reduce production simple -> LBRAC exp RBRAC
-- On RACC reduce production simple -> LBRAC exp RBRAC
-- On PROCEDURE reduce production simple -> LBRAC exp RBRAC
-- On PLUSPLUS reduce production simple -> LBRAC exp RBRAC
-- On PLUS reduce production simple -> LBRAC exp RBRAC
-- On OPT reduce production simple -> LBRAC exp RBRAC
-- On MATCH reduce production simple -> LBRAC exp RBRAC
-- On LPAR reduce production simple -> LBRAC exp RBRAC
-- On LET reduce production simple -> LBRAC exp RBRAC
-- On LBRAC reduce production simple -> LBRAC exp RBRAC
-- On LATEX reduce production simple -> LBRAC exp RBRAC
-- On LACC reduce production simple -> LBRAC exp RBRAC
-- On IRREFLEXIVE reduce production simple -> LBRAC exp RBRAC
-- On INTER reduce production simple -> LBRAC exp RBRAC
-- On INSTRUCTIONS reduce production simple -> LBRAC exp RBRAC
-- On INCLUDE reduce production simple -> LBRAC exp RBRAC
-- On IN reduce production simple -> LBRAC exp RBRAC
-- On HAT reduce production simple -> LBRAC exp RBRAC
-- On FORALL reduce production simple -> LBRAC exp RBRAC
-- On FLAG reduce production simple -> LBRAC exp RBRAC
-- On EQUAL reduce production simple -> LBRAC exp RBRAC
-- On EOF reduce production simple -> LBRAC exp RBRAC
-- On ENUM reduce production simple -> LBRAC exp RBRAC
-- On END reduce production simple -> LBRAC exp RBRAC
-- On EMPTY reduce production simple -> LBRAC exp RBRAC
-- On ELSE reduce production simple -> LBRAC exp RBRAC
-- On DO reduce production simple -> LBRAC exp RBRAC
-- On DIFF reduce production simple -> LBRAC exp RBRAC
-- On DEFAULT reduce production simple -> LBRAC exp RBRAC
-- On DEBUG reduce production simple -> LBRAC exp RBRAC
-- On COMP reduce production simple -> LBRAC exp RBRAC
-- On COMMA reduce production simple -> LBRAC exp RBRAC
-- On CALL reduce production simple -> LBRAC exp RBRAC
-- On BEGIN reduce production simple -> LBRAC exp RBRAC
-- On AS reduce production simple -> LBRAC exp RBRAC
-- On AND reduce production simple -> LBRAC exp RBRAC
-- On ALT reduce production simple -> LBRAC exp RBRAC
-- On ACYCLIC reduce production simple -> LBRAC exp RBRAC

State 94:
pat_bind -> VAR VAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On WITH reduce production pat_bind -> VAR VAR EQUAL exp
-- On WHEN reduce production pat_bind -> VAR VAR EQUAL exp
-- On UNSHOW reduce production pat_bind -> VAR VAR EQUAL exp
-- On TESTEMPTY reduce production pat_bind -> VAR VAR EQUAL exp
-- On SHOW reduce production pat_bind -> VAR VAR EQUAL exp
-- On REQUIRES reduce production pat_bind -> VAR VAR EQUAL exp
-- On PROCEDURE reduce production pat_bind -> VAR VAR EQUAL exp
-- On MATCH reduce production pat_bind -> VAR VAR EQUAL exp
-- On LET reduce production pat_bind -> VAR VAR EQUAL exp
-- On LATEX reduce production pat_bind -> VAR VAR EQUAL exp
-- On IRREFLEXIVE reduce production pat_bind -> VAR VAR EQUAL exp
-- On INSTRUCTIONS reduce production pat_bind -> VAR VAR EQUAL exp
-- On INCLUDE reduce production pat_bind -> VAR VAR EQUAL exp
-- On IN reduce production pat_bind -> VAR VAR EQUAL exp
-- On FORALL reduce production pat_bind -> VAR VAR EQUAL exp
-- On FLAG reduce production pat_bind -> VAR VAR EQUAL exp
-- On EOF reduce production pat_bind -> VAR VAR EQUAL exp
-- On ENUM reduce production pat_bind -> VAR VAR EQUAL exp
-- On END reduce production pat_bind -> VAR VAR EQUAL exp
-- On DEFAULT reduce production pat_bind -> VAR VAR EQUAL exp
-- On DEBUG reduce production pat_bind -> VAR VAR EQUAL exp
-- On COMP reduce production pat_bind -> VAR VAR EQUAL exp
-- On CALL reduce production pat_bind -> VAR VAR EQUAL exp
-- On AND reduce production pat_bind -> VAR VAR EQUAL exp
-- On ALT reduce production pat_bind -> VAR VAR EQUAL exp
-- On ACYCLIC reduce production pat_bind -> VAR VAR EQUAL exp

State 95:
pat_bind -> VAR LPAR . formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 96
-- On RPAR reduce production formals -> 

State 96:
pat_bind -> VAR LPAR formals . RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On RPAR shift to state 97

State 97:
pat_bind -> VAR LPAR formals RPAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On EQUAL shift to state 98

State 98:
pat_bind -> VAR LPAR formals RPAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 99
-- On base shift to state 48

State 99:
pat_bind -> VAR LPAR formals RPAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On WITH reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On WHEN reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On UNSHOW reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On TESTEMPTY reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On SHOW reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On REQUIRES reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On PROCEDURE reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On MATCH reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On LET reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On LATEX reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On IRREFLEXIVE reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On INSTRUCTIONS reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On INCLUDE reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On IN reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On FORALL reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On FLAG reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On EOF reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On ENUM reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On END reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On DEFAULT reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On DEBUG reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On COMP reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On CALL reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On AND reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On ALT reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp
-- On ACYCLIC reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp

State 100:
bind -> VAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 101
-- On base shift to state 48

State 101:
bind -> VAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On WITH reduce production bind -> VAR EQUAL exp
-- On WHEN reduce production bind -> VAR EQUAL exp
-- On UNSHOW reduce production bind -> VAR EQUAL exp
-- On TESTEMPTY reduce production bind -> VAR EQUAL exp
-- On SHOW reduce production bind -> VAR EQUAL exp
-- On REQUIRES reduce production bind -> VAR EQUAL exp
-- On PROCEDURE reduce production bind -> VAR EQUAL exp
-- On MATCH reduce production bind -> VAR EQUAL exp
-- On LET reduce production bind -> VAR EQUAL exp
-- On LATEX reduce production bind -> VAR EQUAL exp
-- On IRREFLEXIVE reduce production bind -> VAR EQUAL exp
-- On INSTRUCTIONS reduce production bind -> VAR EQUAL exp
-- On INCLUDE reduce production bind -> VAR EQUAL exp
-- On IN reduce production bind -> VAR EQUAL exp
-- On FORALL reduce production bind -> VAR EQUAL exp
-- On FLAG reduce production bind -> VAR EQUAL exp
-- On EOF reduce production bind -> VAR EQUAL exp
-- On ENUM reduce production bind -> VAR EQUAL exp
-- On END reduce production bind -> VAR EQUAL exp
-- On DEFAULT reduce production bind -> VAR EQUAL exp
-- On DEBUG reduce production bind -> VAR EQUAL exp
-- On COMP reduce production bind -> VAR EQUAL exp
-- On CALL reduce production bind -> VAR EQUAL exp
-- On AND reduce production bind -> VAR EQUAL exp
-- On ALT reduce production bind -> VAR EQUAL exp
-- On ACYCLIC reduce production bind -> VAR EQUAL exp

State 102:
exp -> LET REC . pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 108
-- On pat_bind shift to state 111
-- On bind shift to state 114

State 103:
bind -> LPAR . formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 104
-- On RPAR reduce production formals -> 

State 104:
bind -> LPAR formals . RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On RPAR shift to state 105

State 105:
bind -> LPAR formals RPAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On EQUAL shift to state 106

State 106:
bind -> LPAR formals RPAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 107
-- On base shift to state 48

State 107:
bind -> LPAR formals RPAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On WITH reduce production bind -> LPAR formals RPAR EQUAL exp
-- On WHEN reduce production bind -> LPAR formals RPAR EQUAL exp
-- On UNSHOW reduce production bind -> LPAR formals RPAR EQUAL exp
-- On TESTEMPTY reduce production bind -> LPAR formals RPAR EQUAL exp
-- On SHOW reduce production bind -> LPAR formals RPAR EQUAL exp
-- On REQUIRES reduce production bind -> LPAR formals RPAR EQUAL exp
-- On PROCEDURE reduce production bind -> LPAR formals RPAR EQUAL exp
-- On MATCH reduce production bind -> LPAR formals RPAR EQUAL exp
-- On LET reduce production bind -> LPAR formals RPAR EQUAL exp
-- On LATEX reduce production bind -> LPAR formals RPAR EQUAL exp
-- On IRREFLEXIVE reduce production bind -> LPAR formals RPAR EQUAL exp
-- On INSTRUCTIONS reduce production bind -> LPAR formals RPAR EQUAL exp
-- On INCLUDE reduce production bind -> LPAR formals RPAR EQUAL exp
-- On IN reduce production bind -> LPAR formals RPAR EQUAL exp
-- On FORALL reduce production bind -> LPAR formals RPAR EQUAL exp
-- On FLAG reduce production bind -> LPAR formals RPAR EQUAL exp
-- On EOF reduce production bind -> LPAR formals RPAR EQUAL exp
-- On ENUM reduce production bind -> LPAR formals RPAR EQUAL exp
-- On END reduce production bind -> LPAR formals RPAR EQUAL exp
-- On DEFAULT reduce production bind -> LPAR formals RPAR EQUAL exp
-- On DEBUG reduce production bind -> LPAR formals RPAR EQUAL exp
-- On COMP reduce production bind -> LPAR formals RPAR EQUAL exp
-- On CALL reduce production bind -> LPAR formals RPAR EQUAL exp
-- On AND reduce production bind -> LPAR formals RPAR EQUAL exp
-- On ALT reduce production bind -> LPAR formals RPAR EQUAL exp
-- On ACYCLIC reduce production bind -> LPAR formals RPAR EQUAL exp

State 108:
exp -> LET REC pat_bind_list . IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On IN shift to state 109

State 109:
exp -> LET REC pat_bind_list IN . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 110
-- On base shift to state 48

State 110:
exp -> LET REC pat_bind_list IN exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> LET REC pat_bind_list IN exp
-- On WHEN reduce production exp -> LET REC pat_bind_list IN exp
-- On UNSHOW reduce production exp -> LET REC pat_bind_list IN exp
-- On THEN reduce production exp -> LET REC pat_bind_list IN exp
-- On TESTEMPTY reduce production exp -> LET REC pat_bind_list IN exp
-- On SUBSET reduce production exp -> LET REC pat_bind_list IN exp
-- On SHOW reduce production exp -> LET REC pat_bind_list IN exp
-- On RPAR reduce production exp -> LET REC pat_bind_list IN exp
-- On REQUIRES reduce production exp -> LET REC pat_bind_list IN exp
-- On RBRAC reduce production exp -> LET REC pat_bind_list IN exp
-- On RACC reduce production exp -> LET REC pat_bind_list IN exp
-- On PROCEDURE reduce production exp -> LET REC pat_bind_list IN exp
-- On MATCH reduce production exp -> LET REC pat_bind_list IN exp
-- On LET reduce production exp -> LET REC pat_bind_list IN exp
-- On LATEX reduce production exp -> LET REC pat_bind_list IN exp
-- On IRREFLEXIVE reduce production exp -> LET REC pat_bind_list IN exp
-- On INSTRUCTIONS reduce production exp -> LET REC pat_bind_list IN exp
-- On INCLUDE reduce production exp -> LET REC pat_bind_list IN exp
-- On IN reduce production exp -> LET REC pat_bind_list IN exp
-- On FORALL reduce production exp -> LET REC pat_bind_list IN exp
-- On FLAG reduce production exp -> LET REC pat_bind_list IN exp
-- On EQUAL reduce production exp -> LET REC pat_bind_list IN exp
-- On EOF reduce production exp -> LET REC pat_bind_list IN exp
-- On ENUM reduce production exp -> LET REC pat_bind_list IN exp
-- On END reduce production exp -> LET REC pat_bind_list IN exp
-- On ELSE reduce production exp -> LET REC pat_bind_list IN exp
-- On DO reduce production exp -> LET REC pat_bind_list IN exp
-- On DEFAULT reduce production exp -> LET REC pat_bind_list IN exp
-- On DEBUG reduce production exp -> LET REC pat_bind_list IN exp
-- On COMP reduce production exp -> LET REC pat_bind_list IN exp
-- On COMMA reduce production exp -> LET REC pat_bind_list IN exp
-- On CALL reduce production exp -> LET REC pat_bind_list IN exp
-- On AS reduce production exp -> LET REC pat_bind_list IN exp
-- On AND reduce production exp -> LET REC pat_bind_list IN exp
-- On ALT reduce production exp -> LET REC pat_bind_list IN exp
-- On ACYCLIC reduce production exp -> LET REC pat_bind_list IN exp

State 111:
pat_bind_list -> pat_bind . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
pat_bind_list -> pat_bind . AND pat_bind_list [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On AND shift to state 112
-- On WITH reduce production pat_bind_list -> pat_bind
-- On WHEN reduce production pat_bind_list -> pat_bind
-- On UNSHOW reduce production pat_bind_list -> pat_bind
-- On TESTEMPTY reduce production pat_bind_list -> pat_bind
-- On SHOW reduce production pat_bind_list -> pat_bind
-- On REQUIRES reduce production pat_bind_list -> pat_bind
-- On PROCEDURE reduce production pat_bind_list -> pat_bind
-- On MATCH reduce production pat_bind_list -> pat_bind
-- On LET reduce production pat_bind_list -> pat_bind
-- On LATEX reduce production pat_bind_list -> pat_bind
-- On IRREFLEXIVE reduce production pat_bind_list -> pat_bind
-- On INSTRUCTIONS reduce production pat_bind_list -> pat_bind
-- On INCLUDE reduce production pat_bind_list -> pat_bind
-- On IN reduce production pat_bind_list -> pat_bind
-- On FORALL reduce production pat_bind_list -> pat_bind
-- On FLAG reduce production pat_bind_list -> pat_bind
-- On EOF reduce production pat_bind_list -> pat_bind
-- On ENUM reduce production pat_bind_list -> pat_bind
-- On END reduce production pat_bind_list -> pat_bind
-- On DEFAULT reduce production pat_bind_list -> pat_bind
-- On DEBUG reduce production pat_bind_list -> pat_bind
-- On COMP reduce production pat_bind_list -> pat_bind
-- On CALL reduce production pat_bind_list -> pat_bind
-- On ALT reduce production pat_bind_list -> pat_bind
-- On ACYCLIC reduce production pat_bind_list -> pat_bind

State 112:
pat_bind_list -> pat_bind AND . pat_bind_list [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 113
-- On pat_bind shift to state 111
-- On bind shift to state 114

State 113:
pat_bind_list -> pat_bind AND pat_bind_list . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On WHEN reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On UNSHOW reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On TESTEMPTY reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On SHOW reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On REQUIRES reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On PROCEDURE reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On MATCH reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On LET reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On LATEX reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On IRREFLEXIVE reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On INSTRUCTIONS reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On INCLUDE reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On IN reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On FORALL reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On FLAG reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On EOF reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On ENUM reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On END reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On DEFAULT reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On DEBUG reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On COMP reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On CALL reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On ALT reduce production pat_bind_list -> pat_bind AND pat_bind_list
-- On ACYCLIC reduce production pat_bind_list -> pat_bind AND pat_bind_list

State 114:
pat_bind -> bind . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
-- On WITH reduce production pat_bind -> bind
-- On WHEN reduce production pat_bind -> bind
-- On UNSHOW reduce production pat_bind -> bind
-- On TESTEMPTY reduce production pat_bind -> bind
-- On SHOW reduce production pat_bind -> bind
-- On REQUIRES reduce production pat_bind -> bind
-- On PROCEDURE reduce production pat_bind -> bind
-- On MATCH reduce production pat_bind -> bind
-- On LET reduce production pat_bind -> bind
-- On LATEX reduce production pat_bind -> bind
-- On IRREFLEXIVE reduce production pat_bind -> bind
-- On INSTRUCTIONS reduce production pat_bind -> bind
-- On INCLUDE reduce production pat_bind -> bind
-- On IN reduce production pat_bind -> bind
-- On FORALL reduce production pat_bind -> bind
-- On FLAG reduce production pat_bind -> bind
-- On EOF reduce production pat_bind -> bind
-- On ENUM reduce production pat_bind -> bind
-- On END reduce production pat_bind -> bind
-- On DEFAULT reduce production pat_bind -> bind
-- On DEBUG reduce production pat_bind -> bind
-- On COMP reduce production pat_bind -> bind
-- On CALL reduce production pat_bind -> bind
-- On AND reduce production pat_bind -> bind
-- On ALT reduce production pat_bind -> bind
-- On ACYCLIC reduce production pat_bind -> bind

State 115:
exp -> LET pat_bind_list . IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On IN shift to state 116

State 116:
exp -> LET pat_bind_list IN . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 117
-- On base shift to state 48

State 117:
exp -> LET pat_bind_list IN exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> LET pat_bind_list IN exp
-- On WHEN reduce production exp -> LET pat_bind_list IN exp
-- On UNSHOW reduce production exp -> LET pat_bind_list IN exp
-- On THEN reduce production exp -> LET pat_bind_list IN exp
-- On TESTEMPTY reduce production exp -> LET pat_bind_list IN exp
-- On SUBSET reduce production exp -> LET pat_bind_list IN exp
-- On SHOW reduce production exp -> LET pat_bind_list IN exp
-- On RPAR reduce production exp -> LET pat_bind_list IN exp
-- On REQUIRES reduce production exp -> LET pat_bind_list IN exp
-- On RBRAC reduce production exp -> LET pat_bind_list IN exp
-- On RACC reduce production exp -> LET pat_bind_list IN exp
-- On PROCEDURE reduce production exp -> LET pat_bind_list IN exp
-- On MATCH reduce production exp -> LET pat_bind_list IN exp
-- On LET reduce production exp -> LET pat_bind_list IN exp
-- On LATEX reduce production exp -> LET pat_bind_list IN exp
-- On IRREFLEXIVE reduce production exp -> LET pat_bind_list IN exp
-- On INSTRUCTIONS reduce production exp -> LET pat_bind_list IN exp
-- On INCLUDE reduce production exp -> LET pat_bind_list IN exp
-- On IN reduce production exp -> LET pat_bind_list IN exp
-- On FORALL reduce production exp -> LET pat_bind_list IN exp
-- On FLAG reduce production exp -> LET pat_bind_list IN exp
-- On EQUAL reduce production exp -> LET pat_bind_list IN exp
-- On EOF reduce production exp -> LET pat_bind_list IN exp
-- On ENUM reduce production exp -> LET pat_bind_list IN exp
-- On END reduce production exp -> LET pat_bind_list IN exp
-- On ELSE reduce production exp -> LET pat_bind_list IN exp
-- On DO reduce production exp -> LET pat_bind_list IN exp
-- On DEFAULT reduce production exp -> LET pat_bind_list IN exp
-- On DEBUG reduce production exp -> LET pat_bind_list IN exp
-- On COMP reduce production exp -> LET pat_bind_list IN exp
-- On COMMA reduce production exp -> LET pat_bind_list IN exp
-- On CALL reduce production exp -> LET pat_bind_list IN exp
-- On AS reduce production exp -> LET pat_bind_list IN exp
-- On AND reduce production exp -> LET pat_bind_list IN exp
-- On ALT reduce production exp -> LET pat_bind_list IN exp
-- On ACYCLIC reduce production exp -> LET pat_bind_list IN exp

State 118:
simple -> LPAR tupleargs . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On RPAR shift to state 119

State 119:
simple -> LPAR tupleargs RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> LPAR tupleargs RPAR
-- On WHEN reduce production simple -> LPAR tupleargs RPAR
-- On VAR reduce production simple -> LPAR tupleargs RPAR
-- On UNSHOW reduce production simple -> LPAR tupleargs RPAR
-- On UNION reduce production simple -> LPAR tupleargs RPAR
-- On UNDERSCORE reduce production simple -> LPAR tupleargs RPAR
-- On THEN reduce production simple -> LPAR tupleargs RPAR
-- On TESTEMPTY reduce production simple -> LPAR tupleargs RPAR
-- On TAG reduce production simple -> LPAR tupleargs RPAR
-- On SUBSET reduce production simple -> LPAR tupleargs RPAR
-- On STAR reduce production simple -> LPAR tupleargs RPAR
-- On SHOW reduce production simple -> LPAR tupleargs RPAR
-- On SEMI reduce production simple -> LPAR tupleargs RPAR
-- On RPAR reduce production simple -> LPAR tupleargs RPAR
-- On REQUIRES reduce production simple -> LPAR tupleargs RPAR
-- On RBRAC reduce production simple -> LPAR tupleargs RPAR
-- On RACC reduce production simple -> LPAR tupleargs RPAR
-- On PROCEDURE reduce production simple -> LPAR tupleargs RPAR
-- On PLUSPLUS reduce production simple -> LPAR tupleargs RPAR
-- On PLUS reduce production simple -> LPAR tupleargs RPAR
-- On OPT reduce production simple -> LPAR tupleargs RPAR
-- On MATCH reduce production simple -> LPAR tupleargs RPAR
-- On LPAR reduce production simple -> LPAR tupleargs RPAR
-- On LET reduce production simple -> LPAR tupleargs RPAR
-- On LBRAC reduce production simple -> LPAR tupleargs RPAR
-- On LATEX reduce production simple -> LPAR tupleargs RPAR
-- On LACC reduce production simple -> LPAR tupleargs RPAR
-- On IRREFLEXIVE reduce production simple -> LPAR tupleargs RPAR
-- On INTER reduce production simple -> LPAR tupleargs RPAR
-- On INSTRUCTIONS reduce production simple -> LPAR tupleargs RPAR
-- On INCLUDE reduce production simple -> LPAR tupleargs RPAR
-- On IN reduce production simple -> LPAR tupleargs RPAR
-- On HAT reduce production simple -> LPAR tupleargs RPAR
-- On FORALL reduce production simple -> LPAR tupleargs RPAR
-- On FLAG reduce production simple -> LPAR tupleargs RPAR
-- On EQUAL reduce production simple -> LPAR tupleargs RPAR
-- On EOF reduce production simple -> LPAR tupleargs RPAR
-- On ENUM reduce production simple -> LPAR tupleargs RPAR
-- On END reduce production simple -> LPAR tupleargs RPAR
-- On EMPTY reduce production simple -> LPAR tupleargs RPAR
-- On ELSE reduce production simple -> LPAR tupleargs RPAR
-- On DO reduce production simple -> LPAR tupleargs RPAR
-- On DIFF reduce production simple -> LPAR tupleargs RPAR
-- On DEFAULT reduce production simple -> LPAR tupleargs RPAR
-- On DEBUG reduce production simple -> LPAR tupleargs RPAR
-- On COMP reduce production simple -> LPAR tupleargs RPAR
-- On COMMA reduce production simple -> LPAR tupleargs RPAR
-- On CALL reduce production simple -> LPAR tupleargs RPAR
-- On BEGIN reduce production simple -> LPAR tupleargs RPAR
-- On AS reduce production simple -> LPAR tupleargs RPAR
-- On AND reduce production simple -> LPAR tupleargs RPAR
-- On ALT reduce production simple -> LPAR tupleargs RPAR
-- On ACYCLIC reduce production simple -> LPAR tupleargs RPAR

State 120:
simple -> LPAR exp . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
tupleargs -> exp . COMMA tupleend [ RPAR ]
-- On RPAR shift to state 121
-- On COMMA shift to state 122

State 121:
simple -> LPAR exp RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
-- On WITH reduce production simple -> LPAR exp RPAR
-- On WHEN reduce production simple -> LPAR exp RPAR
-- On VAR reduce production simple -> LPAR exp RPAR
-- On UNSHOW reduce production simple -> LPAR exp RPAR
-- On UNION reduce production simple -> LPAR exp RPAR
-- On UNDERSCORE reduce production simple -> LPAR exp RPAR
-- On THEN reduce production simple -> LPAR exp RPAR
-- On TESTEMPTY reduce production simple -> LPAR exp RPAR
-- On TAG reduce production simple -> LPAR exp RPAR
-- On SUBSET reduce production simple -> LPAR exp RPAR
-- On STAR reduce production simple -> LPAR exp RPAR
-- On SHOW reduce production simple -> LPAR exp RPAR
-- On SEMI reduce production simple -> LPAR exp RPAR
-- On RPAR reduce production simple -> LPAR exp RPAR
-- On REQUIRES reduce production simple -> LPAR exp RPAR
-- On RBRAC reduce production simple -> LPAR exp RPAR
-- On RACC reduce production simple -> LPAR exp RPAR
-- On PROCEDURE reduce production simple -> LPAR exp RPAR
-- On PLUSPLUS reduce production simple -> LPAR exp RPAR
-- On PLUS reduce production simple -> LPAR exp RPAR
-- On OPT reduce production simple -> LPAR exp RPAR
-- On MATCH reduce production simple -> LPAR exp RPAR
-- On LPAR reduce production simple -> LPAR exp RPAR
-- On LET reduce production simple -> LPAR exp RPAR
-- On LBRAC reduce production simple -> LPAR exp RPAR
-- On LATEX reduce production simple -> LPAR exp RPAR
-- On LACC reduce production simple -> LPAR exp RPAR
-- On IRREFLEXIVE reduce production simple -> LPAR exp RPAR
-- On INTER reduce production simple -> LPAR exp RPAR
-- On INSTRUCTIONS reduce production simple -> LPAR exp RPAR
-- On INCLUDE reduce production simple -> LPAR exp RPAR
-- On IN reduce production simple -> LPAR exp RPAR
-- On HAT reduce production simple -> LPAR exp RPAR
-- On FORALL reduce production simple -> LPAR exp RPAR
-- On FLAG reduce production simple -> LPAR exp RPAR
-- On EQUAL reduce production simple -> LPAR exp RPAR
-- On EOF reduce production simple -> LPAR exp RPAR
-- On ENUM reduce production simple -> LPAR exp RPAR
-- On END reduce production simple -> LPAR exp RPAR
-- On EMPTY reduce production simple -> LPAR exp RPAR
-- On ELSE reduce production simple -> LPAR exp RPAR
-- On DO reduce production simple -> LPAR exp RPAR
-- On DIFF reduce production simple -> LPAR exp RPAR
-- On DEFAULT reduce production simple -> LPAR exp RPAR
-- On DEBUG reduce production simple -> LPAR exp RPAR
-- On COMP reduce production simple -> LPAR exp RPAR
-- On COMMA reduce production simple -> LPAR exp RPAR
-- On CALL reduce production simple -> LPAR exp RPAR
-- On BEGIN reduce production simple -> LPAR exp RPAR
-- On AS reduce production simple -> LPAR exp RPAR
-- On AND reduce production simple -> LPAR exp RPAR
-- On ALT reduce production simple -> LPAR exp RPAR
-- On ACYCLIC reduce production simple -> LPAR exp RPAR

State 122:
tupleargs -> exp COMMA . tupleend [ RPAR ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleend shift to state 123
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 124
-- On base shift to state 48

State 123:
tupleargs -> exp COMMA tupleend . [ RPAR ]
-- On RPAR reduce production tupleargs -> exp COMMA tupleend

State 124:
tupleend -> exp . [ RPAR ]
tupleend -> exp . COMMA tupleend [ RPAR ]
-- On COMMA shift to state 125
-- On RPAR reduce production tupleend -> exp

State 125:
tupleend -> exp COMMA . tupleend [ RPAR ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleend shift to state 126
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 124
-- On base shift to state 48

State 126:
tupleend -> exp COMMA tupleend . [ RPAR ]
-- On RPAR reduce production tupleend -> exp COMMA tupleend

State 127:
exp -> MATCH exp . WITH altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp . WITH altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH shift to state 128

State 128:
exp -> MATCH exp WITH . altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp WITH . altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On ALT shift to state 129
-- On altopt shift to state 130
-- On VAR reduce production altopt -> 
-- On UNDERSCORE reduce production altopt -> 
-- On TAG reduce production altopt -> 
-- On LACC reduce production altopt -> 

State 129:
altopt -> ALT . [ VAR UNDERSCORE TAG LACC ]
-- On VAR reduce production altopt -> ALT
-- On UNDERSCORE reduce production altopt -> ALT
-- On TAG reduce production altopt -> ALT
-- On LACC reduce production altopt -> ALT

State 130:
exp -> MATCH exp WITH altopt . clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp WITH altopt . set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 131
-- On UNDERSCORE shift to state 142
-- On TAG shift to state 145
-- On LACC shift to state 148
-- On set_clauses shift to state 152
-- On empty_clause shift to state 154
-- On element_clause3 shift to state 156
-- On element_clause2 shift to state 157
-- On element_clause shift to state 159
-- On clause_list shift to state 162
-- On clause shift to state 164

State 131:
element_clause2 -> VAR . PLUSPLUS VAR ARROW exp [ END ALT ]
element_clause3 -> VAR . UNION VAR PLUSPLUS VAR ARROW exp [ END ALT ]
-- On UNION shift to state 132
-- On PLUSPLUS shift to state 138

State 132:
element_clause3 -> VAR UNION . VAR PLUSPLUS VAR ARROW exp [ END ALT ]
-- On VAR shift to state 133

State 133:
element_clause3 -> VAR UNION VAR . PLUSPLUS VAR ARROW exp [ END ALT ]
-- On PLUSPLUS shift to state 134

State 134:
element_clause3 -> VAR UNION VAR PLUSPLUS . VAR ARROW exp [ END ALT ]
-- On VAR shift to state 135

State 135:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR . ARROW exp [ END ALT ]
-- On ARROW shift to state 136

State 136:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW . exp [ END ALT ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 137
-- On base shift to state 48

State 137:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW exp . [ END ALT ]
-- On END reduce production element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW exp
-- On ALT reduce production element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW exp

State 138:
element_clause2 -> VAR PLUSPLUS . VAR ARROW exp [ END ALT ]
-- On VAR shift to state 139

State 139:
element_clause2 -> VAR PLUSPLUS VAR . ARROW exp [ END ALT ]
-- On ARROW shift to state 140

State 140:
element_clause2 -> VAR PLUSPLUS VAR ARROW . exp [ END ALT ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 141
-- On base shift to state 48

State 141:
element_clause2 -> VAR PLUSPLUS VAR ARROW exp . [ END ALT ]
-- On END reduce production element_clause2 -> VAR PLUSPLUS VAR ARROW exp
-- On ALT reduce production element_clause2 -> VAR PLUSPLUS VAR ARROW exp

State 142:
clause_list -> UNDERSCORE . ARROW exp [ END ]
-- On ARROW shift to state 143

State 143:
clause_list -> UNDERSCORE ARROW . exp [ END ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 144
-- On base shift to state 48

State 144:
clause_list -> UNDERSCORE ARROW exp . [ END ]
-- On END reduce production clause_list -> UNDERSCORE ARROW exp

State 145:
clause -> TAG . ARROW exp [ END ALT ]
-- On ARROW shift to state 146

State 146:
clause -> TAG ARROW . exp [ END ALT ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 147
-- On base shift to state 48

State 147:
clause -> TAG ARROW exp . [ END ALT ]
-- On END reduce production clause -> TAG ARROW exp
-- On ALT reduce production clause -> TAG ARROW exp

State 148:
empty_clause -> LACC . RACC ARROW exp [ END ALT ]
-- On RACC shift to state 149

State 149:
empty_clause -> LACC RACC . ARROW exp [ END ALT ]
-- On ARROW shift to state 150

State 150:
empty_clause -> LACC RACC ARROW . exp [ END ALT ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 151
-- On base shift to state 48

State 151:
empty_clause -> LACC RACC ARROW exp . [ END ALT ]
-- On END reduce production empty_clause -> LACC RACC ARROW exp
-- On ALT reduce production empty_clause -> LACC RACC ARROW exp

State 152:
exp -> MATCH exp WITH altopt set_clauses . END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On END shift to state 153

State 153:
exp -> MATCH exp WITH altopt set_clauses END . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On WHEN reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On UNSHOW reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On THEN reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On TESTEMPTY reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On SUBSET reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On SHOW reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On RPAR reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On REQUIRES reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On RBRAC reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On RACC reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On PROCEDURE reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On MATCH reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On LET reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On LATEX reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On IRREFLEXIVE reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On INSTRUCTIONS reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On INCLUDE reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On IN reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On FORALL reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On FLAG reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On EQUAL reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On EOF reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On ENUM reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On END reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On ELSE reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On DO reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On DEFAULT reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On DEBUG reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On COMP reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On COMMA reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On CALL reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On AS reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On AND reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On ALT reduce production exp -> MATCH exp WITH altopt set_clauses END
-- On ACYCLIC reduce production exp -> MATCH exp WITH altopt set_clauses END

State 154:
set_clauses -> empty_clause . ALT element_clause [ END ]
-- On ALT shift to state 155

State 155:
set_clauses -> empty_clause ALT . element_clause [ END ]
-- On VAR shift to state 131
-- On element_clause3 shift to state 156
-- On element_clause2 shift to state 157
-- On element_clause shift to state 158

State 156:
element_clause -> element_clause3 . [ END ALT ]
-- On END reduce production element_clause -> element_clause3
-- On ALT reduce production element_clause -> element_clause3

State 157:
element_clause -> element_clause2 . [ END ALT ]
-- On END reduce production element_clause -> element_clause2
-- On ALT reduce production element_clause -> element_clause2

State 158:
set_clauses -> empty_clause ALT element_clause . [ END ]
-- On END reduce production set_clauses -> empty_clause ALT element_clause

State 159:
set_clauses -> element_clause . ALT empty_clause [ END ]
-- On ALT shift to state 160

State 160:
set_clauses -> element_clause ALT . empty_clause [ END ]
-- On LACC shift to state 148
-- On empty_clause shift to state 161

State 161:
set_clauses -> element_clause ALT empty_clause . [ END ]
-- On END reduce production set_clauses -> element_clause ALT empty_clause

State 162:
exp -> MATCH exp WITH altopt clause_list . END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On END shift to state 163

State 163:
exp -> MATCH exp WITH altopt clause_list END . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> MATCH exp WITH altopt clause_list END
-- On WHEN reduce production exp -> MATCH exp WITH altopt clause_list END
-- On UNSHOW reduce production exp -> MATCH exp WITH altopt clause_list END
-- On THEN reduce production exp -> MATCH exp WITH altopt clause_list END
-- On TESTEMPTY reduce production exp -> MATCH exp WITH altopt clause_list END
-- On SUBSET reduce production exp -> MATCH exp WITH altopt clause_list END
-- On SHOW reduce production exp -> MATCH exp WITH altopt clause_list END
-- On RPAR reduce production exp -> MATCH exp WITH altopt clause_list END
-- On REQUIRES reduce production exp -> MATCH exp WITH altopt clause_list END
-- On RBRAC reduce production exp -> MATCH exp WITH altopt clause_list END
-- On RACC reduce production exp -> MATCH exp WITH altopt clause_list END
-- On PROCEDURE reduce production exp -> MATCH exp WITH altopt clause_list END
-- On MATCH reduce production exp -> MATCH exp WITH altopt clause_list END
-- On LET reduce production exp -> MATCH exp WITH altopt clause_list END
-- On LATEX reduce production exp -> MATCH exp WITH altopt clause_list END
-- On IRREFLEXIVE reduce production exp -> MATCH exp WITH altopt clause_list END
-- On INSTRUCTIONS reduce production exp -> MATCH exp WITH altopt clause_list END
-- On INCLUDE reduce production exp -> MATCH exp WITH altopt clause_list END
-- On IN reduce production exp -> MATCH exp WITH altopt clause_list END
-- On FORALL reduce production exp -> MATCH exp WITH altopt clause_list END
-- On FLAG reduce production exp -> MATCH exp WITH altopt clause_list END
-- On EQUAL reduce production exp -> MATCH exp WITH altopt clause_list END
-- On EOF reduce production exp -> MATCH exp WITH altopt clause_list END
-- On ENUM reduce production exp -> MATCH exp WITH altopt clause_list END
-- On END reduce production exp -> MATCH exp WITH altopt clause_list END
-- On ELSE reduce production exp -> MATCH exp WITH altopt clause_list END
-- On DO reduce production exp -> MATCH exp WITH altopt clause_list END
-- On DEFAULT reduce production exp -> MATCH exp WITH altopt clause_list END
-- On DEBUG reduce production exp -> MATCH exp WITH altopt clause_list END
-- On COMP reduce production exp -> MATCH exp WITH altopt clause_list END
-- On COMMA reduce production exp -> MATCH exp WITH altopt clause_list END
-- On CALL reduce production exp -> MATCH exp WITH altopt clause_list END
-- On AS reduce production exp -> MATCH exp WITH altopt clause_list END
-- On AND reduce production exp -> MATCH exp WITH altopt clause_list END
-- On ALT reduce production exp -> MATCH exp WITH altopt clause_list END
-- On ACYCLIC reduce production exp -> MATCH exp WITH altopt clause_list END

State 164:
clause_list -> clause . [ END ]
clause_list -> clause . ALT clause_list [ END ]
-- On ALT shift to state 165
-- On END reduce production clause_list -> clause

State 165:
clause_list -> clause ALT . clause_list [ END ]
-- On UNDERSCORE shift to state 142
-- On TAG shift to state 145
-- On clause_list shift to state 166
-- On clause shift to state 164

State 166:
clause_list -> clause ALT clause_list . [ END ]
-- On END reduce production clause_list -> clause ALT clause_list

State 167:
exp -> TRY exp . WITH exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH shift to state 168

State 168:
exp -> TRY exp WITH . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 169
-- On base shift to state 48

State 169:
exp -> TRY exp WITH exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
-- On WITH reduce production exp -> TRY exp WITH exp
-- On WHEN reduce production exp -> TRY exp WITH exp
-- On UNSHOW reduce production exp -> TRY exp WITH exp
-- On THEN reduce production exp -> TRY exp WITH exp
-- On TESTEMPTY reduce production exp -> TRY exp WITH exp
-- On SUBSET reduce production exp -> TRY exp WITH exp
-- On SHOW reduce production exp -> TRY exp WITH exp
-- On RPAR reduce production exp -> TRY exp WITH exp
-- On REQUIRES reduce production exp -> TRY exp WITH exp
-- On RBRAC reduce production exp -> TRY exp WITH exp
-- On RACC reduce production exp -> TRY exp WITH exp
-- On PROCEDURE reduce production exp -> TRY exp WITH exp
-- On MATCH reduce production exp -> TRY exp WITH exp
-- On LET reduce production exp -> TRY exp WITH exp
-- On LATEX reduce production exp -> TRY exp WITH exp
-- On IRREFLEXIVE reduce production exp -> TRY exp WITH exp
-- On INSTRUCTIONS reduce production exp -> TRY exp WITH exp
-- On INCLUDE reduce production exp -> TRY exp WITH exp
-- On IN reduce production exp -> TRY exp WITH exp
-- On FORALL reduce production exp -> TRY exp WITH exp
-- On FLAG reduce production exp -> TRY exp WITH exp
-- On EQUAL reduce production exp -> TRY exp WITH exp
-- On EOF reduce production exp -> TRY exp WITH exp
-- On ENUM reduce production exp -> TRY exp WITH exp
-- On END reduce production exp -> TRY exp WITH exp
-- On ELSE reduce production exp -> TRY exp WITH exp
-- On DO reduce production exp -> TRY exp WITH exp
-- On DEFAULT reduce production exp -> TRY exp WITH exp
-- On DEBUG reduce production exp -> TRY exp WITH exp
-- On COMP reduce production exp -> TRY exp WITH exp
-- On COMMA reduce production exp -> TRY exp WITH exp
-- On CALL reduce production exp -> TRY exp WITH exp
-- On AS reduce production exp -> TRY exp WITH exp
-- On AND reduce production exp -> TRY exp WITH exp
-- On ALT reduce production exp -> TRY exp WITH exp
-- On ACYCLIC reduce production exp -> TRY exp WITH exp

State 170:
ins -> WITH VAR FROM exp . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> WITH VAR FROM exp
-- On UNSHOW reduce production ins -> WITH VAR FROM exp
-- On TESTEMPTY reduce production ins -> WITH VAR FROM exp
-- On SHOW reduce production ins -> WITH VAR FROM exp
-- On REQUIRES reduce production ins -> WITH VAR FROM exp
-- On PROCEDURE reduce production ins -> WITH VAR FROM exp
-- On MATCH reduce production ins -> WITH VAR FROM exp
-- On LET reduce production ins -> WITH VAR FROM exp
-- On LATEX reduce production ins -> WITH VAR FROM exp
-- On IRREFLEXIVE reduce production ins -> WITH VAR FROM exp
-- On INSTRUCTIONS reduce production ins -> WITH VAR FROM exp
-- On INCLUDE reduce production ins -> WITH VAR FROM exp
-- On FORALL reduce production ins -> WITH VAR FROM exp
-- On FLAG reduce production ins -> WITH VAR FROM exp
-- On EOF reduce production ins -> WITH VAR FROM exp
-- On ENUM reduce production ins -> WITH VAR FROM exp
-- On END reduce production ins -> WITH VAR FROM exp
-- On DEFAULT reduce production ins -> WITH VAR FROM exp
-- On DEBUG reduce production ins -> WITH VAR FROM exp
-- On COMP reduce production ins -> WITH VAR FROM exp
-- On CALL reduce production ins -> WITH VAR FROM exp
-- On ALT reduce production ins -> WITH VAR FROM exp
-- On ACYCLIC reduce production ins -> WITH VAR FROM exp

State 171:
ins -> UNSHOW . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 172
-- On var_list shift to state 176

State 172:
var_list -> VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
var_list -> VAR . comma_opt var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On COMMA shift to state 173
-- On comma_opt shift to state 174
-- On WITH reduce production var_list -> VAR
-- On UNSHOW reduce production var_list -> VAR
-- On TESTEMPTY reduce production var_list -> VAR
-- On SHOW reduce production var_list -> VAR
-- On REQUIRES reduce production var_list -> VAR
-- On PROCEDURE reduce production var_list -> VAR
-- On MATCH reduce production var_list -> VAR
-- On LET reduce production var_list -> VAR
-- On LATEX reduce production var_list -> VAR
-- On IRREFLEXIVE reduce production var_list -> VAR
-- On INSTRUCTIONS reduce production var_list -> VAR
-- On INCLUDE reduce production var_list -> VAR
-- On FORALL reduce production var_list -> VAR
-- On FLAG reduce production var_list -> VAR
-- On EOF reduce production var_list -> VAR
-- On ENUM reduce production var_list -> VAR
-- On END reduce production var_list -> VAR
-- On DEFAULT reduce production var_list -> VAR
-- On DEBUG reduce production var_list -> VAR
-- On COMP reduce production var_list -> VAR
-- On CALL reduce production var_list -> VAR
-- On ALT reduce production var_list -> VAR
-- On ACYCLIC reduce production var_list -> VAR

State 173:
comma_opt -> COMMA . [ VAR ]
-- On VAR reduce production comma_opt -> COMMA

State 174:
var_list -> VAR comma_opt . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 172
-- On var_list shift to state 175

State 175:
var_list -> VAR comma_opt var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production var_list -> VAR comma_opt var_list
-- On UNSHOW reduce production var_list -> VAR comma_opt var_list
-- On TESTEMPTY reduce production var_list -> VAR comma_opt var_list
-- On SHOW reduce production var_list -> VAR comma_opt var_list
-- On REQUIRES reduce production var_list -> VAR comma_opt var_list
-- On PROCEDURE reduce production var_list -> VAR comma_opt var_list
-- On MATCH reduce production var_list -> VAR comma_opt var_list
-- On LET reduce production var_list -> VAR comma_opt var_list
-- On LATEX reduce production var_list -> VAR comma_opt var_list
-- On IRREFLEXIVE reduce production var_list -> VAR comma_opt var_list
-- On INSTRUCTIONS reduce production var_list -> VAR comma_opt var_list
-- On INCLUDE reduce production var_list -> VAR comma_opt var_list
-- On FORALL reduce production var_list -> VAR comma_opt var_list
-- On FLAG reduce production var_list -> VAR comma_opt var_list
-- On EOF reduce production var_list -> VAR comma_opt var_list
-- On ENUM reduce production var_list -> VAR comma_opt var_list
-- On END reduce production var_list -> VAR comma_opt var_list
-- On DEFAULT reduce production var_list -> VAR comma_opt var_list
-- On DEBUG reduce production var_list -> VAR comma_opt var_list
-- On COMP reduce production var_list -> VAR comma_opt var_list
-- On CALL reduce production var_list -> VAR comma_opt var_list
-- On ALT reduce production var_list -> VAR comma_opt var_list
-- On ACYCLIC reduce production var_list -> VAR comma_opt var_list

State 176:
ins -> UNSHOW var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> UNSHOW var_list
-- On UNSHOW reduce production ins -> UNSHOW var_list
-- On TESTEMPTY reduce production ins -> UNSHOW var_list
-- On SHOW reduce production ins -> UNSHOW var_list
-- On REQUIRES reduce production ins -> UNSHOW var_list
-- On PROCEDURE reduce production ins -> UNSHOW var_list
-- On MATCH reduce production ins -> UNSHOW var_list
-- On LET reduce production ins -> UNSHOW var_list
-- On LATEX reduce production ins -> UNSHOW var_list
-- On IRREFLEXIVE reduce production ins -> UNSHOW var_list
-- On INSTRUCTIONS reduce production ins -> UNSHOW var_list
-- On INCLUDE reduce production ins -> UNSHOW var_list
-- On FORALL reduce production ins -> UNSHOW var_list
-- On FLAG reduce production ins -> UNSHOW var_list
-- On EOF reduce production ins -> UNSHOW var_list
-- On ENUM reduce production ins -> UNSHOW var_list
-- On END reduce production ins -> UNSHOW var_list
-- On DEFAULT reduce production ins -> UNSHOW var_list
-- On DEBUG reduce production ins -> UNSHOW var_list
-- On COMP reduce production ins -> UNSHOW var_list
-- On CALL reduce production ins -> UNSHOW var_list
-- On ALT reduce production ins -> UNSHOW var_list
-- On ACYCLIC reduce production ins -> UNSHOW var_list

State 177:
ins -> SHOW . exp AS VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> SHOW . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 178
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On var_list shift to state 179
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 180
-- On base shift to state 48

State 178:
exp0 -> VAR . [ VAR UNION UNDERSCORE TAG STAR SEMI PLUSPLUS PLUS OPT LPAR LBRAC LACC INTER HAT EMPTY DIFF BEGIN AS ]
var_list -> VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
var_list -> VAR . comma_opt var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On COMMA shift to state 173
-- On comma_opt shift to state 174
-- On WITH reduce production var_list -> VAR
-- On VAR reduce production exp0 -> VAR
-- On UNSHOW reduce production var_list -> VAR
-- On UNION reduce production exp0 -> VAR
-- On UNDERSCORE reduce production exp0 -> VAR
-- On TESTEMPTY reduce production var_list -> VAR
-- On TAG reduce production exp0 -> VAR
-- On STAR reduce production exp0 -> VAR
-- On SHOW reduce production var_list -> VAR
-- On SEMI reduce production exp0 -> VAR
-- On REQUIRES reduce production var_list -> VAR
-- On PROCEDURE reduce production var_list -> VAR
-- On PLUSPLUS reduce production exp0 -> VAR
-- On PLUS reduce production exp0 -> VAR
-- On OPT reduce production exp0 -> VAR
-- On MATCH reduce production var_list -> VAR
-- On LPAR reduce production exp0 -> VAR
-- On LET reduce production var_list -> VAR
-- On LBRAC reduce production exp0 -> VAR
-- On LATEX reduce production var_list -> VAR
-- On LACC reduce production exp0 -> VAR
-- On IRREFLEXIVE reduce production var_list -> VAR
-- On INTER reduce production exp0 -> VAR
-- On INSTRUCTIONS reduce production var_list -> VAR
-- On INCLUDE reduce production var_list -> VAR
-- On HAT reduce production exp0 -> VAR
-- On FORALL reduce production var_list -> VAR
-- On FLAG reduce production var_list -> VAR
-- On EOF reduce production var_list -> VAR
-- On ENUM reduce production var_list -> VAR
-- On END reduce production var_list -> VAR
-- On EMPTY reduce production exp0 -> VAR
-- On DIFF reduce production exp0 -> VAR
-- On DEFAULT reduce production var_list -> VAR
-- On DEBUG reduce production var_list -> VAR
-- On COMP reduce production var_list -> VAR
-- On CALL reduce production var_list -> VAR
-- On BEGIN reduce production exp0 -> VAR
-- On AS reduce production exp0 -> VAR
-- On ALT reduce production var_list -> VAR
-- On ACYCLIC reduce production var_list -> VAR

State 179:
ins -> SHOW var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> SHOW var_list
-- On UNSHOW reduce production ins -> SHOW var_list
-- On TESTEMPTY reduce production ins -> SHOW var_list
-- On SHOW reduce production ins -> SHOW var_list
-- On REQUIRES reduce production ins -> SHOW var_list
-- On PROCEDURE reduce production ins -> SHOW var_list
-- On MATCH reduce production ins -> SHOW var_list
-- On LET reduce production ins -> SHOW var_list
-- On LATEX reduce production ins -> SHOW var_list
-- On IRREFLEXIVE reduce production ins -> SHOW var_list
-- On INSTRUCTIONS reduce production ins -> SHOW var_list
-- On INCLUDE reduce production ins -> SHOW var_list
-- On FORALL reduce production ins -> SHOW var_list
-- On FLAG reduce production ins -> SHOW var_list
-- On EOF reduce production ins -> SHOW var_list
-- On ENUM reduce production ins -> SHOW var_list
-- On END reduce production ins -> SHOW var_list
-- On DEFAULT reduce production ins -> SHOW var_list
-- On DEBUG reduce production ins -> SHOW var_list
-- On COMP reduce production ins -> SHOW var_list
-- On CALL reduce production ins -> SHOW var_list
-- On ALT reduce production ins -> SHOW var_list
-- On ACYCLIC reduce production ins -> SHOW var_list

State 180:
ins -> SHOW exp . AS VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On AS shift to state 181

State 181:
ins -> SHOW exp AS . VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 182

State 182:
ins -> SHOW exp AS VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> SHOW exp AS VAR
-- On UNSHOW reduce production ins -> SHOW exp AS VAR
-- On TESTEMPTY reduce production ins -> SHOW exp AS VAR
-- On SHOW reduce production ins -> SHOW exp AS VAR
-- On REQUIRES reduce production ins -> SHOW exp AS VAR
-- On PROCEDURE reduce production ins -> SHOW exp AS VAR
-- On MATCH reduce production ins -> SHOW exp AS VAR
-- On LET reduce production ins -> SHOW exp AS VAR
-- On LATEX reduce production ins -> SHOW exp AS VAR
-- On IRREFLEXIVE reduce production ins -> SHOW exp AS VAR
-- On INSTRUCTIONS reduce production ins -> SHOW exp AS VAR
-- On INCLUDE reduce production ins -> SHOW exp AS VAR
-- On FORALL reduce production ins -> SHOW exp AS VAR
-- On FLAG reduce production ins -> SHOW exp AS VAR
-- On EOF reduce production ins -> SHOW exp AS VAR
-- On ENUM reduce production ins -> SHOW exp AS VAR
-- On END reduce production ins -> SHOW exp AS VAR
-- On DEFAULT reduce production ins -> SHOW exp AS VAR
-- On DEBUG reduce production ins -> SHOW exp AS VAR
-- On COMP reduce production ins -> SHOW exp AS VAR
-- On CALL reduce production ins -> SHOW exp AS VAR
-- On ALT reduce production ins -> SHOW exp AS VAR
-- On ACYCLIC reduce production ins -> SHOW exp AS VAR

State 183:
test_type -> REQUIRES . [ TESTEMPTY IRREFLEXIVE COMP ACYCLIC ]
-- On TESTEMPTY reduce production test_type -> REQUIRES
-- On IRREFLEXIVE reduce production test_type -> REQUIRES
-- On COMP reduce production test_type -> REQUIRES
-- On ACYCLIC reduce production test_type -> REQUIRES

State 184:
ins -> PROCEDURE . VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . REC VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . REC VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 185
-- On REC shift to state 268

State 185:
ins -> PROCEDURE VAR . LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE VAR . VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 186
-- On LPAR shift to state 262

State 186:
ins -> PROCEDURE VAR VAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On EQUAL shift to state 187

State 187:
ins -> PROCEDURE VAR VAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 260
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 188:
ins -> MATCH . exp WITH altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 189
-- On base shift to state 48

State 189:
ins -> MATCH exp . WITH altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 190

State 190:
ins -> MATCH exp WITH . altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On ALT shift to state 129
-- On altopt shift to state 191
-- On UNDERSCORE reduce production altopt -> 
-- On TAG reduce production altopt -> 

State 191:
ins -> MATCH exp WITH altopt . ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On UNDERSCORE shift to state 192
-- On TAG shift to state 252
-- On ins_clause_list shift to state 255
-- On ins_clause shift to state 257

State 192:
ins_clause_list -> UNDERSCORE . ARROW ins_list [ END ]
-- On ARROW shift to state 193

State 193:
ins_clause_list -> UNDERSCORE ARROW . ins_list [ END ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 251
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 194:
ins -> LET . pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET . REC pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET . REC pat_bind_list WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 29
-- On REC shift to state 195
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 213
-- On pat_bind shift to state 111
-- On bind shift to state 114

State 195:
ins -> LET REC . pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET REC . pat_bind_list WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 196
-- On pat_bind shift to state 111
-- On bind shift to state 114

State 196:
ins -> LET REC pat_bind_list . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET REC pat_bind_list . WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WHEN shift to state 197
-- On IN shift to state 210
-- On in_opt shift to state 212
-- On WITH reduce production in_opt -> 
-- On UNSHOW reduce production in_opt -> 
-- On TESTEMPTY reduce production in_opt -> 
-- On SHOW reduce production in_opt -> 
-- On REQUIRES reduce production in_opt -> 
-- On PROCEDURE reduce production in_opt -> 
-- On MATCH reduce production in_opt -> 
-- On LET reduce production in_opt -> 
-- On LATEX reduce production in_opt -> 
-- On IRREFLEXIVE reduce production in_opt -> 
-- On INSTRUCTIONS reduce production in_opt -> 
-- On INCLUDE reduce production in_opt -> 
-- On FORALL reduce production in_opt -> 
-- On FLAG reduce production in_opt -> 
-- On EOF reduce production in_opt -> 
-- On ENUM reduce production in_opt -> 
-- On END reduce production in_opt -> 
-- On DEFAULT reduce production in_opt -> 
-- On DEBUG reduce production in_opt -> 
-- On COMP reduce production in_opt -> 
-- On CALL reduce production in_opt -> 
-- On ALT reduce production in_opt -> 
-- On ACYCLIC reduce production in_opt -> 

State 197:
ins -> LET REC pat_bind_list WHEN . app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On COMP shift to state 200
-- On ACYCLIC shift to state 201
-- On test shift to state 203
-- On do_test shift to state 208
-- On app_test shift to state 209

State 198:
do_test -> TESTEMPTY . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On VAR reduce production do_test -> TESTEMPTY
-- On UNDERSCORE reduce production do_test -> TESTEMPTY
-- On TRY reduce production do_test -> TESTEMPTY
-- On TAG reduce production do_test -> TESTEMPTY
-- On MATCH reduce production do_test -> TESTEMPTY
-- On LPAR reduce production do_test -> TESTEMPTY
-- On LET reduce production do_test -> TESTEMPTY
-- On LBRAC reduce production do_test -> TESTEMPTY
-- On LACC reduce production do_test -> TESTEMPTY
-- On IF reduce production do_test -> TESTEMPTY
-- On FUN reduce production do_test -> TESTEMPTY
-- On EMPTY reduce production do_test -> TESTEMPTY
-- On COMP reduce production do_test -> TESTEMPTY
-- On BEGIN reduce production do_test -> TESTEMPTY

State 199:
do_test -> IRREFLEXIVE . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On VAR reduce production do_test -> IRREFLEXIVE
-- On UNDERSCORE reduce production do_test -> IRREFLEXIVE
-- On TRY reduce production do_test -> IRREFLEXIVE
-- On TAG reduce production do_test -> IRREFLEXIVE
-- On MATCH reduce production do_test -> IRREFLEXIVE
-- On LPAR reduce production do_test -> IRREFLEXIVE
-- On LET reduce production do_test -> IRREFLEXIVE
-- On LBRAC reduce production do_test -> IRREFLEXIVE
-- On LACC reduce production do_test -> IRREFLEXIVE
-- On IF reduce production do_test -> IRREFLEXIVE
-- On FUN reduce production do_test -> IRREFLEXIVE
-- On EMPTY reduce production do_test -> IRREFLEXIVE
-- On COMP reduce production do_test -> IRREFLEXIVE
-- On BEGIN reduce production do_test -> IRREFLEXIVE

State 200:
test -> COMP . do_test [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On ACYCLIC shift to state 201
-- On do_test shift to state 202

State 201:
do_test -> ACYCLIC . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On VAR reduce production do_test -> ACYCLIC
-- On UNDERSCORE reduce production do_test -> ACYCLIC
-- On TRY reduce production do_test -> ACYCLIC
-- On TAG reduce production do_test -> ACYCLIC
-- On MATCH reduce production do_test -> ACYCLIC
-- On LPAR reduce production do_test -> ACYCLIC
-- On LET reduce production do_test -> ACYCLIC
-- On LBRAC reduce production do_test -> ACYCLIC
-- On LACC reduce production do_test -> ACYCLIC
-- On IF reduce production do_test -> ACYCLIC
-- On FUN reduce production do_test -> ACYCLIC
-- On EMPTY reduce production do_test -> ACYCLIC
-- On COMP reduce production do_test -> ACYCLIC
-- On BEGIN reduce production do_test -> ACYCLIC

State 202:
test -> COMP do_test . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On VAR reduce production test -> COMP do_test
-- On UNDERSCORE reduce production test -> COMP do_test
-- On TRY reduce production test -> COMP do_test
-- On TAG reduce production test -> COMP do_test
-- On MATCH reduce production test -> COMP do_test
-- On LPAR reduce production test -> COMP do_test
-- On LET reduce production test -> COMP do_test
-- On LBRAC reduce production test -> COMP do_test
-- On LACC reduce production test -> COMP do_test
-- On IF reduce production test -> COMP do_test
-- On FUN reduce production test -> COMP do_test
-- On EMPTY reduce production test -> COMP do_test
-- On COMP reduce production test -> COMP do_test
-- On BEGIN reduce production test -> COMP do_test

State 203:
app_test -> test . exp optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 204
-- On base shift to state 48

State 204:
app_test -> test exp . optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On AS shift to state 205
-- On optional_name shift to state 207
-- On WITH reduce production optional_name -> 
-- On UNSHOW reduce production optional_name -> 
-- On TESTEMPTY reduce production optional_name -> 
-- On SHOW reduce production optional_name -> 
-- On REQUIRES reduce production optional_name -> 
-- On PROCEDURE reduce production optional_name -> 
-- On MATCH reduce production optional_name -> 
-- On LET reduce production optional_name -> 
-- On LATEX reduce production optional_name -> 
-- On IRREFLEXIVE reduce production optional_name -> 
-- On INSTRUCTIONS reduce production optional_name -> 
-- On INCLUDE reduce production optional_name -> 
-- On IN reduce production optional_name -> 
-- On FORALL reduce production optional_name -> 
-- On FLAG reduce production optional_name -> 
-- On EOF reduce production optional_name -> 
-- On ENUM reduce production optional_name -> 
-- On END reduce production optional_name -> 
-- On DEFAULT reduce production optional_name -> 
-- On DEBUG reduce production optional_name -> 
-- On COMP reduce production optional_name -> 
-- On CALL reduce production optional_name -> 
-- On ALT reduce production optional_name -> 
-- On ACYCLIC reduce production optional_name -> 

State 205:
optional_name -> AS . VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 206

State 206:
optional_name -> AS VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production optional_name -> AS VAR
-- On UNSHOW reduce production optional_name -> AS VAR
-- On TESTEMPTY reduce production optional_name -> AS VAR
-- On SHOW reduce production optional_name -> AS VAR
-- On REQUIRES reduce production optional_name -> AS VAR
-- On PROCEDURE reduce production optional_name -> AS VAR
-- On MATCH reduce production optional_name -> AS VAR
-- On LET reduce production optional_name -> AS VAR
-- On LATEX reduce production optional_name -> AS VAR
-- On IRREFLEXIVE reduce production optional_name -> AS VAR
-- On INSTRUCTIONS reduce production optional_name -> AS VAR
-- On INCLUDE reduce production optional_name -> AS VAR
-- On IN reduce production optional_name -> AS VAR
-- On FORALL reduce production optional_name -> AS VAR
-- On FLAG reduce production optional_name -> AS VAR
-- On EOF reduce production optional_name -> AS VAR
-- On ENUM reduce production optional_name -> AS VAR
-- On END reduce production optional_name -> AS VAR
-- On DEFAULT reduce production optional_name -> AS VAR
-- On DEBUG reduce production optional_name -> AS VAR
-- On COMP reduce production optional_name -> AS VAR
-- On CALL reduce production optional_name -> AS VAR
-- On ALT reduce production optional_name -> AS VAR
-- On ACYCLIC reduce production optional_name -> AS VAR

State 207:
app_test -> test exp optional_name . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production app_test -> test exp optional_name
-- On UNSHOW reduce production app_test -> test exp optional_name
-- On TESTEMPTY reduce production app_test -> test exp optional_name
-- On SHOW reduce production app_test -> test exp optional_name
-- On REQUIRES reduce production app_test -> test exp optional_name
-- On PROCEDURE reduce production app_test -> test exp optional_name
-- On MATCH reduce production app_test -> test exp optional_name
-- On LET reduce production app_test -> test exp optional_name
-- On LATEX reduce production app_test -> test exp optional_name
-- On IRREFLEXIVE reduce production app_test -> test exp optional_name
-- On INSTRUCTIONS reduce production app_test -> test exp optional_name
-- On INCLUDE reduce production app_test -> test exp optional_name
-- On IN reduce production app_test -> test exp optional_name
-- On FORALL reduce production app_test -> test exp optional_name
-- On FLAG reduce production app_test -> test exp optional_name
-- On EOF reduce production app_test -> test exp optional_name
-- On ENUM reduce production app_test -> test exp optional_name
-- On END reduce production app_test -> test exp optional_name
-- On DEFAULT reduce production app_test -> test exp optional_name
-- On DEBUG reduce production app_test -> test exp optional_name
-- On COMP reduce production app_test -> test exp optional_name
-- On CALL reduce production app_test -> test exp optional_name
-- On ALT reduce production app_test -> test exp optional_name
-- On ACYCLIC reduce production app_test -> test exp optional_name

State 208:
test -> do_test . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
-- On VAR reduce production test -> do_test
-- On UNDERSCORE reduce production test -> do_test
-- On TRY reduce production test -> do_test
-- On TAG reduce production test -> do_test
-- On MATCH reduce production test -> do_test
-- On LPAR reduce production test -> do_test
-- On LET reduce production test -> do_test
-- On LBRAC reduce production test -> do_test
-- On LACC reduce production test -> do_test
-- On IF reduce production test -> do_test
-- On FUN reduce production test -> do_test
-- On EMPTY reduce production test -> do_test
-- On COMP reduce production test -> do_test
-- On BEGIN reduce production test -> do_test

State 209:
ins -> LET REC pat_bind_list WHEN app_test . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On IN shift to state 210
-- On in_opt shift to state 211
-- On WITH reduce production in_opt -> 
-- On UNSHOW reduce production in_opt -> 
-- On TESTEMPTY reduce production in_opt -> 
-- On SHOW reduce production in_opt -> 
-- On REQUIRES reduce production in_opt -> 
-- On PROCEDURE reduce production in_opt -> 
-- On MATCH reduce production in_opt -> 
-- On LET reduce production in_opt -> 
-- On LATEX reduce production in_opt -> 
-- On IRREFLEXIVE reduce production in_opt -> 
-- On INSTRUCTIONS reduce production in_opt -> 
-- On INCLUDE reduce production in_opt -> 
-- On FORALL reduce production in_opt -> 
-- On FLAG reduce production in_opt -> 
-- On EOF reduce production in_opt -> 
-- On ENUM reduce production in_opt -> 
-- On END reduce production in_opt -> 
-- On DEFAULT reduce production in_opt -> 
-- On DEBUG reduce production in_opt -> 
-- On COMP reduce production in_opt -> 
-- On CALL reduce production in_opt -> 
-- On ALT reduce production in_opt -> 
-- On ACYCLIC reduce production in_opt -> 

State 210:
in_opt -> IN . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production in_opt -> IN
-- On UNSHOW reduce production in_opt -> IN
-- On TESTEMPTY reduce production in_opt -> IN
-- On SHOW reduce production in_opt -> IN
-- On REQUIRES reduce production in_opt -> IN
-- On PROCEDURE reduce production in_opt -> IN
-- On MATCH reduce production in_opt -> IN
-- On LET reduce production in_opt -> IN
-- On LATEX reduce production in_opt -> IN
-- On IRREFLEXIVE reduce production in_opt -> IN
-- On INSTRUCTIONS reduce production in_opt -> IN
-- On INCLUDE reduce production in_opt -> IN
-- On FORALL reduce production in_opt -> IN
-- On FLAG reduce production in_opt -> IN
-- On EOF reduce production in_opt -> IN
-- On ENUM reduce production in_opt -> IN
-- On END reduce production in_opt -> IN
-- On DEFAULT reduce production in_opt -> IN
-- On DEBUG reduce production in_opt -> IN
-- On COMP reduce production in_opt -> IN
-- On CALL reduce production in_opt -> IN
-- On ALT reduce production in_opt -> IN
-- On ACYCLIC reduce production in_opt -> IN

State 211:
ins -> LET REC pat_bind_list WHEN app_test in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On UNSHOW reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On TESTEMPTY reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On SHOW reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On REQUIRES reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On PROCEDURE reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On MATCH reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On LET reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On LATEX reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On IRREFLEXIVE reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On INSTRUCTIONS reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On INCLUDE reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On FORALL reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On FLAG reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On EOF reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On ENUM reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On END reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On DEFAULT reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On DEBUG reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On COMP reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On CALL reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On ALT reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt
-- On ACYCLIC reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt

State 212:
ins -> LET REC pat_bind_list in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> LET REC pat_bind_list in_opt
-- On UNSHOW reduce production ins -> LET REC pat_bind_list in_opt
-- On TESTEMPTY reduce production ins -> LET REC pat_bind_list in_opt
-- On SHOW reduce production ins -> LET REC pat_bind_list in_opt
-- On REQUIRES reduce production ins -> LET REC pat_bind_list in_opt
-- On PROCEDURE reduce production ins -> LET REC pat_bind_list in_opt
-- On MATCH reduce production ins -> LET REC pat_bind_list in_opt
-- On LET reduce production ins -> LET REC pat_bind_list in_opt
-- On LATEX reduce production ins -> LET REC pat_bind_list in_opt
-- On IRREFLEXIVE reduce production ins -> LET REC pat_bind_list in_opt
-- On INSTRUCTIONS reduce production ins -> LET REC pat_bind_list in_opt
-- On INCLUDE reduce production ins -> LET REC pat_bind_list in_opt
-- On FORALL reduce production ins -> LET REC pat_bind_list in_opt
-- On FLAG reduce production ins -> LET REC pat_bind_list in_opt
-- On EOF reduce production ins -> LET REC pat_bind_list in_opt
-- On ENUM reduce production ins -> LET REC pat_bind_list in_opt
-- On END reduce production ins -> LET REC pat_bind_list in_opt
-- On DEFAULT reduce production ins -> LET REC pat_bind_list in_opt
-- On DEBUG reduce production ins -> LET REC pat_bind_list in_opt
-- On COMP reduce production ins -> LET REC pat_bind_list in_opt
-- On CALL reduce production ins -> LET REC pat_bind_list in_opt
-- On ALT reduce production ins -> LET REC pat_bind_list in_opt
-- On ACYCLIC reduce production ins -> LET REC pat_bind_list in_opt

State 213:
ins -> LET pat_bind_list . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On IN shift to state 210
-- On in_opt shift to state 214
-- On WITH reduce production in_opt -> 
-- On UNSHOW reduce production in_opt -> 
-- On TESTEMPTY reduce production in_opt -> 
-- On SHOW reduce production in_opt -> 
-- On REQUIRES reduce production in_opt -> 
-- On PROCEDURE reduce production in_opt -> 
-- On MATCH reduce production in_opt -> 
-- On LET reduce production in_opt -> 
-- On LATEX reduce production in_opt -> 
-- On IRREFLEXIVE reduce production in_opt -> 
-- On INSTRUCTIONS reduce production in_opt -> 
-- On INCLUDE reduce production in_opt -> 
-- On FORALL reduce production in_opt -> 
-- On FLAG reduce production in_opt -> 
-- On EOF reduce production in_opt -> 
-- On ENUM reduce production in_opt -> 
-- On END reduce production in_opt -> 
-- On DEFAULT reduce production in_opt -> 
-- On DEBUG reduce production in_opt -> 
-- On COMP reduce production in_opt -> 
-- On CALL reduce production in_opt -> 
-- On ALT reduce production in_opt -> 
-- On ACYCLIC reduce production in_opt -> 

State 214:
ins -> LET pat_bind_list in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> LET pat_bind_list in_opt
-- On UNSHOW reduce production ins -> LET pat_bind_list in_opt
-- On TESTEMPTY reduce production ins -> LET pat_bind_list in_opt
-- On SHOW reduce production ins -> LET pat_bind_list in_opt
-- On REQUIRES reduce production ins -> LET pat_bind_list in_opt
-- On PROCEDURE reduce production ins -> LET pat_bind_list in_opt
-- On MATCH reduce production ins -> LET pat_bind_list in_opt
-- On LET reduce production ins -> LET pat_bind_list in_opt
-- On LATEX reduce production ins -> LET pat_bind_list in_opt
-- On IRREFLEXIVE reduce production ins -> LET pat_bind_list in_opt
-- On INSTRUCTIONS reduce production ins -> LET pat_bind_list in_opt
-- On INCLUDE reduce production ins -> LET pat_bind_list in_opt
-- On FORALL reduce production ins -> LET pat_bind_list in_opt
-- On FLAG reduce production ins -> LET pat_bind_list in_opt
-- On EOF reduce production ins -> LET pat_bind_list in_opt
-- On ENUM reduce production ins -> LET pat_bind_list in_opt
-- On END reduce production ins -> LET pat_bind_list in_opt
-- On DEFAULT reduce production ins -> LET pat_bind_list in_opt
-- On DEBUG reduce production ins -> LET pat_bind_list in_opt
-- On COMP reduce production ins -> LET pat_bind_list in_opt
-- On CALL reduce production ins -> LET pat_bind_list in_opt
-- On ALT reduce production ins -> LET pat_bind_list in_opt
-- On ACYCLIC reduce production ins -> LET pat_bind_list in_opt

State 215:
ins -> LATEX . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> LATEX
-- On UNSHOW reduce production ins -> LATEX
-- On TESTEMPTY reduce production ins -> LATEX
-- On SHOW reduce production ins -> LATEX
-- On REQUIRES reduce production ins -> LATEX
-- On PROCEDURE reduce production ins -> LATEX
-- On MATCH reduce production ins -> LATEX
-- On LET reduce production ins -> LATEX
-- On LATEX reduce production ins -> LATEX
-- On IRREFLEXIVE reduce production ins -> LATEX
-- On INSTRUCTIONS reduce production ins -> LATEX
-- On INCLUDE reduce production ins -> LATEX
-- On FORALL reduce production ins -> LATEX
-- On FLAG reduce production ins -> LATEX
-- On EOF reduce production ins -> LATEX
-- On ENUM reduce production ins -> LATEX
-- On END reduce production ins -> LATEX
-- On DEFAULT reduce production ins -> LATEX
-- On DEBUG reduce production ins -> LATEX
-- On COMP reduce production ins -> LATEX
-- On CALL reduce production ins -> LATEX
-- On ALT reduce production ins -> LATEX
-- On ACYCLIC reduce production ins -> LATEX

State 216:
ins -> INSTRUCTIONS . VAR LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 217

State 217:
ins -> INSTRUCTIONS VAR . LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On LBRAC shift to state 218

State 218:
ins -> INSTRUCTIONS VAR LBRAC . exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 219
-- On exp_list shift to state 220
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48
-- On RBRAC reduce production exp_list -> 

State 219:
exp_list -> exp_listN . [ RBRAC ]
-- On RBRAC reduce production exp_list -> exp_listN

State 220:
ins -> INSTRUCTIONS VAR LBRAC exp_list . RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On RBRAC shift to state 221

State 221:
ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On UNSHOW reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On TESTEMPTY reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On SHOW reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On REQUIRES reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On PROCEDURE reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On MATCH reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On LET reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On LATEX reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On IRREFLEXIVE reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On INSTRUCTIONS reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On INCLUDE reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On FORALL reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On FLAG reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On EOF reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On ENUM reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On END reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On DEFAULT reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On DEBUG reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On COMP reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On CALL reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On ALT reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC
-- On ACYCLIC reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC

State 222:
exp_listN -> exp . [ RBRAC ]
exp_listN -> exp . COMMA exp_listN [ RBRAC ]
-- On COMMA shift to state 223
-- On RBRAC reduce production exp_listN -> exp

State 223:
exp_listN -> exp COMMA . exp_listN [ RBRAC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 224
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48

State 224:
exp_listN -> exp COMMA exp_listN . [ RBRAC ]
-- On RBRAC reduce production exp_listN -> exp COMMA exp_listN

State 225:
ins -> INCLUDE . STRING [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On STRING shift to state 226

State 226:
ins -> INCLUDE STRING . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> INCLUDE STRING
-- On UNSHOW reduce production ins -> INCLUDE STRING
-- On TESTEMPTY reduce production ins -> INCLUDE STRING
-- On SHOW reduce production ins -> INCLUDE STRING
-- On REQUIRES reduce production ins -> INCLUDE STRING
-- On PROCEDURE reduce production ins -> INCLUDE STRING
-- On MATCH reduce production ins -> INCLUDE STRING
-- On LET reduce production ins -> INCLUDE STRING
-- On LATEX reduce production ins -> INCLUDE STRING
-- On IRREFLEXIVE reduce production ins -> INCLUDE STRING
-- On INSTRUCTIONS reduce production ins -> INCLUDE STRING
-- On INCLUDE reduce production ins -> INCLUDE STRING
-- On FORALL reduce production ins -> INCLUDE STRING
-- On FLAG reduce production ins -> INCLUDE STRING
-- On EOF reduce production ins -> INCLUDE STRING
-- On ENUM reduce production ins -> INCLUDE STRING
-- On END reduce production ins -> INCLUDE STRING
-- On DEFAULT reduce production ins -> INCLUDE STRING
-- On DEBUG reduce production ins -> INCLUDE STRING
-- On COMP reduce production ins -> INCLUDE STRING
-- On CALL reduce production ins -> INCLUDE STRING
-- On ALT reduce production ins -> INCLUDE STRING
-- On ACYCLIC reduce production ins -> INCLUDE STRING

State 227:
ins -> FORALL . VAR IN exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 228

State 228:
ins -> FORALL VAR . IN exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On IN shift to state 229

State 229:
ins -> FORALL VAR IN . exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 230
-- On base shift to state 48

State 230:
ins -> FORALL VAR IN exp . DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On DO shift to state 231

State 231:
ins -> FORALL VAR IN exp DO . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 246
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 232:
test_type -> FLAG . [ TESTEMPTY IRREFLEXIVE COMP ACYCLIC ]
-- On TESTEMPTY reduce production test_type -> FLAG
-- On IRREFLEXIVE reduce production test_type -> FLAG
-- On COMP reduce production test_type -> FLAG
-- On ACYCLIC reduce production test_type -> FLAG

State 233:
ins -> DEFAULT . VAR LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 234

State 234:
ins -> DEFAULT VAR . LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On LBRAC shift to state 235

State 235:
ins -> DEFAULT VAR LBRAC . exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 219
-- On exp_list shift to state 236
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48
-- On RBRAC reduce production exp_list -> 

State 236:
ins -> DEFAULT VAR LBRAC exp_list . RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On RBRAC shift to state 237

State 237:
ins -> DEFAULT VAR LBRAC exp_list RBRAC . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On UNSHOW reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On TESTEMPTY reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On SHOW reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On REQUIRES reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On PROCEDURE reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On MATCH reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On LET reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On LATEX reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On IRREFLEXIVE reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On INSTRUCTIONS reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On INCLUDE reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On FORALL reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On FLAG reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On EOF reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On ENUM reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On END reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On DEFAULT reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On DEBUG reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On COMP reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On CALL reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On ALT reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC
-- On ACYCLIC reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC

State 238:
ins -> DEBUG . exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 239
-- On base shift to state 48

State 239:
ins -> DEBUG exp . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> DEBUG exp
-- On UNSHOW reduce production ins -> DEBUG exp
-- On TESTEMPTY reduce production ins -> DEBUG exp
-- On SHOW reduce production ins -> DEBUG exp
-- On REQUIRES reduce production ins -> DEBUG exp
-- On PROCEDURE reduce production ins -> DEBUG exp
-- On MATCH reduce production ins -> DEBUG exp
-- On LET reduce production ins -> DEBUG exp
-- On LATEX reduce production ins -> DEBUG exp
-- On IRREFLEXIVE reduce production ins -> DEBUG exp
-- On INSTRUCTIONS reduce production ins -> DEBUG exp
-- On INCLUDE reduce production ins -> DEBUG exp
-- On FORALL reduce production ins -> DEBUG exp
-- On FLAG reduce production ins -> DEBUG exp
-- On EOF reduce production ins -> DEBUG exp
-- On ENUM reduce production ins -> DEBUG exp
-- On END reduce production ins -> DEBUG exp
-- On DEFAULT reduce production ins -> DEBUG exp
-- On DEBUG reduce production ins -> DEBUG exp
-- On COMP reduce production ins -> DEBUG exp
-- On CALL reduce production ins -> DEBUG exp
-- On ALT reduce production ins -> DEBUG exp
-- On ACYCLIC reduce production ins -> DEBUG exp

State 240:
ins -> CALL . VAR simple optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 241

State 241:
ins -> CALL VAR . simple optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 242

State 242:
ins -> CALL VAR simple . optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On AS shift to state 205
-- On optional_name shift to state 243
-- On WITH reduce production optional_name -> 
-- On UNSHOW reduce production optional_name -> 
-- On TESTEMPTY reduce production optional_name -> 
-- On SHOW reduce production optional_name -> 
-- On REQUIRES reduce production optional_name -> 
-- On PROCEDURE reduce production optional_name -> 
-- On MATCH reduce production optional_name -> 
-- On LET reduce production optional_name -> 
-- On LATEX reduce production optional_name -> 
-- On IRREFLEXIVE reduce production optional_name -> 
-- On INSTRUCTIONS reduce production optional_name -> 
-- On INCLUDE reduce production optional_name -> 
-- On FORALL reduce production optional_name -> 
-- On FLAG reduce production optional_name -> 
-- On EOF reduce production optional_name -> 
-- On ENUM reduce production optional_name -> 
-- On END reduce production optional_name -> 
-- On DEFAULT reduce production optional_name -> 
-- On DEBUG reduce production optional_name -> 
-- On COMP reduce production optional_name -> 
-- On CALL reduce production optional_name -> 
-- On ALT reduce production optional_name -> 
-- On ACYCLIC reduce production optional_name -> 

State 243:
ins -> CALL VAR simple optional_name . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> CALL VAR simple optional_name
-- On UNSHOW reduce production ins -> CALL VAR simple optional_name
-- On TESTEMPTY reduce production ins -> CALL VAR simple optional_name
-- On SHOW reduce production ins -> CALL VAR simple optional_name
-- On REQUIRES reduce production ins -> CALL VAR simple optional_name
-- On PROCEDURE reduce production ins -> CALL VAR simple optional_name
-- On MATCH reduce production ins -> CALL VAR simple optional_name
-- On LET reduce production ins -> CALL VAR simple optional_name
-- On LATEX reduce production ins -> CALL VAR simple optional_name
-- On IRREFLEXIVE reduce production ins -> CALL VAR simple optional_name
-- On INSTRUCTIONS reduce production ins -> CALL VAR simple optional_name
-- On INCLUDE reduce production ins -> CALL VAR simple optional_name
-- On FORALL reduce production ins -> CALL VAR simple optional_name
-- On FLAG reduce production ins -> CALL VAR simple optional_name
-- On EOF reduce production ins -> CALL VAR simple optional_name
-- On ENUM reduce production ins -> CALL VAR simple optional_name
-- On END reduce production ins -> CALL VAR simple optional_name
-- On DEFAULT reduce production ins -> CALL VAR simple optional_name
-- On DEBUG reduce production ins -> CALL VAR simple optional_name
-- On COMP reduce production ins -> CALL VAR simple optional_name
-- On CALL reduce production ins -> CALL VAR simple optional_name
-- On ALT reduce production ins -> CALL VAR simple optional_name
-- On ACYCLIC reduce production ins -> CALL VAR simple optional_name

State 244:
deftest -> test_type . app_test [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On COMP shift to state 200
-- On ACYCLIC shift to state 201
-- On test shift to state 203
-- On do_test shift to state 208
-- On app_test shift to state 245

State 245:
deftest -> test_type app_test . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production deftest -> test_type app_test
-- On UNSHOW reduce production deftest -> test_type app_test
-- On TESTEMPTY reduce production deftest -> test_type app_test
-- On SHOW reduce production deftest -> test_type app_test
-- On REQUIRES reduce production deftest -> test_type app_test
-- On PROCEDURE reduce production deftest -> test_type app_test
-- On MATCH reduce production deftest -> test_type app_test
-- On LET reduce production deftest -> test_type app_test
-- On LATEX reduce production deftest -> test_type app_test
-- On IRREFLEXIVE reduce production deftest -> test_type app_test
-- On INSTRUCTIONS reduce production deftest -> test_type app_test
-- On INCLUDE reduce production deftest -> test_type app_test
-- On FORALL reduce production deftest -> test_type app_test
-- On FLAG reduce production deftest -> test_type app_test
-- On EOF reduce production deftest -> test_type app_test
-- On ENUM reduce production deftest -> test_type app_test
-- On END reduce production deftest -> test_type app_test
-- On DEFAULT reduce production deftest -> test_type app_test
-- On DEBUG reduce production deftest -> test_type app_test
-- On COMP reduce production deftest -> test_type app_test
-- On CALL reduce production deftest -> test_type app_test
-- On ALT reduce production deftest -> test_type app_test
-- On ACYCLIC reduce production deftest -> test_type app_test

State 246:
ins -> FORALL VAR IN exp DO ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 247

State 247:
ins -> FORALL VAR IN exp DO ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On UNSHOW reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On TESTEMPTY reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On SHOW reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On REQUIRES reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On PROCEDURE reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On MATCH reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On LET reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On LATEX reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On IRREFLEXIVE reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On INSTRUCTIONS reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On INCLUDE reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On FORALL reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On FLAG reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On EOF reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On ENUM reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On END reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On DEFAULT reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On DEBUG reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On COMP reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On CALL reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On ALT reduce production ins -> FORALL VAR IN exp DO ins_list END
-- On ACYCLIC reduce production ins -> FORALL VAR IN exp DO ins_list END

State 248:
ins_list -> ins . ins_list [ END ALT ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 249
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ALT reduce production ins_list -> 
-- On ACYCLIC reduce production test_type -> 

State 249:
ins_list -> ins ins_list . [ END ALT ]
-- On END reduce production ins_list -> ins ins_list
-- On ALT reduce production ins_list -> ins ins_list

State 250:
ins -> deftest . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> deftest
-- On UNSHOW reduce production ins -> deftest
-- On TESTEMPTY reduce production ins -> deftest
-- On SHOW reduce production ins -> deftest
-- On REQUIRES reduce production ins -> deftest
-- On PROCEDURE reduce production ins -> deftest
-- On MATCH reduce production ins -> deftest
-- On LET reduce production ins -> deftest
-- On LATEX reduce production ins -> deftest
-- On IRREFLEXIVE reduce production ins -> deftest
-- On INSTRUCTIONS reduce production ins -> deftest
-- On INCLUDE reduce production ins -> deftest
-- On FORALL reduce production ins -> deftest
-- On FLAG reduce production ins -> deftest
-- On EOF reduce production ins -> deftest
-- On ENUM reduce production ins -> deftest
-- On END reduce production ins -> deftest
-- On DEFAULT reduce production ins -> deftest
-- On DEBUG reduce production ins -> deftest
-- On COMP reduce production ins -> deftest
-- On CALL reduce production ins -> deftest
-- On ALT reduce production ins -> deftest
-- On ACYCLIC reduce production ins -> deftest

State 251:
ins_clause_list -> UNDERSCORE ARROW ins_list . [ END ]
-- On END reduce production ins_clause_list -> UNDERSCORE ARROW ins_list

State 252:
ins_clause -> TAG . ARROW ins_list [ END ALT ]
-- On ARROW shift to state 253

State 253:
ins_clause -> TAG ARROW . ins_list [ END ALT ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 254
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ALT reduce production ins_list -> 
-- On ACYCLIC reduce production test_type -> 

State 254:
ins_clause -> TAG ARROW ins_list . [ END ALT ]
-- On END reduce production ins_clause -> TAG ARROW ins_list
-- On ALT reduce production ins_clause -> TAG ARROW ins_list

State 255:
ins -> MATCH exp WITH altopt ins_clause_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 256

State 256:
ins -> MATCH exp WITH altopt ins_clause_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On UNSHOW reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On TESTEMPTY reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On SHOW reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On REQUIRES reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On PROCEDURE reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On MATCH reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On LET reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On LATEX reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On IRREFLEXIVE reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On INSTRUCTIONS reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On INCLUDE reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On FORALL reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On FLAG reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On EOF reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On ENUM reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On END reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On DEFAULT reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On DEBUG reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On COMP reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On CALL reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On ALT reduce production ins -> MATCH exp WITH altopt ins_clause_list END
-- On ACYCLIC reduce production ins -> MATCH exp WITH altopt ins_clause_list END

State 257:
ins_clause_list -> ins_clause . [ END ]
ins_clause_list -> ins_clause . ALT ins_clause_list [ END ]
-- On ALT shift to state 258
-- On END reduce production ins_clause_list -> ins_clause

State 258:
ins_clause_list -> ins_clause ALT . ins_clause_list [ END ]
-- On UNDERSCORE shift to state 192
-- On TAG shift to state 252
-- On ins_clause_list shift to state 259
-- On ins_clause shift to state 257

State 259:
ins_clause_list -> ins_clause ALT ins_clause_list . [ END ]
-- On END reduce production ins_clause_list -> ins_clause ALT ins_clause_list

State 260:
ins -> PROCEDURE VAR VAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 261

State 261:
ins -> PROCEDURE VAR VAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On UNSHOW reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On TESTEMPTY reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On SHOW reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On REQUIRES reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On PROCEDURE reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On MATCH reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On LET reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On LATEX reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On IRREFLEXIVE reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On INSTRUCTIONS reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On INCLUDE reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On FORALL reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On FLAG reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On EOF reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On ENUM reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On END reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On DEFAULT reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On DEBUG reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On COMP reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On CALL reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On ALT reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END
-- On ACYCLIC reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END

State 262:
ins -> PROCEDURE VAR LPAR . formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 263
-- On RPAR reduce production formals -> 

State 263:
ins -> PROCEDURE VAR LPAR formals . RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On RPAR shift to state 264

State 264:
ins -> PROCEDURE VAR LPAR formals RPAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On EQUAL shift to state 265

State 265:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 266
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 266:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 267

State 267:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On UNSHOW reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On TESTEMPTY reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On SHOW reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On REQUIRES reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On PROCEDURE reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On MATCH reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On LET reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On LATEX reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On IRREFLEXIVE reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On INSTRUCTIONS reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On INCLUDE reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On FORALL reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On FLAG reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On EOF reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On ENUM reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On END reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On DEFAULT reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On DEBUG reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On COMP reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On CALL reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On ALT reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
-- On ACYCLIC reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END

State 268:
ins -> PROCEDURE REC . VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE REC . VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 269

State 269:
ins -> PROCEDURE REC VAR . LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE REC VAR . VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 270
-- On LPAR shift to state 274

State 270:
ins -> PROCEDURE REC VAR VAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On EQUAL shift to state 271

State 271:
ins -> PROCEDURE REC VAR VAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 272
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 272:
ins -> PROCEDURE REC VAR VAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 273

State 273:
ins -> PROCEDURE REC VAR VAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On UNSHOW reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On TESTEMPTY reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On SHOW reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On REQUIRES reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On PROCEDURE reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On MATCH reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On LET reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On LATEX reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On IRREFLEXIVE reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On INSTRUCTIONS reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On INCLUDE reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On FORALL reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On FLAG reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On EOF reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On ENUM reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On END reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On DEFAULT reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On DEBUG reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On COMP reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On CALL reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On ALT reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END
-- On ACYCLIC reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END

State 274:
ins -> PROCEDURE REC VAR LPAR . formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 275
-- On RPAR reduce production formals -> 

State 275:
ins -> PROCEDURE REC VAR LPAR formals . RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On RPAR shift to state 276

State 276:
ins -> PROCEDURE REC VAR LPAR formals RPAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On EQUAL shift to state 277

State 277:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 278
-- On ins shift to state 248
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On END reduce production ins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 278:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On END shift to state 279

State 279:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
-- On WITH reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On UNSHOW reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On TESTEMPTY reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On SHOW reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On REQUIRES reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On PROCEDURE reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On MATCH reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On LET reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On LATEX reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On IRREFLEXIVE reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On INSTRUCTIONS reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On INCLUDE reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On FORALL reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On FLAG reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On EOF reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On ENUM reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On END reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On DEFAULT reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On DEBUG reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On COMP reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On CALL reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On ALT reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
-- On ACYCLIC reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END

State 280:
topins -> ENUM . VAR EQUAL altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On VAR shift to state 281

State 281:
topins -> ENUM VAR . EQUAL altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On EQUAL shift to state 282

State 282:
topins -> ENUM VAR EQUAL . altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On ALT shift to state 129
-- On altopt shift to state 283
-- On TAG reduce production altopt -> 

State 283:
topins -> ENUM VAR EQUAL altopt . alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On TAG shift to state 284
-- On alttags shift to state 287

State 284:
alttags -> TAG . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
alttags -> TAG . ALT alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On ALT shift to state 285
-- On WITH reduce production alttags -> TAG
-- On UNSHOW reduce production alttags -> TAG
-- On TESTEMPTY reduce production alttags -> TAG
-- On SHOW reduce production alttags -> TAG
-- On REQUIRES reduce production alttags -> TAG
-- On PROCEDURE reduce production alttags -> TAG
-- On MATCH reduce production alttags -> TAG
-- On LET reduce production alttags -> TAG
-- On LATEX reduce production alttags -> TAG
-- On IRREFLEXIVE reduce production alttags -> TAG
-- On INSTRUCTIONS reduce production alttags -> TAG
-- On INCLUDE reduce production alttags -> TAG
-- On FORALL reduce production alttags -> TAG
-- On FLAG reduce production alttags -> TAG
-- On EOF reduce production alttags -> TAG
-- On ENUM reduce production alttags -> TAG
-- On DEFAULT reduce production alttags -> TAG
-- On DEBUG reduce production alttags -> TAG
-- On COMP reduce production alttags -> TAG
-- On CALL reduce production alttags -> TAG
-- On ACYCLIC reduce production alttags -> TAG

State 285:
alttags -> TAG ALT . alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On TAG shift to state 284
-- On alttags shift to state 286

State 286:
alttags -> TAG ALT alttags . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production alttags -> TAG ALT alttags
-- On UNSHOW reduce production alttags -> TAG ALT alttags
-- On TESTEMPTY reduce production alttags -> TAG ALT alttags
-- On SHOW reduce production alttags -> TAG ALT alttags
-- On REQUIRES reduce production alttags -> TAG ALT alttags
-- On PROCEDURE reduce production alttags -> TAG ALT alttags
-- On MATCH reduce production alttags -> TAG ALT alttags
-- On LET reduce production alttags -> TAG ALT alttags
-- On LATEX reduce production alttags -> TAG ALT alttags
-- On IRREFLEXIVE reduce production alttags -> TAG ALT alttags
-- On INSTRUCTIONS reduce production alttags -> TAG ALT alttags
-- On INCLUDE reduce production alttags -> TAG ALT alttags
-- On FORALL reduce production alttags -> TAG ALT alttags
-- On FLAG reduce production alttags -> TAG ALT alttags
-- On EOF reduce production alttags -> TAG ALT alttags
-- On ENUM reduce production alttags -> TAG ALT alttags
-- On DEFAULT reduce production alttags -> TAG ALT alttags
-- On DEBUG reduce production alttags -> TAG ALT alttags
-- On COMP reduce production alttags -> TAG ALT alttags
-- On CALL reduce production alttags -> TAG ALT alttags
-- On ACYCLIC reduce production alttags -> TAG ALT alttags

State 287:
topins -> ENUM VAR EQUAL altopt alttags . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On UNSHOW reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On TESTEMPTY reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On SHOW reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On REQUIRES reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On PROCEDURE reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On MATCH reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On LET reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On LATEX reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On IRREFLEXIVE reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On INSTRUCTIONS reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On INCLUDE reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On FORALL reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On FLAG reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On EOF reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On ENUM reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On DEFAULT reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On DEBUG reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On COMP reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On CALL reduce production topins -> ENUM VAR EQUAL altopt alttags
-- On ACYCLIC reduce production topins -> ENUM VAR EQUAL altopt alttags

State 288:
main -> identity options topins_list . EOF [ # ]
-- On EOF shift to state 289

State 289:
main -> identity options topins_list EOF . [ # ]
-- On # reduce production main -> identity options topins_list EOF

State 290:
topins_list -> topins . topins_list [ EOF ]
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On ENUM shift to state 280
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On topins_list shift to state 291
-- On topins shift to state 290
-- On test_type shift to state 244
-- On ins shift to state 292
-- On deftest shift to state 250
-- On TESTEMPTY reduce production test_type -> 
-- On IRREFLEXIVE reduce production test_type -> 
-- On EOF reduce production topins_list -> 
-- On COMP reduce production test_type -> 
-- On ACYCLIC reduce production test_type -> 

State 291:
topins_list -> topins topins_list . [ EOF ]
-- On EOF reduce production topins_list -> topins topins_list

State 292:
topins -> ins . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
-- On WITH reduce production topins -> ins
-- On UNSHOW reduce production topins -> ins
-- On TESTEMPTY reduce production topins -> ins
-- On SHOW reduce production topins -> ins
-- On REQUIRES reduce production topins -> ins
-- On PROCEDURE reduce production topins -> ins
-- On MATCH reduce production topins -> ins
-- On LET reduce production topins -> ins
-- On LATEX reduce production topins -> ins
-- On IRREFLEXIVE reduce production topins -> ins
-- On INSTRUCTIONS reduce production topins -> ins
-- On INCLUDE reduce production topins -> ins
-- On FORALL reduce production topins -> ins
-- On FLAG reduce production topins -> ins
-- On EOF reduce production topins -> ins
-- On ENUM reduce production topins -> ins
-- On DEFAULT reduce production topins -> ins
-- On DEBUG reduce production topins -> ins
-- On COMP reduce production topins -> ins
-- On CALL reduce production topins -> ins
-- On ACYCLIC reduce production topins -> ins

