State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On VAR shift to state 1
-- On STRING shift to state 2
-- On main shift to state 3
-- On identity shift to state 4
## Reductions:
-- On WITHSC reduce production identity ->
-- On WITHOUTSC reduce production identity ->
-- On WITHOUTINIT reduce production identity ->
-- On WITHOUTCO reduce production identity ->
-- On WITHINIT reduce production identity ->
-- On WITHCO reduce production identity ->
-- On WITH reduce production identity ->
-- On UNSHOW reduce production identity ->
-- On TESTEMPTY reduce production identity ->
-- On SHOW reduce production identity ->
-- On REQUIRES reduce production identity ->
-- On PROCEDURE reduce production identity ->
-- On MATCH reduce production identity ->
-- On LET reduce production identity ->
-- On LATEX reduce production identity ->
-- On IRREFLEXIVE reduce production identity ->
-- On INSTRUCTIONS reduce production identity ->
-- On INCLUDE reduce production identity ->
-- On FORALL reduce production identity ->
-- On FLAG reduce production identity ->
-- On EOF reduce production identity ->
-- On ENUM reduce production identity ->
-- On DEFAULT reduce production identity ->
-- On DEBUG reduce production identity ->
-- On COMP reduce production identity ->
-- On CALL reduce production identity ->
-- On ACYCLIC reduce production identity ->

State 1:
## Known stack suffix:
## VAR
## LR(1) items:
identity -> VAR . [ WITHSC WITHOUTSC WITHOUTINIT WITHOUTCO WITHINIT WITHCO WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identity -> VAR

State 2:
## Known stack suffix:
## STRING
## LR(1) items:
identity -> STRING . [ WITHSC WITHOUTSC WITHOUTINIT WITHOUTCO WITHINIT WITHCO WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identity -> STRING

State 3:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 4:
## Known stack suffix:
## identity
## LR(1) items:
main -> identity . options topins_list EOF [ # ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 17
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 5:
## Known stack suffix:
## WITHSC
## LR(1) items:
options -> WITHSC . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 16
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 6:
## Known stack suffix:
## WITHOUTSC
## LR(1) items:
options -> WITHOUTSC . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 15
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 7:
## Known stack suffix:
## WITHOUTINIT
## LR(1) items:
options -> WITHOUTINIT . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 14
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 8:
## Known stack suffix:
## WITHOUTCO
## LR(1) items:
options -> WITHOUTCO . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 13
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 9:
## Known stack suffix:
## WITHINIT
## LR(1) items:
options -> WITHINIT . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 12
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 10:
## Known stack suffix:
## WITHCO
## LR(1) items:
options -> WITHCO . options [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On WITHSC shift to state 5
-- On WITHOUTSC shift to state 6
-- On WITHOUTINIT shift to state 7
-- On WITHOUTCO shift to state 8
-- On WITHINIT shift to state 9
-- On WITHCO shift to state 10
-- On options shift to state 11
## Reductions:
-- On WITH reduce production options ->
-- On UNSHOW reduce production options ->
-- On TESTEMPTY reduce production options ->
-- On SHOW reduce production options ->
-- On REQUIRES reduce production options ->
-- On PROCEDURE reduce production options ->
-- On MATCH reduce production options ->
-- On LET reduce production options ->
-- On LATEX reduce production options ->
-- On IRREFLEXIVE reduce production options ->
-- On INSTRUCTIONS reduce production options ->
-- On INCLUDE reduce production options ->
-- On FORALL reduce production options ->
-- On FLAG reduce production options ->
-- On EOF reduce production options ->
-- On ENUM reduce production options ->
-- On DEFAULT reduce production options ->
-- On DEBUG reduce production options ->
-- On COMP reduce production options ->
-- On CALL reduce production options ->
-- On ACYCLIC reduce production options ->

State 11:
## Known stack suffix:
## WITHCO options
## LR(1) items:
options -> WITHCO options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHCO options

State 12:
## Known stack suffix:
## WITHINIT options
## LR(1) items:
options -> WITHINIT options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHINIT options

State 13:
## Known stack suffix:
## WITHOUTCO options
## LR(1) items:
options -> WITHOUTCO options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHOUTCO options

State 14:
## Known stack suffix:
## WITHOUTINIT options
## LR(1) items:
options -> WITHOUTINIT options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHOUTINIT options

State 15:
## Known stack suffix:
## WITHOUTSC options
## LR(1) items:
options -> WITHOUTSC options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHOUTSC options

State 16:
## Known stack suffix:
## WITHSC options
## LR(1) items:
options -> WITHSC options . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> WITHSC options

State 17:
## Known stack suffix:
## identity options
## LR(1) items:
main -> identity options . topins_list EOF [ # ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On ENUM shift to state 280
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On topins_list shift to state 288
-- On topins shift to state 290
-- On test_type shift to state 244
-- On ins shift to state 292
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On EOF reduce production topins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 18:
## Known stack suffix:
## WITH
## LR(1) items:
ins -> WITH . VAR FROM exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## WITH VAR
## LR(1) items:
ins -> WITH VAR . FROM exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On FROM shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## WITH VAR FROM
## LR(1) items:
ins -> WITH VAR FROM . exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 170
-- On base shift to state 48
## Reductions:

State 21:
## Known stack suffix:
## VAR
## LR(1) items:
exp0 -> VAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp0 -> VAR

State 22:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
simple -> UNDERSCORE . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> UNDERSCORE

State 23:
## Known stack suffix:
## TRY
## LR(1) items:
exp -> TRY . exp WITH exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 167
-- On base shift to state 48
## Reductions:

State 24:
## Known stack suffix:
## TAG
## LR(1) items:
simple -> TAG . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> TAG

State 25:
## Known stack suffix:
## MATCH
## LR(1) items:
exp -> MATCH . exp WITH altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH . exp WITH altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 127
-- On base shift to state 48
## Reductions:

State 26:
## Known stack suffix:
## LPAR
## LR(1) items:
simple -> LPAR . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
simple -> LPAR . tupleargs RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
simple -> LPAR . exp RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On RPAR shift to state 27
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleargs shift to state 118
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 120
-- On base shift to state 48
## Reductions:

State 27:
## Known stack suffix:
## LPAR RPAR
## LR(1) items:
simple -> LPAR RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> LPAR RPAR

State 28:
## Known stack suffix:
## LET
## LR(1) items:
exp -> LET . pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> LET . REC pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 29
-- On REC shift to state 102
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 115
-- On pat_bind shift to state 111
-- On bind shift to state 114
## Reductions:

State 29:
## Known stack suffix:
## VAR
## LR(1) items:
bind -> VAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
pat_bind -> VAR . VAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
pat_bind -> VAR . LPAR formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 30
-- On LPAR shift to state 95
-- On EQUAL shift to state 100
## Reductions:

State 30:
## Known stack suffix:
## VAR VAR
## LR(1) items:
pat_bind -> VAR VAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## VAR VAR EQUAL
## LR(1) items:
pat_bind -> VAR VAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 94
-- On base shift to state 48
## Reductions:

State 32:
## Known stack suffix:
## LBRAC
## LR(1) items:
simple -> LBRAC . exp RBRAC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 92
-- On base shift to state 48
## Reductions:

State 33:
## Known stack suffix:
## LACC
## LR(1) items:
simple -> LACC . args RACC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 86
-- On base shift to state 48
-- On argsN shift to state 89
-- On args shift to state 90
## Reductions:
-- On RACC reduce production args ->

State 34:
## Known stack suffix:
## IF
## LR(1) items:
exp -> IF . cond THEN exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 76
-- On cond shift to state 81
-- On base shift to state 48
## Reductions:

State 35:
## Known stack suffix:
## FUN
## LR(1) items:
exp -> FUN . VAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> FUN . LPAR formals RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 36
-- On LPAR shift to state 67
## Reductions:

State 36:
## Known stack suffix:
## FUN VAR
## LR(1) items:
exp -> FUN VAR . ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On ARROW shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## FUN VAR ARROW
## LR(1) items:
exp -> FUN VAR ARROW . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 66
-- On base shift to state 48
## Reductions:

State 38:
## Known stack suffix:
## EMPTY
## LR(1) items:
simple -> EMPTY . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> EMPTY

State 39:
## Known stack suffix:
## COMP
## LR(1) items:
base -> COMP . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 65
## Reductions:

State 40:
## Known stack suffix:
## BEGIN
## LR(1) items:
simple -> BEGIN . exp END [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 46
-- On base shift to state 48
## Reductions:

State 41:
## Known stack suffix:
## simple
## LR(1) items:
base -> simple . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> simple

State 42:
## Known stack suffix:
## exp0
## LR(1) items:
base -> exp0 . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp0 -> exp0 . arg [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 43
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 44
-- On arg shift to state 45
## Reductions:
-- On WITH reduce production base -> exp0
-- On WHEN reduce production base -> exp0
-- On UNSHOW reduce production base -> exp0
-- On UNION reduce production base -> exp0
-- On THEN reduce production base -> exp0
-- On TESTEMPTY reduce production base -> exp0
-- On SUBSET reduce production base -> exp0
-- On STAR reduce production base -> exp0
-- On SHOW reduce production base -> exp0
-- On SEMI reduce production base -> exp0
-- On RPAR reduce production base -> exp0
-- On REQUIRES reduce production base -> exp0
-- On RBRAC reduce production base -> exp0
-- On RACC reduce production base -> exp0
-- On PROCEDURE reduce production base -> exp0
-- On PLUSPLUS reduce production base -> exp0
-- On PLUS reduce production base -> exp0
-- On OPT reduce production base -> exp0
-- On MATCH reduce production base -> exp0
-- On LET reduce production base -> exp0
-- On LATEX reduce production base -> exp0
-- On IRREFLEXIVE reduce production base -> exp0
-- On INTER reduce production base -> exp0
-- On INSTRUCTIONS reduce production base -> exp0
-- On INCLUDE reduce production base -> exp0
-- On IN reduce production base -> exp0
-- On HAT reduce production base -> exp0
-- On FORALL reduce production base -> exp0
-- On FLAG reduce production base -> exp0
-- On EQUAL reduce production base -> exp0
-- On EOF reduce production base -> exp0
-- On ENUM reduce production base -> exp0
-- On END reduce production base -> exp0
-- On ELSE reduce production base -> exp0
-- On DO reduce production base -> exp0
-- On DIFF reduce production base -> exp0
-- On DEFAULT reduce production base -> exp0
-- On DEBUG reduce production base -> exp0
-- On COMP reduce production base -> exp0
-- On COMMA reduce production base -> exp0
-- On CALL reduce production base -> exp0
-- On AS reduce production base -> exp0
-- On AND reduce production base -> exp0
-- On ALT reduce production base -> exp0
-- On ACYCLIC reduce production base -> exp0

State 43:
## Known stack suffix:
## VAR
## LR(1) items:
arg -> VAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg -> VAR

State 44:
## Known stack suffix:
## simple
## LR(1) items:
arg -> simple . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arg -> simple

State 45:
## Known stack suffix:
## exp0 arg
## LR(1) items:
exp0 -> exp0 arg . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp0 -> exp0 arg

State 46:
## Known stack suffix:
## BEGIN exp
## LR(1) items:
simple -> BEGIN exp . END [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On END shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## BEGIN exp END
## LR(1) items:
simple -> BEGIN exp END . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> BEGIN exp END

State 48:
## Known stack suffix:
## base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> base . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On UNION shift to state 49
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
## Reductions:
-- On WITH reduce production exp -> base
-- On WHEN reduce production exp -> base
-- On UNSHOW reduce production exp -> base
-- On THEN reduce production exp -> base
-- On TESTEMPTY reduce production exp -> base
-- On SUBSET reduce production exp -> base
-- On SHOW reduce production exp -> base
-- On RPAR reduce production exp -> base
-- On REQUIRES reduce production exp -> base
-- On RBRAC reduce production exp -> base
-- On RACC reduce production exp -> base
-- On PROCEDURE reduce production exp -> base
-- On MATCH reduce production exp -> base
-- On LET reduce production exp -> base
-- On LATEX reduce production exp -> base
-- On IRREFLEXIVE reduce production exp -> base
-- On INSTRUCTIONS reduce production exp -> base
-- On INCLUDE reduce production exp -> base
-- On IN reduce production exp -> base
-- On FORALL reduce production exp -> base
-- On FLAG reduce production exp -> base
-- On EQUAL reduce production exp -> base
-- On EOF reduce production exp -> base
-- On ENUM reduce production exp -> base
-- On END reduce production exp -> base
-- On ELSE reduce production exp -> base
-- On DO reduce production exp -> base
-- On DEFAULT reduce production exp -> base
-- On DEBUG reduce production exp -> base
-- On COMP reduce production exp -> base
-- On COMMA reduce production exp -> base
-- On CALL reduce production exp -> base
-- On AS reduce production exp -> base
-- On AND reduce production exp -> base
-- On ALT reduce production exp -> base
-- On ACYCLIC reduce production exp -> base

State 49:
## Known stack suffix:
## base UNION
## LR(1) items:
base -> base UNION . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## base UNION base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base UNION base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On UNION shift to state 49
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
## Reductions:
-- On WITH reduce production base -> base UNION base
-- On WHEN reduce production base -> base UNION base
-- On UNSHOW reduce production base -> base UNION base
-- On THEN reduce production base -> base UNION base
-- On TESTEMPTY reduce production base -> base UNION base
-- On SUBSET reduce production base -> base UNION base
-- On SHOW reduce production base -> base UNION base
-- On RPAR reduce production base -> base UNION base
-- On REQUIRES reduce production base -> base UNION base
-- On RBRAC reduce production base -> base UNION base
-- On RACC reduce production base -> base UNION base
-- On PROCEDURE reduce production base -> base UNION base
-- On MATCH reduce production base -> base UNION base
-- On LET reduce production base -> base UNION base
-- On LATEX reduce production base -> base UNION base
-- On IRREFLEXIVE reduce production base -> base UNION base
-- On INSTRUCTIONS reduce production base -> base UNION base
-- On INCLUDE reduce production base -> base UNION base
-- On IN reduce production base -> base UNION base
-- On FORALL reduce production base -> base UNION base
-- On FLAG reduce production base -> base UNION base
-- On EQUAL reduce production base -> base UNION base
-- On EOF reduce production base -> base UNION base
-- On ENUM reduce production base -> base UNION base
-- On END reduce production base -> base UNION base
-- On ELSE reduce production base -> base UNION base
-- On DO reduce production base -> base UNION base
-- On DEFAULT reduce production base -> base UNION base
-- On DEBUG reduce production base -> base UNION base
-- On COMP reduce production base -> base UNION base
-- On COMMA reduce production base -> base UNION base
-- On CALL reduce production base -> base UNION base
-- On AS reduce production base -> base UNION base
-- On AND reduce production base -> base UNION base
-- On ALT reduce production base -> base UNION base
-- On ACYCLIC reduce production base -> base UNION base

State 51:
## Known stack suffix:
## base STAR
## LR(1) items:
base -> base STAR . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base STAR . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 52
## Reductions:
-- On WITH reduce production base -> base STAR
-- On WHEN reduce production base -> base STAR
-- On UNSHOW reduce production base -> base STAR
-- On UNION reduce production base -> base STAR
-- On THEN reduce production base -> base STAR
-- On TESTEMPTY reduce production base -> base STAR
-- On SUBSET reduce production base -> base STAR
-- On STAR reduce production base -> base STAR
-- On SHOW reduce production base -> base STAR
-- On SEMI reduce production base -> base STAR
-- On RPAR reduce production base -> base STAR
-- On REQUIRES reduce production base -> base STAR
-- On RBRAC reduce production base -> base STAR
-- On RACC reduce production base -> base STAR
-- On PROCEDURE reduce production base -> base STAR
-- On PLUSPLUS reduce production base -> base STAR
-- On PLUS reduce production base -> base STAR
-- On OPT reduce production base -> base STAR
-- On MATCH reduce production base -> base STAR
-- On LET reduce production base -> base STAR
-- On LATEX reduce production base -> base STAR
-- On IRREFLEXIVE reduce production base -> base STAR
-- On INTER reduce production base -> base STAR
-- On INSTRUCTIONS reduce production base -> base STAR
-- On INCLUDE reduce production base -> base STAR
-- On IN reduce production base -> base STAR
-- On HAT reduce production base -> base STAR
-- On FORALL reduce production base -> base STAR
-- On FLAG reduce production base -> base STAR
-- On EQUAL reduce production base -> base STAR
-- On EOF reduce production base -> base STAR
-- On ENUM reduce production base -> base STAR
-- On END reduce production base -> base STAR
-- On ELSE reduce production base -> base STAR
-- On DO reduce production base -> base STAR
-- On DIFF reduce production base -> base STAR
-- On DEFAULT reduce production base -> base STAR
-- On DEBUG reduce production base -> base STAR
-- On COMMA reduce production base -> base STAR
-- On CALL reduce production base -> base STAR
-- On AS reduce production base -> base STAR
-- On AND reduce production base -> base STAR
-- On ALT reduce production base -> base STAR
-- On ACYCLIC reduce production base -> base STAR

State 52:
## Known stack suffix:
## base STAR base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base STAR base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On HAT shift to state 53
## Reductions:
-- On WITH reduce production base -> base STAR base
-- On WHEN reduce production base -> base STAR base
-- On UNSHOW reduce production base -> base STAR base
-- On UNION reduce production base -> base STAR base
-- On THEN reduce production base -> base STAR base
-- On TESTEMPTY reduce production base -> base STAR base
-- On SUBSET reduce production base -> base STAR base
-- On SHOW reduce production base -> base STAR base
-- On SEMI reduce production base -> base STAR base
-- On RPAR reduce production base -> base STAR base
-- On REQUIRES reduce production base -> base STAR base
-- On RBRAC reduce production base -> base STAR base
-- On RACC reduce production base -> base STAR base
-- On PROCEDURE reduce production base -> base STAR base
-- On PLUSPLUS reduce production base -> base STAR base
-- On MATCH reduce production base -> base STAR base
-- On LET reduce production base -> base STAR base
-- On LATEX reduce production base -> base STAR base
-- On IRREFLEXIVE reduce production base -> base STAR base
-- On INTER reduce production base -> base STAR base
-- On INSTRUCTIONS reduce production base -> base STAR base
-- On INCLUDE reduce production base -> base STAR base
-- On IN reduce production base -> base STAR base
-- On FORALL reduce production base -> base STAR base
-- On FLAG reduce production base -> base STAR base
-- On EQUAL reduce production base -> base STAR base
-- On EOF reduce production base -> base STAR base
-- On ENUM reduce production base -> base STAR base
-- On END reduce production base -> base STAR base
-- On ELSE reduce production base -> base STAR base
-- On DO reduce production base -> base STAR base
-- On DIFF reduce production base -> base STAR base
-- On DEFAULT reduce production base -> base STAR base
-- On DEBUG reduce production base -> base STAR base
-- On COMP reduce production base -> base STAR base
-- On COMMA reduce production base -> base STAR base
-- On CALL reduce production base -> base STAR base
-- On AS reduce production base -> base STAR base
-- On AND reduce production base -> base STAR base
-- On ALT reduce production base -> base STAR base
-- On ACYCLIC reduce production base -> base STAR base

State 53:
## Known stack suffix:
## base HAT
## LR(1) items:
base -> base HAT . INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On INV shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## base HAT INV
## LR(1) items:
base -> base HAT INV . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> base HAT INV

State 55:
## Known stack suffix:
## base SEMI
## LR(1) items:
base -> base SEMI . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## base SEMI base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base SEMI base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
## Reductions:
-- On WITH reduce production base -> base SEMI base
-- On WHEN reduce production base -> base SEMI base
-- On UNSHOW reduce production base -> base SEMI base
-- On UNION reduce production base -> base SEMI base
-- On THEN reduce production base -> base SEMI base
-- On TESTEMPTY reduce production base -> base SEMI base
-- On SUBSET reduce production base -> base SEMI base
-- On SHOW reduce production base -> base SEMI base
-- On RPAR reduce production base -> base SEMI base
-- On REQUIRES reduce production base -> base SEMI base
-- On RBRAC reduce production base -> base SEMI base
-- On RACC reduce production base -> base SEMI base
-- On PROCEDURE reduce production base -> base SEMI base
-- On PLUSPLUS reduce production base -> base SEMI base
-- On MATCH reduce production base -> base SEMI base
-- On LET reduce production base -> base SEMI base
-- On LATEX reduce production base -> base SEMI base
-- On IRREFLEXIVE reduce production base -> base SEMI base
-- On INSTRUCTIONS reduce production base -> base SEMI base
-- On INCLUDE reduce production base -> base SEMI base
-- On IN reduce production base -> base SEMI base
-- On FORALL reduce production base -> base SEMI base
-- On FLAG reduce production base -> base SEMI base
-- On EQUAL reduce production base -> base SEMI base
-- On EOF reduce production base -> base SEMI base
-- On ENUM reduce production base -> base SEMI base
-- On END reduce production base -> base SEMI base
-- On ELSE reduce production base -> base SEMI base
-- On DO reduce production base -> base SEMI base
-- On DEFAULT reduce production base -> base SEMI base
-- On DEBUG reduce production base -> base SEMI base
-- On COMP reduce production base -> base SEMI base
-- On COMMA reduce production base -> base SEMI base
-- On CALL reduce production base -> base SEMI base
-- On AS reduce production base -> base SEMI base
-- On AND reduce production base -> base SEMI base
-- On ALT reduce production base -> base SEMI base
-- On ACYCLIC reduce production base -> base SEMI base

State 57:
## Known stack suffix:
## base PLUS
## LR(1) items:
base -> base PLUS . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> base PLUS

State 58:
## Known stack suffix:
## base OPT
## LR(1) items:
base -> base OPT . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base -> base OPT

State 59:
## Known stack suffix:
## base INTER
## LR(1) items:
base -> base INTER . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## base INTER base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base INTER base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On STAR shift to state 51
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
## Reductions:
-- On WITH reduce production base -> base INTER base
-- On WHEN reduce production base -> base INTER base
-- On UNSHOW reduce production base -> base INTER base
-- On UNION reduce production base -> base INTER base
-- On THEN reduce production base -> base INTER base
-- On TESTEMPTY reduce production base -> base INTER base
-- On SUBSET reduce production base -> base INTER base
-- On SHOW reduce production base -> base INTER base
-- On SEMI reduce production base -> base INTER base
-- On RPAR reduce production base -> base INTER base
-- On REQUIRES reduce production base -> base INTER base
-- On RBRAC reduce production base -> base INTER base
-- On RACC reduce production base -> base INTER base
-- On PROCEDURE reduce production base -> base INTER base
-- On PLUSPLUS reduce production base -> base INTER base
-- On MATCH reduce production base -> base INTER base
-- On LET reduce production base -> base INTER base
-- On LATEX reduce production base -> base INTER base
-- On IRREFLEXIVE reduce production base -> base INTER base
-- On INSTRUCTIONS reduce production base -> base INTER base
-- On INCLUDE reduce production base -> base INTER base
-- On IN reduce production base -> base INTER base
-- On FORALL reduce production base -> base INTER base
-- On FLAG reduce production base -> base INTER base
-- On EQUAL reduce production base -> base INTER base
-- On EOF reduce production base -> base INTER base
-- On ENUM reduce production base -> base INTER base
-- On END reduce production base -> base INTER base
-- On ELSE reduce production base -> base INTER base
-- On DO reduce production base -> base INTER base
-- On DIFF reduce production base -> base INTER base
-- On DEFAULT reduce production base -> base INTER base
-- On DEBUG reduce production base -> base INTER base
-- On COMP reduce production base -> base INTER base
-- On COMMA reduce production base -> base INTER base
-- On CALL reduce production base -> base INTER base
-- On AS reduce production base -> base INTER base
-- On AND reduce production base -> base INTER base
-- On ALT reduce production base -> base INTER base
-- On ACYCLIC reduce production base -> base INTER base

State 61:
## Known stack suffix:
## base DIFF
## LR(1) items:
base -> base DIFF . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## base DIFF base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base DIFF base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On STAR shift to state 51
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
## Reductions:
-- On WITH reduce production base -> base DIFF base
-- On WHEN reduce production base -> base DIFF base
-- On UNSHOW reduce production base -> base DIFF base
-- On UNION reduce production base -> base DIFF base
-- On THEN reduce production base -> base DIFF base
-- On TESTEMPTY reduce production base -> base DIFF base
-- On SUBSET reduce production base -> base DIFF base
-- On SHOW reduce production base -> base DIFF base
-- On SEMI reduce production base -> base DIFF base
-- On RPAR reduce production base -> base DIFF base
-- On REQUIRES reduce production base -> base DIFF base
-- On RBRAC reduce production base -> base DIFF base
-- On RACC reduce production base -> base DIFF base
-- On PROCEDURE reduce production base -> base DIFF base
-- On PLUSPLUS reduce production base -> base DIFF base
-- On MATCH reduce production base -> base DIFF base
-- On LET reduce production base -> base DIFF base
-- On LATEX reduce production base -> base DIFF base
-- On IRREFLEXIVE reduce production base -> base DIFF base
-- On INSTRUCTIONS reduce production base -> base DIFF base
-- On INCLUDE reduce production base -> base DIFF base
-- On IN reduce production base -> base DIFF base
-- On FORALL reduce production base -> base DIFF base
-- On FLAG reduce production base -> base DIFF base
-- On EQUAL reduce production base -> base DIFF base
-- On EOF reduce production base -> base DIFF base
-- On ENUM reduce production base -> base DIFF base
-- On END reduce production base -> base DIFF base
-- On ELSE reduce production base -> base DIFF base
-- On DO reduce production base -> base DIFF base
-- On DIFF reduce production base -> base DIFF base
-- On DEFAULT reduce production base -> base DIFF base
-- On DEBUG reduce production base -> base DIFF base
-- On COMP reduce production base -> base DIFF base
-- On COMMA reduce production base -> base DIFF base
-- On CALL reduce production base -> base DIFF base
-- On AS reduce production base -> base DIFF base
-- On AND reduce production base -> base DIFF base
-- On ALT reduce production base -> base DIFF base
-- On ACYCLIC reduce production base -> base DIFF base

State 63:
## Known stack suffix:
## base PLUSPLUS
## LR(1) items:
base -> base PLUSPLUS . base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On base shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## base PLUSPLUS base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base PLUSPLUS base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On STAR shift to state 51
-- On SEMI shift to state 55
-- On PLUSPLUS shift to state 63
-- On PLUS shift to state 57
-- On OPT shift to state 58
-- On INTER shift to state 59
-- On HAT shift to state 53
-- On DIFF shift to state 61
## Reductions:
-- On WITH reduce production base -> base PLUSPLUS base
-- On WHEN reduce production base -> base PLUSPLUS base
-- On UNSHOW reduce production base -> base PLUSPLUS base
-- On UNION reduce production base -> base PLUSPLUS base
-- On THEN reduce production base -> base PLUSPLUS base
-- On TESTEMPTY reduce production base -> base PLUSPLUS base
-- On SUBSET reduce production base -> base PLUSPLUS base
-- On SHOW reduce production base -> base PLUSPLUS base
-- On RPAR reduce production base -> base PLUSPLUS base
-- On REQUIRES reduce production base -> base PLUSPLUS base
-- On RBRAC reduce production base -> base PLUSPLUS base
-- On RACC reduce production base -> base PLUSPLUS base
-- On PROCEDURE reduce production base -> base PLUSPLUS base
-- On MATCH reduce production base -> base PLUSPLUS base
-- On LET reduce production base -> base PLUSPLUS base
-- On LATEX reduce production base -> base PLUSPLUS base
-- On IRREFLEXIVE reduce production base -> base PLUSPLUS base
-- On INSTRUCTIONS reduce production base -> base PLUSPLUS base
-- On INCLUDE reduce production base -> base PLUSPLUS base
-- On IN reduce production base -> base PLUSPLUS base
-- On FORALL reduce production base -> base PLUSPLUS base
-- On FLAG reduce production base -> base PLUSPLUS base
-- On EQUAL reduce production base -> base PLUSPLUS base
-- On EOF reduce production base -> base PLUSPLUS base
-- On ENUM reduce production base -> base PLUSPLUS base
-- On END reduce production base -> base PLUSPLUS base
-- On ELSE reduce production base -> base PLUSPLUS base
-- On DO reduce production base -> base PLUSPLUS base
-- On DEFAULT reduce production base -> base PLUSPLUS base
-- On DEBUG reduce production base -> base PLUSPLUS base
-- On COMP reduce production base -> base PLUSPLUS base
-- On COMMA reduce production base -> base PLUSPLUS base
-- On CALL reduce production base -> base PLUSPLUS base
-- On AS reduce production base -> base PLUSPLUS base
-- On AND reduce production base -> base PLUSPLUS base
-- On ALT reduce production base -> base PLUSPLUS base
-- On ACYCLIC reduce production base -> base PLUSPLUS base

State 65:
## Known stack suffix:
## COMP base
## LR(1) items:
base -> base . STAR base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . STAR [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUS [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . OPT [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . HAT INV [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . SEMI base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . UNION base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . PLUSPLUS base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . DIFF base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> base . INTER base [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
base -> COMP base . [ WITH WHEN UNSHOW UNION THEN TESTEMPTY SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LET LATEX IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On HAT shift to state 53
## Reductions:
-- On WITH reduce production base -> COMP base
-- On WHEN reduce production base -> COMP base
-- On UNSHOW reduce production base -> COMP base
-- On UNION reduce production base -> COMP base
-- On THEN reduce production base -> COMP base
-- On TESTEMPTY reduce production base -> COMP base
-- On SUBSET reduce production base -> COMP base
-- On SHOW reduce production base -> COMP base
-- On SEMI reduce production base -> COMP base
-- On RPAR reduce production base -> COMP base
-- On REQUIRES reduce production base -> COMP base
-- On RBRAC reduce production base -> COMP base
-- On RACC reduce production base -> COMP base
-- On PROCEDURE reduce production base -> COMP base
-- On PLUSPLUS reduce production base -> COMP base
-- On MATCH reduce production base -> COMP base
-- On LET reduce production base -> COMP base
-- On LATEX reduce production base -> COMP base
-- On IRREFLEXIVE reduce production base -> COMP base
-- On INTER reduce production base -> COMP base
-- On INSTRUCTIONS reduce production base -> COMP base
-- On INCLUDE reduce production base -> COMP base
-- On IN reduce production base -> COMP base
-- On FORALL reduce production base -> COMP base
-- On FLAG reduce production base -> COMP base
-- On EQUAL reduce production base -> COMP base
-- On EOF reduce production base -> COMP base
-- On ENUM reduce production base -> COMP base
-- On END reduce production base -> COMP base
-- On ELSE reduce production base -> COMP base
-- On DO reduce production base -> COMP base
-- On DIFF reduce production base -> COMP base
-- On DEFAULT reduce production base -> COMP base
-- On DEBUG reduce production base -> COMP base
-- On COMP reduce production base -> COMP base
-- On COMMA reduce production base -> COMP base
-- On CALL reduce production base -> COMP base
-- On AS reduce production base -> COMP base
-- On AND reduce production base -> COMP base
-- On ALT reduce production base -> COMP base
-- On ACYCLIC reduce production base -> COMP base

State 66:
## Known stack suffix:
## FUN VAR ARROW exp
## LR(1) items:
exp -> FUN VAR ARROW exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> FUN VAR ARROW exp

State 67:
## Known stack suffix:
## FUN LPAR
## LR(1) items:
exp -> FUN LPAR . formals RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 72
## Reductions:
-- On RPAR reduce production formals ->

State 68:
## Known stack suffix:
## VAR
## LR(1) items:
formalsN -> VAR . [ RPAR ]
formalsN -> VAR . COMMA formalsN [ RPAR ]
## Transitions:
-- On COMMA shift to state 69
## Reductions:
-- On RPAR reduce production formalsN -> VAR

State 69:
## Known stack suffix:
## VAR COMMA
## LR(1) items:
formalsN -> VAR COMMA . formalsN [ RPAR ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## VAR COMMA formalsN
## LR(1) items:
formalsN -> VAR COMMA formalsN . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formalsN -> VAR COMMA formalsN

State 71:
## Known stack suffix:
## formalsN
## LR(1) items:
formals -> formalsN . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formals -> formalsN

State 72:
## Known stack suffix:
## FUN LPAR formals
## LR(1) items:
exp -> FUN LPAR formals . RPAR ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## FUN LPAR formals RPAR
## LR(1) items:
exp -> FUN LPAR formals RPAR . ARROW exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On ARROW shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## FUN LPAR formals RPAR ARROW
## LR(1) items:
exp -> FUN LPAR formals RPAR ARROW . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 75
-- On base shift to state 48
## Reductions:

State 75:
## Known stack suffix:
## FUN LPAR formals RPAR ARROW exp
## LR(1) items:
exp -> FUN LPAR formals RPAR ARROW exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> FUN LPAR formals RPAR ARROW exp

State 76:
## Known stack suffix:
## exp
## LR(1) items:
cond -> exp . EQUAL exp [ THEN ]
cond -> exp . SUBSET exp [ THEN ]
## Transitions:
-- On SUBSET shift to state 77
-- On EQUAL shift to state 79
## Reductions:

State 77:
## Known stack suffix:
## exp SUBSET
## LR(1) items:
cond -> exp SUBSET . exp [ THEN ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 78
-- On base shift to state 48
## Reductions:

State 78:
## Known stack suffix:
## exp SUBSET exp
## LR(1) items:
cond -> exp SUBSET exp . [ THEN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond -> exp SUBSET exp

State 79:
## Known stack suffix:
## exp EQUAL
## LR(1) items:
cond -> exp EQUAL . exp [ THEN ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 80
-- On base shift to state 48
## Reductions:

State 80:
## Known stack suffix:
## exp EQUAL exp
## LR(1) items:
cond -> exp EQUAL exp . [ THEN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond -> exp EQUAL exp

State 81:
## Known stack suffix:
## IF cond
## LR(1) items:
exp -> IF cond . THEN exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On THEN shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## IF cond THEN
## LR(1) items:
exp -> IF cond THEN . exp ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 83
-- On base shift to state 48
## Reductions:

State 83:
## Known stack suffix:
## IF cond THEN exp
## LR(1) items:
exp -> IF cond THEN exp . ELSE exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On ELSE shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## IF cond THEN exp ELSE
## LR(1) items:
exp -> IF cond THEN exp ELSE . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 85
-- On base shift to state 48
## Reductions:

State 85:
## Known stack suffix:
## IF cond THEN exp ELSE exp
## LR(1) items:
exp -> IF cond THEN exp ELSE exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> IF cond THEN exp ELSE exp

State 86:
## Known stack suffix:
## exp
## LR(1) items:
argsN -> exp . [ RACC ]
argsN -> exp . COMMA argsN [ RACC ]
## Transitions:
-- On COMMA shift to state 87
## Reductions:
-- On RACC reduce production argsN -> exp

State 87:
## Known stack suffix:
## exp COMMA
## LR(1) items:
argsN -> exp COMMA . argsN [ RACC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 86
-- On base shift to state 48
-- On argsN shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## exp COMMA argsN
## LR(1) items:
argsN -> exp COMMA argsN . [ RACC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argsN -> exp COMMA argsN

State 89:
## Known stack suffix:
## argsN
## LR(1) items:
args -> argsN . [ RACC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production args -> argsN

State 90:
## Known stack suffix:
## LACC args
## LR(1) items:
simple -> LACC args . RACC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On RACC shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## LACC args RACC
## LR(1) items:
simple -> LACC args RACC . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> LACC args RACC

State 92:
## Known stack suffix:
## LBRAC exp
## LR(1) items:
simple -> LBRAC exp . RBRAC [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On RBRAC shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## LBRAC exp RBRAC
## LR(1) items:
simple -> LBRAC exp RBRAC . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> LBRAC exp RBRAC

State 94:
## Known stack suffix:
## VAR VAR EQUAL exp
## LR(1) items:
pat_bind -> VAR VAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pat_bind -> VAR VAR EQUAL exp

State 95:
## Known stack suffix:
## VAR LPAR
## LR(1) items:
pat_bind -> VAR LPAR . formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 96
## Reductions:
-- On RPAR reduce production formals ->

State 96:
## Known stack suffix:
## VAR LPAR formals
## LR(1) items:
pat_bind -> VAR LPAR formals . RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## VAR LPAR formals RPAR
## LR(1) items:
pat_bind -> VAR LPAR formals RPAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## VAR LPAR formals RPAR EQUAL
## LR(1) items:
pat_bind -> VAR LPAR formals RPAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 99
-- On base shift to state 48
## Reductions:

State 99:
## Known stack suffix:
## VAR LPAR formals RPAR EQUAL exp
## LR(1) items:
pat_bind -> VAR LPAR formals RPAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pat_bind -> VAR LPAR formals RPAR EQUAL exp

State 100:
## Known stack suffix:
## VAR EQUAL
## LR(1) items:
bind -> VAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 101
-- On base shift to state 48
## Reductions:

State 101:
## Known stack suffix:
## VAR EQUAL exp
## LR(1) items:
bind -> VAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bind -> VAR EQUAL exp

State 102:
## Known stack suffix:
## LET REC
## LR(1) items:
exp -> LET REC . pat_bind_list IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 108
-- On pat_bind shift to state 111
-- On bind shift to state 114
## Reductions:

State 103:
## Known stack suffix:
## LPAR
## LR(1) items:
bind -> LPAR . formals RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 104
## Reductions:
-- On RPAR reduce production formals ->

State 104:
## Known stack suffix:
## LPAR formals
## LR(1) items:
bind -> LPAR formals . RPAR EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## LPAR formals RPAR
## LR(1) items:
bind -> LPAR formals RPAR . EQUAL exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## LPAR formals RPAR EQUAL
## LR(1) items:
bind -> LPAR formals RPAR EQUAL . exp [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 107
-- On base shift to state 48
## Reductions:

State 107:
## Known stack suffix:
## LPAR formals RPAR EQUAL exp
## LR(1) items:
bind -> LPAR formals RPAR EQUAL exp . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bind -> LPAR formals RPAR EQUAL exp

State 108:
## Known stack suffix:
## LET REC pat_bind_list
## LR(1) items:
exp -> LET REC pat_bind_list . IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On IN shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## LET REC pat_bind_list IN
## LR(1) items:
exp -> LET REC pat_bind_list IN . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 110
-- On base shift to state 48
## Reductions:

State 110:
## Known stack suffix:
## LET REC pat_bind_list IN exp
## LR(1) items:
exp -> LET REC pat_bind_list IN exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> LET REC pat_bind_list IN exp

State 111:
## Known stack suffix:
## pat_bind
## LR(1) items:
pat_bind_list -> pat_bind . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
pat_bind_list -> pat_bind . AND pat_bind_list [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On AND shift to state 112
## Reductions:
-- On WITH reduce production pat_bind_list -> pat_bind
-- On WHEN reduce production pat_bind_list -> pat_bind
-- On UNSHOW reduce production pat_bind_list -> pat_bind
-- On TESTEMPTY reduce production pat_bind_list -> pat_bind
-- On SHOW reduce production pat_bind_list -> pat_bind
-- On REQUIRES reduce production pat_bind_list -> pat_bind
-- On PROCEDURE reduce production pat_bind_list -> pat_bind
-- On MATCH reduce production pat_bind_list -> pat_bind
-- On LET reduce production pat_bind_list -> pat_bind
-- On LATEX reduce production pat_bind_list -> pat_bind
-- On IRREFLEXIVE reduce production pat_bind_list -> pat_bind
-- On INSTRUCTIONS reduce production pat_bind_list -> pat_bind
-- On INCLUDE reduce production pat_bind_list -> pat_bind
-- On IN reduce production pat_bind_list -> pat_bind
-- On FORALL reduce production pat_bind_list -> pat_bind
-- On FLAG reduce production pat_bind_list -> pat_bind
-- On EOF reduce production pat_bind_list -> pat_bind
-- On ENUM reduce production pat_bind_list -> pat_bind
-- On END reduce production pat_bind_list -> pat_bind
-- On DEFAULT reduce production pat_bind_list -> pat_bind
-- On DEBUG reduce production pat_bind_list -> pat_bind
-- On COMP reduce production pat_bind_list -> pat_bind
-- On CALL reduce production pat_bind_list -> pat_bind
-- On ALT reduce production pat_bind_list -> pat_bind
-- On ACYCLIC reduce production pat_bind_list -> pat_bind

State 112:
## Known stack suffix:
## pat_bind AND
## LR(1) items:
pat_bind_list -> pat_bind AND . pat_bind_list [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 113
-- On pat_bind shift to state 111
-- On bind shift to state 114
## Reductions:

State 113:
## Known stack suffix:
## pat_bind AND pat_bind_list
## LR(1) items:
pat_bind_list -> pat_bind AND pat_bind_list . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pat_bind_list -> pat_bind AND pat_bind_list

State 114:
## Known stack suffix:
## bind
## LR(1) items:
pat_bind -> bind . [ WITH WHEN UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pat_bind -> bind

State 115:
## Known stack suffix:
## LET pat_bind_list
## LR(1) items:
exp -> LET pat_bind_list . IN exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On IN shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## LET pat_bind_list IN
## LR(1) items:
exp -> LET pat_bind_list IN . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 117
-- On base shift to state 48
## Reductions:

State 117:
## Known stack suffix:
## LET pat_bind_list IN exp
## LR(1) items:
exp -> LET pat_bind_list IN exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> LET pat_bind_list IN exp

State 118:
## Known stack suffix:
## LPAR tupleargs
## LR(1) items:
simple -> LPAR tupleargs . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## LPAR tupleargs RPAR
## LR(1) items:
simple -> LPAR tupleargs RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> LPAR tupleargs RPAR

State 120:
## Known stack suffix:
## LPAR exp
## LR(1) items:
simple -> LPAR exp . RPAR [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
tupleargs -> exp . COMMA tupleend [ RPAR ]
## Transitions:
-- On RPAR shift to state 121
-- On COMMA shift to state 122
## Reductions:

State 121:
## Known stack suffix:
## LPAR exp RPAR
## LR(1) items:
simple -> LPAR exp RPAR . [ WITH WHEN VAR UNSHOW UNION UNDERSCORE THEN TESTEMPTY TAG SUBSET STAR SHOW SEMI RPAR REQUIRES RBRAC RACC PROCEDURE PLUSPLUS PLUS OPT MATCH LPAR LET LBRAC LATEX LACC IRREFLEXIVE INTER INSTRUCTIONS INCLUDE IN HAT FORALL FLAG EQUAL EOF ENUM END EMPTY ELSE DO DIFF DEFAULT DEBUG COMP COMMA CALL BEGIN AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple -> LPAR exp RPAR

State 122:
## Known stack suffix:
## exp COMMA
## LR(1) items:
tupleargs -> exp COMMA . tupleend [ RPAR ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleend shift to state 123
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 124
-- On base shift to state 48
## Reductions:

State 123:
## Known stack suffix:
## exp COMMA tupleend
## LR(1) items:
tupleargs -> exp COMMA tupleend . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tupleargs -> exp COMMA tupleend

State 124:
## Known stack suffix:
## exp
## LR(1) items:
tupleend -> exp . [ RPAR ]
tupleend -> exp . COMMA tupleend [ RPAR ]
## Transitions:
-- On COMMA shift to state 125
## Reductions:
-- On RPAR reduce production tupleend -> exp

State 125:
## Known stack suffix:
## exp COMMA
## LR(1) items:
tupleend -> exp COMMA . tupleend [ RPAR ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On tupleend shift to state 126
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 124
-- On base shift to state 48
## Reductions:

State 126:
## Known stack suffix:
## exp COMMA tupleend
## LR(1) items:
tupleend -> exp COMMA tupleend . [ RPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tupleend -> exp COMMA tupleend

State 127:
## Known stack suffix:
## MATCH exp
## LR(1) items:
exp -> MATCH exp . WITH altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp . WITH altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## MATCH exp WITH
## LR(1) items:
exp -> MATCH exp WITH . altopt clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp WITH . altopt set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On ALT shift to state 129
-- On altopt shift to state 130
## Reductions:
-- On VAR reduce production altopt ->
-- On UNDERSCORE reduce production altopt ->
-- On TAG reduce production altopt ->
-- On LACC reduce production altopt ->

State 129:
## Known stack suffix:
## ALT
## LR(1) items:
altopt -> ALT . [ VAR UNDERSCORE TAG LACC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production altopt -> ALT

State 130:
## Known stack suffix:
## MATCH exp WITH altopt
## LR(1) items:
exp -> MATCH exp WITH altopt . clause_list END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
exp -> MATCH exp WITH altopt . set_clauses END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 131
-- On UNDERSCORE shift to state 142
-- On TAG shift to state 145
-- On LACC shift to state 148
-- On set_clauses shift to state 152
-- On empty_clause shift to state 154
-- On element_clause3 shift to state 156
-- On element_clause2 shift to state 157
-- On element_clause shift to state 159
-- On clause_list shift to state 162
-- On clause shift to state 164
## Reductions:

State 131:
## Known stack suffix:
## VAR
## LR(1) items:
element_clause2 -> VAR . PLUSPLUS VAR ARROW exp [ END ALT ]
element_clause3 -> VAR . UNION VAR PLUSPLUS VAR ARROW exp [ END ALT ]
## Transitions:
-- On UNION shift to state 132
-- On PLUSPLUS shift to state 138
## Reductions:

State 132:
## Known stack suffix:
## VAR UNION
## LR(1) items:
element_clause3 -> VAR UNION . VAR PLUSPLUS VAR ARROW exp [ END ALT ]
## Transitions:
-- On VAR shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## VAR UNION VAR
## LR(1) items:
element_clause3 -> VAR UNION VAR . PLUSPLUS VAR ARROW exp [ END ALT ]
## Transitions:
-- On PLUSPLUS shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## VAR UNION VAR PLUSPLUS
## LR(1) items:
element_clause3 -> VAR UNION VAR PLUSPLUS . VAR ARROW exp [ END ALT ]
## Transitions:
-- On VAR shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## VAR UNION VAR PLUSPLUS VAR
## LR(1) items:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR . ARROW exp [ END ALT ]
## Transitions:
-- On ARROW shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## VAR UNION VAR PLUSPLUS VAR ARROW
## LR(1) items:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW . exp [ END ALT ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 137
-- On base shift to state 48
## Reductions:

State 137:
## Known stack suffix:
## VAR UNION VAR PLUSPLUS VAR ARROW exp
## LR(1) items:
element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW exp . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element_clause3 -> VAR UNION VAR PLUSPLUS VAR ARROW exp

State 138:
## Known stack suffix:
## VAR PLUSPLUS
## LR(1) items:
element_clause2 -> VAR PLUSPLUS . VAR ARROW exp [ END ALT ]
## Transitions:
-- On VAR shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## VAR PLUSPLUS VAR
## LR(1) items:
element_clause2 -> VAR PLUSPLUS VAR . ARROW exp [ END ALT ]
## Transitions:
-- On ARROW shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## VAR PLUSPLUS VAR ARROW
## LR(1) items:
element_clause2 -> VAR PLUSPLUS VAR ARROW . exp [ END ALT ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 141
-- On base shift to state 48
## Reductions:

State 141:
## Known stack suffix:
## VAR PLUSPLUS VAR ARROW exp
## LR(1) items:
element_clause2 -> VAR PLUSPLUS VAR ARROW exp . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element_clause2 -> VAR PLUSPLUS VAR ARROW exp

State 142:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
clause_list -> UNDERSCORE . ARROW exp [ END ]
## Transitions:
-- On ARROW shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## UNDERSCORE ARROW
## LR(1) items:
clause_list -> UNDERSCORE ARROW . exp [ END ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 144
-- On base shift to state 48
## Reductions:

State 144:
## Known stack suffix:
## UNDERSCORE ARROW exp
## LR(1) items:
clause_list -> UNDERSCORE ARROW exp . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause_list -> UNDERSCORE ARROW exp

State 145:
## Known stack suffix:
## TAG
## LR(1) items:
clause -> TAG . ARROW exp [ END ALT ]
## Transitions:
-- On ARROW shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## TAG ARROW
## LR(1) items:
clause -> TAG ARROW . exp [ END ALT ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 147
-- On base shift to state 48
## Reductions:

State 147:
## Known stack suffix:
## TAG ARROW exp
## LR(1) items:
clause -> TAG ARROW exp . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause -> TAG ARROW exp

State 148:
## Known stack suffix:
## LACC
## LR(1) items:
empty_clause -> LACC . RACC ARROW exp [ END ALT ]
## Transitions:
-- On RACC shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## LACC RACC
## LR(1) items:
empty_clause -> LACC RACC . ARROW exp [ END ALT ]
## Transitions:
-- On ARROW shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## LACC RACC ARROW
## LR(1) items:
empty_clause -> LACC RACC ARROW . exp [ END ALT ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 151
-- On base shift to state 48
## Reductions:

State 151:
## Known stack suffix:
## LACC RACC ARROW exp
## LR(1) items:
empty_clause -> LACC RACC ARROW exp . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production empty_clause -> LACC RACC ARROW exp

State 152:
## Known stack suffix:
## MATCH exp WITH altopt set_clauses
## LR(1) items:
exp -> MATCH exp WITH altopt set_clauses . END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On END shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## MATCH exp WITH altopt set_clauses END
## LR(1) items:
exp -> MATCH exp WITH altopt set_clauses END . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> MATCH exp WITH altopt set_clauses END

State 154:
## Known stack suffix:
## empty_clause
## LR(1) items:
set_clauses -> empty_clause . ALT element_clause [ END ]
## Transitions:
-- On ALT shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## empty_clause ALT
## LR(1) items:
set_clauses -> empty_clause ALT . element_clause [ END ]
## Transitions:
-- On VAR shift to state 131
-- On element_clause3 shift to state 156
-- On element_clause2 shift to state 157
-- On element_clause shift to state 158
## Reductions:

State 156:
## Known stack suffix:
## element_clause3
## LR(1) items:
element_clause -> element_clause3 . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element_clause -> element_clause3

State 157:
## Known stack suffix:
## element_clause2
## LR(1) items:
element_clause -> element_clause2 . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production element_clause -> element_clause2

State 158:
## Known stack suffix:
## empty_clause ALT element_clause
## LR(1) items:
set_clauses -> empty_clause ALT element_clause . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_clauses -> empty_clause ALT element_clause

State 159:
## Known stack suffix:
## element_clause
## LR(1) items:
set_clauses -> element_clause . ALT empty_clause [ END ]
## Transitions:
-- On ALT shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## element_clause ALT
## LR(1) items:
set_clauses -> element_clause ALT . empty_clause [ END ]
## Transitions:
-- On LACC shift to state 148
-- On empty_clause shift to state 161
## Reductions:

State 161:
## Known stack suffix:
## element_clause ALT empty_clause
## LR(1) items:
set_clauses -> element_clause ALT empty_clause . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_clauses -> element_clause ALT empty_clause

State 162:
## Known stack suffix:
## MATCH exp WITH altopt clause_list
## LR(1) items:
exp -> MATCH exp WITH altopt clause_list . END [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On END shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## MATCH exp WITH altopt clause_list END
## LR(1) items:
exp -> MATCH exp WITH altopt clause_list END . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> MATCH exp WITH altopt clause_list END

State 164:
## Known stack suffix:
## clause
## LR(1) items:
clause_list -> clause . [ END ]
clause_list -> clause . ALT clause_list [ END ]
## Transitions:
-- On ALT shift to state 165
## Reductions:
-- On END reduce production clause_list -> clause

State 165:
## Known stack suffix:
## clause ALT
## LR(1) items:
clause_list -> clause ALT . clause_list [ END ]
## Transitions:
-- On UNDERSCORE shift to state 142
-- On TAG shift to state 145
-- On clause_list shift to state 166
-- On clause shift to state 164
## Reductions:

State 166:
## Known stack suffix:
## clause ALT clause_list
## LR(1) items:
clause_list -> clause ALT clause_list . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production clause_list -> clause ALT clause_list

State 167:
## Known stack suffix:
## TRY exp
## LR(1) items:
exp -> TRY exp . WITH exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## TRY exp WITH
## LR(1) items:
exp -> TRY exp WITH . exp [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 169
-- On base shift to state 48
## Reductions:

State 169:
## Known stack suffix:
## TRY exp WITH exp
## LR(1) items:
exp -> TRY exp WITH exp . [ WITH WHEN UNSHOW THEN TESTEMPTY SUBSET SHOW RPAR REQUIRES RBRAC RACC PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EQUAL EOF ENUM END ELSE DO DEFAULT DEBUG COMP COMMA CALL AS AND ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp -> TRY exp WITH exp

State 170:
## Known stack suffix:
## WITH VAR FROM exp
## LR(1) items:
ins -> WITH VAR FROM exp . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> WITH VAR FROM exp

State 171:
## Known stack suffix:
## UNSHOW
## LR(1) items:
ins -> UNSHOW . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 172
-- On var_list shift to state 176
## Reductions:

State 172:
## Known stack suffix:
## VAR
## LR(1) items:
var_list -> VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
var_list -> VAR . comma_opt var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On COMMA shift to state 173
-- On comma_opt shift to state 174
## Reductions:
-- On WITH reduce production var_list -> VAR
-- On UNSHOW reduce production var_list -> VAR
-- On TESTEMPTY reduce production var_list -> VAR
-- On SHOW reduce production var_list -> VAR
-- On REQUIRES reduce production var_list -> VAR
-- On PROCEDURE reduce production var_list -> VAR
-- On MATCH reduce production var_list -> VAR
-- On LET reduce production var_list -> VAR
-- On LATEX reduce production var_list -> VAR
-- On IRREFLEXIVE reduce production var_list -> VAR
-- On INSTRUCTIONS reduce production var_list -> VAR
-- On INCLUDE reduce production var_list -> VAR
-- On FORALL reduce production var_list -> VAR
-- On FLAG reduce production var_list -> VAR
-- On EOF reduce production var_list -> VAR
-- On ENUM reduce production var_list -> VAR
-- On END reduce production var_list -> VAR
-- On DEFAULT reduce production var_list -> VAR
-- On DEBUG reduce production var_list -> VAR
-- On COMP reduce production var_list -> VAR
-- On CALL reduce production var_list -> VAR
-- On ALT reduce production var_list -> VAR
-- On ACYCLIC reduce production var_list -> VAR

State 173:
## Known stack suffix:
## COMMA
## LR(1) items:
comma_opt -> COMMA . [ VAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comma_opt -> COMMA

State 174:
## Known stack suffix:
## VAR comma_opt
## LR(1) items:
var_list -> VAR comma_opt . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 172
-- On var_list shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## VAR comma_opt var_list
## LR(1) items:
var_list -> VAR comma_opt var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_list -> VAR comma_opt var_list

State 176:
## Known stack suffix:
## UNSHOW var_list
## LR(1) items:
ins -> UNSHOW var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> UNSHOW var_list

State 177:
## Known stack suffix:
## SHOW
## LR(1) items:
ins -> SHOW . exp AS VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> SHOW . var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 178
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On var_list shift to state 179
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 180
-- On base shift to state 48
## Reductions:

State 178:
## Known stack suffix:
## VAR
## LR(1) items:
exp0 -> VAR . [ VAR UNION UNDERSCORE TAG STAR SEMI PLUSPLUS PLUS OPT LPAR LBRAC LACC INTER HAT EMPTY DIFF BEGIN AS ]
var_list -> VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
var_list -> VAR . comma_opt var_list [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On COMMA shift to state 173
-- On comma_opt shift to state 174
## Reductions:
-- On WITH reduce production var_list -> VAR
-- On VAR reduce production exp0 -> VAR
-- On UNSHOW reduce production var_list -> VAR
-- On UNION reduce production exp0 -> VAR
-- On UNDERSCORE reduce production exp0 -> VAR
-- On TESTEMPTY reduce production var_list -> VAR
-- On TAG reduce production exp0 -> VAR
-- On STAR reduce production exp0 -> VAR
-- On SHOW reduce production var_list -> VAR
-- On SEMI reduce production exp0 -> VAR
-- On REQUIRES reduce production var_list -> VAR
-- On PROCEDURE reduce production var_list -> VAR
-- On PLUSPLUS reduce production exp0 -> VAR
-- On PLUS reduce production exp0 -> VAR
-- On OPT reduce production exp0 -> VAR
-- On MATCH reduce production var_list -> VAR
-- On LPAR reduce production exp0 -> VAR
-- On LET reduce production var_list -> VAR
-- On LBRAC reduce production exp0 -> VAR
-- On LATEX reduce production var_list -> VAR
-- On LACC reduce production exp0 -> VAR
-- On IRREFLEXIVE reduce production var_list -> VAR
-- On INTER reduce production exp0 -> VAR
-- On INSTRUCTIONS reduce production var_list -> VAR
-- On INCLUDE reduce production var_list -> VAR
-- On HAT reduce production exp0 -> VAR
-- On FORALL reduce production var_list -> VAR
-- On FLAG reduce production var_list -> VAR
-- On EOF reduce production var_list -> VAR
-- On ENUM reduce production var_list -> VAR
-- On END reduce production var_list -> VAR
-- On EMPTY reduce production exp0 -> VAR
-- On DIFF reduce production exp0 -> VAR
-- On DEFAULT reduce production var_list -> VAR
-- On DEBUG reduce production var_list -> VAR
-- On COMP reduce production var_list -> VAR
-- On CALL reduce production var_list -> VAR
-- On BEGIN reduce production exp0 -> VAR
-- On AS reduce production exp0 -> VAR
-- On ALT reduce production var_list -> VAR
-- On ACYCLIC reduce production var_list -> VAR

State 179:
## Known stack suffix:
## SHOW var_list
## LR(1) items:
ins -> SHOW var_list . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> SHOW var_list

State 180:
## Known stack suffix:
## SHOW exp
## LR(1) items:
ins -> SHOW exp . AS VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On AS shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## SHOW exp AS
## LR(1) items:
ins -> SHOW exp AS . VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## SHOW exp AS VAR
## LR(1) items:
ins -> SHOW exp AS VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> SHOW exp AS VAR

State 183:
## Known stack suffix:
## REQUIRES
## LR(1) items:
test_type -> REQUIRES . [ TESTEMPTY IRREFLEXIVE COMP ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test_type -> REQUIRES

State 184:
## Known stack suffix:
## PROCEDURE
## LR(1) items:
ins -> PROCEDURE . VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . REC VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE . REC VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 185
-- On REC shift to state 268
## Reductions:

State 185:
## Known stack suffix:
## PROCEDURE VAR
## LR(1) items:
ins -> PROCEDURE VAR . LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE VAR . VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 186
-- On LPAR shift to state 262
## Reductions:

State 186:
## Known stack suffix:
## PROCEDURE VAR VAR
## LR(1) items:
ins -> PROCEDURE VAR VAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## PROCEDURE VAR VAR EQUAL
## LR(1) items:
ins -> PROCEDURE VAR VAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 260
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 188:
## Known stack suffix:
## MATCH
## LR(1) items:
ins -> MATCH . exp WITH altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 189
-- On base shift to state 48
## Reductions:

State 189:
## Known stack suffix:
## MATCH exp
## LR(1) items:
ins -> MATCH exp . WITH altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## MATCH exp WITH
## LR(1) items:
ins -> MATCH exp WITH . altopt ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On ALT shift to state 129
-- On altopt shift to state 191
## Reductions:
-- On UNDERSCORE reduce production altopt ->
-- On TAG reduce production altopt ->

State 191:
## Known stack suffix:
## MATCH exp WITH altopt
## LR(1) items:
ins -> MATCH exp WITH altopt . ins_clause_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On UNDERSCORE shift to state 192
-- On TAG shift to state 252
-- On ins_clause_list shift to state 255
-- On ins_clause shift to state 257
## Reductions:

State 192:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
ins_clause_list -> UNDERSCORE . ARROW ins_list [ END ]
## Transitions:
-- On ARROW shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## UNDERSCORE ARROW
## LR(1) items:
ins_clause_list -> UNDERSCORE ARROW . ins_list [ END ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 251
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 194:
## Known stack suffix:
## LET
## LR(1) items:
ins -> LET . pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET . REC pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET . REC pat_bind_list WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 29
-- On REC shift to state 195
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 213
-- On pat_bind shift to state 111
-- On bind shift to state 114
## Reductions:

State 195:
## Known stack suffix:
## LET REC
## LR(1) items:
ins -> LET REC . pat_bind_list in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET REC . pat_bind_list WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 29
-- On LPAR shift to state 103
-- On pat_bind_list shift to state 196
-- On pat_bind shift to state 111
-- On bind shift to state 114
## Reductions:

State 196:
## Known stack suffix:
## LET REC pat_bind_list
## LR(1) items:
ins -> LET REC pat_bind_list . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> LET REC pat_bind_list . WHEN app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WHEN shift to state 197
-- On IN shift to state 210
-- On in_opt shift to state 212
## Reductions:
-- On WITH reduce production in_opt ->
-- On UNSHOW reduce production in_opt ->
-- On TESTEMPTY reduce production in_opt ->
-- On SHOW reduce production in_opt ->
-- On REQUIRES reduce production in_opt ->
-- On PROCEDURE reduce production in_opt ->
-- On MATCH reduce production in_opt ->
-- On LET reduce production in_opt ->
-- On LATEX reduce production in_opt ->
-- On IRREFLEXIVE reduce production in_opt ->
-- On INSTRUCTIONS reduce production in_opt ->
-- On INCLUDE reduce production in_opt ->
-- On FORALL reduce production in_opt ->
-- On FLAG reduce production in_opt ->
-- On EOF reduce production in_opt ->
-- On ENUM reduce production in_opt ->
-- On END reduce production in_opt ->
-- On DEFAULT reduce production in_opt ->
-- On DEBUG reduce production in_opt ->
-- On COMP reduce production in_opt ->
-- On CALL reduce production in_opt ->
-- On ALT reduce production in_opt ->
-- On ACYCLIC reduce production in_opt ->

State 197:
## Known stack suffix:
## LET REC pat_bind_list WHEN
## LR(1) items:
ins -> LET REC pat_bind_list WHEN . app_test in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On COMP shift to state 200
-- On ACYCLIC shift to state 201
-- On test shift to state 203
-- On do_test shift to state 208
-- On app_test shift to state 209
## Reductions:

State 198:
## Known stack suffix:
## TESTEMPTY
## LR(1) items:
do_test -> TESTEMPTY . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production do_test -> TESTEMPTY

State 199:
## Known stack suffix:
## IRREFLEXIVE
## LR(1) items:
do_test -> IRREFLEXIVE . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production do_test -> IRREFLEXIVE

State 200:
## Known stack suffix:
## COMP
## LR(1) items:
test -> COMP . do_test [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On ACYCLIC shift to state 201
-- On do_test shift to state 202
## Reductions:

State 201:
## Known stack suffix:
## ACYCLIC
## LR(1) items:
do_test -> ACYCLIC . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production do_test -> ACYCLIC

State 202:
## Known stack suffix:
## COMP do_test
## LR(1) items:
test -> COMP do_test . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test -> COMP do_test

State 203:
## Known stack suffix:
## test
## LR(1) items:
app_test -> test . exp optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 204
-- On base shift to state 48
## Reductions:

State 204:
## Known stack suffix:
## test exp
## LR(1) items:
app_test -> test exp . optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On AS shift to state 205
-- On optional_name shift to state 207
## Reductions:
-- On WITH reduce production optional_name ->
-- On UNSHOW reduce production optional_name ->
-- On TESTEMPTY reduce production optional_name ->
-- On SHOW reduce production optional_name ->
-- On REQUIRES reduce production optional_name ->
-- On PROCEDURE reduce production optional_name ->
-- On MATCH reduce production optional_name ->
-- On LET reduce production optional_name ->
-- On LATEX reduce production optional_name ->
-- On IRREFLEXIVE reduce production optional_name ->
-- On INSTRUCTIONS reduce production optional_name ->
-- On INCLUDE reduce production optional_name ->
-- On IN reduce production optional_name ->
-- On FORALL reduce production optional_name ->
-- On FLAG reduce production optional_name ->
-- On EOF reduce production optional_name ->
-- On ENUM reduce production optional_name ->
-- On END reduce production optional_name ->
-- On DEFAULT reduce production optional_name ->
-- On DEBUG reduce production optional_name ->
-- On COMP reduce production optional_name ->
-- On CALL reduce production optional_name ->
-- On ALT reduce production optional_name ->
-- On ACYCLIC reduce production optional_name ->

State 205:
## Known stack suffix:
## AS
## LR(1) items:
optional_name -> AS . VAR [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## AS VAR
## LR(1) items:
optional_name -> AS VAR . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional_name -> AS VAR

State 207:
## Known stack suffix:
## test exp optional_name
## LR(1) items:
app_test -> test exp optional_name . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE IN FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production app_test -> test exp optional_name

State 208:
## Known stack suffix:
## do_test
## LR(1) items:
test -> do_test . [ VAR UNDERSCORE TRY TAG MATCH LPAR LET LBRAC LACC IF FUN EMPTY COMP BEGIN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test -> do_test

State 209:
## Known stack suffix:
## LET REC pat_bind_list WHEN app_test
## LR(1) items:
ins -> LET REC pat_bind_list WHEN app_test . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On IN shift to state 210
-- On in_opt shift to state 211
## Reductions:
-- On WITH reduce production in_opt ->
-- On UNSHOW reduce production in_opt ->
-- On TESTEMPTY reduce production in_opt ->
-- On SHOW reduce production in_opt ->
-- On REQUIRES reduce production in_opt ->
-- On PROCEDURE reduce production in_opt ->
-- On MATCH reduce production in_opt ->
-- On LET reduce production in_opt ->
-- On LATEX reduce production in_opt ->
-- On IRREFLEXIVE reduce production in_opt ->
-- On INSTRUCTIONS reduce production in_opt ->
-- On INCLUDE reduce production in_opt ->
-- On FORALL reduce production in_opt ->
-- On FLAG reduce production in_opt ->
-- On EOF reduce production in_opt ->
-- On ENUM reduce production in_opt ->
-- On END reduce production in_opt ->
-- On DEFAULT reduce production in_opt ->
-- On DEBUG reduce production in_opt ->
-- On COMP reduce production in_opt ->
-- On CALL reduce production in_opt ->
-- On ALT reduce production in_opt ->
-- On ACYCLIC reduce production in_opt ->

State 210:
## Known stack suffix:
## IN
## LR(1) items:
in_opt -> IN . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production in_opt -> IN

State 211:
## Known stack suffix:
## LET REC pat_bind_list WHEN app_test in_opt
## LR(1) items:
ins -> LET REC pat_bind_list WHEN app_test in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> LET REC pat_bind_list WHEN app_test in_opt

State 212:
## Known stack suffix:
## LET REC pat_bind_list in_opt
## LR(1) items:
ins -> LET REC pat_bind_list in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> LET REC pat_bind_list in_opt

State 213:
## Known stack suffix:
## LET pat_bind_list
## LR(1) items:
ins -> LET pat_bind_list . in_opt [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On IN shift to state 210
-- On in_opt shift to state 214
## Reductions:
-- On WITH reduce production in_opt ->
-- On UNSHOW reduce production in_opt ->
-- On TESTEMPTY reduce production in_opt ->
-- On SHOW reduce production in_opt ->
-- On REQUIRES reduce production in_opt ->
-- On PROCEDURE reduce production in_opt ->
-- On MATCH reduce production in_opt ->
-- On LET reduce production in_opt ->
-- On LATEX reduce production in_opt ->
-- On IRREFLEXIVE reduce production in_opt ->
-- On INSTRUCTIONS reduce production in_opt ->
-- On INCLUDE reduce production in_opt ->
-- On FORALL reduce production in_opt ->
-- On FLAG reduce production in_opt ->
-- On EOF reduce production in_opt ->
-- On ENUM reduce production in_opt ->
-- On END reduce production in_opt ->
-- On DEFAULT reduce production in_opt ->
-- On DEBUG reduce production in_opt ->
-- On COMP reduce production in_opt ->
-- On CALL reduce production in_opt ->
-- On ALT reduce production in_opt ->
-- On ACYCLIC reduce production in_opt ->

State 214:
## Known stack suffix:
## LET pat_bind_list in_opt
## LR(1) items:
ins -> LET pat_bind_list in_opt . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> LET pat_bind_list in_opt

State 215:
## Known stack suffix:
## LATEX
## LR(1) items:
ins -> LATEX . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> LATEX

State 216:
## Known stack suffix:
## INSTRUCTIONS
## LR(1) items:
ins -> INSTRUCTIONS . VAR LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## INSTRUCTIONS VAR
## LR(1) items:
ins -> INSTRUCTIONS VAR . LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On LBRAC shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## INSTRUCTIONS VAR LBRAC
## LR(1) items:
ins -> INSTRUCTIONS VAR LBRAC . exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 219
-- On exp_list shift to state 220
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48
## Reductions:
-- On RBRAC reduce production exp_list ->

State 219:
## Known stack suffix:
## exp_listN
## LR(1) items:
exp_list -> exp_listN . [ RBRAC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp_list -> exp_listN

State 220:
## Known stack suffix:
## INSTRUCTIONS VAR LBRAC exp_list
## LR(1) items:
ins -> INSTRUCTIONS VAR LBRAC exp_list . RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On RBRAC shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## INSTRUCTIONS VAR LBRAC exp_list RBRAC
## LR(1) items:
ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> INSTRUCTIONS VAR LBRAC exp_list RBRAC

State 222:
## Known stack suffix:
## exp
## LR(1) items:
exp_listN -> exp . [ RBRAC ]
exp_listN -> exp . COMMA exp_listN [ RBRAC ]
## Transitions:
-- On COMMA shift to state 223
## Reductions:
-- On RBRAC reduce production exp_listN -> exp

State 223:
## Known stack suffix:
## exp COMMA
## LR(1) items:
exp_listN -> exp COMMA . exp_listN [ RBRAC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 224
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48
## Reductions:

State 224:
## Known stack suffix:
## exp COMMA exp_listN
## LR(1) items:
exp_listN -> exp COMMA exp_listN . [ RBRAC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exp_listN -> exp COMMA exp_listN

State 225:
## Known stack suffix:
## INCLUDE
## LR(1) items:
ins -> INCLUDE . STRING [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On STRING shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## INCLUDE STRING
## LR(1) items:
ins -> INCLUDE STRING . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> INCLUDE STRING

State 227:
## Known stack suffix:
## FORALL
## LR(1) items:
ins -> FORALL . VAR IN exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## FORALL VAR
## LR(1) items:
ins -> FORALL VAR . IN exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On IN shift to state 229
## Reductions:

State 229:
## Known stack suffix:
## FORALL VAR IN
## LR(1) items:
ins -> FORALL VAR IN . exp DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 230
-- On base shift to state 48
## Reductions:

State 230:
## Known stack suffix:
## FORALL VAR IN exp
## LR(1) items:
ins -> FORALL VAR IN exp . DO ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On DO shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## FORALL VAR IN exp DO
## LR(1) items:
ins -> FORALL VAR IN exp DO . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 246
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 232:
## Known stack suffix:
## FLAG
## LR(1) items:
test_type -> FLAG . [ TESTEMPTY IRREFLEXIVE COMP ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test_type -> FLAG

State 233:
## Known stack suffix:
## DEFAULT
## LR(1) items:
ins -> DEFAULT . VAR LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## DEFAULT VAR
## LR(1) items:
ins -> DEFAULT VAR . LBRAC exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On LBRAC shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## DEFAULT VAR LBRAC
## LR(1) items:
ins -> DEFAULT VAR LBRAC . exp_list RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp_listN shift to state 219
-- On exp_list shift to state 236
-- On exp0 shift to state 42
-- On exp shift to state 222
-- On base shift to state 48
## Reductions:
-- On RBRAC reduce production exp_list ->

State 236:
## Known stack suffix:
## DEFAULT VAR LBRAC exp_list
## LR(1) items:
ins -> DEFAULT VAR LBRAC exp_list . RBRAC [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On RBRAC shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## DEFAULT VAR LBRAC exp_list RBRAC
## LR(1) items:
ins -> DEFAULT VAR LBRAC exp_list RBRAC . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> DEFAULT VAR LBRAC exp_list RBRAC

State 238:
## Known stack suffix:
## DEBUG
## LR(1) items:
ins -> DEBUG . exp [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 21
-- On UNDERSCORE shift to state 22
-- On TRY shift to state 23
-- On TAG shift to state 24
-- On MATCH shift to state 25
-- On LPAR shift to state 26
-- On LET shift to state 28
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On IF shift to state 34
-- On FUN shift to state 35
-- On EMPTY shift to state 38
-- On COMP shift to state 39
-- On BEGIN shift to state 40
-- On simple shift to state 41
-- On exp0 shift to state 42
-- On exp shift to state 239
-- On base shift to state 48
## Reductions:

State 239:
## Known stack suffix:
## DEBUG exp
## LR(1) items:
ins -> DEBUG exp . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> DEBUG exp

State 240:
## Known stack suffix:
## CALL
## LR(1) items:
ins -> CALL . VAR simple optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## CALL VAR
## LR(1) items:
ins -> CALL VAR . simple optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On UNDERSCORE shift to state 22
-- On TAG shift to state 24
-- On LPAR shift to state 26
-- On LBRAC shift to state 32
-- On LACC shift to state 33
-- On EMPTY shift to state 38
-- On BEGIN shift to state 40
-- On simple shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## CALL VAR simple
## LR(1) items:
ins -> CALL VAR simple . optional_name [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On AS shift to state 205
-- On optional_name shift to state 243
## Reductions:
-- On WITH reduce production optional_name ->
-- On UNSHOW reduce production optional_name ->
-- On TESTEMPTY reduce production optional_name ->
-- On SHOW reduce production optional_name ->
-- On REQUIRES reduce production optional_name ->
-- On PROCEDURE reduce production optional_name ->
-- On MATCH reduce production optional_name ->
-- On LET reduce production optional_name ->
-- On LATEX reduce production optional_name ->
-- On IRREFLEXIVE reduce production optional_name ->
-- On INSTRUCTIONS reduce production optional_name ->
-- On INCLUDE reduce production optional_name ->
-- On FORALL reduce production optional_name ->
-- On FLAG reduce production optional_name ->
-- On EOF reduce production optional_name ->
-- On ENUM reduce production optional_name ->
-- On END reduce production optional_name ->
-- On DEFAULT reduce production optional_name ->
-- On DEBUG reduce production optional_name ->
-- On COMP reduce production optional_name ->
-- On CALL reduce production optional_name ->
-- On ALT reduce production optional_name ->
-- On ACYCLIC reduce production optional_name ->

State 243:
## Known stack suffix:
## CALL VAR simple optional_name
## LR(1) items:
ins -> CALL VAR simple optional_name . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> CALL VAR simple optional_name

State 244:
## Known stack suffix:
## test_type
## LR(1) items:
deftest -> test_type . app_test [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On TESTEMPTY shift to state 198
-- On IRREFLEXIVE shift to state 199
-- On COMP shift to state 200
-- On ACYCLIC shift to state 201
-- On test shift to state 203
-- On do_test shift to state 208
-- On app_test shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## test_type app_test
## LR(1) items:
deftest -> test_type app_test . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production deftest -> test_type app_test

State 246:
## Known stack suffix:
## FORALL VAR IN exp DO ins_list
## LR(1) items:
ins -> FORALL VAR IN exp DO ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## FORALL VAR IN exp DO ins_list END
## LR(1) items:
ins -> FORALL VAR IN exp DO ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> FORALL VAR IN exp DO ins_list END

State 248:
## Known stack suffix:
## ins
## LR(1) items:
ins_list -> ins . ins_list [ END ALT ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 249
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ALT reduce production ins_list ->
-- On ACYCLIC reduce production test_type ->

State 249:
## Known stack suffix:
## ins ins_list
## LR(1) items:
ins_list -> ins ins_list . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_list -> ins ins_list

State 250:
## Known stack suffix:
## deftest
## LR(1) items:
ins -> deftest . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> deftest

State 251:
## Known stack suffix:
## UNDERSCORE ARROW ins_list
## LR(1) items:
ins_clause_list -> UNDERSCORE ARROW ins_list . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_clause_list -> UNDERSCORE ARROW ins_list

State 252:
## Known stack suffix:
## TAG
## LR(1) items:
ins_clause -> TAG . ARROW ins_list [ END ALT ]
## Transitions:
-- On ARROW shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## TAG ARROW
## LR(1) items:
ins_clause -> TAG ARROW . ins_list [ END ALT ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 254
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ALT reduce production ins_list ->
-- On ACYCLIC reduce production test_type ->

State 254:
## Known stack suffix:
## TAG ARROW ins_list
## LR(1) items:
ins_clause -> TAG ARROW ins_list . [ END ALT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_clause -> TAG ARROW ins_list

State 255:
## Known stack suffix:
## MATCH exp WITH altopt ins_clause_list
## LR(1) items:
ins -> MATCH exp WITH altopt ins_clause_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## MATCH exp WITH altopt ins_clause_list END
## LR(1) items:
ins -> MATCH exp WITH altopt ins_clause_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> MATCH exp WITH altopt ins_clause_list END

State 257:
## Known stack suffix:
## ins_clause
## LR(1) items:
ins_clause_list -> ins_clause . [ END ]
ins_clause_list -> ins_clause . ALT ins_clause_list [ END ]
## Transitions:
-- On ALT shift to state 258
## Reductions:
-- On END reduce production ins_clause_list -> ins_clause

State 258:
## Known stack suffix:
## ins_clause ALT
## LR(1) items:
ins_clause_list -> ins_clause ALT . ins_clause_list [ END ]
## Transitions:
-- On UNDERSCORE shift to state 192
-- On TAG shift to state 252
-- On ins_clause_list shift to state 259
-- On ins_clause shift to state 257
## Reductions:

State 259:
## Known stack suffix:
## ins_clause ALT ins_clause_list
## LR(1) items:
ins_clause_list -> ins_clause ALT ins_clause_list . [ END ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins_clause_list -> ins_clause ALT ins_clause_list

State 260:
## Known stack suffix:
## PROCEDURE VAR VAR EQUAL ins_list
## LR(1) items:
ins -> PROCEDURE VAR VAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## PROCEDURE VAR VAR EQUAL ins_list END
## LR(1) items:
ins -> PROCEDURE VAR VAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> PROCEDURE VAR VAR EQUAL ins_list END

State 262:
## Known stack suffix:
## PROCEDURE VAR LPAR
## LR(1) items:
ins -> PROCEDURE VAR LPAR . formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 263
## Reductions:
-- On RPAR reduce production formals ->

State 263:
## Known stack suffix:
## PROCEDURE VAR LPAR formals
## LR(1) items:
ins -> PROCEDURE VAR LPAR formals . RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## PROCEDURE VAR LPAR formals RPAR
## LR(1) items:
ins -> PROCEDURE VAR LPAR formals RPAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## PROCEDURE VAR LPAR formals RPAR EQUAL
## LR(1) items:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 266
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 266:
## Known stack suffix:
## PROCEDURE VAR LPAR formals RPAR EQUAL ins_list
## LR(1) items:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END
## LR(1) items:
ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> PROCEDURE VAR LPAR formals RPAR EQUAL ins_list END

State 268:
## Known stack suffix:
## PROCEDURE REC
## LR(1) items:
ins -> PROCEDURE REC . VAR LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE REC . VAR VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## PROCEDURE REC VAR
## LR(1) items:
ins -> PROCEDURE REC VAR . LPAR formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
ins -> PROCEDURE REC VAR . VAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 270
-- On LPAR shift to state 274
## Reductions:

State 270:
## Known stack suffix:
## PROCEDURE REC VAR VAR
## LR(1) items:
ins -> PROCEDURE REC VAR VAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## PROCEDURE REC VAR VAR EQUAL
## LR(1) items:
ins -> PROCEDURE REC VAR VAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 272
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 272:
## Known stack suffix:
## PROCEDURE REC VAR VAR EQUAL ins_list
## LR(1) items:
ins -> PROCEDURE REC VAR VAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## PROCEDURE REC VAR VAR EQUAL ins_list END
## LR(1) items:
ins -> PROCEDURE REC VAR VAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> PROCEDURE REC VAR VAR EQUAL ins_list END

State 274:
## Known stack suffix:
## PROCEDURE REC VAR LPAR
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR . formals RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On VAR shift to state 68
-- On formalsN shift to state 71
-- On formals shift to state 275
## Reductions:
-- On RPAR reduce production formals ->

State 275:
## Known stack suffix:
## PROCEDURE REC VAR LPAR formals
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR formals . RPAR EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On RPAR shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## PROCEDURE REC VAR LPAR formals RPAR
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR formals RPAR . EQUAL ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## PROCEDURE REC VAR LPAR formals RPAR EQUAL
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL . ins_list END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On test_type shift to state 244
-- On ins_list shift to state 278
-- On ins shift to state 248
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On END reduce production ins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 278:
## Known stack suffix:
## PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list . END [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
-- On END shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END
## LR(1) items:
ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM END DEFAULT DEBUG COMP CALL ALT ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ins -> PROCEDURE REC VAR LPAR formals RPAR EQUAL ins_list END

State 280:
## Known stack suffix:
## ENUM
## LR(1) items:
topins -> ENUM . VAR EQUAL altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On VAR shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## ENUM VAR
## LR(1) items:
topins -> ENUM VAR . EQUAL altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On EQUAL shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## ENUM VAR EQUAL
## LR(1) items:
topins -> ENUM VAR EQUAL . altopt alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On ALT shift to state 129
-- On altopt shift to state 283
## Reductions:
-- On TAG reduce production altopt ->

State 283:
## Known stack suffix:
## ENUM VAR EQUAL altopt
## LR(1) items:
topins -> ENUM VAR EQUAL altopt . alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On TAG shift to state 284
-- On alttags shift to state 287
## Reductions:

State 284:
## Known stack suffix:
## TAG
## LR(1) items:
alttags -> TAG . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
alttags -> TAG . ALT alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On ALT shift to state 285
## Reductions:
-- On WITH reduce production alttags -> TAG
-- On UNSHOW reduce production alttags -> TAG
-- On TESTEMPTY reduce production alttags -> TAG
-- On SHOW reduce production alttags -> TAG
-- On REQUIRES reduce production alttags -> TAG
-- On PROCEDURE reduce production alttags -> TAG
-- On MATCH reduce production alttags -> TAG
-- On LET reduce production alttags -> TAG
-- On LATEX reduce production alttags -> TAG
-- On IRREFLEXIVE reduce production alttags -> TAG
-- On INSTRUCTIONS reduce production alttags -> TAG
-- On INCLUDE reduce production alttags -> TAG
-- On FORALL reduce production alttags -> TAG
-- On FLAG reduce production alttags -> TAG
-- On EOF reduce production alttags -> TAG
-- On ENUM reduce production alttags -> TAG
-- On DEFAULT reduce production alttags -> TAG
-- On DEBUG reduce production alttags -> TAG
-- On COMP reduce production alttags -> TAG
-- On CALL reduce production alttags -> TAG
-- On ACYCLIC reduce production alttags -> TAG

State 285:
## Known stack suffix:
## TAG ALT
## LR(1) items:
alttags -> TAG ALT . alttags [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
-- On TAG shift to state 284
-- On alttags shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## TAG ALT alttags
## LR(1) items:
alttags -> TAG ALT alttags . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production alttags -> TAG ALT alttags

State 287:
## Known stack suffix:
## ENUM VAR EQUAL altopt alttags
## LR(1) items:
topins -> ENUM VAR EQUAL altopt alttags . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topins -> ENUM VAR EQUAL altopt alttags

State 288:
## Known stack suffix:
## identity options topins_list
## LR(1) items:
main -> identity options topins_list . EOF [ # ]
## Transitions:
-- On EOF shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## identity options topins_list EOF
## LR(1) items:
main -> identity options topins_list EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> identity options topins_list EOF

State 290:
## Known stack suffix:
## topins
## LR(1) items:
topins_list -> topins . topins_list [ EOF ]
## Transitions:
-- On WITH shift to state 18
-- On UNSHOW shift to state 171
-- On SHOW shift to state 177
-- On REQUIRES shift to state 183
-- On PROCEDURE shift to state 184
-- On MATCH shift to state 188
-- On LET shift to state 194
-- On LATEX shift to state 215
-- On INSTRUCTIONS shift to state 216
-- On INCLUDE shift to state 225
-- On FORALL shift to state 227
-- On FLAG shift to state 232
-- On ENUM shift to state 280
-- On DEFAULT shift to state 233
-- On DEBUG shift to state 238
-- On CALL shift to state 240
-- On topins_list shift to state 291
-- On topins shift to state 290
-- On test_type shift to state 244
-- On ins shift to state 292
-- On deftest shift to state 250
## Reductions:
-- On TESTEMPTY reduce production test_type ->
-- On IRREFLEXIVE reduce production test_type ->
-- On EOF reduce production topins_list ->
-- On COMP reduce production test_type ->
-- On ACYCLIC reduce production test_type ->

State 291:
## Known stack suffix:
## topins topins_list
## LR(1) items:
topins_list -> topins topins_list . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topins_list -> topins topins_list

State 292:
## Known stack suffix:
## ins
## LR(1) items:
topins -> ins . [ WITH UNSHOW TESTEMPTY SHOW REQUIRES PROCEDURE MATCH LET LATEX IRREFLEXIVE INSTRUCTIONS INCLUDE FORALL FLAG EOF ENUM DEFAULT DEBUG COMP CALL ACYCLIC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production topins -> ins

