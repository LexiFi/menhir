State 0:
## Known stack suffix:
##
## LR(1) items:
phrase' -> . phrase [ # ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 50
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On phrase shift to state 56
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 57
## Reductions:

State 1:
## Known stack suffix:
## UNIT
## LR(1) items:
expression0 -> UNIT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> UNIT
-- On TILDE reduce production expression0 -> UNIT
-- On SETMINUS reduce production expression0 -> UNIT
-- On SEMISEMI reduce production expression0 -> UNIT
-- On SEMI reduce production expression0 -> UNIT
-- On RPAREN reduce production expression0 -> UNIT
-- On QUESTION reduce production expression0 -> UNIT
-- On PLUS reduce production expression0 -> UNIT
-- On NORMAL reduce production expression0 -> UNIT
-- On MATCH reduce production expression0 -> UNIT
-- On LPAREN reduce production expression0 -> UNIT
-- On LBRACE reduce production expression0 -> UNIT
-- On IN reduce production expression0 -> UNIT
-- On IDENT reduce production expression0 -> UNIT
-- On EXC reduce production expression0 -> UNIT
-- On DOT reduce production expression0 -> UNIT

State 2:
## Known stack suffix:
## NORMAL
## LR(1) items:
expression0 -> NORMAL . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> NORMAL
-- On TILDE reduce production expression0 -> NORMAL
-- On SETMINUS reduce production expression0 -> NORMAL
-- On SEMISEMI reduce production expression0 -> NORMAL
-- On SEMI reduce production expression0 -> NORMAL
-- On RPAREN reduce production expression0 -> NORMAL
-- On QUESTION reduce production expression0 -> NORMAL
-- On PLUS reduce production expression0 -> NORMAL
-- On NORMAL reduce production expression0 -> NORMAL
-- On MATCH reduce production expression0 -> NORMAL
-- On LPAREN reduce production expression0 -> NORMAL
-- On LBRACE reduce production expression0 -> NORMAL
-- On IN reduce production expression0 -> NORMAL
-- On IDENT reduce production expression0 -> NORMAL
-- On EXC reduce production expression0 -> NORMAL
-- On DOT reduce production expression0 -> NORMAL

State 3:
## Known stack suffix:
## MATCH
## LR(1) items:
expression0 -> MATCH . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> MATCH
-- On TILDE reduce production expression0 -> MATCH
-- On SETMINUS reduce production expression0 -> MATCH
-- On SEMISEMI reduce production expression0 -> MATCH
-- On SEMI reduce production expression0 -> MATCH
-- On RPAREN reduce production expression0 -> MATCH
-- On QUESTION reduce production expression0 -> MATCH
-- On PLUS reduce production expression0 -> MATCH
-- On NORMAL reduce production expression0 -> MATCH
-- On MATCH reduce production expression0 -> MATCH
-- On LPAREN reduce production expression0 -> MATCH
-- On LBRACE reduce production expression0 -> MATCH
-- On IN reduce production expression0 -> MATCH
-- On IDENT reduce production expression0 -> MATCH
-- On EXC reduce production expression0 -> MATCH
-- On DOT reduce production expression0 -> MATCH

State 4:
## Known stack suffix:
## LPAREN
## LR(1) items:
expression0 -> LPAREN . expression RPAREN [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 48
## Reductions:

State 5:
## Known stack suffix:
## LET
## LR(1) items:
expression -> LET . pattern pattern_list EQUAL expression IN expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern shift to state 9
## Reductions:

State 6:
## Known stack suffix:
## UNIT
## LR(1) items:
pattern -> UNIT . [ UNIT UNDERSCORE IDENT EQUAL ARROW ]
## Transitions:
## Reductions:
-- On UNIT reduce production pattern -> UNIT
-- On UNDERSCORE reduce production pattern -> UNIT
-- On IDENT reduce production pattern -> UNIT
-- On EQUAL reduce production pattern -> UNIT
-- On ARROW reduce production pattern -> UNIT

State 7:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
pattern -> UNDERSCORE . [ UNIT UNDERSCORE IDENT EQUAL ARROW ]
## Transitions:
## Reductions:
-- On UNIT reduce production pattern -> UNDERSCORE
-- On UNDERSCORE reduce production pattern -> UNDERSCORE
-- On IDENT reduce production pattern -> UNDERSCORE
-- On EQUAL reduce production pattern -> UNDERSCORE
-- On ARROW reduce production pattern -> UNDERSCORE

State 8:
## Known stack suffix:
## IDENT
## LR(1) items:
pattern -> IDENT . [ UNIT UNDERSCORE IDENT EQUAL ARROW ]
## Transitions:
## Reductions:
-- On UNIT reduce production pattern -> IDENT
-- On UNDERSCORE reduce production pattern -> IDENT
-- On IDENT reduce production pattern -> IDENT
-- On EQUAL reduce production pattern -> IDENT
-- On ARROW reduce production pattern -> IDENT

State 9:
## Known stack suffix:
## LET pattern
## LR(1) items:
expression -> LET pattern . pattern_list EQUAL expression IN expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern_list shift to state 10
-- On pattern shift to state 43
## Reductions:
-- On EQUAL reduce production pattern_list ->

State 10:
## Known stack suffix:
## LET pattern pattern_list
## LR(1) items:
expression -> LET pattern pattern_list . EQUAL expression IN expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On EQUAL shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## LET pattern pattern_list EQUAL
## LR(1) items:
expression -> LET pattern pattern_list EQUAL . expression IN expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 45
## Reductions:

State 12:
## Known stack suffix:
## LBRACE
## LR(1) items:
expression0 -> LBRACE . label_list RBRACE [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 13
-- On label_list shift to state 16
## Reductions:
-- On RBRACE reduce production label_list ->

State 13:
## Known stack suffix:
## IDENT
## LR(1) items:
label_list -> IDENT . [ RBRACE ]
label_list -> IDENT . SEMI label_list [ RBRACE ]
## Transitions:
-- On SEMI shift to state 14
## Reductions:
-- On RBRACE reduce production label_list -> IDENT

State 14:
## Known stack suffix:
## IDENT SEMI
## LR(1) items:
label_list -> IDENT SEMI . label_list [ RBRACE ]
## Transitions:
-- On IDENT shift to state 13
-- On label_list shift to state 15
## Reductions:
-- On RBRACE reduce production label_list ->

State 15:
## Known stack suffix:
## IDENT SEMI label_list
## LR(1) items:
label_list -> IDENT SEMI label_list . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production label_list -> IDENT SEMI label_list

State 16:
## Known stack suffix:
## LBRACE label_list
## LR(1) items:
expression0 -> LBRACE label_list . RBRACE [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On RBRACE shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## LBRACE label_list RBRACE
## LR(1) items:
expression0 -> LBRACE label_list RBRACE . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> LBRACE label_list RBRACE
-- On TILDE reduce production expression0 -> LBRACE label_list RBRACE
-- On SETMINUS reduce production expression0 -> LBRACE label_list RBRACE
-- On SEMISEMI reduce production expression0 -> LBRACE label_list RBRACE
-- On SEMI reduce production expression0 -> LBRACE label_list RBRACE
-- On RPAREN reduce production expression0 -> LBRACE label_list RBRACE
-- On QUESTION reduce production expression0 -> LBRACE label_list RBRACE
-- On PLUS reduce production expression0 -> LBRACE label_list RBRACE
-- On NORMAL reduce production expression0 -> LBRACE label_list RBRACE
-- On MATCH reduce production expression0 -> LBRACE label_list RBRACE
-- On LPAREN reduce production expression0 -> LBRACE label_list RBRACE
-- On LBRACE reduce production expression0 -> LBRACE label_list RBRACE
-- On IN reduce production expression0 -> LBRACE label_list RBRACE
-- On IDENT reduce production expression0 -> LBRACE label_list RBRACE
-- On EXC reduce production expression0 -> LBRACE label_list RBRACE
-- On DOT reduce production expression0 -> LBRACE label_list RBRACE

State 18:
## Known stack suffix:
## IDENT
## LR(1) items:
expression0 -> IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> IDENT
-- On TILDE reduce production expression0 -> IDENT
-- On SETMINUS reduce production expression0 -> IDENT
-- On SEMISEMI reduce production expression0 -> IDENT
-- On SEMI reduce production expression0 -> IDENT
-- On RPAREN reduce production expression0 -> IDENT
-- On QUESTION reduce production expression0 -> IDENT
-- On PLUS reduce production expression0 -> IDENT
-- On NORMAL reduce production expression0 -> IDENT
-- On MATCH reduce production expression0 -> IDENT
-- On LPAREN reduce production expression0 -> IDENT
-- On LBRACE reduce production expression0 -> IDENT
-- On IN reduce production expression0 -> IDENT
-- On IDENT reduce production expression0 -> IDENT
-- On EXC reduce production expression0 -> IDENT
-- On DOT reduce production expression0 -> IDENT

State 19:
## Known stack suffix:
## FUN
## LR(1) items:
expression -> FUN . pattern_list ARROW expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern_list shift to state 20
-- On pattern shift to state 43
## Reductions:
-- On ARROW reduce production pattern_list ->

State 20:
## Known stack suffix:
## FUN pattern_list
## LR(1) items:
expression -> FUN pattern_list . ARROW expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On ARROW shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## FUN pattern_list ARROW
## LR(1) items:
expression -> FUN pattern_list ARROW . expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 42
## Reductions:

State 22:
## Known stack suffix:
## EXC
## LR(1) items:
expression0 -> EXC . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> EXC
-- On TILDE reduce production expression0 -> EXC
-- On SETMINUS reduce production expression0 -> EXC
-- On SEMISEMI reduce production expression0 -> EXC
-- On SEMI reduce production expression0 -> EXC
-- On RPAREN reduce production expression0 -> EXC
-- On QUESTION reduce production expression0 -> EXC
-- On PLUS reduce production expression0 -> EXC
-- On NORMAL reduce production expression0 -> EXC
-- On MATCH reduce production expression0 -> EXC
-- On LPAREN reduce production expression0 -> EXC
-- On LBRACE reduce production expression0 -> EXC
-- On IN reduce production expression0 -> EXC
-- On IDENT reduce production expression0 -> EXC
-- On EXC reduce production expression0 -> EXC
-- On DOT reduce production expression0 -> EXC

State 23:
## Known stack suffix:
## CHOOSE
## LR(1) items:
expression1 -> CHOOSE . expression0 expression0 [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On EXC shift to state 22
-- On expression0 shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## CHOOSE expression0
## LR(1) items:
expression0 -> expression0 . PLUS IDENT [ UNIT TILDE SETMINUS QUESTION PLUS NORMAL MATCH LPAREN LBRACE IDENT EXC DOT ]
expression0 -> expression0 . DOT IDENT [ UNIT TILDE SETMINUS QUESTION PLUS NORMAL MATCH LPAREN LBRACE IDENT EXC DOT ]
expression0 -> expression0 . SETMINUS IDENT [ UNIT TILDE SETMINUS QUESTION PLUS NORMAL MATCH LPAREN LBRACE IDENT EXC DOT ]
expression0 -> expression0 . QUESTION IDENT [ UNIT TILDE SETMINUS QUESTION PLUS NORMAL MATCH LPAREN LBRACE IDENT EXC DOT ]
expression0 -> expression0 . TILDE IDENT [ UNIT TILDE SETMINUS QUESTION PLUS NORMAL MATCH LPAREN LBRACE IDENT EXC DOT ]
expression1 -> CHOOSE expression0 . expression0 [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
## Transitions:
-- On UNIT shift to state 1
-- On TILDE shift to state 25
-- On SETMINUS shift to state 27
-- On QUESTION shift to state 29
-- On PLUS shift to state 31
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On EXC shift to state 22
-- On DOT shift to state 33
-- On expression0 shift to state 35
## Reductions:

State 25:
## Known stack suffix:
## expression0 TILDE
## LR(1) items:
expression0 -> expression0 TILDE . IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## expression0 TILDE IDENT
## LR(1) items:
expression0 -> expression0 TILDE IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> expression0 TILDE IDENT
-- On TILDE reduce production expression0 -> expression0 TILDE IDENT
-- On SETMINUS reduce production expression0 -> expression0 TILDE IDENT
-- On SEMISEMI reduce production expression0 -> expression0 TILDE IDENT
-- On SEMI reduce production expression0 -> expression0 TILDE IDENT
-- On RPAREN reduce production expression0 -> expression0 TILDE IDENT
-- On QUESTION reduce production expression0 -> expression0 TILDE IDENT
-- On PLUS reduce production expression0 -> expression0 TILDE IDENT
-- On NORMAL reduce production expression0 -> expression0 TILDE IDENT
-- On MATCH reduce production expression0 -> expression0 TILDE IDENT
-- On LPAREN reduce production expression0 -> expression0 TILDE IDENT
-- On LBRACE reduce production expression0 -> expression0 TILDE IDENT
-- On IN reduce production expression0 -> expression0 TILDE IDENT
-- On IDENT reduce production expression0 -> expression0 TILDE IDENT
-- On EXC reduce production expression0 -> expression0 TILDE IDENT
-- On DOT reduce production expression0 -> expression0 TILDE IDENT

State 27:
## Known stack suffix:
## expression0 SETMINUS
## LR(1) items:
expression0 -> expression0 SETMINUS . IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## expression0 SETMINUS IDENT
## LR(1) items:
expression0 -> expression0 SETMINUS IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> expression0 SETMINUS IDENT
-- On TILDE reduce production expression0 -> expression0 SETMINUS IDENT
-- On SETMINUS reduce production expression0 -> expression0 SETMINUS IDENT
-- On SEMISEMI reduce production expression0 -> expression0 SETMINUS IDENT
-- On SEMI reduce production expression0 -> expression0 SETMINUS IDENT
-- On RPAREN reduce production expression0 -> expression0 SETMINUS IDENT
-- On QUESTION reduce production expression0 -> expression0 SETMINUS IDENT
-- On PLUS reduce production expression0 -> expression0 SETMINUS IDENT
-- On NORMAL reduce production expression0 -> expression0 SETMINUS IDENT
-- On MATCH reduce production expression0 -> expression0 SETMINUS IDENT
-- On LPAREN reduce production expression0 -> expression0 SETMINUS IDENT
-- On LBRACE reduce production expression0 -> expression0 SETMINUS IDENT
-- On IN reduce production expression0 -> expression0 SETMINUS IDENT
-- On IDENT reduce production expression0 -> expression0 SETMINUS IDENT
-- On EXC reduce production expression0 -> expression0 SETMINUS IDENT
-- On DOT reduce production expression0 -> expression0 SETMINUS IDENT

State 29:
## Known stack suffix:
## expression0 QUESTION
## LR(1) items:
expression0 -> expression0 QUESTION . IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## expression0 QUESTION IDENT
## LR(1) items:
expression0 -> expression0 QUESTION IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> expression0 QUESTION IDENT
-- On TILDE reduce production expression0 -> expression0 QUESTION IDENT
-- On SETMINUS reduce production expression0 -> expression0 QUESTION IDENT
-- On SEMISEMI reduce production expression0 -> expression0 QUESTION IDENT
-- On SEMI reduce production expression0 -> expression0 QUESTION IDENT
-- On RPAREN reduce production expression0 -> expression0 QUESTION IDENT
-- On QUESTION reduce production expression0 -> expression0 QUESTION IDENT
-- On PLUS reduce production expression0 -> expression0 QUESTION IDENT
-- On NORMAL reduce production expression0 -> expression0 QUESTION IDENT
-- On MATCH reduce production expression0 -> expression0 QUESTION IDENT
-- On LPAREN reduce production expression0 -> expression0 QUESTION IDENT
-- On LBRACE reduce production expression0 -> expression0 QUESTION IDENT
-- On IN reduce production expression0 -> expression0 QUESTION IDENT
-- On IDENT reduce production expression0 -> expression0 QUESTION IDENT
-- On EXC reduce production expression0 -> expression0 QUESTION IDENT
-- On DOT reduce production expression0 -> expression0 QUESTION IDENT

State 31:
## Known stack suffix:
## expression0 PLUS
## LR(1) items:
expression0 -> expression0 PLUS . IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## expression0 PLUS IDENT
## LR(1) items:
expression0 -> expression0 PLUS IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> expression0 PLUS IDENT
-- On TILDE reduce production expression0 -> expression0 PLUS IDENT
-- On SETMINUS reduce production expression0 -> expression0 PLUS IDENT
-- On SEMISEMI reduce production expression0 -> expression0 PLUS IDENT
-- On SEMI reduce production expression0 -> expression0 PLUS IDENT
-- On RPAREN reduce production expression0 -> expression0 PLUS IDENT
-- On QUESTION reduce production expression0 -> expression0 PLUS IDENT
-- On PLUS reduce production expression0 -> expression0 PLUS IDENT
-- On NORMAL reduce production expression0 -> expression0 PLUS IDENT
-- On MATCH reduce production expression0 -> expression0 PLUS IDENT
-- On LPAREN reduce production expression0 -> expression0 PLUS IDENT
-- On LBRACE reduce production expression0 -> expression0 PLUS IDENT
-- On IN reduce production expression0 -> expression0 PLUS IDENT
-- On IDENT reduce production expression0 -> expression0 PLUS IDENT
-- On EXC reduce production expression0 -> expression0 PLUS IDENT
-- On DOT reduce production expression0 -> expression0 PLUS IDENT

State 33:
## Known stack suffix:
## expression0 DOT
## LR(1) items:
expression0 -> expression0 DOT . IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On IDENT shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## expression0 DOT IDENT
## LR(1) items:
expression0 -> expression0 DOT IDENT . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> expression0 DOT IDENT
-- On TILDE reduce production expression0 -> expression0 DOT IDENT
-- On SETMINUS reduce production expression0 -> expression0 DOT IDENT
-- On SEMISEMI reduce production expression0 -> expression0 DOT IDENT
-- On SEMI reduce production expression0 -> expression0 DOT IDENT
-- On RPAREN reduce production expression0 -> expression0 DOT IDENT
-- On QUESTION reduce production expression0 -> expression0 DOT IDENT
-- On PLUS reduce production expression0 -> expression0 DOT IDENT
-- On NORMAL reduce production expression0 -> expression0 DOT IDENT
-- On MATCH reduce production expression0 -> expression0 DOT IDENT
-- On LPAREN reduce production expression0 -> expression0 DOT IDENT
-- On LBRACE reduce production expression0 -> expression0 DOT IDENT
-- On IN reduce production expression0 -> expression0 DOT IDENT
-- On IDENT reduce production expression0 -> expression0 DOT IDENT
-- On EXC reduce production expression0 -> expression0 DOT IDENT
-- On DOT reduce production expression0 -> expression0 DOT IDENT

State 35:
## Known stack suffix:
## CHOOSE expression0 expression0
## LR(1) items:
expression0 -> expression0 . PLUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . DOT IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . SETMINUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . QUESTION IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . TILDE IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression1 -> CHOOSE expression0 expression0 . [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
## Transitions:
-- On TILDE shift to state 25
-- On SETMINUS shift to state 27
-- On QUESTION shift to state 29
-- On PLUS shift to state 31
-- On DOT shift to state 33
## Reductions:
-- On UNIT reduce production expression1 -> CHOOSE expression0 expression0
-- On SEMISEMI reduce production expression1 -> CHOOSE expression0 expression0
-- On SEMI reduce production expression1 -> CHOOSE expression0 expression0
-- On RPAREN reduce production expression1 -> CHOOSE expression0 expression0
-- On NORMAL reduce production expression1 -> CHOOSE expression0 expression0
-- On MATCH reduce production expression1 -> CHOOSE expression0 expression0
-- On LPAREN reduce production expression1 -> CHOOSE expression0 expression0
-- On LBRACE reduce production expression1 -> CHOOSE expression0 expression0
-- On IN reduce production expression1 -> CHOOSE expression0 expression0
-- On IDENT reduce production expression1 -> CHOOSE expression0 expression0
-- On EXC reduce production expression1 -> CHOOSE expression0 expression0

State 36:
## Known stack suffix:
## expression2
## LR(1) items:
expression -> expression2 . [ SEMISEMI RPAREN IN ]
## Transitions:
## Reductions:
-- On SEMISEMI reduce production expression -> expression2
-- On RPAREN reduce production expression -> expression2
-- On IN reduce production expression -> expression2

State 37:
## Known stack suffix:
## expression1
## LR(1) items:
expression1 -> expression1 . expression0 [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
expression2 -> expression1 . [ SEMISEMI RPAREN IN ]
expression2 -> expression1 . SEMI expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 1
-- On SEMI shift to state 38
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On EXC shift to state 22
-- On expression0 shift to state 41
## Reductions:
-- On SEMISEMI reduce production expression2 -> expression1
-- On RPAREN reduce production expression2 -> expression1
-- On IN reduce production expression2 -> expression1

State 38:
## Known stack suffix:
## expression1 SEMI
## LR(1) items:
expression2 -> expression1 SEMI . expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 40
## Reductions:

State 39:
## Known stack suffix:
## expression0
## LR(1) items:
expression0 -> expression0 . PLUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . DOT IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . SETMINUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . QUESTION IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . TILDE IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression1 -> expression0 . [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
## Transitions:
-- On TILDE shift to state 25
-- On SETMINUS shift to state 27
-- On QUESTION shift to state 29
-- On PLUS shift to state 31
-- On DOT shift to state 33
## Reductions:
-- On UNIT reduce production expression1 -> expression0
-- On SEMISEMI reduce production expression1 -> expression0
-- On SEMI reduce production expression1 -> expression0
-- On RPAREN reduce production expression1 -> expression0
-- On NORMAL reduce production expression1 -> expression0
-- On MATCH reduce production expression1 -> expression0
-- On LPAREN reduce production expression1 -> expression0
-- On LBRACE reduce production expression1 -> expression0
-- On IN reduce production expression1 -> expression0
-- On IDENT reduce production expression1 -> expression0
-- On EXC reduce production expression1 -> expression0

State 40:
## Known stack suffix:
## expression1 SEMI expression
## LR(1) items:
expression2 -> expression1 SEMI expression . [ SEMISEMI RPAREN IN ]
## Transitions:
## Reductions:
-- On SEMISEMI reduce production expression2 -> expression1 SEMI expression
-- On RPAREN reduce production expression2 -> expression1 SEMI expression
-- On IN reduce production expression2 -> expression1 SEMI expression

State 41:
## Known stack suffix:
## expression1 expression0
## LR(1) items:
expression0 -> expression0 . PLUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . DOT IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . SETMINUS IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . QUESTION IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression0 -> expression0 . TILDE IDENT [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
expression1 -> expression1 expression0 . [ UNIT SEMISEMI SEMI RPAREN NORMAL MATCH LPAREN LBRACE IN IDENT EXC ]
## Transitions:
-- On TILDE shift to state 25
-- On SETMINUS shift to state 27
-- On QUESTION shift to state 29
-- On PLUS shift to state 31
-- On DOT shift to state 33
## Reductions:
-- On UNIT reduce production expression1 -> expression1 expression0
-- On SEMISEMI reduce production expression1 -> expression1 expression0
-- On SEMI reduce production expression1 -> expression1 expression0
-- On RPAREN reduce production expression1 -> expression1 expression0
-- On NORMAL reduce production expression1 -> expression1 expression0
-- On MATCH reduce production expression1 -> expression1 expression0
-- On LPAREN reduce production expression1 -> expression1 expression0
-- On LBRACE reduce production expression1 -> expression1 expression0
-- On IN reduce production expression1 -> expression1 expression0
-- On IDENT reduce production expression1 -> expression1 expression0
-- On EXC reduce production expression1 -> expression1 expression0

State 42:
## Known stack suffix:
## FUN pattern_list ARROW expression
## LR(1) items:
expression -> FUN pattern_list ARROW expression . [ SEMISEMI RPAREN IN ]
## Transitions:
## Reductions:
-- On SEMISEMI reduce production expression -> FUN pattern_list ARROW expression
-- On RPAREN reduce production expression -> FUN pattern_list ARROW expression
-- On IN reduce production expression -> FUN pattern_list ARROW expression

State 43:
## Known stack suffix:
## pattern
## LR(1) items:
pattern_list -> pattern . pattern_list [ EQUAL ARROW ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern_list shift to state 44
-- On pattern shift to state 43
## Reductions:
-- On EQUAL reduce production pattern_list ->
-- On ARROW reduce production pattern_list ->

State 44:
## Known stack suffix:
## pattern pattern_list
## LR(1) items:
pattern_list -> pattern pattern_list . [ EQUAL ARROW ]
## Transitions:
## Reductions:
-- On EQUAL reduce production pattern_list -> pattern pattern_list
-- On ARROW reduce production pattern_list -> pattern pattern_list

State 45:
## Known stack suffix:
## LET pattern pattern_list EQUAL expression
## LR(1) items:
expression -> LET pattern pattern_list EQUAL expression . IN expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On IN shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## LET pattern pattern_list EQUAL expression IN
## LR(1) items:
expression -> LET pattern pattern_list EQUAL expression IN . expression [ SEMISEMI RPAREN IN ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## LET pattern pattern_list EQUAL expression IN expression
## LR(1) items:
expression -> LET pattern pattern_list EQUAL expression IN expression . [ SEMISEMI RPAREN IN ]
## Transitions:
## Reductions:
-- On SEMISEMI reduce production expression -> LET pattern pattern_list EQUAL expression IN expression
-- On RPAREN reduce production expression -> LET pattern pattern_list EQUAL expression IN expression
-- On IN reduce production expression -> LET pattern pattern_list EQUAL expression IN expression

State 48:
## Known stack suffix:
## LPAREN expression
## LR(1) items:
expression0 -> LPAREN expression . RPAREN [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
-- On RPAREN shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## LPAREN expression RPAREN
## LR(1) items:
expression0 -> LPAREN expression RPAREN . [ UNIT TILDE SETMINUS SEMISEMI SEMI RPAREN QUESTION PLUS NORMAL MATCH LPAREN LBRACE IN IDENT EXC DOT ]
## Transitions:
## Reductions:
-- On UNIT reduce production expression0 -> LPAREN expression RPAREN
-- On TILDE reduce production expression0 -> LPAREN expression RPAREN
-- On SETMINUS reduce production expression0 -> LPAREN expression RPAREN
-- On SEMISEMI reduce production expression0 -> LPAREN expression RPAREN
-- On SEMI reduce production expression0 -> LPAREN expression RPAREN
-- On RPAREN reduce production expression0 -> LPAREN expression RPAREN
-- On QUESTION reduce production expression0 -> LPAREN expression RPAREN
-- On PLUS reduce production expression0 -> LPAREN expression RPAREN
-- On NORMAL reduce production expression0 -> LPAREN expression RPAREN
-- On MATCH reduce production expression0 -> LPAREN expression RPAREN
-- On LPAREN reduce production expression0 -> LPAREN expression RPAREN
-- On LBRACE reduce production expression0 -> LPAREN expression RPAREN
-- On IN reduce production expression0 -> LPAREN expression RPAREN
-- On IDENT reduce production expression0 -> LPAREN expression RPAREN
-- On EXC reduce production expression0 -> LPAREN expression RPAREN
-- On DOT reduce production expression0 -> LPAREN expression RPAREN

State 50:
## Known stack suffix:
## LET
## LR(1) items:
expression -> LET . pattern pattern_list EQUAL expression IN expression [ SEMISEMI ]
phrase -> LET . pattern pattern_list EQUAL expression SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## LET pattern
## LR(1) items:
expression -> LET pattern . pattern_list EQUAL expression IN expression [ SEMISEMI ]
phrase -> LET pattern . pattern_list EQUAL expression SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 6
-- On UNDERSCORE shift to state 7
-- On IDENT shift to state 8
-- On pattern_list shift to state 52
-- On pattern shift to state 43
## Reductions:
-- On EQUAL reduce production pattern_list ->

State 52:
## Known stack suffix:
## LET pattern pattern_list
## LR(1) items:
expression -> LET pattern pattern_list . EQUAL expression IN expression [ SEMISEMI ]
phrase -> LET pattern pattern_list . EQUAL expression SEMISEMI [ # ]
## Transitions:
-- On EQUAL shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## LET pattern pattern_list EQUAL
## LR(1) items:
expression -> LET pattern pattern_list EQUAL . expression IN expression [ SEMISEMI ]
phrase -> LET pattern pattern_list EQUAL . expression SEMISEMI [ # ]
## Transitions:
-- On UNIT shift to state 1
-- On NORMAL shift to state 2
-- On MATCH shift to state 3
-- On LPAREN shift to state 4
-- On LET shift to state 5
-- On LBRACE shift to state 12
-- On IDENT shift to state 18
-- On FUN shift to state 19
-- On EXC shift to state 22
-- On CHOOSE shift to state 23
-- On expression2 shift to state 36
-- On expression1 shift to state 37
-- On expression0 shift to state 39
-- On expression shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## LET pattern pattern_list EQUAL expression
## LR(1) items:
expression -> LET pattern pattern_list EQUAL expression . IN expression [ SEMISEMI ]
phrase -> LET pattern pattern_list EQUAL expression . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 55
-- On IN shift to state 46
## Reductions:

State 55:
## Known stack suffix:
## LET pattern pattern_list EQUAL expression SEMISEMI
## LR(1) items:
phrase -> LET pattern pattern_list EQUAL expression SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On # reduce production phrase -> LET pattern pattern_list EQUAL expression SEMISEMI

State 56:
## Known stack suffix:
## phrase
## LR(1) items:
phrase' -> phrase . [ # ]
## Transitions:
## Reductions:
-- On # accept phrase

State 57:
## Known stack suffix:
## expression
## LR(1) items:
phrase -> expression . SEMISEMI [ # ]
## Transitions:
-- On SEMISEMI shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## expression SEMISEMI
## LR(1) items:
phrase -> expression SEMISEMI . [ # ]
## Transitions:
## Reductions:
-- On # reduce production phrase -> expression SEMISEMI

