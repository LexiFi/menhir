State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On LBRACE shift to state 1
-- On INT shift to state 2
-- On main shift to state 9
-- On expr(separated_list,SEMI) shift to state 10
## Reductions:

State 1:
## Known stack suffix:
## LBRACE
## LR(1) items:
expr(separated_list,SEMI) -> LBRACE . loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE [ SEMI RBRACE LBRACE INT ]
## Transitions:
-- On LBRACE shift to state 1
-- On INT shift to state 2
-- On separated_nonempty_list(SEMI,expr(separated_list,SEMI)) shift to state 3
-- On loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) shift to state 4
-- On expr(separated_list,SEMI) shift to state 6
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) ->

State 2:
## Known stack suffix:
## INT
## LR(1) items:
expr(separated_list,SEMI) -> INT . [ SEMI RBRACE LBRACE INT ]
## Transitions:
## Reductions:
-- On SEMI reduce production expr(separated_list,SEMI) -> INT
-- On RBRACE reduce production expr(separated_list,SEMI) -> INT
-- On LBRACE reduce production expr(separated_list,SEMI) -> INT
-- On INT reduce production expr(separated_list,SEMI) -> INT

State 3:
## Known stack suffix:
## separated_nonempty_list(SEMI,expr(separated_list,SEMI))
## LR(1) items:
loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) -> separated_nonempty_list(SEMI,expr(separated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) -> separated_nonempty_list(SEMI,expr(separated_list,SEMI))

State 4:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI)))
## LR(1) items:
expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) . RBRACE [ SEMI RBRACE LBRACE INT ]
## Transitions:
-- On RBRACE shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE
## LR(1) items:
expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE . [ SEMI RBRACE LBRACE INT ]
## Transitions:
## Reductions:
-- On SEMI reduce production expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE
-- On RBRACE reduce production expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE
-- On LBRACE reduce production expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE
-- On INT reduce production expr(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) RBRACE

State 6:
## Known stack suffix:
## expr(separated_list,SEMI)
## LR(1) items:
separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI) . [ RBRACE ]
separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI) . SEMI separated_nonempty_list(SEMI,expr(separated_list,SEMI)) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 7
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI)

State 7:
## Known stack suffix:
## expr(separated_list,SEMI) SEMI
## LR(1) items:
separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI) SEMI . separated_nonempty_list(SEMI,expr(separated_list,SEMI)) [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 1
-- On INT shift to state 2
-- On separated_nonempty_list(SEMI,expr(separated_list,SEMI)) shift to state 8
-- On expr(separated_list,SEMI) shift to state 6
## Reductions:

State 8:
## Known stack suffix:
## expr(separated_list,SEMI) SEMI separated_nonempty_list(SEMI,expr(separated_list,SEMI))
## LR(1) items:
separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI) SEMI separated_nonempty_list(SEMI,expr(separated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,expr(separated_list,SEMI)) -> expr(separated_list,SEMI) SEMI separated_nonempty_list(SEMI,expr(separated_list,SEMI))

State 9:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On # accept main

State 10:
## Known stack suffix:
## expr(separated_list,SEMI)
## LR(1) items:
main -> expr(separated_list,SEMI) . weird(separated_list,SEMI) bizarre(separated_list,SEMI) EOF [ # ]
## Transitions:
-- On LBRACE shift to state 11
-- On INT shift to state 26
-- On weird(separated_list,SEMI) shift to state 27
## Reductions:

State 11:
## Known stack suffix:
## LBRACE
## LR(1) items:
weird(separated_list,SEMI) -> LBRACE . loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) RBRACE [ LBRACE INT ]
## Transitions:
-- On LBRACE shift to state 12
-- On INT shift to state 13
-- On weird(separated_list,COMMA) shift to state 20
-- On separated_nonempty_list(SEMI,weird(separated_list,COMMA)) shift to state 23
-- On loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) shift to state 24
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) ->

State 12:
## Known stack suffix:
## LBRACE
## LR(1) items:
weird(separated_list,COMMA) -> LBRACE . loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE [ SEMI RBRACE COMMA ]
## Transitions:
-- On LBRACE shift to state 12
-- On INT shift to state 13
-- On weird(separated_list,COMMA) shift to state 14
-- On separated_nonempty_list(COMMA,weird(separated_list,COMMA)) shift to state 17
-- On loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) shift to state 18
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) ->

State 13:
## Known stack suffix:
## INT
## LR(1) items:
weird(separated_list,COMMA) -> INT . [ SEMI RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMI reduce production weird(separated_list,COMMA) -> INT
-- On RBRACE reduce production weird(separated_list,COMMA) -> INT
-- On COMMA reduce production weird(separated_list,COMMA) -> INT

State 14:
## Known stack suffix:
## weird(separated_list,COMMA)
## LR(1) items:
separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) . [ RBRACE ]
separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) . COMMA separated_nonempty_list(COMMA,weird(separated_list,COMMA)) [ RBRACE ]
## Transitions:
-- On COMMA shift to state 15
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA)

State 15:
## Known stack suffix:
## weird(separated_list,COMMA) COMMA
## LR(1) items:
separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) COMMA . separated_nonempty_list(COMMA,weird(separated_list,COMMA)) [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 12
-- On INT shift to state 13
-- On weird(separated_list,COMMA) shift to state 14
-- On separated_nonempty_list(COMMA,weird(separated_list,COMMA)) shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## weird(separated_list,COMMA) COMMA separated_nonempty_list(COMMA,weird(separated_list,COMMA))
## LR(1) items:
separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) COMMA separated_nonempty_list(COMMA,weird(separated_list,COMMA)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(COMMA,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) COMMA separated_nonempty_list(COMMA,weird(separated_list,COMMA))

State 17:
## Known stack suffix:
## separated_nonempty_list(COMMA,weird(separated_list,COMMA))
## LR(1) items:
loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) -> separated_nonempty_list(COMMA,weird(separated_list,COMMA)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) -> separated_nonempty_list(COMMA,weird(separated_list,COMMA))

State 18:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA)))
## LR(1) items:
weird(separated_list,COMMA) -> LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) . RBRACE [ SEMI RBRACE COMMA ]
## Transitions:
-- On RBRACE shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE
## LR(1) items:
weird(separated_list,COMMA) -> LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE . [ SEMI RBRACE COMMA ]
## Transitions:
## Reductions:
-- On SEMI reduce production weird(separated_list,COMMA) -> LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE
-- On RBRACE reduce production weird(separated_list,COMMA) -> LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE
-- On COMMA reduce production weird(separated_list,COMMA) -> LBRACE loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) RBRACE

State 20:
## Known stack suffix:
## weird(separated_list,COMMA)
## LR(1) items:
separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) . [ RBRACE ]
separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) . SEMI separated_nonempty_list(SEMI,weird(separated_list,COMMA)) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 21
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA)

State 21:
## Known stack suffix:
## weird(separated_list,COMMA) SEMI
## LR(1) items:
separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) SEMI . separated_nonempty_list(SEMI,weird(separated_list,COMMA)) [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 12
-- On INT shift to state 13
-- On weird(separated_list,COMMA) shift to state 20
-- On separated_nonempty_list(SEMI,weird(separated_list,COMMA)) shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## weird(separated_list,COMMA) SEMI separated_nonempty_list(SEMI,weird(separated_list,COMMA))
## LR(1) items:
separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) SEMI separated_nonempty_list(SEMI,weird(separated_list,COMMA)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,weird(separated_list,COMMA)) -> weird(separated_list,COMMA) SEMI separated_nonempty_list(SEMI,weird(separated_list,COMMA))

State 23:
## Known stack suffix:
## separated_nonempty_list(SEMI,weird(separated_list,COMMA))
## LR(1) items:
loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) -> separated_nonempty_list(SEMI,weird(separated_list,COMMA)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) -> separated_nonempty_list(SEMI,weird(separated_list,COMMA))

State 24:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA)))
## LR(1) items:
weird(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) . RBRACE [ LBRACE INT ]
## Transitions:
-- On RBRACE shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) RBRACE
## LR(1) items:
weird(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) RBRACE . [ LBRACE INT ]
## Transitions:
## Reductions:
-- On LBRACE reduce production weird(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) RBRACE
-- On INT reduce production weird(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) RBRACE

State 26:
## Known stack suffix:
## INT
## LR(1) items:
weird(separated_list,SEMI) -> INT . [ LBRACE INT ]
## Transitions:
## Reductions:
-- On LBRACE reduce production weird(separated_list,SEMI) -> INT
-- On INT reduce production weird(separated_list,SEMI) -> INT

State 27:
## Known stack suffix:
## expr(separated_list,SEMI) weird(separated_list,SEMI)
## LR(1) items:
main -> expr(separated_list,SEMI) weird(separated_list,SEMI) . bizarre(separated_list,SEMI) EOF [ # ]
## Transitions:
-- On LBRACE shift to state 28
-- On INT shift to state 42
-- On bizarre(separated_list,SEMI) shift to state 43
## Reductions:

State 28:
## Known stack suffix:
## LBRACE
## LR(1) items:
bizarre(separated_list,SEMI) -> LBRACE . loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) RBRACE [ EOF ]
## Transitions:
-- On LBRACE shift to state 29
-- On INT shift to state 30
-- On separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) shift to state 36
-- On loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) shift to state 37
-- On bizarre(nonseparated_list,SEMI) shift to state 39
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) ->

State 29:
## Known stack suffix:
## LBRACE
## LR(1) items:
bizarre(nonseparated_list,SEMI) -> LBRACE . nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE [ SEMI RBRACE LBRACE INT ]
## Transitions:
-- On LBRACE shift to state 29
-- On INT shift to state 30
-- On nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) shift to state 31
-- On list(bizarre(nonseparated_list,SEMI)) shift to state 33
-- On bizarre(nonseparated_list,SEMI) shift to state 34
## Reductions:
-- On RBRACE reduce production list(bizarre(nonseparated_list,SEMI)) ->

State 30:
## Known stack suffix:
## INT
## LR(1) items:
bizarre(nonseparated_list,SEMI) -> INT . [ SEMI RBRACE LBRACE INT ]
## Transitions:
## Reductions:
-- On SEMI reduce production bizarre(nonseparated_list,SEMI) -> INT
-- On RBRACE reduce production bizarre(nonseparated_list,SEMI) -> INT
-- On LBRACE reduce production bizarre(nonseparated_list,SEMI) -> INT
-- On INT reduce production bizarre(nonseparated_list,SEMI) -> INT

State 31:
## Known stack suffix:
## LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI))
## LR(1) items:
bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) . RBRACE [ SEMI RBRACE LBRACE INT ]
## Transitions:
-- On RBRACE shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE
## LR(1) items:
bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE . [ SEMI RBRACE LBRACE INT ]
## Transitions:
## Reductions:
-- On SEMI reduce production bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE
-- On RBRACE reduce production bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE
-- On LBRACE reduce production bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE
-- On INT reduce production bizarre(nonseparated_list,SEMI) -> LBRACE nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) RBRACE

State 33:
## Known stack suffix:
## list(bizarre(nonseparated_list,SEMI))
## LR(1) items:
nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) -> list(bizarre(nonseparated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI)) -> list(bizarre(nonseparated_list,SEMI))

State 34:
## Known stack suffix:
## bizarre(nonseparated_list,SEMI)
## LR(1) items:
list(bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) . list(bizarre(nonseparated_list,SEMI)) [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 29
-- On INT shift to state 30
-- On list(bizarre(nonseparated_list,SEMI)) shift to state 35
-- On bizarre(nonseparated_list,SEMI) shift to state 34
## Reductions:
-- On RBRACE reduce production list(bizarre(nonseparated_list,SEMI)) ->

State 35:
## Known stack suffix:
## bizarre(nonseparated_list,SEMI) list(bizarre(nonseparated_list,SEMI))
## LR(1) items:
list(bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) list(bizarre(nonseparated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production list(bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) list(bizarre(nonseparated_list,SEMI))

State 36:
## Known stack suffix:
## separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))
## LR(1) items:
loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) -> separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) -> separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))

State 37:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)))
## LR(1) items:
bizarre(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) . RBRACE [ EOF ]
## Transitions:
-- On RBRACE shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## LBRACE loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) RBRACE
## LR(1) items:
bizarre(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) RBRACE . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production bizarre(separated_list,SEMI) -> LBRACE loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) RBRACE

State 39:
## Known stack suffix:
## bizarre(nonseparated_list,SEMI)
## LR(1) items:
separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) . [ RBRACE ]
separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) . SEMI separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) [ RBRACE ]
## Transitions:
-- On SEMI shift to state 40
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI)

State 40:
## Known stack suffix:
## bizarre(nonseparated_list,SEMI) SEMI
## LR(1) items:
separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) SEMI . separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) [ RBRACE ]
## Transitions:
-- On LBRACE shift to state 29
-- On INT shift to state 30
-- On separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) shift to state 41
-- On bizarre(nonseparated_list,SEMI) shift to state 39
## Reductions:

State 41:
## Known stack suffix:
## bizarre(nonseparated_list,SEMI) SEMI separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))
## LR(1) items:
separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) SEMI separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE reduce production separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)) -> bizarre(nonseparated_list,SEMI) SEMI separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))

State 42:
## Known stack suffix:
## INT
## LR(1) items:
bizarre(separated_list,SEMI) -> INT . [ EOF ]
## Transitions:
## Reductions:
-- On EOF reduce production bizarre(separated_list,SEMI) -> INT

State 43:
## Known stack suffix:
## expr(separated_list,SEMI) weird(separated_list,SEMI) bizarre(separated_list,SEMI)
## LR(1) items:
main -> expr(separated_list,SEMI) weird(separated_list,SEMI) bizarre(separated_list,SEMI) . EOF [ # ]
## Transitions:
-- On EOF shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## expr(separated_list,SEMI) weird(separated_list,SEMI) bizarre(separated_list,SEMI) EOF
## LR(1) items:
main -> expr(separated_list,SEMI) weird(separated_list,SEMI) bizarre(separated_list,SEMI) EOF . [ # ]
## Transitions:
## Reductions:
-- On # reduce production main -> expr(separated_list,SEMI) weird(separated_list,SEMI) bizarre(separated_list,SEMI) EOF

