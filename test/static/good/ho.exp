Grammar has 16 nonterminal symbols, among which 1 start symbols.
Grammar has 6 terminal symbols.
Grammar has 30 productions.
nullable(weird(separated_list,SEMI)) = false
nullable(weird(separated_list,COMMA)) = false
nullable(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) = false
nullable(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) = false
nullable(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) = false
nullable(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) = false
nullable(nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI))) = true
nullable(main) = false
nullable(loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA)))) = true
nullable(loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI)))) = true
nullable(loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)))) = true
nullable(loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA)))) = true
nullable(list(bizarre(nonseparated_list,SEMI))) = true
nullable(expr(separated_list,SEMI)) = false
nullable(bizarre(separated_list,SEMI)) = false
nullable(bizarre(nonseparated_list,SEMI)) = false
first(weird(separated_list,SEMI)) = LBRACE INT
first(weird(separated_list,COMMA)) = LBRACE INT
first(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) = LBRACE INT
first(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) = LBRACE INT
first(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) = LBRACE INT
first(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) = LBRACE INT
first(nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI))) = LBRACE INT
first(main) = LBRACE INT
first(loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA)))) = LBRACE INT
first(loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI)))) = LBRACE INT
first(loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)))) = LBRACE INT
first(loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA)))) = LBRACE INT
first(list(bizarre(nonseparated_list,SEMI))) = LBRACE INT
first(expr(separated_list,SEMI)) = LBRACE INT
first(bizarre(separated_list,SEMI)) = LBRACE INT
first(bizarre(nonseparated_list,SEMI)) = LBRACE INT
minimal(weird(separated_list,SEMI)) = (* 1 *) INT
minimal(weird(separated_list,COMMA)) = (* 1 *) INT
minimal(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) = (* 1 *) INT
minimal(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) = (* 1 *) INT
minimal(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) = (* 1 *) INT
minimal(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) = (* 1 *) INT
minimal(nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI))) = (* 0 *)
minimal(main) = (* 4 *) INT INT INT EOF
minimal(loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA)))) = (* 0 *)
minimal(loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI)))) = (* 0 *)
minimal(loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)))) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA)))) = (* 0 *)
minimal(list(bizarre(nonseparated_list,SEMI))) = (* 0 *)
minimal(expr(separated_list,SEMI)) = (* 1 *) INT
minimal(bizarre(separated_list,SEMI)) = (* 1 *) INT
minimal(bizarre(nonseparated_list,SEMI)) = (* 1 *) INT
follow(weird(separated_list,SEMI)) = LBRACE INT
follow(weird(separated_list,COMMA)) = SEMI RBRACE COMMA
follow(separated_nonempty_list(SEMI,weird(separated_list,COMMA))) = RBRACE
follow(separated_nonempty_list(SEMI,expr(separated_list,SEMI))) = RBRACE
follow(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI))) = RBRACE
follow(separated_nonempty_list(COMMA,weird(separated_list,COMMA))) = RBRACE
follow(nonseparated_list(SEMI,bizarre(nonseparated_list,SEMI))) = RBRACE
follow(main) = #
follow(loption(separated_nonempty_list(SEMI,weird(separated_list,COMMA)))) = RBRACE
follow(loption(separated_nonempty_list(SEMI,expr(separated_list,SEMI)))) = RBRACE
follow(loption(separated_nonempty_list(SEMI,bizarre(nonseparated_list,SEMI)))) = RBRACE
follow(loption(separated_nonempty_list(COMMA,weird(separated_list,COMMA)))) = RBRACE
follow(list(bizarre(nonseparated_list,SEMI))) = RBRACE
follow(expr(separated_list,SEMI)) = SEMI RBRACE LBRACE INT
follow(bizarre(separated_list,SEMI)) = EOF
follow(bizarre(nonseparated_list,SEMI)) = SEMI RBRACE LBRACE INT
Built an LR(0) automaton with 45 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 45 states.
22 out of 45 states have a default reduction.
11 out of 45 states are represented.
0 out of 25 symbols keep track of their start position.
0 out of 25 symbols keep track of their end position.
22 out of 31 productions exploit shiftreduce optimization.
0 out of 45 states can peek at an error.
143 functions before inlining, 25 functions after inlining.
