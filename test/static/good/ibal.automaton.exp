State 0:
## Known stack suffix:
##
## LR(1) items:
decl' -> . decl [ # ]
## Transitions:
-- On TYPE shift to state 1
-- On REWARD shift to state 64
-- On RETRACT shift to state 483
-- On PRIVATE shift to state 485
-- On PRAGMA shift to state 517
-- On PARAM shift to state 519
-- On OBSERVE shift to state 527
-- On LIDENT shift to state 486
-- On DECIDE shift to state 509
-- On DATA shift to state 529
-- On let_decl shift to state 537
-- On decl shift to state 538
-- On decide_decl shift to state 539
## Reductions:

State 1:
## Known stack suffix:
## TYPE
## LR(1) items:
decl -> TYPE . UIDENT opt_paren_type_args EQUALS type_expr [ # ]
## Transitions:
-- On UIDENT shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## TYPE UIDENT
## LR(1) items:
decl -> TYPE UIDENT . opt_paren_type_args EQUALS type_expr [ # ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 12
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 3:
## Known stack suffix:
## LSQUARE
## LR(1) items:
opt_paren_type_args -> LSQUARE . opt_type_args RSQUARE [ EQUALS ]
## Transitions:
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 6
-- On new_type_var shift to state 8
## Reductions:
-- On RSQUARE
--   reduce production opt_type_args ->

State 4:
## Known stack suffix:
## LIDENT
## LR(1) items:
new_type_var -> LIDENT . [ RSQUARE EQUALS DOT COMMA ]
## Transitions:
## Reductions:
-- On RSQUARE EQUALS DOT COMMA
--   reduce production new_type_var -> LIDENT

State 5:
## Known stack suffix:
## type_args
## LR(1) items:
opt_type_args -> type_args . [ RSQUARE EQUALS ]
## Transitions:
## Reductions:
-- On RSQUARE EQUALS
--   reduce production opt_type_args -> type_args

State 6:
## Known stack suffix:
## LSQUARE opt_type_args
## LR(1) items:
opt_paren_type_args -> LSQUARE opt_type_args . RSQUARE [ EQUALS ]
## Transitions:
-- On RSQUARE shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LSQUARE opt_type_args RSQUARE
## LR(1) items:
opt_paren_type_args -> LSQUARE opt_type_args RSQUARE . [ EQUALS ]
## Transitions:
## Reductions:
-- On EQUALS
--   reduce production opt_paren_type_args -> LSQUARE opt_type_args RSQUARE

State 8:
## Known stack suffix:
## new_type_var
## LR(1) items:
type_args -> new_type_var . [ RSQUARE EQUALS ]
type_args -> new_type_var . COMMA type_args [ RSQUARE EQUALS ]
## Transitions:
-- On COMMA shift to state 9
## Reductions:
-- On RSQUARE EQUALS
--   reduce production type_args -> new_type_var

State 9:
## Known stack suffix:
## new_type_var COMMA
## LR(1) items:
type_args -> new_type_var COMMA . type_args [ RSQUARE EQUALS ]
## Transitions:
-- On LIDENT shift to state 4
-- On type_args shift to state 10
-- On new_type_var shift to state 8
## Reductions:

State 10:
## Known stack suffix:
## new_type_var COMMA type_args
## LR(1) items:
type_args -> new_type_var COMMA type_args . [ RSQUARE EQUALS ]
## Transitions:
## Reductions:
-- On RSQUARE EQUALS
--   reduce production type_args -> new_type_var COMMA type_args

State 11:
## Known stack suffix:
## opt_type_args
## LR(1) items:
opt_paren_type_args -> opt_type_args . [ EQUALS ]
## Transitions:
## Reductions:
-- On EQUALS
--   reduce production opt_paren_type_args -> opt_type_args

State 12:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args . EQUALS type_expr [ # ]
## Transitions:
-- On EQUALS shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args EQUALS
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args EQUALS . type_expr [ # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 63
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 14:
## Known stack suffix:
## UIDENT
## LR(1) items:
ulongvar -> UIDENT . [ UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND # ]
ulongvar -> UIDENT . DOT ulongvar [ UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND # ]
## Transitions:
-- On DOT shift to state 15
## Reductions:
-- On UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND #
--   reduce production ulongvar -> UIDENT
** Conflict on DOT
** End-of-stream conflict on UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND
**   There is a tension between
**   (1) reducing production ulongvar -> UIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 15:
## Known stack suffix:
## UIDENT DOT
## LR(1) items:
ulongvar -> UIDENT DOT . ulongvar [ UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On LIDENT shift to state 16
-- On ulongvar shift to state 19
## Reductions:

State 16:
## Known stack suffix:
## LIDENT
## LR(1) items:
ulongvar -> LIDENT . DOT ulongvar [ UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND # ]
## Transitions:
-- On DOT shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## LIDENT DOT
## LR(1) items:
ulongvar -> LIDENT DOT . ulongvar [ UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LBRACE INT IN HASH FORALL FALSE EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR ANY AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On LIDENT shift to state 16
-- On ulongvar shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## LIDENT DOT ulongvar
## LR(1) items:
ulongvar -> LIDENT DOT ulongvar . [ UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND # ]
## Transitions:
## Reductions:
-- On UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND #
--   reduce production ulongvar -> LIDENT DOT ulongvar
** End-of-stream conflict on UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND
**   There is a tension between
**   (1) reducing production ulongvar -> LIDENT DOT ulongvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 19:
## Known stack suffix:
## UIDENT DOT ulongvar
## LR(1) items:
ulongvar -> UIDENT DOT ulongvar . [ UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND # ]
## Transitions:
## Reductions:
-- On UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND #
--   reduce production ulongvar -> UIDENT DOT ulongvar
** End-of-stream conflict on UNIFORM UIDENT TYPE TRUE TIMES THEN SYMBOL STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT LET LBRACE LAMBDA INT IN IF HASH FORALL FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BOOL BAR ANY AND
**   There is a tension between
**   (1) reducing production ulongvar -> UIDENT DOT ulongvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 20:
## Known stack suffix:
## SYMBOL
## LR(1) items:
other_type_expr -> SYMBOL . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> SYMBOL
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> SYMBOL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 21:
## Known stack suffix:
## LTUP
## LR(1) items:
other_type_expr -> LTUP . opt_named_type_exprs RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
other_type_expr -> LTUP . type_exprs RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 51
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 54
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On opt_named_type_exprs shift to state 56
-- On named_type_exprs shift to state 58
-- On named_type_expr shift to state 59
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:
-- On RTUP
--   reduce production opt_named_type_exprs ->

State 22:
## Known stack suffix:
## LPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN . RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN . type_expr RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN . type_expr COMMA type_exprs RPAREN [ MAPSTO ]
other_type_expr -> LPAREN . type_expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On RPAREN shift to state 23
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 46
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 23:
## Known stack suffix:
## LPAREN RPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN RPAREN . [ MAPSTO ]
## Transitions:
## Reductions:
-- On MAPSTO
--   reduce production arrow_type_exprs -> LPAREN RPAREN

State 24:
## Known stack suffix:
## LIDENT
## LR(1) items:
other_type_expr -> LIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
ulongvar -> LIDENT . DOT ulongvar [ UIDENT TYPE TIMES THEN SYMBOL SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT INT IN HASH FORALL EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR AND # ]
## Transitions:
-- On DOT shift to state 17
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> LIDENT
** Conflict on DOT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 25:
## Known stack suffix:
## INT
## LR(1) items:
other_type_expr -> INT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> INT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> INT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 26:
## Known stack suffix:
## FORALL
## LR(1) items:
other_type_expr -> FORALL . new_type_var DOT type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 4
-- On new_type_var shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## FORALL new_type_var
## LR(1) items:
other_type_expr -> FORALL new_type_var . DOT type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On DOT shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## FORALL new_type_var DOT
## LR(1) items:
other_type_expr -> FORALL new_type_var DOT . type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 45
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 29:
## Known stack suffix:
## BOOL
## LR(1) items:
other_type_expr -> BOOL . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> BOOL
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> BOOL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 30:
## Known stack suffix:
## ulongvar
## LR(1) items:
other_type_expr -> ulongvar . opt_sqparen_type_exprs [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LSQUARE shift to state 31
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 32
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On opt_type_exprs shift to state 43
-- On opt_sqparen_type_exprs shift to state 44
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_type_exprs ->
** Conflict on LIDENT
** End-of-stream conflict on UIDENT TYPE TIMES THEN SYMBOL SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LTUP LSQUARE LPAREN LIDENT INT IN HASH FORALL EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BOOL BAR AND
**   There is a tension between
**   (1) reducing production opt_type_exprs ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 31:
## Known stack suffix:
## LSQUARE
## LR(1) items:
opt_sqparen_type_exprs -> LSQUARE . opt_type_exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 32
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On opt_type_exprs shift to state 41
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:
-- On RSQUARE
--   reduce production opt_type_exprs ->

State 32:
## Known stack suffix:
## type_exprs
## LR(1) items:
opt_type_exprs -> type_exprs . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_type_exprs -> type_exprs
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production opt_type_exprs -> type_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 33:
## Known stack suffix:
## type_expr
## LR(1) items:
type_exprs -> type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
type_exprs -> type_expr . COMMA type_exprs [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On COMMA shift to state 34
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production type_exprs -> type_expr
** Conflict on COMMA
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production type_exprs -> type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 34:
## Known stack suffix:
## type_expr COMMA
## LR(1) items:
type_exprs -> type_expr COMMA . type_exprs [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 35
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 35:
## Known stack suffix:
## type_expr COMMA type_exprs
## LR(1) items:
type_exprs -> type_expr COMMA type_exprs . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production type_exprs -> type_expr COMMA type_exprs
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production type_exprs -> type_expr COMMA type_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 36:
## Known stack suffix:
## other_type_expr
## LR(1) items:
type_expr -> other_type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production type_expr -> other_type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production type_expr -> other_type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 37:
## Known stack suffix:
## arrow_type_exprs
## LR(1) items:
arrow_type_expr -> arrow_type_exprs . MAPSTO type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On MAPSTO shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## arrow_type_exprs MAPSTO
## LR(1) items:
arrow_type_expr -> arrow_type_exprs MAPSTO . type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 39
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 39:
## Known stack suffix:
## arrow_type_exprs MAPSTO type_expr
## LR(1) items:
arrow_type_expr -> arrow_type_exprs MAPSTO type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production arrow_type_expr -> arrow_type_exprs MAPSTO type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production arrow_type_expr -> arrow_type_exprs MAPSTO type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 40:
## Known stack suffix:
## arrow_type_expr
## LR(1) items:
type_expr -> arrow_type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production type_expr -> arrow_type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production type_expr -> arrow_type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 41:
## Known stack suffix:
## LSQUARE opt_type_exprs
## LR(1) items:
opt_sqparen_type_exprs -> LSQUARE opt_type_exprs . RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RSQUARE shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## LSQUARE opt_type_exprs RSQUARE
## LR(1) items:
opt_sqparen_type_exprs -> LSQUARE opt_type_exprs RSQUARE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_sqparen_type_exprs -> LSQUARE opt_type_exprs RSQUARE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production opt_sqparen_type_exprs -> LSQUARE opt_type_exprs RSQUARE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 43:
## Known stack suffix:
## opt_type_exprs
## LR(1) items:
opt_sqparen_type_exprs -> opt_type_exprs . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_sqparen_type_exprs -> opt_type_exprs
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production opt_sqparen_type_exprs -> opt_type_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 44:
## Known stack suffix:
## ulongvar opt_sqparen_type_exprs
## LR(1) items:
other_type_expr -> ulongvar opt_sqparen_type_exprs . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> ulongvar opt_sqparen_type_exprs
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> ulongvar opt_sqparen_type_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 45:
## Known stack suffix:
## FORALL new_type_var DOT type_expr
## LR(1) items:
other_type_expr -> FORALL new_type_var DOT type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> FORALL new_type_var DOT type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> FORALL new_type_var DOT type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 46:
## Known stack suffix:
## LPAREN type_expr
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr . RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN type_expr . COMMA type_exprs RPAREN [ MAPSTO ]
other_type_expr -> LPAREN type_expr . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 47
-- On COMMA shift to state 48
## Reductions:

State 47:
## Known stack suffix:
## LPAREN type_expr RPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr RPAREN . [ MAPSTO ]
other_type_expr -> LPAREN type_expr RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On MAPSTO
--   reduce production arrow_type_exprs -> LPAREN type_expr RPAREN
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> LPAREN type_expr RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS MAPSTO LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> LPAREN type_expr RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 48:
## Known stack suffix:
## LPAREN type_expr COMMA
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA . type_exprs RPAREN [ MAPSTO ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 49
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 49:
## Known stack suffix:
## LPAREN type_expr COMMA type_exprs
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA type_exprs . RPAREN [ MAPSTO ]
## Transitions:
-- On RPAREN shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## LPAREN type_expr COMMA type_exprs RPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN . [ MAPSTO ]
## Transitions:
## Reductions:
-- On MAPSTO
--   reduce production arrow_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN

State 51:
## Known stack suffix:
## LIDENT
## LR(1) items:
named_type_expr -> LIDENT . COLON type_expr [ RTUP COMMA ]
other_type_expr -> LIDENT . [ RTUP COMMA ]
ulongvar -> LIDENT . DOT ulongvar [ UIDENT SYMBOL RTUP LTUP LSQUARE LPAREN LIDENT INT FORALL COMMA BOOL ]
## Transitions:
-- On DOT shift to state 17
-- On COLON shift to state 52
## Reductions:
-- On RTUP COMMA
--   reduce production other_type_expr -> LIDENT

State 52:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
named_type_expr -> LIDENT COLON . type_expr [ RTUP COMMA ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 53
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 53:
## Known stack suffix:
## LIDENT COLON type_expr
## LR(1) items:
named_type_expr -> LIDENT COLON type_expr . [ RTUP COMMA ]
## Transitions:
## Reductions:
-- On RTUP COMMA
--   reduce production named_type_expr -> LIDENT COLON type_expr

State 54:
## Known stack suffix:
## LTUP type_exprs
## LR(1) items:
other_type_expr -> LTUP type_exprs . RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RTUP shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## LTUP type_exprs RTUP
## LR(1) items:
other_type_expr -> LTUP type_exprs RTUP . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> LTUP type_exprs RTUP
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> LTUP type_exprs RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 56:
## Known stack suffix:
## LTUP opt_named_type_exprs
## LR(1) items:
other_type_expr -> LTUP opt_named_type_exprs . RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RTUP shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## LTUP opt_named_type_exprs RTUP
## LR(1) items:
other_type_expr -> LTUP opt_named_type_exprs RTUP . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production other_type_expr -> LTUP opt_named_type_exprs RTUP
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production other_type_expr -> LTUP opt_named_type_exprs RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 58:
## Known stack suffix:
## named_type_exprs
## LR(1) items:
opt_named_type_exprs -> named_type_exprs . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production opt_named_type_exprs -> named_type_exprs

State 59:
## Known stack suffix:
## named_type_expr
## LR(1) items:
named_type_exprs -> named_type_expr . [ RTUP ]
named_type_exprs -> named_type_expr . COMMA named_type_exprs [ RTUP ]
## Transitions:
-- On COMMA shift to state 60
## Reductions:
-- On RTUP
--   reduce production named_type_exprs -> named_type_expr

State 60:
## Known stack suffix:
## named_type_expr COMMA
## LR(1) items:
named_type_exprs -> named_type_expr COMMA . named_type_exprs [ RTUP ]
## Transitions:
-- On LIDENT shift to state 61
-- On named_type_exprs shift to state 62
-- On named_type_expr shift to state 59
## Reductions:

State 61:
## Known stack suffix:
## LIDENT
## LR(1) items:
named_type_expr -> LIDENT . COLON type_expr [ RTUP COMMA ]
## Transitions:
-- On COLON shift to state 52
## Reductions:

State 62:
## Known stack suffix:
## named_type_expr COMMA named_type_exprs
## LR(1) items:
named_type_exprs -> named_type_expr COMMA named_type_exprs . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production named_type_exprs -> named_type_expr COMMA named_type_exprs

State 63:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args EQUALS type_expr
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args EQUALS type_expr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> TYPE UIDENT opt_paren_type_args EQUALS type_expr

State 64:
## Known stack suffix:
## REWARD
## LR(1) items:
decl -> REWARD . float [ # ]
decl -> REWARD . CASE expr OF rew_clauses [ # ]
## Transitions:
-- On POSFLOAT shift to state 65
-- On MINUS shift to state 66
-- On CASE shift to state 68
-- On float shift to state 482
## Reductions:

State 65:
## Known stack suffix:
## POSFLOAT
## LR(1) items:
float -> POSFLOAT . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA #
--   reduce production float -> POSFLOAT
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA
**   There is a tension between
**   (1) reducing production float -> POSFLOAT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 66:
## Known stack suffix:
## MINUS
## LR(1) items:
float -> MINUS . POSFLOAT [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
-- On POSFLOAT shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## MINUS POSFLOAT
## LR(1) items:
float -> MINUS POSFLOAT . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA #
--   reduce production float -> MINUS POSFLOAT
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA
**   There is a tension between
**   (1) reducing production float -> MINUS POSFLOAT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 68:
## Known stack suffix:
## REWARD CASE
## LR(1) items:
decl -> REWARD CASE . expr OF rew_clauses [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 479
## Reductions:

State 69:
## Known stack suffix:
## UNIFORM
## LR(1) items:
expr3 -> UNIFORM . NATURAL [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On NATURAL shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## UNIFORM NATURAL
## LR(1) items:
expr3 -> UNIFORM NATURAL . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> UNIFORM NATURAL
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> UNIFORM NATURAL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 71:
## Known stack suffix:
## UIDENT
## LR(1) items:
longvar -> UIDENT . DOT longvar [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
ulongvar -> UIDENT . [ UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND # ]
ulongvar -> UIDENT . DOT ulongvar [ UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND # ]
## Transitions:
-- On DOT shift to state 72
## Reductions:
-- On UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND #
--   reduce production ulongvar -> UIDENT
** Conflict on DOT
** End-of-stream conflict on UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND
**   There is a tension between
**   (1) reducing production ulongvar -> UIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 72:
## Known stack suffix:
## UIDENT DOT
## LR(1) items:
longvar -> UIDENT DOT . longvar [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
ulongvar -> UIDENT DOT . ulongvar [ UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND # ]
## Transitions:
-- On UIDENT shift to state 71
-- On LIDENT shift to state 73
-- On ulongvar shift to state 19
-- On longvar shift to state 76
## Reductions:

State 73:
## Known stack suffix:
## LIDENT
## LR(1) items:
longvar -> LIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
longvar -> LIDENT . DOT longvar [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
ulongvar -> LIDENT . DOT ulongvar [ UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND # ]
## Transitions:
-- On DOT shift to state 74
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production longvar -> LIDENT
** Conflict on DOT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production longvar -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 74:
## Known stack suffix:
## LIDENT DOT
## LR(1) items:
longvar -> LIDENT DOT . longvar [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
ulongvar -> LIDENT DOT . ulongvar [ UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND # ]
## Transitions:
-- On UIDENT shift to state 71
-- On LIDENT shift to state 73
-- On ulongvar shift to state 18
-- On longvar shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## LIDENT DOT longvar
## LR(1) items:
longvar -> LIDENT DOT longvar . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production longvar -> LIDENT DOT longvar
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production longvar -> LIDENT DOT longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 76:
## Known stack suffix:
## UIDENT DOT longvar
## LR(1) items:
longvar -> UIDENT DOT longvar . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production longvar -> UIDENT DOT longvar
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production longvar -> UIDENT DOT longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 77:
## Known stack suffix:
## TRUE
## LR(1) items:
expr3 -> TRUE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> TRUE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> TRUE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 78:
## Known stack suffix:
## STRING
## LR(1) items:
string -> STRING . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production string -> STRING
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production string -> STRING
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 79:
## Known stack suffix:
## REWARD
## LR(1) items:
expr3 -> REWARD . float IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> REWARD . CASE expr OF rew_clauses IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On POSFLOAT shift to state 65
-- On MINUS shift to state 66
-- On CASE shift to state 80
-- On float shift to state 476
## Reductions:

State 80:
## Known stack suffix:
## REWARD CASE
## LR(1) items:
expr3 -> REWARD CASE . expr OF rew_clauses IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 471
## Reductions:

State 81:
## Known stack suffix:
## QUOTE
## LR(1) items:
string -> QUOTE . ident [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On ident shift to state 84
## Reductions:

State 82:
## Known stack suffix:
## UIDENT
## LR(1) items:
ident -> UIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production ident -> UIDENT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production ident -> UIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 83:
## Known stack suffix:
## LIDENT
## LR(1) items:
ident -> LIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production ident -> LIDENT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE NATURAL MOD MINUSMINUS MINUS LSQUARE LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production ident -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 84:
## Known stack suffix:
## QUOTE ident
## LR(1) items:
string -> QUOTE ident . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production string -> QUOTE ident
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production string -> QUOTE ident
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 85:
## Known stack suffix:
## PRAGMA
## LR(1) items:
expr3 -> PRAGMA . string IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## PRAGMA string
## LR(1) items:
expr3 -> PRAGMA string . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## PRAGMA string IN
## LR(1) items:
expr3 -> PRAGMA string IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 470
## Reductions:

State 88:
## Known stack suffix:
## PDIST
## LR(1) items:
expr3 -> PDIST . ident LSQUARE exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On ident shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## PDIST ident
## LR(1) items:
expr3 -> PDIST ident . LSQUARE exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LSQUARE shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## PDIST ident LSQUARE
## LR(1) items:
expr3 -> PDIST ident LSQUARE . exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On exprs shift to state 468
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 280
## Reductions:

State 91:
## Known stack suffix:
## PARAMS
## LR(1) items:
expr3 -> PARAMS . param_decls IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On param_decls shift to state 92
-- On param_decl shift to state 465
-- On ident shift to state 383
## Reductions:

State 92:
## Known stack suffix:
## PARAMS param_decls
## LR(1) items:
expr3 -> PARAMS param_decls . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## PARAMS param_decls IN
## LR(1) items:
expr3 -> PARAMS param_decls IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 464
## Reductions:

State 94:
## Known stack suffix:
## OP
## LR(1) items:
expr3 -> OP . NOT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . AND [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . BAR [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . PLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . MINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . ANY [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . TIMES [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . DIVIDE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . MOD [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> OP . CONCAT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 95
-- On PLUSPLUS shift to state 96
-- On PLUS shift to state 97
-- On NOT shift to state 98
-- On MOD shift to state 99
-- On MINUSMINUS shift to state 100
-- On MINUS shift to state 101
-- On DIVIDE shift to state 102
-- On CONCAT shift to state 103
-- On BAR shift to state 104
-- On ANY shift to state 105
-- On AND shift to state 106
## Reductions:

State 95:
## Known stack suffix:
## OP TIMES
## LR(1) items:
expr3 -> OP TIMES . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP TIMES
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP TIMES
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 96:
## Known stack suffix:
## OP PLUSPLUS
## LR(1) items:
expr3 -> OP PLUSPLUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP PLUSPLUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP PLUSPLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 97:
## Known stack suffix:
## OP PLUS
## LR(1) items:
expr3 -> OP PLUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP PLUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP PLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 98:
## Known stack suffix:
## OP NOT
## LR(1) items:
expr3 -> OP NOT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP NOT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP NOT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 99:
## Known stack suffix:
## OP MOD
## LR(1) items:
expr3 -> OP MOD . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP MOD
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP MOD
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 100:
## Known stack suffix:
## OP MINUSMINUS
## LR(1) items:
expr3 -> OP MINUSMINUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP MINUSMINUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP MINUSMINUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 101:
## Known stack suffix:
## OP MINUS
## LR(1) items:
expr3 -> OP MINUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP MINUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP MINUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 102:
## Known stack suffix:
## OP DIVIDE
## LR(1) items:
expr3 -> OP DIVIDE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP DIVIDE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP DIVIDE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 103:
## Known stack suffix:
## OP CONCAT
## LR(1) items:
expr3 -> OP CONCAT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP CONCAT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP CONCAT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 104:
## Known stack suffix:
## OP BAR
## LR(1) items:
expr3 -> OP BAR . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP BAR
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP BAR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 105:
## Known stack suffix:
## OP ANY
## LR(1) items:
expr3 -> OP ANY . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP ANY
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP ANY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 106:
## Known stack suffix:
## OP AND
## LR(1) items:
expr3 -> OP AND . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OP AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OP AND
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 107:
## Known stack suffix:
## OBSERVE
## LR(1) items:
expr3 -> OBSERVE . obs IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 108
-- On NOT shift to state 112
-- On LIDENT shift to state 110
-- On obs shift to state 114
-- On longvar shift to state 394
## Reductions:

State 108:
## Known stack suffix:
## UIDENT
## LR(1) items:
longvar -> UIDENT . DOT longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA # ]
## Transitions:
-- On DOT shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## UIDENT DOT
## LR(1) items:
longvar -> UIDENT DOT . longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvar shift to state 76
## Reductions:

State 110:
## Known stack suffix:
## LIDENT
## LR(1) items:
longvar -> LIDENT . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA # ]
longvar -> LIDENT . DOT longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA # ]
## Transitions:
-- On DOT shift to state 111
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA #
--   reduce production longvar -> LIDENT
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DOT DECIDE DATA COMMA
**   There is a tension between
**   (1) reducing production longvar -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 111:
## Known stack suffix:
## LIDENT DOT
## LR(1) items:
longvar -> LIDENT DOT . longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvar shift to state 75
## Reductions:

State 112:
## Known stack suffix:
## NOT
## LR(1) items:
obs -> NOT . longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvar shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## NOT longvar
## LR(1) items:
obs -> NOT longvar . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production obs -> NOT longvar
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production obs -> NOT longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 114:
## Known stack suffix:
## OBSERVE obs
## LR(1) items:
expr3 -> OBSERVE obs . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## OBSERVE obs IN
## LR(1) items:
expr3 -> OBSERVE obs IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 463
## Reductions:

State 116:
## Known stack suffix:
## NOT
## LR(1) items:
expr3 -> NOT . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 462
## Reductions:

State 117:
## Known stack suffix:
## NATURAL
## LR(1) items:
integer -> NATURAL . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production integer -> NATURAL
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production integer -> NATURAL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 118:
## Known stack suffix:
## MINUS
## LR(1) items:
expr3 -> MINUS . expr_nonint [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
integer -> MINUS . NATURAL [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 119
-- On MINUS shift to state 120
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On expr_nonint4 shift to state 444
-- On expr_nonint shift to state 445
-- On expr3 shift to state 460
-- On expr2 shift to state 461
## Reductions:

State 119:
## Known stack suffix:
## MINUS NATURAL
## LR(1) items:
integer -> MINUS NATURAL . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production integer -> MINUS NATURAL
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH GIVEN EQUALSEQUALS EQUALS ELSE DOTDOT DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production integer -> MINUS NATURAL
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 120:
## Known stack suffix:
## MINUS
## LR(1) items:
expr3 -> MINUS . expr_nonint [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On MINUS shift to state 120
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On expr_nonint4 shift to state 444
-- On expr_nonint shift to state 445
-- On expr3 shift to state 460
-- On expr2 shift to state 461
## Reductions:

State 121:
## Known stack suffix:
## LTUP
## LR(1) items:
expr3 -> LTUP . opt_named_exprs RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LTUP . exprs RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 432
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On opt_named_exprs shift to state 435
-- On named_exprs shift to state 437
-- On named_expr shift to state 438
-- On longvar shift to state 243
-- On integer shift to state 244
-- On exprs shift to state 442
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 280
## Reductions:
-- On RTUP
--   reduce production opt_named_exprs ->

State 122:
## Known stack suffix:
## LPAREN
## LR(1) items:
expr2 -> LPAREN . expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 431
## Reductions:

State 123:
## Known stack suffix:
## LET
## LR(1) items:
expr3 -> LET . pat EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET . pat COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET . LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET . LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 163
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 420
-- On integer shift to state 148
## Reductions:

State 124:
## Known stack suffix:
## TRUE
## LR(1) items:
pat -> TRUE . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> TRUE
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> TRUE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 125:
## Known stack suffix:
## MINUS
## LR(1) items:
integer -> MINUS . NATURAL [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN EQUALS DOTDOT DECIDE DATA COMMA COLON # ]
## Transitions:
-- On NATURAL shift to state 119
## Reductions:

State 126:
## Known stack suffix:
## LTUP
## LR(1) items:
pat -> LTUP . opt_named_pats RTUP [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
pat -> LTUP . pats RTUP [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 127
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pats shift to state 154
-- On pat shift to state 145
-- On opt_named_pats shift to state 156
-- On named_pats shift to state 158
-- On named_pat shift to state 159
-- On integer shift to state 148
## Reductions:
-- On RTUP
--   reduce production opt_named_pats ->

State 127:
## Known stack suffix:
## LIDENT
## LR(1) items:
named_pat -> LIDENT . COLON pat [ RTUP COMMA ]
pat -> LIDENT . [ RTUP COMMA ]
ulongvar -> LIDENT . DOT ulongvar [ UIDENT TRUE STRING RTUP QUOTE NATURAL MINUS LTUP LPAREN LIDENT LBRACE FALSE COMMA ANY ]
## Transitions:
-- On DOT shift to state 17
-- On COLON shift to state 128
## Reductions:
-- On RTUP COMMA
--   reduce production pat -> LIDENT

State 128:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
named_pat -> LIDENT COLON . pat [ RTUP COMMA ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 153
-- On integer shift to state 148
## Reductions:

State 129:
## Known stack suffix:
## LIDENT
## LR(1) items:
pat -> LIDENT . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
ulongvar -> LIDENT . DOT ulongvar [ UIDENT TYPE TRUE STRING SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PARAM OBSERVE NATURAL MINUS LTUP LPAREN LIDENT LBRACE IN FALSE EQUALS DECIDE DATA COMMA COLON ANY # ]
## Transitions:
-- On DOT shift to state 17
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> LIDENT
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DOT DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 130:
## Known stack suffix:
## LBRACE
## LR(1) items:
pat -> LBRACE . string_choices RBRACE [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string_choices shift to state 131
-- On string shift to state 133
## Reductions:

State 131:
## Known stack suffix:
## LBRACE string_choices
## LR(1) items:
pat -> LBRACE string_choices . RBRACE [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On RBRACE shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## LBRACE string_choices RBRACE
## LR(1) items:
pat -> LBRACE string_choices RBRACE . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> LBRACE string_choices RBRACE
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> LBRACE string_choices RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 133:
## Known stack suffix:
## string
## LR(1) items:
string_choices -> string . [ RBRACE ]
string_choices -> string . BAR string_choices [ RBRACE ]
## Transitions:
-- On BAR shift to state 134
## Reductions:
-- On RBRACE
--   reduce production string_choices -> string

State 134:
## Known stack suffix:
## string BAR
## LR(1) items:
string_choices -> string BAR . string_choices [ RBRACE ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string_choices shift to state 135
-- On string shift to state 133
## Reductions:

State 135:
## Known stack suffix:
## string BAR string_choices
## LR(1) items:
string_choices -> string BAR string_choices . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production string_choices -> string BAR string_choices

State 136:
## Known stack suffix:
## FALSE
## LR(1) items:
pat -> FALSE . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> FALSE
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> FALSE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 137:
## Known stack suffix:
## ANY
## LR(1) items:
pat -> ANY . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> ANY
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> ANY
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 138:
## Known stack suffix:
## ulongvar
## LR(1) items:
pat -> ulongvar . opt_paren_pats [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LPAREN shift to state 139
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 151
-- On opt_paren_pats shift to state 152
-- On integer shift to state 148
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production opt_paren_pats ->
** Conflict on LIDENT
** End-of-stream conflict on UIDENT TYPE TRUE STRING SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PARAM OBSERVE NATURAL MINUS LTUP LPAREN LIDENT LBRACE IN FALSE EQUALS DECIDE DATA COMMA COLON ANY
**   There is a tension between
**   (1) reducing production opt_paren_pats ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 139:
## Known stack suffix:
## LPAREN
## LR(1) items:
opt_paren_pats -> LPAREN . pat COMMA pats RPAREN [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 141
-- On integer shift to state 148
## Reductions:

State 140:
## Known stack suffix:
## string
## LR(1) items:
pat -> string . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> string
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> string
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 141:
## Known stack suffix:
## LPAREN pat
## LR(1) items:
opt_paren_pats -> LPAREN pat . COMMA pats RPAREN [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On COMMA shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## LPAREN pat COMMA
## LR(1) items:
opt_paren_pats -> LPAREN pat COMMA . pats RPAREN [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pats shift to state 143
-- On pat shift to state 145
-- On integer shift to state 148
## Reductions:

State 143:
## Known stack suffix:
## LPAREN pat COMMA pats
## LR(1) items:
opt_paren_pats -> LPAREN pat COMMA pats . RPAREN [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On RPAREN shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## LPAREN pat COMMA pats RPAREN
## LR(1) items:
opt_paren_pats -> LPAREN pat COMMA pats RPAREN . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production opt_paren_pats -> LPAREN pat COMMA pats RPAREN
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production opt_paren_pats -> LPAREN pat COMMA pats RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 145:
## Known stack suffix:
## pat
## LR(1) items:
pats -> pat . [ RTUP RPAREN ]
pats -> pat . COMMA pats [ RTUP RPAREN ]
## Transitions:
-- On COMMA shift to state 146
## Reductions:
-- On RTUP RPAREN
--   reduce production pats -> pat

State 146:
## Known stack suffix:
## pat COMMA
## LR(1) items:
pats -> pat COMMA . pats [ RTUP RPAREN ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pats shift to state 147
-- On pat shift to state 145
-- On integer shift to state 148
## Reductions:

State 147:
## Known stack suffix:
## pat COMMA pats
## LR(1) items:
pats -> pat COMMA pats . [ RTUP RPAREN ]
## Transitions:
## Reductions:
-- On RTUP RPAREN
--   reduce production pats -> pat COMMA pats

State 148:
## Known stack suffix:
## integer
## LR(1) items:
pat -> integer . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
pat -> integer . DOTDOT integer [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On DOTDOT shift to state 149
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> integer
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DOTDOT DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> integer
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 149:
## Known stack suffix:
## integer DOTDOT
## LR(1) items:
pat -> integer DOTDOT . integer [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On integer shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## integer DOTDOT integer
## LR(1) items:
pat -> integer DOTDOT integer . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> integer DOTDOT integer
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> integer DOTDOT integer
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 151:
## Known stack suffix:
## pat
## LR(1) items:
opt_paren_pats -> pat . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production opt_paren_pats -> pat
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production opt_paren_pats -> pat
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 152:
## Known stack suffix:
## ulongvar opt_paren_pats
## LR(1) items:
pat -> ulongvar opt_paren_pats . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> ulongvar opt_paren_pats
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> ulongvar opt_paren_pats
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 153:
## Known stack suffix:
## LIDENT COLON pat
## LR(1) items:
named_pat -> LIDENT COLON pat . [ RTUP COMMA ]
## Transitions:
## Reductions:
-- On RTUP COMMA
--   reduce production named_pat -> LIDENT COLON pat

State 154:
## Known stack suffix:
## LTUP pats
## LR(1) items:
pat -> LTUP pats . RTUP [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On RTUP shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## LTUP pats RTUP
## LR(1) items:
pat -> LTUP pats RTUP . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> LTUP pats RTUP
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> LTUP pats RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 156:
## Known stack suffix:
## LTUP opt_named_pats
## LR(1) items:
pat -> LTUP opt_named_pats . RTUP [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
-- On RTUP shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## LTUP opt_named_pats RTUP
## LR(1) items:
pat -> LTUP opt_named_pats RTUP . [ TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON #
--   reduce production pat -> LTUP opt_named_pats RTUP
** End-of-stream conflict on TYPE SEMICOLON RTUP RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA COMMA COLON
**   There is a tension between
**   (1) reducing production pat -> LTUP opt_named_pats RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 158:
## Known stack suffix:
## named_pats
## LR(1) items:
opt_named_pats -> named_pats . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production opt_named_pats -> named_pats

State 159:
## Known stack suffix:
## named_pat
## LR(1) items:
named_pats -> named_pat . [ RTUP ]
named_pats -> named_pat . COMMA named_pats [ RTUP ]
## Transitions:
-- On COMMA shift to state 160
## Reductions:
-- On RTUP
--   reduce production named_pats -> named_pat

State 160:
## Known stack suffix:
## named_pat COMMA
## LR(1) items:
named_pats -> named_pat COMMA . named_pats [ RTUP ]
## Transitions:
-- On LIDENT shift to state 161
-- On named_pats shift to state 162
-- On named_pat shift to state 159
## Reductions:

State 161:
## Known stack suffix:
## LIDENT
## LR(1) items:
named_pat -> LIDENT . COLON pat [ RTUP COMMA ]
## Transitions:
-- On COLON shift to state 128
## Reductions:

State 162:
## Known stack suffix:
## named_pat COMMA named_pats
## LR(1) items:
named_pats -> named_pat COMMA named_pats . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production named_pats -> named_pat COMMA named_pats

State 163:
## Known stack suffix:
## LET LIDENT
## LR(1) items:
expr3 -> LET LIDENT . LPAREN opt_vars RPAREN EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET LIDENT . LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
pat -> LIDENT . [ EQUALS COLON ]
ulongvar -> LIDENT . DOT ulongvar [ UIDENT TRUE STRING QUOTE NATURAL MINUS LTUP LPAREN LIDENT LBRACE FALSE EQUALS COLON ANY ]
## Transitions:
-- On LPAREN shift to state 164
-- On DOT shift to state 17
## Reductions:
-- On EQUALS COLON
--   reduce production pat -> LIDENT

State 164:
## Known stack suffix:
## LET LIDENT LPAREN
## LR(1) items:
expr3 -> LET LIDENT LPAREN . opt_vars RPAREN EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET LIDENT LPAREN . opt_vars RPAREN COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 168
-- On opt_vars shift to state 169
## Reductions:
-- On RPAREN
--   reduce production opt_vars ->

State 165:
## Known stack suffix:
## LIDENT
## LR(1) items:
vars -> LIDENT . [ RPAREN ]
vars -> LIDENT . COMMA vars [ RPAREN ]
## Transitions:
-- On COMMA shift to state 166
## Reductions:
-- On RPAREN
--   reduce production vars -> LIDENT

State 166:
## Known stack suffix:
## LIDENT COMMA
## LR(1) items:
vars -> LIDENT COMMA . vars [ RPAREN ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## LIDENT COMMA vars
## LR(1) items:
vars -> LIDENT COMMA vars . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production vars -> LIDENT COMMA vars

State 168:
## Known stack suffix:
## vars
## LR(1) items:
opt_vars -> vars . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production opt_vars -> vars

State 169:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars . RPAREN EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET LIDENT LPAREN opt_vars . RPAREN COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN . EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET LIDENT LPAREN opt_vars RPAREN . COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 171
-- On COLON shift to state 414
## Reductions:

State 171:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN EQUALS
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS . expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 411
## Reductions:

State 172:
## Known stack suffix:
## LBRACE
## LR(1) items:
expr3 -> LBRACE . opt_decls RBRACE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TYPE shift to state 173
-- On REWARD shift to state 178
-- On RETRACT shift to state 345
-- On PRIVATE shift to state 347
-- On PRAGMA shift to state 379
-- On PARAM shift to state 381
-- On OBSERVE shift to state 392
-- On LIDENT shift to state 348
-- On DECIDE shift to state 371
-- On DATA shift to state 397
-- On opt_decls shift to state 402
-- On let_decl shift to state 404
-- On decls shift to state 405
-- On decl shift to state 406
-- On decide_decl shift to state 410
## Reductions:
-- On RBRACE
--   reduce production opt_decls ->

State 173:
## Known stack suffix:
## TYPE
## LR(1) items:
decl -> TYPE . UIDENT opt_paren_type_args EQUALS type_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## TYPE UIDENT
## LR(1) items:
decl -> TYPE UIDENT . opt_paren_type_args EQUALS type_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 175
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 175:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args . EQUALS type_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args EQUALS
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args EQUALS . type_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 177
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 177:
## Known stack suffix:
## TYPE UIDENT opt_paren_type_args EQUALS type_expr
## LR(1) items:
decl -> TYPE UIDENT opt_paren_type_args EQUALS type_expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> TYPE UIDENT opt_paren_type_args EQUALS type_expr

State 178:
## Known stack suffix:
## REWARD
## LR(1) items:
decl -> REWARD . float [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
decl -> REWARD . CASE expr OF rew_clauses [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On POSFLOAT shift to state 65
-- On MINUS shift to state 66
-- On CASE shift to state 179
-- On float shift to state 344
## Reductions:

State 179:
## Known stack suffix:
## REWARD CASE
## LR(1) items:
decl -> REWARD CASE . expr OF rew_clauses [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 332
## Reductions:

State 180:
## Known stack suffix:
## LAMBDA
## LR(1) items:
expr3 -> LAMBDA . LPAREN opt_vars RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LAMBDA . LIDENT MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LPAREN shift to state 181
-- On LIDENT shift to state 329
## Reductions:

State 181:
## Known stack suffix:
## LAMBDA LPAREN
## LR(1) items:
expr3 -> LAMBDA LPAREN . opt_vars RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 168
-- On opt_vars shift to state 182
## Reductions:
-- On RPAREN
--   reduce production opt_vars ->

State 182:
## Known stack suffix:
## LAMBDA LPAREN opt_vars
## LR(1) items:
expr3 -> LAMBDA LPAREN opt_vars . RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 183
## Reductions:

State 183:
## Known stack suffix:
## LAMBDA LPAREN opt_vars RPAREN
## LR(1) items:
expr3 -> LAMBDA LPAREN opt_vars RPAREN . MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On MAPSTO shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## LAMBDA LPAREN opt_vars RPAREN MAPSTO
## LR(1) items:
expr3 -> LAMBDA LPAREN opt_vars RPAREN MAPSTO . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 328
## Reductions:

State 185:
## Known stack suffix:
## IF
## LR(1) items:
expr3 -> IF . expr THEN expr ELSE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 323
## Reductions:

State 186:
## Known stack suffix:
## FLIP
## LR(1) items:
expr3 -> FLIP . POSFLOAT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On POSFLOAT shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## FLIP POSFLOAT
## LR(1) items:
expr3 -> FLIP POSFLOAT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> FLIP POSFLOAT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> FLIP POSFLOAT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 188:
## Known stack suffix:
## FIX
## LR(1) items:
expr3 -> FIX . LIDENT LPAREN opt_vars RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> FIX . LIDENT LIDENT MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## FIX LIDENT
## LR(1) items:
expr3 -> FIX LIDENT . LPAREN opt_vars RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> FIX LIDENT . LIDENT MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LPAREN shift to state 190
-- On LIDENT shift to state 320
## Reductions:

State 190:
## Known stack suffix:
## FIX LIDENT LPAREN
## LR(1) items:
expr3 -> FIX LIDENT LPAREN . opt_vars RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 168
-- On opt_vars shift to state 191
## Reductions:
-- On RPAREN
--   reduce production opt_vars ->

State 191:
## Known stack suffix:
## FIX LIDENT LPAREN opt_vars
## LR(1) items:
expr3 -> FIX LIDENT LPAREN opt_vars . RPAREN MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## FIX LIDENT LPAREN opt_vars RPAREN
## LR(1) items:
expr3 -> FIX LIDENT LPAREN opt_vars RPAREN . MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On MAPSTO shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## FIX LIDENT LPAREN opt_vars RPAREN MAPSTO
## LR(1) items:
expr3 -> FIX LIDENT LPAREN opt_vars RPAREN MAPSTO . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 319
## Reductions:

State 194:
## Known stack suffix:
## FALSE
## LR(1) items:
expr3 -> FALSE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> FALSE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> FALSE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 195:
## Known stack suffix:
## ETYPE
## LR(1) items:
expr3 -> ETYPE . UIDENT opt_paren_type_args EQUALS type_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## ETYPE UIDENT
## LR(1) items:
expr3 -> ETYPE UIDENT . opt_paren_type_args EQUALS type_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 197
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 197:
## Known stack suffix:
## ETYPE UIDENT opt_paren_type_args
## LR(1) items:
expr3 -> ETYPE UIDENT opt_paren_type_args . EQUALS type_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## ETYPE UIDENT opt_paren_type_args EQUALS
## LR(1) items:
expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS . type_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 199
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 199:
## Known stack suffix:
## ETYPE UIDENT opt_paren_type_args EQUALS type_expr
## LR(1) items:
expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN
## LR(1) items:
expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 318
## Reductions:

State 201:
## Known stack suffix:
## ERROR
## LR(1) items:
expr3 -> ERROR . string [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> ERROR . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string shift to state 202
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> ERROR
** End-of-stream conflict on TYPE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> ERROR
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 202:
## Known stack suffix:
## ERROR string
## LR(1) items:
expr3 -> ERROR string . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> ERROR string
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> ERROR string
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 203:
## Known stack suffix:
## EDATA
## LR(1) items:
expr3 -> EDATA . UIDENT opt_paren_type_args EQUALS tycon_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## EDATA UIDENT
## LR(1) items:
expr3 -> EDATA UIDENT . opt_paren_type_args EQUALS tycon_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 205
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 205:
## Known stack suffix:
## EDATA UIDENT opt_paren_type_args
## LR(1) items:
expr3 -> EDATA UIDENT opt_paren_type_args . EQUALS tycon_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## EDATA UIDENT opt_paren_type_args EQUALS
## LR(1) items:
expr3 -> EDATA UIDENT opt_paren_type_args EQUALS . tycon_expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 207
-- On tycon_item shift to state 215
-- On tycon_expr shift to state 218
## Reductions:

State 207:
## Known stack suffix:
## UIDENT
## LR(1) items:
tycon_item -> UIDENT . opt_paren_type_exprs [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 208
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 213
-- On other_type_expr shift to state 36
-- On opt_paren_type_exprs shift to state 214
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR #
--   reduce production opt_paren_type_exprs ->
** Conflict on LIDENT
** End-of-stream conflict on UIDENT TYPE SYMBOL SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LTUP LPAREN LIDENT INT IN FORALL DECIDE DATA BOOL BAR
**   There is a tension between
**   (1) reducing production opt_paren_type_exprs ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 208:
## Known stack suffix:
## LPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN . RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN . type_expr RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN . type_expr COMMA type_exprs RPAREN [ MAPSTO ]
opt_paren_type_exprs -> LPAREN . type_expr COMMA type_exprs RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
other_type_expr -> LPAREN . type_expr RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On RPAREN shift to state 23
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 209
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 209:
## Known stack suffix:
## LPAREN type_expr
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr . RPAREN [ MAPSTO ]
arrow_type_exprs -> LPAREN type_expr . COMMA type_exprs RPAREN [ MAPSTO ]
opt_paren_type_exprs -> LPAREN type_expr . COMMA type_exprs RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
other_type_expr -> LPAREN type_expr . RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
-- On RPAREN shift to state 47
-- On COMMA shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## LPAREN type_expr COMMA
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA . type_exprs RPAREN [ MAPSTO ]
opt_paren_type_exprs -> LPAREN type_expr COMMA . type_exprs RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_exprs shift to state 211
-- On type_expr shift to state 33
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 211:
## Known stack suffix:
## LPAREN type_expr COMMA type_exprs
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA type_exprs . RPAREN [ MAPSTO ]
opt_paren_type_exprs -> LPAREN type_expr COMMA type_exprs . RPAREN [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
-- On RPAREN shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## LPAREN type_expr COMMA type_exprs RPAREN
## LR(1) items:
arrow_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN . [ MAPSTO ]
opt_paren_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
## Reductions:
-- On MAPSTO
--   reduce production arrow_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR #
--   reduce production opt_paren_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE MAPSTO LIDENT IN DECIDE DATA BAR
**   There is a tension between
**   (1) reducing production opt_paren_type_exprs -> LPAREN type_expr COMMA type_exprs RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 213:
## Known stack suffix:
## type_expr
## LR(1) items:
opt_paren_type_exprs -> type_expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR #
--   reduce production opt_paren_type_exprs -> type_expr
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR
**   There is a tension between
**   (1) reducing production opt_paren_type_exprs -> type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 214:
## Known stack suffix:
## UIDENT opt_paren_type_exprs
## LR(1) items:
tycon_item -> UIDENT opt_paren_type_exprs . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR #
--   reduce production tycon_item -> UIDENT opt_paren_type_exprs
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA BAR
**   There is a tension between
**   (1) reducing production tycon_item -> UIDENT opt_paren_type_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 215:
## Known stack suffix:
## tycon_item
## LR(1) items:
tycon_expr -> tycon_item . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
tycon_expr -> tycon_item . BAR tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On BAR shift to state 216
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
--   reduce production tycon_expr -> tycon_item

State 216:
## Known stack suffix:
## tycon_item BAR
## LR(1) items:
tycon_expr -> tycon_item BAR . tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 207
-- On tycon_item shift to state 215
-- On tycon_expr shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## tycon_item BAR tycon_expr
## LR(1) items:
tycon_expr -> tycon_item BAR tycon_expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
--   reduce production tycon_expr -> tycon_item BAR tycon_expr

State 218:
## Known stack suffix:
## EDATA UIDENT opt_paren_type_args EQUALS tycon_expr
## LR(1) items:
expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN
## LR(1) items:
expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 317
## Reductions:

State 220:
## Known stack suffix:
## DIST
## LR(1) items:
expr3 -> DIST . LSQUARE weighted_exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LSQUARE shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## DIST LSQUARE
## LR(1) items:
expr3 -> DIST LSQUARE . weighted_exprs RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On POSFLOAT shift to state 222
-- On weighted_exprs shift to state 312
-- On weighted_expr shift to state 314
## Reductions:

State 222:
## Known stack suffix:
## POSFLOAT
## LR(1) items:
weighted_expr -> POSFLOAT . COLON expr [ RSQUARE COMMA ]
## Transitions:
-- On COLON shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## POSFLOAT COLON
## LR(1) items:
weighted_expr -> POSFLOAT COLON . expr [ RSQUARE COMMA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 311
## Reductions:

State 224:
## Known stack suffix:
## DISCOUNT
## LR(1) items:
expr3 -> DISCOUNT . POSFLOAT IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On POSFLOAT shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## DISCOUNT POSFLOAT
## LR(1) items:
expr3 -> DISCOUNT POSFLOAT . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## DISCOUNT POSFLOAT IN
## LR(1) items:
expr3 -> DISCOUNT POSFLOAT IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 310
## Reductions:

State 227:
## Known stack suffix:
## DECIDE
## LR(1) items:
expr3 -> DECIDE . LIDENT values GIVEN longvars IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> DECIDE . LIDENT values IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## DECIDE LIDENT
## LR(1) items:
expr3 -> DECIDE LIDENT . values GIVEN longvars IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> DECIDE LIDENT . values IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On FROM shift to state 229
-- On values shift to state 237
## Reductions:
-- On IN GIVEN
--   reduce production values ->

State 229:
## Known stack suffix:
## FROM
## LR(1) items:
values -> FROM . strings [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
values -> FROM . integer DOTDOT integer [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On strings shift to state 230
-- On string shift to state 231
-- On integer shift to state 234
## Reductions:

State 230:
## Known stack suffix:
## FROM strings
## LR(1) items:
values -> FROM strings . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA #
--   reduce production values -> FROM strings
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA
**   There is a tension between
**   (1) reducing production values -> FROM strings
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 231:
## Known stack suffix:
## string
## LR(1) items:
strings -> string . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
strings -> string . COMMA strings [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
-- On COMMA shift to state 232
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA #
--   reduce production strings -> string
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA COMMA
**   There is a tension between
**   (1) reducing production strings -> string
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 232:
## Known stack suffix:
## string COMMA
## LR(1) items:
strings -> string COMMA . strings [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On strings shift to state 233
-- On string shift to state 231
## Reductions:

State 233:
## Known stack suffix:
## string COMMA strings
## LR(1) items:
strings -> string COMMA strings . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA #
--   reduce production strings -> string COMMA strings
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA
**   There is a tension between
**   (1) reducing production strings -> string COMMA strings
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 234:
## Known stack suffix:
## FROM integer
## LR(1) items:
values -> FROM integer . DOTDOT integer [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
-- On DOTDOT shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## FROM integer DOTDOT
## LR(1) items:
values -> FROM integer DOTDOT . integer [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On integer shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## FROM integer DOTDOT integer
## LR(1) items:
values -> FROM integer DOTDOT integer . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA #
--   reduce production values -> FROM integer DOTDOT integer
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN GIVEN DECIDE DATA
**   There is a tension between
**   (1) reducing production values -> FROM integer DOTDOT integer
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 237:
## Known stack suffix:
## DECIDE LIDENT values
## LR(1) items:
expr3 -> DECIDE LIDENT values . GIVEN longvars IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> DECIDE LIDENT values . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 238
-- On GIVEN shift to state 303
## Reductions:

State 238:
## Known stack suffix:
## DECIDE LIDENT values IN
## LR(1) items:
expr3 -> DECIDE LIDENT values IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 302
## Reductions:

State 239:
## Known stack suffix:
## CASE
## LR(1) items:
expr3 -> CASE . expr OF clauses [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 290
## Reductions:

State 240:
## Known stack suffix:
## ulongvar
## LR(1) items:
expr3 -> ulongvar . opt_paren_exprs [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 241
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On opt_paren_exprs shift to state 288
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 289
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_paren_exprs ->
** Conflict on REWARD PRAGMA OBSERVE MINUS LIDENT DECIDE
** End-of-stream conflict on UNIFORM UIDENT TYPE TRUE TIMES THEN STRING SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE QUOTE PRIVATE PRAGMA PLUSPLUS PLUS PDIST PARAMS PARAM OP OF OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IN IF HASH FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS ELSE EDATA DOT DIVIDE DIST DISCOUNT DECIDE DATA CONCAT COMMA COLON CASE BAR AND
**   There is a tension between
**   (1) reducing production opt_paren_exprs ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 241:
## Known stack suffix:
## LPAREN
## LR(1) items:
expr2 -> LPAREN . expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
opt_paren_exprs -> LPAREN . expr COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 283
## Reductions:

State 242:
## Known stack suffix:
## string
## LR(1) items:
expr3 -> string . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> string
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> string
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 243:
## Known stack suffix:
## longvar
## LR(1) items:
expr2 -> longvar . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr2 -> longvar
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr2 -> longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 244:
## Known stack suffix:
## integer
## LR(1) items:
expr1 -> integer . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr1 -> integer
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr1 -> integer
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 245:
## Known stack suffix:
## expr4
## LR(1) items:
expr -> expr4 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr -> expr4
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr -> expr4
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 246:
## Known stack suffix:
## expr3
## LR(1) items:
expr -> expr3 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr -> expr3
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr -> expr3
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 247:
## Known stack suffix:
## expr2
## LR(1) items:
expr -> expr2 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 . LPAREN RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 . LPAREN expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 . LPAREN expr COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LPAREN shift to state 248
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr -> expr2
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr -> expr2
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 248:
## Known stack suffix:
## expr2 LPAREN
## LR(1) items:
expr2 -> expr2 LPAREN . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 LPAREN . expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 LPAREN . expr COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On RPAREN shift to state 249
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 251
## Reductions:

State 249:
## Known stack suffix:
## expr2 LPAREN RPAREN
## LR(1) items:
expr2 -> expr2 LPAREN RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr2 -> expr2 LPAREN RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr2 -> expr2 LPAREN RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 250:
## Known stack suffix:
## expr1
## LR(1) items:
expr -> expr1 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr -> expr1
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr -> expr1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 251:
## Known stack suffix:
## expr2 LPAREN expr
## LR(1) items:
expr2 -> expr2 LPAREN expr . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 LPAREN expr . COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On RPAREN shift to state 276
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COMMA shift to state 277
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 252:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr4 -> expr TIMES . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr TIMES expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr TIMES expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr TIMES expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 254:
## Known stack suffix:
## expr PLUSPLUS
## LR(1) items:
expr4 -> expr PLUSPLUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr PLUSPLUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr PLUSPLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 255:
## Known stack suffix:
## expr MINUSMINUS
## LR(1) items:
expr4 -> expr MINUSMINUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr MINUSMINUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr MINUSMINUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 256:
## Known stack suffix:
## expr EQUALSEQUALS
## LR(1) items:
expr4 -> expr EQUALSEQUALS . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## expr EQUALSEQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr EQUALSEQUALS expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr EQUALSEQUALS expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr EQUALSEQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 258:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr4 -> expr PLUS . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr PLUS expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On COLON shift to state 264
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr PLUS expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr PLUS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 260:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr4 -> expr MOD . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr MOD expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr MOD expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr MOD expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 262:
## Known stack suffix:
## expr DOT
## LR(1) items:
expr4 -> expr DOT . LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## expr DOT LIDENT
## LR(1) items:
expr4 -> expr DOT LIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr DOT LIDENT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr DOT LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 264:
## Known stack suffix:
## expr COLON
## LR(1) items:
expr4 -> expr COLON . type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 265
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 265:
## Known stack suffix:
## expr COLON type_expr
## LR(1) items:
expr4 -> expr COLON type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr COLON type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr COLON type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 266:
## Known stack suffix:
## expr DIVIDE
## LR(1) items:
expr4 -> expr DIVIDE . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## expr DIVIDE expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr DIVIDE expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr DIVIDE expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr DIVIDE expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 268:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr4 -> expr MINUS . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr MINUS expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On COLON shift to state 264
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr MINUS expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr MINUS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 270:
## Known stack suffix:
## expr CONCAT
## LR(1) items:
expr4 -> expr CONCAT . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## expr CONCAT expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr CONCAT expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On COLON shift to state 264
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OF OBSERVE LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr4 -> expr CONCAT expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr CONCAT expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 272:
## Known stack suffix:
## expr BAR
## LR(1) items:
expr4 -> expr BAR . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## expr BAR expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr BAR expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On AND shift to state 274
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OF OBSERVE LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA COMMA COLON BAR #
--   reduce production expr4 -> expr BAR expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr BAR expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 274:
## Known stack suffix:
## expr AND
## LR(1) items:
expr4 -> expr AND . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## expr AND expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr AND expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OF OBSERVE LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA COMMA COLON BAR AND #
--   reduce production expr4 -> expr AND expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr4 -> expr AND expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 276:
## Known stack suffix:
## expr2 LPAREN expr RPAREN
## LR(1) items:
expr2 -> expr2 LPAREN expr RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr2 -> expr2 LPAREN expr RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr2 -> expr2 LPAREN expr RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 277:
## Known stack suffix:
## expr2 LPAREN expr COMMA
## LR(1) items:
expr2 -> expr2 LPAREN expr COMMA . exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On exprs shift to state 278
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 280
## Reductions:

State 278:
## Known stack suffix:
## expr2 LPAREN expr COMMA exprs
## LR(1) items:
expr2 -> expr2 LPAREN expr COMMA exprs . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## expr2 LPAREN expr COMMA exprs RPAREN
## LR(1) items:
expr2 -> expr2 LPAREN expr COMMA exprs RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr2 -> expr2 LPAREN expr COMMA exprs RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr2 -> expr2 LPAREN expr COMMA exprs RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 280:
## Known stack suffix:
## expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RTUP RSQUARE RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
exprs -> expr . [ RTUP RSQUARE RPAREN ]
exprs -> expr . COMMA exprs [ RTUP RSQUARE RPAREN ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COMMA shift to state 281
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On RTUP RSQUARE RPAREN
--   reduce production exprs -> expr

State 281:
## Known stack suffix:
## expr COMMA
## LR(1) items:
exprs -> expr COMMA . exprs [ RTUP RSQUARE RPAREN ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On exprs shift to state 282
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 280
## Reductions:

State 282:
## Known stack suffix:
## expr COMMA exprs
## LR(1) items:
exprs -> expr COMMA exprs . [ RTUP RSQUARE RPAREN ]
## Transitions:
## Reductions:
-- On RTUP RSQUARE RPAREN
--   reduce production exprs -> expr COMMA exprs

State 283:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr2 -> LPAREN expr . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
opt_paren_exprs -> LPAREN expr . COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On RPAREN shift to state 284
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COMMA shift to state 285
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 284:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
expr2 -> LPAREN expr RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr2 -> LPAREN expr RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr2 -> LPAREN expr RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 285:
## Known stack suffix:
## LPAREN expr COMMA
## LR(1) items:
opt_paren_exprs -> LPAREN expr COMMA . exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On exprs shift to state 286
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 280
## Reductions:

State 286:
## Known stack suffix:
## LPAREN expr COMMA exprs
## LR(1) items:
opt_paren_exprs -> LPAREN expr COMMA exprs . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RPAREN shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## LPAREN expr COMMA exprs RPAREN
## LR(1) items:
opt_paren_exprs -> LPAREN expr COMMA exprs RPAREN . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_paren_exprs -> LPAREN expr COMMA exprs RPAREN
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production opt_paren_exprs -> LPAREN expr COMMA exprs RPAREN
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 288:
## Known stack suffix:
## ulongvar opt_paren_exprs
## LR(1) items:
expr3 -> ulongvar opt_paren_exprs . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> ulongvar opt_paren_exprs
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> ulongvar opt_paren_exprs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 289:
## Known stack suffix:
## expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
opt_paren_exprs -> expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production opt_paren_exprs -> expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production opt_paren_exprs -> expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 290:
## Known stack suffix:
## CASE expr
## LR(1) items:
expr3 -> CASE expr . OF clauses [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On OF shift to state 291
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 291:
## Known stack suffix:
## CASE expr OF
## LR(1) items:
expr3 -> CASE expr OF . clauses [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On HASH shift to state 292
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 293
-- On integer shift to state 148
-- On clauses1 shift to state 300
-- On clauses shift to state 301
-- On clause shift to state 297
## Reductions:

State 292:
## Known stack suffix:
## HASH
## LR(1) items:
clauses -> HASH . clauses1 [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 293
-- On integer shift to state 148
-- On clauses1 shift to state 296
-- On clause shift to state 297
## Reductions:

State 293:
## Known stack suffix:
## pat
## LR(1) items:
clause -> pat . COLON expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On COLON shift to state 294
## Reductions:

State 294:
## Known stack suffix:
## pat COLON
## LR(1) items:
clause -> pat COLON . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## pat COLON expr
## LR(1) items:
clause -> pat COLON expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production clause -> pat COLON expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production clause -> pat COLON expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 296:
## Known stack suffix:
## HASH clauses1
## LR(1) items:
clauses -> HASH clauses1 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production clauses -> HASH clauses1
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production clauses -> HASH clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 297:
## Known stack suffix:
## clause
## LR(1) items:
clauses1 -> clause . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
clauses1 -> clause . HASH clauses1 [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On HASH shift to state 298
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production clauses1 -> clause
** Conflict on HASH
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production clauses1 -> clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 298:
## Known stack suffix:
## clause HASH
## LR(1) items:
clauses1 -> clause HASH . clauses1 [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 293
-- On integer shift to state 148
-- On clauses1 shift to state 299
-- On clause shift to state 297
## Reductions:

State 299:
## Known stack suffix:
## clause HASH clauses1
## LR(1) items:
clauses1 -> clause HASH clauses1 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production clauses1 -> clause HASH clauses1
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production clauses1 -> clause HASH clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 300:
## Known stack suffix:
## clauses1
## LR(1) items:
clauses -> clauses1 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production clauses -> clauses1
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production clauses -> clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 301:
## Known stack suffix:
## CASE expr OF clauses
## LR(1) items:
expr3 -> CASE expr OF clauses . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> CASE expr OF clauses
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> CASE expr OF clauses
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 302:
## Known stack suffix:
## DECIDE LIDENT values IN expr
## LR(1) items:
expr3 -> DECIDE LIDENT values IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> DECIDE LIDENT values IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> DECIDE LIDENT values IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 303:
## Known stack suffix:
## DECIDE LIDENT values GIVEN
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN . longvars IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvars shift to state 304
-- On longvar shift to state 307
## Reductions:

State 304:
## Known stack suffix:
## DECIDE LIDENT values GIVEN longvars
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN longvars . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## DECIDE LIDENT values GIVEN longvars IN
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN longvars IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## DECIDE LIDENT values GIVEN longvars IN expr
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN longvars IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> DECIDE LIDENT values GIVEN longvars IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> DECIDE LIDENT values GIVEN longvars IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 307:
## Known stack suffix:
## longvar
## LR(1) items:
longvars -> longvar . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
longvars -> longvar . COMMA longvars [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On COMMA shift to state 308
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production longvars -> longvar
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA COMMA
**   There is a tension between
**   (1) reducing production longvars -> longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 308:
## Known stack suffix:
## longvar COMMA
## LR(1) items:
longvars -> longvar COMMA . longvars [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvars shift to state 309
-- On longvar shift to state 307
## Reductions:

State 309:
## Known stack suffix:
## longvar COMMA longvars
## LR(1) items:
longvars -> longvar COMMA longvars . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production longvars -> longvar COMMA longvars
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production longvars -> longvar COMMA longvars
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 310:
## Known stack suffix:
## DISCOUNT POSFLOAT IN expr
## LR(1) items:
expr3 -> DISCOUNT POSFLOAT IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> DISCOUNT POSFLOAT IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> DISCOUNT POSFLOAT IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 311:
## Known stack suffix:
## POSFLOAT COLON expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RSQUARE PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
weighted_expr -> POSFLOAT COLON expr . [ RSQUARE COMMA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On RSQUARE COMMA
--   reduce production weighted_expr -> POSFLOAT COLON expr

State 312:
## Known stack suffix:
## DIST LSQUARE weighted_exprs
## LR(1) items:
expr3 -> DIST LSQUARE weighted_exprs . RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RSQUARE shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## DIST LSQUARE weighted_exprs RSQUARE
## LR(1) items:
expr3 -> DIST LSQUARE weighted_exprs RSQUARE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> DIST LSQUARE weighted_exprs RSQUARE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> DIST LSQUARE weighted_exprs RSQUARE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 314:
## Known stack suffix:
## weighted_expr
## LR(1) items:
weighted_exprs -> weighted_expr . [ RSQUARE ]
weighted_exprs -> weighted_expr . COMMA weighted_exprs [ RSQUARE ]
## Transitions:
-- On COMMA shift to state 315
## Reductions:
-- On RSQUARE
--   reduce production weighted_exprs -> weighted_expr

State 315:
## Known stack suffix:
## weighted_expr COMMA
## LR(1) items:
weighted_exprs -> weighted_expr COMMA . weighted_exprs [ RSQUARE ]
## Transitions:
-- On POSFLOAT shift to state 222
-- On weighted_exprs shift to state 316
-- On weighted_expr shift to state 314
## Reductions:

State 316:
## Known stack suffix:
## weighted_expr COMMA weighted_exprs
## LR(1) items:
weighted_exprs -> weighted_expr COMMA weighted_exprs . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE
--   reduce production weighted_exprs -> weighted_expr COMMA weighted_exprs

State 317:
## Known stack suffix:
## EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr
## LR(1) items:
expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 318:
## Known stack suffix:
## ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr
## LR(1) items:
expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 319:
## Known stack suffix:
## FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr
## LR(1) items:
expr3 -> FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 320:
## Known stack suffix:
## FIX LIDENT LIDENT
## LR(1) items:
expr3 -> FIX LIDENT LIDENT . MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On MAPSTO shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## FIX LIDENT LIDENT MAPSTO
## LR(1) items:
expr3 -> FIX LIDENT LIDENT MAPSTO . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## FIX LIDENT LIDENT MAPSTO expr
## LR(1) items:
expr3 -> FIX LIDENT LIDENT MAPSTO expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> FIX LIDENT LIDENT MAPSTO expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> FIX LIDENT LIDENT MAPSTO expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 323:
## Known stack suffix:
## IF expr
## LR(1) items:
expr3 -> IF expr . THEN expr ELSE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES THEN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On THEN shift to state 324
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 324:
## Known stack suffix:
## IF expr THEN
## LR(1) items:
expr3 -> IF expr THEN . expr ELSE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## IF expr THEN expr
## LR(1) items:
expr3 -> IF expr THEN expr . ELSE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS ELSE DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On ELSE shift to state 326
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 326:
## Known stack suffix:
## IF expr THEN expr ELSE
## LR(1) items:
expr3 -> IF expr THEN expr ELSE . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 327
## Reductions:

State 327:
## Known stack suffix:
## IF expr THEN expr ELSE expr
## LR(1) items:
expr3 -> IF expr THEN expr ELSE expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> IF expr THEN expr ELSE expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> IF expr THEN expr ELSE expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 328:
## Known stack suffix:
## LAMBDA LPAREN opt_vars RPAREN MAPSTO expr
## LR(1) items:
expr3 -> LAMBDA LPAREN opt_vars RPAREN MAPSTO expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LAMBDA LPAREN opt_vars RPAREN MAPSTO expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LAMBDA LPAREN opt_vars RPAREN MAPSTO expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 329:
## Known stack suffix:
## LAMBDA LIDENT
## LR(1) items:
expr3 -> LAMBDA LIDENT . MAPSTO expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On MAPSTO shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## LAMBDA LIDENT MAPSTO
## LR(1) items:
expr3 -> LAMBDA LIDENT MAPSTO . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## LAMBDA LIDENT MAPSTO expr
## LR(1) items:
expr3 -> LAMBDA LIDENT MAPSTO expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LAMBDA LIDENT MAPSTO expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LAMBDA LIDENT MAPSTO expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 332:
## Known stack suffix:
## REWARD CASE expr
## LR(1) items:
decl -> REWARD CASE expr . OF rew_clauses [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On OF shift to state 333
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 333:
## Known stack suffix:
## REWARD CASE expr OF
## LR(1) items:
decl -> REWARD CASE expr OF . rew_clauses [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On HASH shift to state 334
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 342
-- On rew_clauses shift to state 343
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 334:
## Known stack suffix:
## HASH
## LR(1) items:
rew_clauses -> HASH . rew_clauses1 [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 335
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 335:
## Known stack suffix:
## HASH rew_clauses1
## LR(1) items:
rew_clauses -> HASH rew_clauses1 . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production rew_clauses -> HASH rew_clauses1
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production rew_clauses -> HASH rew_clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 336:
## Known stack suffix:
## rew_clause
## LR(1) items:
rew_clauses1 -> rew_clause . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
rew_clauses1 -> rew_clause . HASH rew_clauses1 [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On HASH shift to state 337
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production rew_clauses1 -> rew_clause
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA
**   There is a tension between
**   (1) reducing production rew_clauses1 -> rew_clause
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 337:
## Known stack suffix:
## rew_clause HASH
## LR(1) items:
rew_clauses1 -> rew_clause HASH . rew_clauses1 [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 338
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 338:
## Known stack suffix:
## rew_clause HASH rew_clauses1
## LR(1) items:
rew_clauses1 -> rew_clause HASH rew_clauses1 . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production rew_clauses1 -> rew_clause HASH rew_clauses1
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production rew_clauses1 -> rew_clause HASH rew_clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 339:
## Known stack suffix:
## pat
## LR(1) items:
rew_clause -> pat . COLON float [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
-- On COLON shift to state 340
## Reductions:

State 340:
## Known stack suffix:
## pat COLON
## LR(1) items:
rew_clause -> pat COLON . float [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
-- On POSFLOAT shift to state 65
-- On MINUS shift to state 66
-- On float shift to state 341
## Reductions:

State 341:
## Known stack suffix:
## pat COLON float
## LR(1) items:
rew_clause -> pat COLON float . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA #
--   reduce production rew_clause -> pat COLON float
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN HASH DECIDE DATA
**   There is a tension between
**   (1) reducing production rew_clause -> pat COLON float
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 342:
## Known stack suffix:
## rew_clauses1
## LR(1) items:
rew_clauses -> rew_clauses1 . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production rew_clauses -> rew_clauses1
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production rew_clauses -> rew_clauses1
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 343:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses
## LR(1) items:
decl -> REWARD CASE expr OF rew_clauses . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> REWARD CASE expr OF rew_clauses

State 344:
## Known stack suffix:
## REWARD float
## LR(1) items:
decl -> REWARD float . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> REWARD float

State 345:
## Known stack suffix:
## RETRACT
## LR(1) items:
decl -> RETRACT . longvar [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvar shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## RETRACT longvar
## LR(1) items:
decl -> RETRACT longvar . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> RETRACT longvar

State 347:
## Known stack suffix:
## PRIVATE
## LR(1) items:
decl -> PRIVATE . let_decl [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
decl -> PRIVATE . decide_decl [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LIDENT shift to state 348
-- On DECIDE shift to state 371
-- On let_decl shift to state 377
-- On decide_decl shift to state 378
## Reductions:

State 348:
## Known stack suffix:
## LIDENT
## LR(1) items:
let_decl -> LIDENT . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT . COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT . LIDENT EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT . LIDENT COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LPAREN shift to state 349
-- On LIDENT shift to state 358
-- On EQUALS shift to state 365
-- On COLON shift to state 367
## Reductions:

State 349:
## Known stack suffix:
## LIDENT LPAREN
## LR(1) items:
let_decl -> LIDENT LPAREN . opt_vars RPAREN EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT LPAREN . opt_vars RPAREN COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 168
-- On opt_vars shift to state 350
## Reductions:
-- On RPAREN
--   reduce production opt_vars ->

State 350:
## Known stack suffix:
## LIDENT LPAREN opt_vars
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars . RPAREN EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT LPAREN opt_vars . RPAREN COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On RPAREN shift to state 351
## Reductions:

State 351:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT LPAREN opt_vars RPAREN . COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 352
-- On COLON shift to state 354
## Reductions:

State 352:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN EQUALS
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS expr

State 354:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON . type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 355
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 355:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr

State 358:
## Known stack suffix:
## LIDENT LIDENT
## LR(1) items:
let_decl -> LIDENT LIDENT . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
let_decl -> LIDENT LIDENT . COLON type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 359
-- On COLON shift to state 361
## Reductions:

State 359:
## Known stack suffix:
## LIDENT LIDENT EQUALS
## LR(1) items:
let_decl -> LIDENT LIDENT EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## LIDENT LIDENT EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT LIDENT EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT LIDENT EQUALS expr

State 361:
## Known stack suffix:
## LIDENT LIDENT COLON
## LR(1) items:
let_decl -> LIDENT LIDENT COLON . type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 362
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 362:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr
## LR(1) items:
let_decl -> LIDENT LIDENT COLON type_expr . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 363
## Reductions:

State 363:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT LIDENT COLON type_expr EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 364
## Reductions:

State 364:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT LIDENT COLON type_expr EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT LIDENT COLON type_expr EQUALS expr

State 365:
## Known stack suffix:
## LIDENT EQUALS
## LR(1) items:
let_decl -> LIDENT EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## LIDENT EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT EQUALS expr

State 367:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
let_decl -> LIDENT COLON . type_expr EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 368
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 368:
## Known stack suffix:
## LIDENT COLON type_expr
## LR(1) items:
let_decl -> LIDENT COLON type_expr . EQUALS expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## LIDENT COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT COLON type_expr EQUALS . expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## LIDENT COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TYPE TIMES SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OBSERVE MOD MINUSMINUS MINUS LIDENT EQUALSEQUALS DOT DIVIDE DECIDE DATA CONCAT COLON BAR AND ]
let_decl -> LIDENT COLON type_expr EQUALS expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production let_decl -> LIDENT COLON type_expr EQUALS expr

State 371:
## Known stack suffix:
## DECIDE
## LR(1) items:
decide_decl -> DECIDE . LIDENT values opt_given [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LIDENT shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## DECIDE LIDENT
## LR(1) items:
decide_decl -> DECIDE LIDENT . values opt_given [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On FROM shift to state 229
-- On values shift to state 373
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT GIVEN DECIDE DATA
--   reduce production values ->

State 373:
## Known stack suffix:
## DECIDE LIDENT values
## LR(1) items:
decide_decl -> DECIDE LIDENT values . opt_given [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On GIVEN shift to state 374
-- On opt_given shift to state 376
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production opt_given ->

State 374:
## Known stack suffix:
## GIVEN
## LR(1) items:
opt_given -> GIVEN . longvars [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvars shift to state 375
-- On longvar shift to state 307
## Reductions:

State 375:
## Known stack suffix:
## GIVEN longvars
## LR(1) items:
opt_given -> GIVEN longvars . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production opt_given -> GIVEN longvars

State 376:
## Known stack suffix:
## DECIDE LIDENT values opt_given
## LR(1) items:
decide_decl -> DECIDE LIDENT values opt_given . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decide_decl -> DECIDE LIDENT values opt_given

State 377:
## Known stack suffix:
## PRIVATE let_decl
## LR(1) items:
decl -> PRIVATE let_decl . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> PRIVATE let_decl

State 378:
## Known stack suffix:
## PRIVATE decide_decl
## LR(1) items:
decl -> PRIVATE decide_decl . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> PRIVATE decide_decl

State 379:
## Known stack suffix:
## PRAGMA
## LR(1) items:
decl -> PRAGMA . string [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string shift to state 380
## Reductions:

State 380:
## Known stack suffix:
## PRAGMA string
## LR(1) items:
decl -> PRAGMA string . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> PRAGMA string

State 381:
## Known stack suffix:
## PARAM
## LR(1) items:
decl -> PARAM . param_decl [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On param_decl shift to state 382
-- On ident shift to state 383
## Reductions:

State 382:
## Known stack suffix:
## PARAM param_decl
## LR(1) items:
decl -> PARAM param_decl . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> PARAM param_decl

State 383:
## Known stack suffix:
## ident
## LR(1) items:
param_decl -> ident . EQUALS LSQUARE params RSQUARE [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
param_decl -> ident . NATURAL [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On NATURAL shift to state 384
-- On EQUALS shift to state 385
## Reductions:

State 384:
## Known stack suffix:
## ident NATURAL
## LR(1) items:
param_decl -> ident NATURAL . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
--   reduce production param_decl -> ident NATURAL

State 385:
## Known stack suffix:
## ident EQUALS
## LR(1) items:
param_decl -> ident EQUALS . LSQUARE params RSQUARE [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On LSQUARE shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## ident EQUALS LSQUARE
## LR(1) items:
param_decl -> ident EQUALS LSQUARE . params RSQUARE [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On POSFLOAT shift to state 387
-- On params shift to state 390
## Reductions:

State 387:
## Known stack suffix:
## POSFLOAT
## LR(1) items:
params -> POSFLOAT . [ RSQUARE ]
params -> POSFLOAT . COMMA params [ RSQUARE ]
## Transitions:
-- On COMMA shift to state 388
## Reductions:
-- On RSQUARE
--   reduce production params -> POSFLOAT

State 388:
## Known stack suffix:
## POSFLOAT COMMA
## LR(1) items:
params -> POSFLOAT COMMA . params [ RSQUARE ]
## Transitions:
-- On POSFLOAT shift to state 387
-- On params shift to state 389
## Reductions:

State 389:
## Known stack suffix:
## POSFLOAT COMMA params
## LR(1) items:
params -> POSFLOAT COMMA params . [ RSQUARE ]
## Transitions:
## Reductions:
-- On RSQUARE
--   reduce production params -> POSFLOAT COMMA params

State 390:
## Known stack suffix:
## ident EQUALS LSQUARE params
## LR(1) items:
param_decl -> ident EQUALS LSQUARE params . RSQUARE [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
-- On RSQUARE shift to state 391
## Reductions:

State 391:
## Known stack suffix:
## ident EQUALS LSQUARE params RSQUARE
## LR(1) items:
param_decl -> ident EQUALS LSQUARE params RSQUARE . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
--   reduce production param_decl -> ident EQUALS LSQUARE params RSQUARE

State 392:
## Known stack suffix:
## OBSERVE
## LR(1) items:
decl -> OBSERVE . obs [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 108
-- On NOT shift to state 112
-- On LIDENT shift to state 110
-- On obs shift to state 393
-- On longvar shift to state 394
## Reductions:

State 393:
## Known stack suffix:
## OBSERVE obs
## LR(1) items:
decl -> OBSERVE obs . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> OBSERVE obs

State 394:
## Known stack suffix:
## longvar
## LR(1) items:
obs -> longvar . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
obs -> longvar . EQUALS pat [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On EQUALS shift to state 395
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production obs -> longvar
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN EQUALS DECIDE DATA
**   There is a tension between
**   (1) reducing production obs -> longvar
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 395:
## Known stack suffix:
## longvar EQUALS
## LR(1) items:
obs -> longvar EQUALS . pat [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On pat shift to state 396
-- On integer shift to state 148
## Reductions:

State 396:
## Known stack suffix:
## longvar EQUALS pat
## LR(1) items:
obs -> longvar EQUALS pat . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA # ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA #
--   reduce production obs -> longvar EQUALS pat
** End-of-stream conflict on TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT IN DECIDE DATA
**   There is a tension between
**   (1) reducing production obs -> longvar EQUALS pat
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 397:
## Known stack suffix:
## DATA
## LR(1) items:
decl -> DATA . UIDENT opt_paren_type_args EQUALS tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## DATA UIDENT
## LR(1) items:
decl -> DATA UIDENT . opt_paren_type_args EQUALS tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 399
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 399:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args . EQUALS tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On EQUALS shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args EQUALS
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args EQUALS . tycon_expr [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
-- On UIDENT shift to state 207
-- On tycon_item shift to state 215
-- On tycon_expr shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args EQUALS tycon_expr
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args EQUALS tycon_expr . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> DATA UIDENT opt_paren_type_args EQUALS tycon_expr

State 402:
## Known stack suffix:
## LBRACE opt_decls
## LR(1) items:
expr3 -> LBRACE opt_decls . RBRACE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RBRACE shift to state 403
## Reductions:

State 403:
## Known stack suffix:
## LBRACE opt_decls RBRACE
## LR(1) items:
expr3 -> LBRACE opt_decls RBRACE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LBRACE opt_decls RBRACE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LBRACE opt_decls RBRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 404:
## Known stack suffix:
## let_decl
## LR(1) items:
decl -> let_decl . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> let_decl

State 405:
## Known stack suffix:
## decls
## LR(1) items:
opt_decls -> decls . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production opt_decls -> decls

State 406:
## Known stack suffix:
## decl
## LR(1) items:
decls -> decl . opt_semicolon [ RBRACE ]
decls -> decl . opt_semicolon decls [ RBRACE ]
## Transitions:
-- On SEMICOLON shift to state 407
-- On opt_semicolon shift to state 408
## Reductions:
-- On TYPE REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production opt_semicolon ->

State 407:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
opt_semicolon -> SEMICOLON . [ TYPE REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production opt_semicolon -> SEMICOLON

State 408:
## Known stack suffix:
## decl opt_semicolon
## LR(1) items:
decls -> decl opt_semicolon . [ RBRACE ]
decls -> decl opt_semicolon . decls [ RBRACE ]
## Transitions:
-- On TYPE shift to state 173
-- On REWARD shift to state 178
-- On RETRACT shift to state 345
-- On PRIVATE shift to state 347
-- On PRAGMA shift to state 379
-- On PARAM shift to state 381
-- On OBSERVE shift to state 392
-- On LIDENT shift to state 348
-- On DECIDE shift to state 371
-- On DATA shift to state 397
-- On let_decl shift to state 404
-- On decls shift to state 409
-- On decl shift to state 406
-- On decide_decl shift to state 410
## Reductions:
-- On RBRACE
--   reduce production decls -> decl opt_semicolon

State 409:
## Known stack suffix:
## decl opt_semicolon decls
## LR(1) items:
decls -> decl opt_semicolon decls . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production decls -> decl opt_semicolon decls

State 410:
## Known stack suffix:
## decide_decl
## LR(1) items:
decl -> decide_decl . [ TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA ]
## Transitions:
## Reductions:
-- On TYPE SEMICOLON REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OBSERVE LIDENT DECIDE DATA
--   reduce production decl -> decide_decl

State 411:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN EQUALS expr
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On IN shift to state 412
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 412:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 414:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON . type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 415
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 415:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON type_expr
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr . EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 416
## Reductions:

State 416:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS . expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 417
## Reductions:

State 417:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On IN shift to state 418
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 418:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr
## LR(1) items:
expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 420:
## Known stack suffix:
## LET pat
## LR(1) items:
expr3 -> LET pat . EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr3 -> LET pat . COLON type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 421
-- On COLON shift to state 425
## Reductions:

State 421:
## Known stack suffix:
## LET pat EQUALS
## LR(1) items:
expr3 -> LET pat EQUALS . expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 422
## Reductions:

State 422:
## Known stack suffix:
## LET pat EQUALS expr
## LR(1) items:
expr3 -> LET pat EQUALS expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On IN shift to state 423
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 423:
## Known stack suffix:
## LET pat EQUALS expr IN
## LR(1) items:
expr3 -> LET pat EQUALS expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## LET pat EQUALS expr IN expr
## LR(1) items:
expr3 -> LET pat EQUALS expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LET pat EQUALS expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LET pat EQUALS expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 425:
## Known stack suffix:
## LET pat COLON
## LR(1) items:
expr3 -> LET pat COLON . type_expr EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 426
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 426:
## Known stack suffix:
## LET pat COLON type_expr
## LR(1) items:
expr3 -> LET pat COLON type_expr . EQUALS expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On EQUALS shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## LET pat COLON type_expr EQUALS
## LR(1) items:
expr3 -> LET pat COLON type_expr EQUALS . expr IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 428
## Reductions:

State 428:
## Known stack suffix:
## LET pat COLON type_expr EQUALS expr
## LR(1) items:
expr3 -> LET pat COLON type_expr EQUALS expr . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS IN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On IN shift to state 429
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 429:
## Known stack suffix:
## LET pat COLON type_expr EQUALS expr IN
## LR(1) items:
expr3 -> LET pat COLON type_expr EQUALS expr IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 430
## Reductions:

State 430:
## Known stack suffix:
## LET pat COLON type_expr EQUALS expr IN expr
## LR(1) items:
expr3 -> LET pat COLON type_expr EQUALS expr IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LET pat COLON type_expr EQUALS expr IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LET pat COLON type_expr EQUALS expr IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 431:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr2 -> LPAREN expr . RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RPAREN PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On RPAREN shift to state 284
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 432:
## Known stack suffix:
## LIDENT
## LR(1) items:
longvar -> LIDENT . [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
longvar -> LIDENT . DOT longvar [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
named_expr -> LIDENT . COLON expr [ RTUP COMMA ]
ulongvar -> LIDENT . DOT ulongvar [ UNIFORM UIDENT TRUE TIMES STRING RTUP REWARD QUOTE PRAGMA PLUSPLUS PLUS PDIST PARAMS OP OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IF FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EDATA DOT DIVIDE DIST DISCOUNT DECIDE CONCAT COMMA COLON CASE BAR AND ]
## Transitions:
-- On DOT shift to state 74
-- On COLON shift to state 433
## Reductions:
-- On TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND
--   reduce production longvar -> LIDENT
** Conflict on DOT COLON

State 433:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
named_expr -> LIDENT COLON . expr [ RTUP COMMA ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## LIDENT COLON expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES RTUP PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COMMA COLON BAR AND ]
named_expr -> LIDENT COLON expr . [ RTUP COMMA ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On RTUP COMMA
--   reduce production named_expr -> LIDENT COLON expr

State 435:
## Known stack suffix:
## LTUP opt_named_exprs
## LR(1) items:
expr3 -> LTUP opt_named_exprs . RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RTUP shift to state 436
## Reductions:

State 436:
## Known stack suffix:
## LTUP opt_named_exprs RTUP
## LR(1) items:
expr3 -> LTUP opt_named_exprs RTUP . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LTUP opt_named_exprs RTUP
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LTUP opt_named_exprs RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 437:
## Known stack suffix:
## named_exprs
## LR(1) items:
opt_named_exprs -> named_exprs . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production opt_named_exprs -> named_exprs

State 438:
## Known stack suffix:
## named_expr
## LR(1) items:
named_exprs -> named_expr . [ RTUP ]
named_exprs -> named_expr . COMMA named_exprs [ RTUP ]
## Transitions:
-- On COMMA shift to state 439
## Reductions:
-- On RTUP
--   reduce production named_exprs -> named_expr

State 439:
## Known stack suffix:
## named_expr COMMA
## LR(1) items:
named_exprs -> named_expr COMMA . named_exprs [ RTUP ]
## Transitions:
-- On LIDENT shift to state 440
-- On named_exprs shift to state 441
-- On named_expr shift to state 438
## Reductions:

State 440:
## Known stack suffix:
## LIDENT
## LR(1) items:
named_expr -> LIDENT . COLON expr [ RTUP COMMA ]
## Transitions:
-- On COLON shift to state 433
## Reductions:

State 441:
## Known stack suffix:
## named_expr COMMA named_exprs
## LR(1) items:
named_exprs -> named_expr COMMA named_exprs . [ RTUP ]
## Transitions:
## Reductions:
-- On RTUP
--   reduce production named_exprs -> named_expr COMMA named_exprs

State 442:
## Known stack suffix:
## LTUP exprs
## LR(1) items:
expr3 -> LTUP exprs . RTUP [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RTUP shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## LTUP exprs RTUP
## LR(1) items:
expr3 -> LTUP exprs RTUP . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> LTUP exprs RTUP
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> LTUP exprs RTUP
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 444:
## Known stack suffix:
## expr_nonint4
## LR(1) items:
expr_nonint -> expr_nonint4 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint -> expr_nonint4
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint -> expr_nonint4
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 445:
## Known stack suffix:
## MINUS expr_nonint
## LR(1) items:
expr3 -> MINUS expr_nonint . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 446
-- On PLUSPLUS shift to state 448
-- On MOD shift to state 449
-- On MINUSMINUS shift to state 451
-- On EQUALSEQUALS shift to state 452
-- On DOT shift to state 454
-- On DIVIDE shift to state 456
-- On COLON shift to state 458
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> MINUS expr_nonint
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> MINUS expr_nonint
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 446:
## Known stack suffix:
## expr_nonint TIMES
## LR(1) items:
expr_nonint4 -> expr_nonint TIMES . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 447
## Reductions:

State 447:
## Known stack suffix:
## expr_nonint TIMES expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint TIMES expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint TIMES expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint TIMES expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 448:
## Known stack suffix:
## expr_nonint PLUSPLUS
## LR(1) items:
expr_nonint4 -> expr_nonint PLUSPLUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint PLUSPLUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint PLUSPLUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 449:
## Known stack suffix:
## expr_nonint MOD
## LR(1) items:
expr_nonint4 -> expr_nonint MOD . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 450
## Reductions:

State 450:
## Known stack suffix:
## expr_nonint MOD expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint MOD expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint MOD expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint MOD expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 451:
## Known stack suffix:
## expr_nonint MINUSMINUS
## LR(1) items:
expr_nonint4 -> expr_nonint MINUSMINUS . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint MINUSMINUS
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint MINUSMINUS
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 452:
## Known stack suffix:
## expr_nonint EQUALSEQUALS
## LR(1) items:
expr_nonint4 -> expr_nonint EQUALSEQUALS . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 453
## Reductions:

State 453:
## Known stack suffix:
## expr_nonint EQUALSEQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint EQUALSEQUALS expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint EQUALSEQUALS expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint EQUALSEQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 454:
## Known stack suffix:
## expr_nonint DOT
## LR(1) items:
expr_nonint4 -> expr_nonint DOT . LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 455
## Reductions:

State 455:
## Known stack suffix:
## expr_nonint DOT LIDENT
## LR(1) items:
expr_nonint4 -> expr_nonint DOT LIDENT . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint DOT LIDENT
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint DOT LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 456:
## Known stack suffix:
## expr_nonint DIVIDE
## LR(1) items:
expr_nonint4 -> expr_nonint DIVIDE . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 457
## Reductions:

State 457:
## Known stack suffix:
## expr_nonint DIVIDE expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint4 -> expr_nonint DIVIDE expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On PLUSPLUS shift to state 254
-- On MINUSMINUS shift to state 255
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On COLON shift to state 264
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUS PARAM OF OBSERVE MOD MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint DIVIDE expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint DIVIDE expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 458:
## Known stack suffix:
## expr_nonint COLON
## LR(1) items:
expr_nonint4 -> expr_nonint COLON . type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 459
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 459:
## Known stack suffix:
## expr_nonint COLON type_expr
## LR(1) items:
expr_nonint4 -> expr_nonint COLON type_expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint4 -> expr_nonint COLON type_expr
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint4 -> expr_nonint COLON type_expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 460:
## Known stack suffix:
## expr3
## LR(1) items:
expr_nonint -> expr3 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint -> expr3
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint -> expr3
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 461:
## Known stack suffix:
## expr2
## LR(1) items:
expr2 -> expr2 . LPAREN RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 . LPAREN expr RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr2 -> expr2 . LPAREN expr COMMA exprs RPAREN [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr_nonint -> expr2 . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On LPAREN shift to state 248
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr_nonint -> expr2
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LPAREN LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr_nonint -> expr2
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 462:
## Known stack suffix:
## NOT expr
## LR(1) items:
expr3 -> NOT expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
## Reductions:
-- On TYPE THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PARAM OF OBSERVE LIDENT IN HASH EQUALSEQUALS ELSE DOT DECIDE DATA COMMA COLON BAR AND #
--   reduce production expr3 -> NOT expr
** Conflict on EQUALSEQUALS DOT COLON
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> NOT expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 463:
## Known stack suffix:
## OBSERVE obs IN expr
## LR(1) items:
expr3 -> OBSERVE obs IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> OBSERVE obs IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> OBSERVE obs IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 464:
## Known stack suffix:
## PARAMS param_decls IN expr
## LR(1) items:
expr3 -> PARAMS param_decls IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> PARAMS param_decls IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> PARAMS param_decls IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 465:
## Known stack suffix:
## param_decl
## LR(1) items:
param_decls -> param_decl . [ IN ]
param_decls -> param_decl . SEMICOLON param_decls [ IN ]
## Transitions:
-- On SEMICOLON shift to state 466
## Reductions:
-- On IN
--   reduce production param_decls -> param_decl

State 466:
## Known stack suffix:
## param_decl SEMICOLON
## LR(1) items:
param_decls -> param_decl SEMICOLON . param_decls [ IN ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On param_decls shift to state 467
-- On param_decl shift to state 465
-- On ident shift to state 383
## Reductions:

State 467:
## Known stack suffix:
## param_decl SEMICOLON param_decls
## LR(1) items:
param_decls -> param_decl SEMICOLON param_decls . [ IN ]
## Transitions:
## Reductions:
-- On IN
--   reduce production param_decls -> param_decl SEMICOLON param_decls

State 468:
## Known stack suffix:
## PDIST ident LSQUARE exprs
## LR(1) items:
expr3 -> PDIST ident LSQUARE exprs . RSQUARE [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On RSQUARE shift to state 469
## Reductions:

State 469:
## Known stack suffix:
## PDIST ident LSQUARE exprs RSQUARE
## LR(1) items:
expr3 -> PDIST ident LSQUARE exprs RSQUARE . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> PDIST ident LSQUARE exprs RSQUARE
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> PDIST ident LSQUARE exprs RSQUARE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 470:
## Known stack suffix:
## PRAGMA string IN expr
## LR(1) items:
expr3 -> PRAGMA string IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> PRAGMA string IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> PRAGMA string IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 471:
## Known stack suffix:
## REWARD CASE expr
## LR(1) items:
expr3 -> REWARD CASE expr . OF rew_clauses IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On OF shift to state 472
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 472:
## Known stack suffix:
## REWARD CASE expr OF
## LR(1) items:
expr3 -> REWARD CASE expr OF . rew_clauses IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On HASH shift to state 334
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 342
-- On rew_clauses shift to state 473
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 473:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses
## LR(1) items:
expr3 -> REWARD CASE expr OF rew_clauses . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 474
## Reductions:

State 474:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses IN
## LR(1) items:
expr3 -> REWARD CASE expr OF rew_clauses IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses IN expr
## LR(1) items:
expr3 -> REWARD CASE expr OF rew_clauses IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> REWARD CASE expr OF rew_clauses IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> REWARD CASE expr OF rew_clauses IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 476:
## Known stack suffix:
## REWARD float
## LR(1) items:
expr3 -> REWARD float . IN expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On IN shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## REWARD float IN
## LR(1) items:
expr3 -> REWARD float IN . expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 478
## Reductions:

State 478:
## Known stack suffix:
## REWARD float IN expr
## LR(1) items:
expr3 -> REWARD float IN expr . [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MOD expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . AND expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . BAR expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND #
--   reduce production expr3 -> REWARD float IN expr
** Conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** End-of-stream conflict on TYPE TIMES THEN SEMICOLON RTUP RSQUARE RPAREN REWARD RETRACT RBRACE PRIVATE PRAGMA PLUSPLUS PLUS PARAM OF OBSERVE MOD MINUSMINUS MINUS LIDENT IN HASH EQUALSEQUALS ELSE DOT DIVIDE DECIDE DATA CONCAT COMMA COLON BAR AND
**   There is a tension between
**   (1) reducing production expr3 -> REWARD float IN expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 479:
## Known stack suffix:
## REWARD CASE expr
## LR(1) items:
decl -> REWARD CASE expr . OF rew_clauses [ # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On OF shift to state 480
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 480:
## Known stack suffix:
## REWARD CASE expr OF
## LR(1) items:
decl -> REWARD CASE expr OF . rew_clauses [ # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On HASH shift to state 334
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 342
-- On rew_clauses shift to state 481
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 481:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses
## LR(1) items:
decl -> REWARD CASE expr OF rew_clauses . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> REWARD CASE expr OF rew_clauses

State 482:
## Known stack suffix:
## REWARD float
## LR(1) items:
decl -> REWARD float . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> REWARD float

State 483:
## Known stack suffix:
## RETRACT
## LR(1) items:
decl -> RETRACT . longvar [ # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvar shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## RETRACT longvar
## LR(1) items:
decl -> RETRACT longvar . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> RETRACT longvar

State 485:
## Known stack suffix:
## PRIVATE
## LR(1) items:
decl -> PRIVATE . let_decl [ # ]
decl -> PRIVATE . decide_decl [ # ]
## Transitions:
-- On LIDENT shift to state 486
-- On DECIDE shift to state 509
-- On let_decl shift to state 515
-- On decide_decl shift to state 516
## Reductions:

State 486:
## Known stack suffix:
## LIDENT
## LR(1) items:
let_decl -> LIDENT . EQUALS expr [ # ]
let_decl -> LIDENT . COLON type_expr EQUALS expr [ # ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN EQUALS expr [ # ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN COLON type_expr EQUALS expr [ # ]
let_decl -> LIDENT . LIDENT EQUALS expr [ # ]
let_decl -> LIDENT . LIDENT COLON type_expr EQUALS expr [ # ]
## Transitions:
-- On LPAREN shift to state 487
-- On LIDENT shift to state 496
-- On EQUALS shift to state 503
-- On COLON shift to state 505
## Reductions:

State 487:
## Known stack suffix:
## LIDENT LPAREN
## LR(1) items:
let_decl -> LIDENT LPAREN . opt_vars RPAREN EQUALS expr [ # ]
let_decl -> LIDENT LPAREN . opt_vars RPAREN COLON type_expr EQUALS expr [ # ]
## Transitions:
-- On LIDENT shift to state 165
-- On vars shift to state 168
-- On opt_vars shift to state 488
## Reductions:
-- On RPAREN
--   reduce production opt_vars ->

State 488:
## Known stack suffix:
## LIDENT LPAREN opt_vars
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars . RPAREN EQUALS expr [ # ]
let_decl -> LIDENT LPAREN opt_vars . RPAREN COLON type_expr EQUALS expr [ # ]
## Transitions:
-- On RPAREN shift to state 489
## Reductions:

State 489:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN . EQUALS expr [ # ]
let_decl -> LIDENT LPAREN opt_vars RPAREN . COLON type_expr EQUALS expr [ # ]
## Transitions:
-- On EQUALS shift to state 490
-- On COLON shift to state 492
## Reductions:

State 490:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN EQUALS
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 491
## Reductions:

State 491:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT LPAREN opt_vars RPAREN EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 492:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON . type_expr EQUALS expr [ # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 493
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 493:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr . EQUALS expr [ # ]
## Transitions:
-- On EQUALS shift to state 494
## Reductions:

State 494:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 495
## Reductions:

State 495:
## Known stack suffix:
## LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 496:
## Known stack suffix:
## LIDENT LIDENT
## LR(1) items:
let_decl -> LIDENT LIDENT . EQUALS expr [ # ]
let_decl -> LIDENT LIDENT . COLON type_expr EQUALS expr [ # ]
## Transitions:
-- On EQUALS shift to state 497
-- On COLON shift to state 499
## Reductions:

State 497:
## Known stack suffix:
## LIDENT LIDENT EQUALS
## LR(1) items:
let_decl -> LIDENT LIDENT EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 498
## Reductions:

State 498:
## Known stack suffix:
## LIDENT LIDENT EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT LIDENT EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT LIDENT EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT LIDENT EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 499:
## Known stack suffix:
## LIDENT LIDENT COLON
## LR(1) items:
let_decl -> LIDENT LIDENT COLON . type_expr EQUALS expr [ # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 500
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 500:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr
## LR(1) items:
let_decl -> LIDENT LIDENT COLON type_expr . EQUALS expr [ # ]
## Transitions:
-- On EQUALS shift to state 501
## Reductions:

State 501:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT LIDENT COLON type_expr EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## LIDENT LIDENT COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT LIDENT COLON type_expr EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT LIDENT COLON type_expr EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT LIDENT COLON type_expr EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 503:
## Known stack suffix:
## LIDENT EQUALS
## LR(1) items:
let_decl -> LIDENT EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 504
## Reductions:

State 504:
## Known stack suffix:
## LIDENT EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 505:
## Known stack suffix:
## LIDENT COLON
## LR(1) items:
let_decl -> LIDENT COLON . type_expr EQUALS expr [ # ]
## Transitions:
-- On UIDENT shift to state 14
-- On SYMBOL shift to state 20
-- On LTUP shift to state 21
-- On LPAREN shift to state 22
-- On LIDENT shift to state 24
-- On INT shift to state 25
-- On FORALL shift to state 26
-- On BOOL shift to state 29
-- On ulongvar shift to state 30
-- On type_expr shift to state 506
-- On other_type_expr shift to state 36
-- On arrow_type_exprs shift to state 37
-- On arrow_type_expr shift to state 40
## Reductions:

State 506:
## Known stack suffix:
## LIDENT COLON type_expr
## LR(1) items:
let_decl -> LIDENT COLON type_expr . EQUALS expr [ # ]
## Transitions:
-- On EQUALS shift to state 507
## Reductions:

State 507:
## Known stack suffix:
## LIDENT COLON type_expr EQUALS
## LR(1) items:
let_decl -> LIDENT COLON type_expr EQUALS . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 508
## Reductions:

State 508:
## Known stack suffix:
## LIDENT COLON type_expr EQUALS expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
let_decl -> LIDENT COLON type_expr EQUALS expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production let_decl -> LIDENT COLON type_expr EQUALS expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production let_decl -> LIDENT COLON type_expr EQUALS expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 509:
## Known stack suffix:
## DECIDE
## LR(1) items:
decide_decl -> DECIDE . LIDENT values opt_given [ # ]
## Transitions:
-- On LIDENT shift to state 510
## Reductions:

State 510:
## Known stack suffix:
## DECIDE LIDENT
## LR(1) items:
decide_decl -> DECIDE LIDENT . values opt_given [ # ]
## Transitions:
-- On FROM shift to state 229
-- On values shift to state 511
## Reductions:
-- On GIVEN #
--   reduce production values ->
** End-of-stream conflict on GIVEN FROM
**   There is a tension between
**   (1) reducing production values ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 511:
## Known stack suffix:
## DECIDE LIDENT values
## LR(1) items:
decide_decl -> DECIDE LIDENT values . opt_given [ # ]
## Transitions:
-- On GIVEN shift to state 512
-- On opt_given shift to state 514
## Reductions:
-- On #
--   reduce production opt_given ->
** End-of-stream conflict on GIVEN
**   There is a tension between
**   (1) reducing production opt_given ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 512:
## Known stack suffix:
## GIVEN
## LR(1) items:
opt_given -> GIVEN . longvars [ # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvars shift to state 513
-- On longvar shift to state 307
## Reductions:

State 513:
## Known stack suffix:
## GIVEN longvars
## LR(1) items:
opt_given -> GIVEN longvars . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production opt_given -> GIVEN longvars

State 514:
## Known stack suffix:
## DECIDE LIDENT values opt_given
## LR(1) items:
decide_decl -> DECIDE LIDENT values opt_given . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decide_decl -> DECIDE LIDENT values opt_given

State 515:
## Known stack suffix:
## PRIVATE let_decl
## LR(1) items:
decl -> PRIVATE let_decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> PRIVATE let_decl

State 516:
## Known stack suffix:
## PRIVATE decide_decl
## LR(1) items:
decl -> PRIVATE decide_decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> PRIVATE decide_decl

State 517:
## Known stack suffix:
## PRAGMA
## LR(1) items:
decl -> PRAGMA . string [ # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string shift to state 518
## Reductions:

State 518:
## Known stack suffix:
## PRAGMA string
## LR(1) items:
decl -> PRAGMA string . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> PRAGMA string

State 519:
## Known stack suffix:
## PARAM
## LR(1) items:
decl -> PARAM . param_decl [ # ]
## Transitions:
-- On UIDENT shift to state 82
-- On LIDENT shift to state 83
-- On param_decl shift to state 520
-- On ident shift to state 521
## Reductions:

State 520:
## Known stack suffix:
## PARAM param_decl
## LR(1) items:
decl -> PARAM param_decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> PARAM param_decl

State 521:
## Known stack suffix:
## ident
## LR(1) items:
param_decl -> ident . EQUALS LSQUARE params RSQUARE [ # ]
param_decl -> ident . NATURAL [ # ]
## Transitions:
-- On NATURAL shift to state 522
-- On EQUALS shift to state 523
## Reductions:

State 522:
## Known stack suffix:
## ident NATURAL
## LR(1) items:
param_decl -> ident NATURAL . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production param_decl -> ident NATURAL

State 523:
## Known stack suffix:
## ident EQUALS
## LR(1) items:
param_decl -> ident EQUALS . LSQUARE params RSQUARE [ # ]
## Transitions:
-- On LSQUARE shift to state 524
## Reductions:

State 524:
## Known stack suffix:
## ident EQUALS LSQUARE
## LR(1) items:
param_decl -> ident EQUALS LSQUARE . params RSQUARE [ # ]
## Transitions:
-- On POSFLOAT shift to state 387
-- On params shift to state 525
## Reductions:

State 525:
## Known stack suffix:
## ident EQUALS LSQUARE params
## LR(1) items:
param_decl -> ident EQUALS LSQUARE params . RSQUARE [ # ]
## Transitions:
-- On RSQUARE shift to state 526
## Reductions:

State 526:
## Known stack suffix:
## ident EQUALS LSQUARE params RSQUARE
## LR(1) items:
param_decl -> ident EQUALS LSQUARE params RSQUARE . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production param_decl -> ident EQUALS LSQUARE params RSQUARE

State 527:
## Known stack suffix:
## OBSERVE
## LR(1) items:
decl -> OBSERVE . obs [ # ]
## Transitions:
-- On UIDENT shift to state 108
-- On NOT shift to state 112
-- On LIDENT shift to state 110
-- On obs shift to state 528
-- On longvar shift to state 394
## Reductions:

State 528:
## Known stack suffix:
## OBSERVE obs
## LR(1) items:
decl -> OBSERVE obs . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> OBSERVE obs

State 529:
## Known stack suffix:
## DATA
## LR(1) items:
decl -> DATA . UIDENT opt_paren_type_args EQUALS tycon_expr [ # ]
## Transitions:
-- On UIDENT shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## DATA UIDENT
## LR(1) items:
decl -> DATA UIDENT . opt_paren_type_args EQUALS tycon_expr [ # ]
## Transitions:
-- On LSQUARE shift to state 3
-- On LIDENT shift to state 4
-- On type_args shift to state 5
-- On opt_type_args shift to state 11
-- On opt_paren_type_args shift to state 531
-- On new_type_var shift to state 8
## Reductions:
-- On EQUALS
--   reduce production opt_type_args ->

State 531:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args . EQUALS tycon_expr [ # ]
## Transitions:
-- On EQUALS shift to state 532
## Reductions:

State 532:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args EQUALS
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args EQUALS . tycon_expr [ # ]
## Transitions:
-- On UIDENT shift to state 207
-- On tycon_item shift to state 533
-- On tycon_expr shift to state 536
## Reductions:

State 533:
## Known stack suffix:
## tycon_item
## LR(1) items:
tycon_expr -> tycon_item . [ # ]
tycon_expr -> tycon_item . BAR tycon_expr [ # ]
## Transitions:
-- On BAR shift to state 534
## Reductions:
-- On #
--   reduce production tycon_expr -> tycon_item
** End-of-stream conflict on BAR
**   There is a tension between
**   (1) reducing production tycon_expr -> tycon_item
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 534:
## Known stack suffix:
## tycon_item BAR
## LR(1) items:
tycon_expr -> tycon_item BAR . tycon_expr [ # ]
## Transitions:
-- On UIDENT shift to state 207
-- On tycon_item shift to state 533
-- On tycon_expr shift to state 535
## Reductions:

State 535:
## Known stack suffix:
## tycon_item BAR tycon_expr
## LR(1) items:
tycon_expr -> tycon_item BAR tycon_expr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production tycon_expr -> tycon_item BAR tycon_expr

State 536:
## Known stack suffix:
## DATA UIDENT opt_paren_type_args EQUALS tycon_expr
## LR(1) items:
decl -> DATA UIDENT opt_paren_type_args EQUALS tycon_expr . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> DATA UIDENT opt_paren_type_args EQUALS tycon_expr

State 537:
## Known stack suffix:
## let_decl
## LR(1) items:
decl -> let_decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> let_decl

State 538:
## Known stack suffix:
## decl
## LR(1) items:
decl' -> decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept decl

State 539:
## Known stack suffix:
## decide_decl
## LR(1) items:
decl -> decide_decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production decl -> decide_decl

State 540:
## Known stack suffix:
##
## LR(1) items:
expr' -> . expr [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 541
## Reductions:

State 541:
## Known stack suffix:
## expr
## LR(1) items:
expr' -> expr . [ # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   accept expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) accepting expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 542:
## Known stack suffix:
##
## LR(1) items:
top' -> . top [ # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TYPE shift to state 1
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 543
-- On RETRACT shift to state 483
-- On QUOTE shift to state 81
-- On PRIVATE shift to state 485
-- On PRAGMA shift to state 549
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On PARAM shift to state 519
-- On OP shift to state 94
-- On OBSERVE shift to state 551
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 553
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 554
-- On DATA shift to state 529
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On top shift to state 559
-- On string shift to state 242
-- On longvar shift to state 243
-- On let_decl shift to state 537
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 560
-- On decl shift to state 561
-- On decide_decl shift to state 539
## Reductions:

State 543:
## Known stack suffix:
## REWARD
## LR(1) items:
decl -> REWARD . float [ # ]
decl -> REWARD . CASE expr OF rew_clauses [ # ]
expr3 -> REWARD . float IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr3 -> REWARD . CASE expr OF rew_clauses IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On POSFLOAT shift to state 65
-- On MINUS shift to state 66
-- On CASE shift to state 544
-- On float shift to state 548
## Reductions:

State 544:
## Known stack suffix:
## REWARD CASE
## LR(1) items:
decl -> REWARD CASE . expr OF rew_clauses [ # ]
expr3 -> REWARD CASE . expr OF rew_clauses IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On UNIFORM shift to state 69
-- On UIDENT shift to state 71
-- On TRUE shift to state 77
-- On STRING shift to state 78
-- On REWARD shift to state 79
-- On QUOTE shift to state 81
-- On PRAGMA shift to state 85
-- On PDIST shift to state 88
-- On PARAMS shift to state 91
-- On OP shift to state 94
-- On OBSERVE shift to state 107
-- On NOT shift to state 116
-- On NATURAL shift to state 117
-- On MINUS shift to state 118
-- On LTUP shift to state 121
-- On LPAREN shift to state 122
-- On LIDENT shift to state 73
-- On LET shift to state 123
-- On LBRACE shift to state 172
-- On LAMBDA shift to state 180
-- On IF shift to state 185
-- On FLIP shift to state 186
-- On FIX shift to state 188
-- On FALSE shift to state 194
-- On ETYPE shift to state 195
-- On ERROR shift to state 201
-- On EDATA shift to state 203
-- On DIST shift to state 220
-- On DISCOUNT shift to state 224
-- On DECIDE shift to state 227
-- On CASE shift to state 239
-- On ulongvar shift to state 240
-- On string shift to state 242
-- On longvar shift to state 243
-- On integer shift to state 244
-- On expr4 shift to state 245
-- On expr3 shift to state 246
-- On expr2 shift to state 247
-- On expr1 shift to state 250
-- On expr shift to state 545
## Reductions:

State 545:
## Known stack suffix:
## REWARD CASE expr
## LR(1) items:
decl -> REWARD CASE expr . OF rew_clauses [ # ]
expr3 -> REWARD CASE expr . OF rew_clauses IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS OF MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On OF shift to state 546
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:

State 546:
## Known stack suffix:
## REWARD CASE expr OF
## LR(1) items:
decl -> REWARD CASE expr OF . rew_clauses [ # ]
expr3 -> REWARD CASE expr OF . rew_clauses IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 14
-- On TRUE shift to state 124
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On NATURAL shift to state 117
-- On MINUS shift to state 125
-- On LTUP shift to state 126
-- On LIDENT shift to state 129
-- On LBRACE shift to state 130
-- On HASH shift to state 334
-- On FALSE shift to state 136
-- On ANY shift to state 137
-- On ulongvar shift to state 138
-- On string shift to state 140
-- On rew_clauses1 shift to state 342
-- On rew_clauses shift to state 547
-- On rew_clause shift to state 336
-- On pat shift to state 339
-- On integer shift to state 148
## Reductions:

State 547:
## Known stack suffix:
## REWARD CASE expr OF rew_clauses
## LR(1) items:
decl -> REWARD CASE expr OF rew_clauses . [ # ]
expr3 -> REWARD CASE expr OF rew_clauses . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On IN shift to state 474
## Reductions:
-- On #
--   reduce production decl -> REWARD CASE expr OF rew_clauses
** End-of-stream conflict on IN
**   There is a tension between
**   (1) reducing production decl -> REWARD CASE expr OF rew_clauses
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 548:
## Known stack suffix:
## REWARD float
## LR(1) items:
decl -> REWARD float . [ # ]
expr3 -> REWARD float . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On IN shift to state 477
## Reductions:
-- On #
--   reduce production decl -> REWARD float
** End-of-stream conflict on IN
**   There is a tension between
**   (1) reducing production decl -> REWARD float
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 549:
## Known stack suffix:
## PRAGMA
## LR(1) items:
decl -> PRAGMA . string [ # ]
expr3 -> PRAGMA . string IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On STRING shift to state 78
-- On QUOTE shift to state 81
-- On string shift to state 550
## Reductions:

State 550:
## Known stack suffix:
## PRAGMA string
## LR(1) items:
decl -> PRAGMA string . [ # ]
expr3 -> PRAGMA string . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On IN shift to state 87
## Reductions:
-- On #
--   reduce production decl -> PRAGMA string
** End-of-stream conflict on IN
**   There is a tension between
**   (1) reducing production decl -> PRAGMA string
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 551:
## Known stack suffix:
## OBSERVE
## LR(1) items:
decl -> OBSERVE . obs [ # ]
expr3 -> OBSERVE . obs IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On UIDENT shift to state 108
-- On NOT shift to state 112
-- On LIDENT shift to state 110
-- On obs shift to state 552
-- On longvar shift to state 394
## Reductions:

State 552:
## Known stack suffix:
## OBSERVE obs
## LR(1) items:
decl -> OBSERVE obs . [ # ]
expr3 -> OBSERVE obs . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On IN shift to state 115
## Reductions:
-- On #
--   reduce production decl -> OBSERVE obs
** End-of-stream conflict on IN
**   There is a tension between
**   (1) reducing production decl -> OBSERVE obs
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 553:
## Known stack suffix:
## LIDENT
## LR(1) items:
let_decl -> LIDENT . EQUALS expr [ # ]
let_decl -> LIDENT . COLON type_expr EQUALS expr [ # ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN EQUALS expr [ # ]
let_decl -> LIDENT . LPAREN opt_vars RPAREN COLON type_expr EQUALS expr [ # ]
let_decl -> LIDENT . LIDENT EQUALS expr [ # ]
let_decl -> LIDENT . LIDENT COLON type_expr EQUALS expr [ # ]
longvar -> LIDENT . [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
longvar -> LIDENT . DOT longvar [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
ulongvar -> LIDENT . DOT ulongvar [ UNIFORM UIDENT TRUE TIMES STRING REWARD QUOTE PRAGMA PLUSPLUS PLUS PDIST PARAMS OP OBSERVE NOT NATURAL MOD MINUSMINUS MINUS LTUP LPAREN LIDENT LET LBRACE LAMBDA IF FLIP FIX FALSE ETYPE ERROR EQUALSEQUALS EDATA DOT DIVIDE DIST DISCOUNT DECIDE CONCAT COLON CASE BAR AND # ]
## Transitions:
-- On LPAREN shift to state 487
-- On LIDENT shift to state 496
-- On EQUALS shift to state 503
-- On DOT shift to state 74
-- On COLON shift to state 505
## Reductions:
-- On TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND #
--   reduce production longvar -> LIDENT
** Conflict on LPAREN DOT COLON
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS LPAREN LIDENT EQUALSEQUALS EQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production longvar -> LIDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 554:
## Known stack suffix:
## DECIDE
## LR(1) items:
decide_decl -> DECIDE . LIDENT values opt_given [ # ]
expr3 -> DECIDE . LIDENT values GIVEN longvars IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr3 -> DECIDE . LIDENT values IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On LIDENT shift to state 555
## Reductions:

State 555:
## Known stack suffix:
## DECIDE LIDENT
## LR(1) items:
decide_decl -> DECIDE LIDENT . values opt_given [ # ]
expr3 -> DECIDE LIDENT . values GIVEN longvars IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr3 -> DECIDE LIDENT . values IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On FROM shift to state 229
-- On values shift to state 556
## Reductions:
-- On IN GIVEN #
--   reduce production values ->
** End-of-stream conflict on IN GIVEN FROM
**   There is a tension between
**   (1) reducing production values ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 556:
## Known stack suffix:
## DECIDE LIDENT values
## LR(1) items:
decide_decl -> DECIDE LIDENT values . opt_given [ # ]
expr3 -> DECIDE LIDENT values . GIVEN longvars IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr3 -> DECIDE LIDENT values . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
## Transitions:
-- On IN shift to state 238
-- On GIVEN shift to state 557
-- On opt_given shift to state 514
## Reductions:
-- On #
--   reduce production opt_given ->
** End-of-stream conflict on IN GIVEN
**   There is a tension between
**   (1) reducing production opt_given ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 557:
## Known stack suffix:
## DECIDE LIDENT values GIVEN
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN . longvars IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
opt_given -> GIVEN . longvars [ # ]
## Transitions:
-- On UIDENT shift to state 108
-- On LIDENT shift to state 110
-- On longvars shift to state 558
-- On longvar shift to state 307
## Reductions:

State 558:
## Known stack suffix:
## DECIDE LIDENT values GIVEN longvars
## LR(1) items:
expr3 -> DECIDE LIDENT values GIVEN longvars . IN expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
opt_given -> GIVEN longvars . [ # ]
## Transitions:
-- On IN shift to state 305
## Reductions:
-- On #
--   reduce production opt_given -> GIVEN longvars
** End-of-stream conflict on IN
**   There is a tension between
**   (1) reducing production opt_given -> GIVEN longvars
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 559:
## Known stack suffix:
## top
## LR(1) items:
top' -> top . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept top

State 560:
## Known stack suffix:
## expr
## LR(1) items:
expr4 -> expr . PLUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . TIMES expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DIVIDE expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MOD expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . CONCAT expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . PLUSPLUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . MINUSMINUS [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . EQUALSEQUALS expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . AND expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . BAR expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . DOT LIDENT [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
expr4 -> expr . COLON type_expr [ TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND # ]
top -> expr . [ # ]
## Transitions:
-- On TIMES shift to state 252
-- On PLUSPLUS shift to state 254
-- On PLUS shift to state 258
-- On MOD shift to state 260
-- On MINUSMINUS shift to state 255
-- On MINUS shift to state 268
-- On EQUALSEQUALS shift to state 256
-- On DOT shift to state 262
-- On DIVIDE shift to state 266
-- On CONCAT shift to state 270
-- On COLON shift to state 264
-- On BAR shift to state 272
-- On AND shift to state 274
## Reductions:
-- On #
--   reduce production top -> expr
** End-of-stream conflict on TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
**   There is a tension between
**   (1) reducing production top -> expr
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 561:
## Known stack suffix:
## decl
## LR(1) items:
top -> decl . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production top -> decl

