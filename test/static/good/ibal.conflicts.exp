
** Conflict (shift/reduce) in state 553.
** Tokens involved: LPAREN DOT COLON
** The following explanations concentrate on token LPAREN.
** This state is reached from top after reading:

LIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

top 
(?)

** In state 553, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

decl 
let_decl 
LIDENT . LPAREN opt_vars RPAREN EQUALS expr 

** In state 553, looking ahead at LPAREN, reducing production
** longvar -> LIDENT
** is permitted because of the following sub-derivation:

expr 
expr2 
expr2 LPAREN RPAREN // lookahead token appears
longvar // lookahead token is inherited
LIDENT . 

** Conflict (shift/reduce) in state 478.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

REWARD float IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 478, looking ahead at TIMES, reducing production
** expr3 -> REWARD float IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
REWARD float IN expr . 

** In state 478, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
REWARD float IN expr 
                expr4 
                expr . TIMES expr 

** Conflict (shift/reduce) in state 475.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

REWARD CASE expr OF rew_clauses IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 475, looking ahead at TIMES, reducing production
** expr3 -> REWARD CASE expr OF rew_clauses IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
REWARD CASE expr OF rew_clauses IN expr . 

** In state 475, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
REWARD CASE expr OF rew_clauses IN expr 
                                   expr4 
                                   expr . TIMES expr 

** Conflict (shift/reduce) in state 470.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

PRAGMA string IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 470, looking ahead at TIMES, reducing production
** expr3 -> PRAGMA string IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
PRAGMA string IN expr . 

** In state 470, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
PRAGMA string IN expr 
                 expr4 
                 expr . TIMES expr 

** Conflict (shift/reduce) in state 464.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

PARAMS param_decls IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 464, looking ahead at TIMES, reducing production
** expr3 -> PARAMS param_decls IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
PARAMS param_decls IN expr . 

** In state 464, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
PARAMS param_decls IN expr 
                      expr4 
                      expr . TIMES expr 

** Conflict (shift/reduce) in state 463.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

OBSERVE obs IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 463, looking ahead at TIMES, reducing production
** expr3 -> OBSERVE obs IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
OBSERVE obs IN expr . 

** In state 463, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
OBSERVE obs IN expr 
               expr4 
               expr . TIMES expr 

** Conflict (shift/reduce) in state 462.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

NOT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 462, looking ahead at EQUALSEQUALS, reducing production
** expr3 -> NOT expr
** is permitted because of the following sub-derivation:

expr4 
expr EQUALSEQUALS expr // lookahead token appears
expr3 // lookahead token is inherited
NOT expr . 

** In state 462, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr3 
NOT expr 
    expr4 
    expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 457.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

MINUS expr_nonint DIVIDE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
MINUS expr_nonint 
      expr_nonint4 
      (?)

** In state 457, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr_nonint DIVIDE expr 
                   expr4 
                   expr . EQUALSEQUALS expr 

** In state 457, looking ahead at EQUALSEQUALS, reducing production
** expr_nonint4 -> expr_nonint DIVIDE expr
** is permitted because of the following sub-derivation:

expr_nonint EQUALSEQUALS expr // lookahead token appears
expr_nonint4 // lookahead token is inherited
expr_nonint DIVIDE expr . 

** Conflict (shift/reduce) in state 453.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

MINUS expr_nonint EQUALSEQUALS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
MINUS expr_nonint 
      expr_nonint4 
      (?)

** In state 453, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr_nonint EQUALSEQUALS expr 
                         expr4 
                         expr . TIMES expr 

** In state 453, looking ahead at TIMES, reducing production
** expr_nonint4 -> expr_nonint EQUALSEQUALS expr
** is permitted because of the following sub-derivation:

expr_nonint TIMES expr // lookahead token appears
expr_nonint4 // lookahead token is inherited
expr_nonint EQUALSEQUALS expr . 

** Conflict (shift/reduce) in state 450.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

MINUS expr_nonint MOD expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
MINUS expr_nonint 
      expr_nonint4 
      (?)

** In state 450, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr_nonint MOD expr 
                expr4 
                expr . EQUALSEQUALS expr 

** In state 450, looking ahead at EQUALSEQUALS, reducing production
** expr_nonint4 -> expr_nonint MOD expr
** is permitted because of the following sub-derivation:

expr_nonint EQUALSEQUALS expr // lookahead token appears
expr_nonint4 // lookahead token is inherited
expr_nonint MOD expr . 

** Conflict (shift/reduce) in state 447.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

MINUS expr_nonint TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
MINUS expr_nonint 
      expr_nonint4 
      (?)

** In state 447, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr_nonint TIMES expr 
                  expr4 
                  expr . EQUALSEQUALS expr 

** In state 447, looking ahead at EQUALSEQUALS, reducing production
** expr_nonint4 -> expr_nonint TIMES expr
** is permitted because of the following sub-derivation:

expr_nonint EQUALSEQUALS expr // lookahead token appears
expr_nonint4 // lookahead token is inherited
expr_nonint TIMES expr . 

** Conflict (shift/reduce) in state 445.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

MINUS expr_nonint

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 445, looking ahead at EQUALSEQUALS, reducing production
** expr3 -> MINUS expr_nonint
** is permitted because of the following sub-derivation:

expr4 
expr EQUALSEQUALS expr // lookahead token appears
expr3 // lookahead token is inherited
MINUS expr_nonint . 

** In state 445, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr3 
MINUS expr_nonint 
      expr_nonint4 
      expr_nonint . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 432.
** Tokens involved: DOT COLON
** The following explanations concentrate on token DOT.
** This state is reached from expr after reading:

LTUP LIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
LTUP exprs RTUP 
     expr 
     (?)

** In state 432, looking ahead at DOT, reducing production
** longvar -> LIDENT
** is permitted because of the following sub-derivation:

expr4 
expr DOT LIDENT // lookahead token appears
expr2 // lookahead token is inherited
longvar // lookahead token is inherited
LIDENT . 

** In state 432, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

expr2 
longvar 
LIDENT . DOT longvar 

** Conflict (shift/reduce) in state 430.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LET pat COLON type_expr EQUALS expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 430, looking ahead at TIMES, reducing production
** expr3 -> LET pat COLON type_expr EQUALS expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LET pat COLON type_expr EQUALS expr IN expr . 

** In state 430, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LET pat COLON type_expr EQUALS expr IN expr 
                                       expr4 
                                       expr . TIMES expr 

** Conflict (shift/reduce) in state 424.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LET pat EQUALS expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 424, looking ahead at TIMES, reducing production
** expr3 -> LET pat EQUALS expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LET pat EQUALS expr IN expr . 

** In state 424, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LET pat EQUALS expr IN expr 
                       expr4 
                       expr . TIMES expr 

** Conflict (shift/reduce) in state 419.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 419, looking ahead at TIMES, reducing production
** expr3 -> LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr . 

** In state 419, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LET LIDENT LPAREN opt_vars RPAREN COLON type_expr EQUALS expr IN expr 
                                                                 expr4 
                                                                 expr . TIMES expr 

** Conflict (shift/reduce) in state 413.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 413, looking ahead at TIMES, reducing production
** expr3 -> LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr . 

** In state 413, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LET LIDENT LPAREN opt_vars RPAREN EQUALS expr IN expr 
                                                 expr4 
                                                 expr . TIMES expr 

** Conflict (shift/reduce) in state 331.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LAMBDA LIDENT MAPSTO expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 331, looking ahead at TIMES, reducing production
** expr3 -> LAMBDA LIDENT MAPSTO expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LAMBDA LIDENT MAPSTO expr . 

** In state 331, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LAMBDA LIDENT MAPSTO expr 
                     expr4 
                     expr . TIMES expr 

** Conflict (shift/reduce) in state 328.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

LAMBDA LPAREN opt_vars RPAREN MAPSTO expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 328, looking ahead at TIMES, reducing production
** expr3 -> LAMBDA LPAREN opt_vars RPAREN MAPSTO expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
LAMBDA LPAREN opt_vars RPAREN MAPSTO expr . 

** In state 328, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
LAMBDA LPAREN opt_vars RPAREN MAPSTO expr 
                                     expr4 
                                     expr . TIMES expr 

** Conflict (shift/reduce) in state 327.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

IF expr THEN expr ELSE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 327, looking ahead at TIMES, reducing production
** expr3 -> IF expr THEN expr ELSE expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
IF expr THEN expr ELSE expr . 

** In state 327, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
IF expr THEN expr ELSE expr 
                       expr4 
                       expr . TIMES expr 

** Conflict (shift/reduce) in state 322.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

FIX LIDENT LIDENT MAPSTO expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 322, looking ahead at TIMES, reducing production
** expr3 -> FIX LIDENT LIDENT MAPSTO expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
FIX LIDENT LIDENT MAPSTO expr . 

** In state 322, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
FIX LIDENT LIDENT MAPSTO expr 
                         expr4 
                         expr . TIMES expr 

** Conflict (shift/reduce) in state 319.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 319, looking ahead at TIMES, reducing production
** expr3 -> FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr . 

** In state 319, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
FIX LIDENT LPAREN opt_vars RPAREN MAPSTO expr 
                                         expr4 
                                         expr . TIMES expr 

** Conflict (shift/reduce) in state 318.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 318, looking ahead at TIMES, reducing production
** expr3 -> ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr . 

** In state 318, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
ETYPE UIDENT opt_paren_type_args EQUALS type_expr IN expr 
                                                     expr4 
                                                     expr . TIMES expr 

** Conflict (shift/reduce) in state 317.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 317, looking ahead at TIMES, reducing production
** expr3 -> EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr . 

** In state 317, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
EDATA UIDENT opt_paren_type_args EQUALS tycon_expr IN expr 
                                                      expr4 
                                                      expr . TIMES expr 

** Conflict (shift/reduce) in state 310.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

DISCOUNT POSFLOAT IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 310, looking ahead at TIMES, reducing production
** expr3 -> DISCOUNT POSFLOAT IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
DISCOUNT POSFLOAT IN expr . 

** In state 310, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
DISCOUNT POSFLOAT IN expr 
                     expr4 
                     expr . TIMES expr 

** Conflict (shift/reduce) in state 306.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

DECIDE LIDENT values GIVEN longvars IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 306, looking ahead at TIMES, reducing production
** expr3 -> DECIDE LIDENT values GIVEN longvars IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
DECIDE LIDENT values GIVEN longvars IN expr . 

** In state 306, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
DECIDE LIDENT values GIVEN longvars IN expr 
                                       expr4 
                                       expr . TIMES expr 

** Conflict (shift/reduce) in state 302.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

DECIDE LIDENT values IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 302, looking ahead at TIMES, reducing production
** expr3 -> DECIDE LIDENT values IN expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
DECIDE LIDENT values IN expr . 

** In state 302, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
DECIDE LIDENT values IN expr 
                        expr4 
                        expr . TIMES expr 

** Conflict (shift/reduce) in state 297.
** Token involved: HASH
** This state is reached from expr after reading:

CASE expr OF pat COLON CASE expr OF clause

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
CASE expr OF clauses 
             clauses1 
             (?)

** In state 297, looking ahead at HASH, reducing production
** clauses1 -> clause
** is permitted because of the following sub-derivation:

clause HASH clauses1 // lookahead token appears
pat COLON expr // lookahead token is inherited
          expr3 // lookahead token is inherited
          CASE expr OF clauses // lookahead token is inherited
                       clauses1 // lookahead token is inherited
                       clause . 

** In state 297, looking ahead at HASH, shifting is permitted
** because of the following sub-derivation:

clause 
pat COLON expr 
          expr3 
          CASE expr OF clauses 
                       clauses1 
                       clause . HASH clauses1 

** Conflict (shift/reduce) in state 295.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

CASE expr OF pat COLON expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 295, looking ahead at TIMES, reducing production
** clause -> pat COLON expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
CASE expr OF clauses // lookahead token is inherited
             clauses1 // lookahead token is inherited
             clause // lookahead token is inherited
             pat COLON expr . 

** In state 295, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
CASE expr OF clauses 
             clauses1 
             clause 
             pat COLON expr 
                       expr4 
                       expr . TIMES expr 

** Conflict (shift/reduce) in state 289.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

ulongvar expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 289, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr3 
ulongvar opt_paren_exprs 
         expr 
         expr4 
         expr . TIMES expr 

** In state 289, looking ahead at TIMES, reducing production
** opt_paren_exprs -> expr
** is permitted because of the following sub-derivation:

expr4 
expr TIMES expr // lookahead token appears
expr3 // lookahead token is inherited
ulongvar opt_paren_exprs // lookahead token is inherited
         expr . 

** Conflict (shift/reduce) in state 275.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr AND expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 275, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr AND expr 
         expr4 
         expr . EQUALSEQUALS expr 

** In state 275, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr AND expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr AND expr . 

** Conflict (shift/reduce) in state 273.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr BAR expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 273, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr BAR expr 
         expr4 
         expr . EQUALSEQUALS expr 

** In state 273, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr BAR expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr BAR expr . 

** Conflict (shift/reduce) in state 271.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr CONCAT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 271, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr CONCAT expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr CONCAT expr . 

** In state 271, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr CONCAT expr 
            expr4 
            expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 269.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 269, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr MINUS expr . 

** In state 269, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr MINUS expr 
           expr4 
           expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 267.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr DIVIDE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 267, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr DIVIDE expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr DIVIDE expr . 

** In state 267, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr DIVIDE expr 
            expr4 
            expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 261.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr MOD expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 261, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr MOD expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr MOD expr . 

** In state 261, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr MOD expr 
         expr4 
         expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 259.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 259, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr PLUS expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr PLUS expr . 

** In state 259, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr PLUS expr 
          expr4 
          expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 257.
** Tokens involved: TIMES PLUSPLUS PLUS MOD MINUSMINUS MINUS EQUALSEQUALS DOT DIVIDE CONCAT COLON BAR AND
** The following explanations concentrate on token TIMES.
** This state is reached from expr after reading:

expr EQUALSEQUALS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 257, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr EQUALSEQUALS expr 
                  expr4 
                  expr . TIMES expr 

** In state 257, looking ahead at TIMES, reducing production
** expr4 -> expr EQUALSEQUALS expr
** is permitted because of the following sub-derivation:

expr TIMES expr // lookahead token appears
expr4 // lookahead token is inherited
expr EQUALSEQUALS expr . 

** Conflict (shift/reduce) in state 253.
** Tokens involved: EQUALSEQUALS DOT COLON
** The following explanations concentrate on token EQUALSEQUALS.
** This state is reached from expr after reading:

expr TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 253, looking ahead at EQUALSEQUALS, reducing production
** expr4 -> expr TIMES expr
** is permitted because of the following sub-derivation:

expr EQUALSEQUALS expr // lookahead token appears
expr4 // lookahead token is inherited
expr TIMES expr . 

** In state 253, looking ahead at EQUALSEQUALS, shifting is permitted
** because of the following sub-derivation:

expr TIMES expr 
           expr4 
           expr . EQUALSEQUALS expr 

** Conflict (shift/reduce) in state 240.
** Tokens involved: REWARD PRAGMA OBSERVE MINUS LIDENT DECIDE
** The following explanations concentrate on token MINUS.
** This state is reached from expr after reading:

ulongvar

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 240, looking ahead at MINUS, shifting is permitted
** because of the following sub-derivation:

expr3 
ulongvar opt_paren_exprs 
         expr 
         expr3 
         . MINUS expr_nonint 

** In state 240, looking ahead at MINUS, reducing production
** opt_paren_exprs ->
** is permitted because of the following sub-derivation:

expr4 
expr MINUS expr // lookahead token appears
expr3 // lookahead token is inherited
ulongvar opt_paren_exprs // lookahead token is inherited
         . 

** Conflict (shift/reduce) in state 207.
** Token involved: LIDENT
** This state is reached from expr after reading:

LBRACE DATA UIDENT opt_paren_type_args EQUALS UIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
LBRACE opt_decls RBRACE 
       decls 
       (?)

** In state 207, looking ahead at LIDENT, reducing production
** opt_paren_type_exprs ->
** is permitted because of the following sub-derivation:

decl opt_semicolon decls // lookahead token appears because opt_semicolon can vanish and decls can begin with LIDENT
DATA UIDENT opt_paren_type_args EQUALS tycon_expr // lookahead token is inherited
                                       tycon_item // lookahead token is inherited
                                       UIDENT opt_paren_type_exprs // lookahead token is inherited
                                              . 

** In state 207, looking ahead at LIDENT, shifting is permitted
** because of the following sub-derivation:

decl opt_semicolon 
DATA UIDENT opt_paren_type_args EQUALS tycon_expr 
                                       tycon_item 
                                       UIDENT opt_paren_type_exprs 
                                              type_expr 
                                              other_type_expr 
                                              . LIDENT 

** Conflict (shift/reduce) in state 138.
** Token involved: LIDENT
** This state is reached from expr after reading:

LBRACE OBSERVE longvar EQUALS ulongvar

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
LBRACE opt_decls RBRACE 
       decls 
       (?)

** In state 138, looking ahead at LIDENT, reducing production
** opt_paren_pats ->
** is permitted because of the following sub-derivation:

decl opt_semicolon decls // lookahead token appears because opt_semicolon can vanish and decls can begin with LIDENT
OBSERVE obs // lookahead token is inherited
        longvar EQUALS pat // lookahead token is inherited
                       ulongvar opt_paren_pats // lookahead token is inherited
                                . 

** In state 138, looking ahead at LIDENT, shifting is permitted
** because of the following sub-derivation:

decl opt_semicolon 
OBSERVE obs 
        longvar EQUALS pat 
                       ulongvar opt_paren_pats 
                                pat 
                                . LIDENT 

** Conflict (shift/reduce) in state 73.
** Token involved: DOT
** This state is reached from expr after reading:

LIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 73, looking ahead at DOT, reducing production
** longvar -> LIDENT
** is permitted because of the following sub-derivation:

expr4 
expr DOT LIDENT // lookahead token appears
expr2 // lookahead token is inherited
longvar // lookahead token is inherited
LIDENT . 

** In state 73, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

expr2 
longvar 
LIDENT . DOT longvar 

** Conflict (shift/reduce) in state 71.
** Token involved: DOT
** This state is reached from expr after reading:

UIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
(?)

** In state 71, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

expr2 
longvar 
UIDENT . DOT longvar 

** In state 71, looking ahead at DOT, reducing production
** ulongvar -> UIDENT
** is permitted because of the following sub-derivation:

expr4 
expr DOT LIDENT // lookahead token appears
expr3 // lookahead token is inherited
ulongvar opt_paren_exprs // lookahead token is inherited because opt_paren_exprs can vanish
UIDENT . 

** Conflict (shift/reduce) in state 33.
** Token involved: COMMA
** This state is reached from decl after reading:

LIDENT COLON LTUP ulongvar type_expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

decl 
let_decl 
LIDENT COLON type_expr EQUALS expr 
             other_type_expr 
             LTUP type_exprs RTUP 
                  (?)

** In state 33, looking ahead at COMMA, reducing production
** type_exprs -> type_expr
** is permitted because of the following sub-derivation:

type_expr COMMA type_exprs // lookahead token appears
other_type_expr // lookahead token is inherited
ulongvar opt_sqparen_type_exprs // lookahead token is inherited
         opt_type_exprs // lookahead token is inherited
         type_exprs // lookahead token is inherited
         type_expr . 

** In state 33, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

type_expr 
other_type_expr 
ulongvar opt_sqparen_type_exprs 
         opt_type_exprs 
         type_exprs 
         type_expr . COMMA type_exprs 

** Conflict (shift/reduce) in state 30.
** Token involved: LIDENT
** This state is reached from expr after reading:

LBRACE TYPE UIDENT opt_paren_type_args EQUALS ulongvar

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr3 
LBRACE opt_decls RBRACE 
       decls 
       (?)

** In state 30, looking ahead at LIDENT, reducing production
** opt_type_exprs ->
** is permitted because of the following sub-derivation:

decl opt_semicolon decls // lookahead token appears because opt_semicolon can vanish and decls can begin with LIDENT
TYPE UIDENT opt_paren_type_args EQUALS type_expr // lookahead token is inherited
                                       other_type_expr // lookahead token is inherited
                                       ulongvar opt_sqparen_type_exprs // lookahead token is inherited
                                                opt_type_exprs // lookahead token is inherited
                                                . 

** In state 30, looking ahead at LIDENT, shifting is permitted
** because of the following sub-derivation:

decl opt_semicolon 
TYPE UIDENT opt_paren_type_args EQUALS type_expr 
                                       other_type_expr 
                                       ulongvar opt_sqparen_type_exprs 
                                                opt_type_exprs 
                                                type_exprs 
                                                type_expr 
                                                other_type_expr 
                                                . LIDENT 

** Conflict (shift/reduce) in state 24.
** Token involved: DOT
** This state is reached from expr after reading:

expr COLON LIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 24, looking ahead at DOT, reducing production
** other_type_expr -> LIDENT
** is permitted because of the following sub-derivation:

expr DOT LIDENT // lookahead token appears
expr4 // lookahead token is inherited
expr COLON type_expr // lookahead token is inherited
           other_type_expr // lookahead token is inherited
           LIDENT . 

** In state 24, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

expr COLON type_expr 
           other_type_expr 
           ulongvar opt_sqparen_type_exprs 
           LIDENT . DOT ulongvar 

** Conflict (shift/reduce) in state 14.
** Token involved: DOT
** This state is reached from expr after reading:

expr COLON UIDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

expr 
expr4 
(?)

** In state 14, looking ahead at DOT, reducing production
** ulongvar -> UIDENT
** is permitted because of the following sub-derivation:

expr DOT LIDENT // lookahead token appears
expr4 // lookahead token is inherited
expr COLON type_expr // lookahead token is inherited
           other_type_expr // lookahead token is inherited
           ulongvar opt_sqparen_type_exprs // lookahead token is inherited because opt_sqparen_type_exprs can vanish
           UIDENT . 

** In state 14, looking ahead at DOT, shifting is permitted
** because of the following sub-derivation:

expr COLON type_expr 
           other_type_expr 
           ulongvar opt_sqparen_type_exprs 
           UIDENT . DOT ulongvar 
