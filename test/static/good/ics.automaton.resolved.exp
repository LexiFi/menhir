State 0:
atomeof' -> . atomeof [ # ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atomeof shift to state 183
-- On atom shift to state 184
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 1:
atom -> TT . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On XOR reduce production atom -> TT
-- On THEN reduce production atom -> TT
-- On RBRA reduce production atom -> TT
-- On IMPL reduce production atom -> TT
-- On EOF reduce production atom -> TT
-- On END reduce production atom -> TT
-- On ELSE reduce production atom -> TT
-- On DOT reduce production atom -> TT
-- On DISJ reduce production atom -> TT
-- On CONJ reduce production atom -> TT
-- On COMMA reduce production atom -> TT
-- On BIIMPL reduce production atom -> TT

State 2:
boolean -> TRUE . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production boolean -> TRUE
-- On UNION reduce production boolean -> TRUE
-- On TIMES reduce production boolean -> TRUE
-- On THEN reduce production boolean -> TRUE
-- On SUBSET reduce production boolean -> TRUE
-- On RPAR reduce production boolean -> TRUE
-- On RBRA reduce production boolean -> TRUE
-- On PLUS reduce production boolean -> TRUE
-- On MINUS reduce production boolean -> TRUE
-- On LISTCONS reduce production boolean -> TRUE
-- On LESSOREQUAL reduce production boolean -> TRUE
-- On LESS reduce production boolean -> TRUE
-- On LBRA reduce production boolean -> TRUE
-- On INTER reduce production boolean -> TRUE
-- On IMPL reduce production boolean -> TRUE
-- On GREATEROREQUAL reduce production boolean -> TRUE
-- On GREATER reduce production boolean -> TRUE
-- On EXPT reduce production boolean -> TRUE
-- On EQUAL reduce production boolean -> TRUE
-- On EOF reduce production boolean -> TRUE
-- On END reduce production boolean -> TRUE
-- On ELSE reduce production boolean -> TRUE
-- On DOT reduce production boolean -> TRUE
-- On DISJ reduce production boolean -> TRUE
-- On DISEQ reduce production boolean -> TRUE
-- On CONJ reduce production boolean -> TRUE
-- On COMMA reduce production boolean -> TRUE
-- On CMP reduce production boolean -> TRUE
-- On BVCONC reduce production boolean -> TRUE
-- On BIIMPL reduce production boolean -> TRUE
-- On ASSIGN reduce production boolean -> TRUE
-- On APPLY reduce production boolean -> TRUE

State 3:
ics_list -> TAIL . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 4

State 4:
ics_list -> TAIL LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 165
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 5:
bv -> SUB . LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LBRA shift to state 6

State 6:
bv -> SUB LBRA . INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 7

State 7:
bv -> SUB LBRA INTCONST . COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On COMMA shift to state 8

State 8:
bv -> SUB LBRA INTCONST COMMA . INTCONST COMMA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 9

State 9:
bv -> SUB LBRA INTCONST COMMA INTCONST . COMMA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On COMMA shift to state 10

State 10:
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA . INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 11

State 11:
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST . RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RBRA shift to state 12

State 12:
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 13

State 13:
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 163
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 14:
apply -> S . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production apply -> S
-- On UNION reduce production apply -> S
-- On TIMES reduce production apply -> S
-- On THEN reduce production apply -> S
-- On SUBSET reduce production apply -> S
-- On RPAR reduce production apply -> S
-- On RBRA reduce production apply -> S
-- On PLUS reduce production apply -> S
-- On MINUS reduce production apply -> S
-- On LISTCONS reduce production apply -> S
-- On LESSOREQUAL reduce production apply -> S
-- On LESS reduce production apply -> S
-- On LBRA reduce production apply -> S
-- On INTER reduce production apply -> S
-- On IMPL reduce production apply -> S
-- On GREATEROREQUAL reduce production apply -> S
-- On GREATER reduce production apply -> S
-- On EXPT reduce production apply -> S
-- On EQUAL reduce production apply -> S
-- On EOF reduce production apply -> S
-- On END reduce production apply -> S
-- On ELSE reduce production apply -> S
-- On DOT reduce production apply -> S
-- On DISJ reduce production apply -> S
-- On DISEQ reduce production apply -> S
-- On CONJ reduce production apply -> S
-- On COMMA reduce production apply -> S
-- On CMP reduce production apply -> S
-- On BVCONC reduce production apply -> S
-- On BIIMPL reduce production apply -> S
-- On ASSIGN reduce production apply -> S
-- On APPLY reduce production apply -> S

State 15:
rat -> RATCONST . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production rat -> RATCONST
-- On UNION reduce production rat -> RATCONST
-- On TIMES reduce production rat -> RATCONST
-- On THEN reduce production rat -> RATCONST
-- On SUBSET reduce production rat -> RATCONST
-- On RPAR reduce production rat -> RATCONST
-- On RBRA reduce production rat -> RATCONST
-- On PLUS reduce production rat -> RATCONST
-- On MINUS reduce production rat -> RATCONST
-- On LISTCONS reduce production rat -> RATCONST
-- On LESSOREQUAL reduce production rat -> RATCONST
-- On LESS reduce production rat -> RATCONST
-- On LBRA reduce production rat -> RATCONST
-- On INTER reduce production rat -> RATCONST
-- On IMPL reduce production rat -> RATCONST
-- On GREATEROREQUAL reduce production rat -> RATCONST
-- On GREATER reduce production rat -> RATCONST
-- On EXPT reduce production rat -> RATCONST
-- On EQUAL reduce production rat -> RATCONST
-- On EOF reduce production rat -> RATCONST
-- On END reduce production rat -> RATCONST
-- On ELSE reduce production rat -> RATCONST
-- On DOT reduce production rat -> RATCONST
-- On DISJ reduce production rat -> RATCONST
-- On DISEQ reduce production rat -> RATCONST
-- On CONJ reduce production rat -> RATCONST
-- On COMMA reduce production rat -> RATCONST
-- On CMP reduce production rat -> RATCONST
-- On BVCONC reduce production rat -> RATCONST
-- On BIIMPL reduce production rat -> RATCONST
-- On ASSIGN reduce production rat -> RATCONST
-- On APPLY reduce production rat -> RATCONST

State 16:
coproduct -> OUTR . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 17

State 17:
coproduct -> OUTR LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 161
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 18:
coproduct -> OUTL . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 19

State 19:
coproduct -> OUTL LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 159
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 20:
coproduct -> OUT . LBRA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LBRA shift to state 21

State 21:
coproduct -> OUT LBRA . INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 22

State 22:
coproduct -> OUT LBRA INTCONST . RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RBRA shift to state 23

State 23:
coproduct -> OUT LBRA INTCONST RBRA . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 24

State 24:
coproduct -> OUT LBRA INTCONST RBRA LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 157
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 25:
ics_list -> NIL . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production ics_list -> NIL
-- On UNION reduce production ics_list -> NIL
-- On TIMES reduce production ics_list -> NIL
-- On THEN reduce production ics_list -> NIL
-- On SUBSET reduce production ics_list -> NIL
-- On RPAR reduce production ics_list -> NIL
-- On RBRA reduce production ics_list -> NIL
-- On PLUS reduce production ics_list -> NIL
-- On MINUS reduce production ics_list -> NIL
-- On LISTCONS reduce production ics_list -> NIL
-- On LESSOREQUAL reduce production ics_list -> NIL
-- On LESS reduce production ics_list -> NIL
-- On LBRA reduce production ics_list -> NIL
-- On INTER reduce production ics_list -> NIL
-- On IMPL reduce production ics_list -> NIL
-- On GREATEROREQUAL reduce production ics_list -> NIL
-- On GREATER reduce production ics_list -> NIL
-- On EXPT reduce production ics_list -> NIL
-- On EQUAL reduce production ics_list -> NIL
-- On EOF reduce production ics_list -> NIL
-- On END reduce production ics_list -> NIL
-- On ELSE reduce production ics_list -> NIL
-- On DOT reduce production ics_list -> NIL
-- On DISJ reduce production ics_list -> NIL
-- On DISEQ reduce production ics_list -> NIL
-- On CONJ reduce production ics_list -> NIL
-- On COMMA reduce production ics_list -> NIL
-- On CMP reduce production ics_list -> NIL
-- On BVCONC reduce production ics_list -> NIL
-- On BIIMPL reduce production ics_list -> NIL
-- On ASSIGN reduce production ics_list -> NIL
-- On APPLY reduce production ics_list -> NIL

State 26:
arith -> MINUS . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 156
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 27:
term -> LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 154
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 28:
apply -> LAMBDA . namelist COLON term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On IDENT shift to state 29
-- On namelist shift to state 30
-- On name shift to state 153

State 29:
name -> IDENT . [ XOR UNION TT TRUE TIMES THEN TAIL SUBSET SUB S RPAR RBRA RATCONST PLUS OUTR OUTL OUT NIL NEG MINUS LPAR LISTCONS LESSOREQUAL LESS LCUR LBRA LAMBDA K INTER INTCONST INR INL INJ IMPL IF IDENT I HEAD GREATEROREQUAL GREATER FULL FF FALSE EXPT EQUAL EOF END EMPTY ELSE DOT DISJ DISEQ CREATE CONS CONJ CONC COMPL COMMA COLON CMP CDR CAR C BVCONST BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production name -> IDENT
-- On UNION reduce production name -> IDENT
-- On TT reduce production name -> IDENT
-- On TRUE reduce production name -> IDENT
-- On TIMES reduce production name -> IDENT
-- On THEN reduce production name -> IDENT
-- On TAIL reduce production name -> IDENT
-- On SUBSET reduce production name -> IDENT
-- On SUB reduce production name -> IDENT
-- On S reduce production name -> IDENT
-- On RPAR reduce production name -> IDENT
-- On RBRA reduce production name -> IDENT
-- On RATCONST reduce production name -> IDENT
-- On PLUS reduce production name -> IDENT
-- On OUTR reduce production name -> IDENT
-- On OUTL reduce production name -> IDENT
-- On OUT reduce production name -> IDENT
-- On NIL reduce production name -> IDENT
-- On NEG reduce production name -> IDENT
-- On MINUS reduce production name -> IDENT
-- On LPAR reduce production name -> IDENT
-- On LISTCONS reduce production name -> IDENT
-- On LESSOREQUAL reduce production name -> IDENT
-- On LESS reduce production name -> IDENT
-- On LCUR reduce production name -> IDENT
-- On LBRA reduce production name -> IDENT
-- On LAMBDA reduce production name -> IDENT
-- On K reduce production name -> IDENT
-- On INTER reduce production name -> IDENT
-- On INTCONST reduce production name -> IDENT
-- On INR reduce production name -> IDENT
-- On INL reduce production name -> IDENT
-- On INJ reduce production name -> IDENT
-- On IMPL reduce production name -> IDENT
-- On IF reduce production name -> IDENT
-- On IDENT reduce production name -> IDENT
-- On I reduce production name -> IDENT
-- On HEAD reduce production name -> IDENT
-- On GREATEROREQUAL reduce production name -> IDENT
-- On GREATER reduce production name -> IDENT
-- On FULL reduce production name -> IDENT
-- On FF reduce production name -> IDENT
-- On FALSE reduce production name -> IDENT
-- On EXPT reduce production name -> IDENT
-- On EQUAL reduce production name -> IDENT
-- On EOF reduce production name -> IDENT
-- On END reduce production name -> IDENT
-- On EMPTY reduce production name -> IDENT
-- On ELSE reduce production name -> IDENT
-- On DOT reduce production name -> IDENT
-- On DISJ reduce production name -> IDENT
-- On DISEQ reduce production name -> IDENT
-- On CREATE reduce production name -> IDENT
-- On CONS reduce production name -> IDENT
-- On CONJ reduce production name -> IDENT
-- On CONC reduce production name -> IDENT
-- On COMPL reduce production name -> IDENT
-- On COMMA reduce production name -> IDENT
-- On COLON reduce production name -> IDENT
-- On CMP reduce production name -> IDENT
-- On CDR reduce production name -> IDENT
-- On CAR reduce production name -> IDENT
-- On C reduce production name -> IDENT
-- On BVCONST reduce production name -> IDENT
-- On BVCONC reduce production name -> IDENT
-- On BIIMPL reduce production name -> IDENT
-- On ASSIGN reduce production name -> IDENT
-- On APPLY reduce production name -> IDENT

State 30:
apply -> LAMBDA namelist . COLON term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
namelist -> namelist . COMMA name [ COMMA COLON ]
-- On COMMA shift to state 31
-- On COLON shift to state 33

State 31:
namelist -> namelist COMMA . name [ COMMA COLON ]
-- On IDENT shift to state 29
-- On name shift to state 32

State 32:
namelist -> namelist COMMA name . [ COMMA COLON ]
-- On COMMA reduce production namelist -> namelist COMMA name
-- On COLON reduce production namelist -> namelist COMMA name

State 33:
apply -> LAMBDA namelist COLON . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 152
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 34:
apply -> K . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production apply -> K
-- On UNION reduce production apply -> K
-- On TIMES reduce production apply -> K
-- On THEN reduce production apply -> K
-- On SUBSET reduce production apply -> K
-- On RPAR reduce production apply -> K
-- On RBRA reduce production apply -> K
-- On PLUS reduce production apply -> K
-- On MINUS reduce production apply -> K
-- On LISTCONS reduce production apply -> K
-- On LESSOREQUAL reduce production apply -> K
-- On LESS reduce production apply -> K
-- On LBRA reduce production apply -> K
-- On INTER reduce production apply -> K
-- On IMPL reduce production apply -> K
-- On GREATEROREQUAL reduce production apply -> K
-- On GREATER reduce production apply -> K
-- On EXPT reduce production apply -> K
-- On EQUAL reduce production apply -> K
-- On EOF reduce production apply -> K
-- On END reduce production apply -> K
-- On ELSE reduce production apply -> K
-- On DOT reduce production apply -> K
-- On DISJ reduce production apply -> K
-- On DISEQ reduce production apply -> K
-- On CONJ reduce production apply -> K
-- On COMMA reduce production apply -> K
-- On CMP reduce production apply -> K
-- On BVCONC reduce production apply -> K
-- On BIIMPL reduce production apply -> K
-- On ASSIGN reduce production apply -> K
-- On APPLY reduce production apply -> K

State 35:
int -> INTCONST . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production int -> INTCONST
-- On UNION reduce production int -> INTCONST
-- On TIMES reduce production int -> INTCONST
-- On THEN reduce production int -> INTCONST
-- On SUBSET reduce production int -> INTCONST
-- On RPAR reduce production int -> INTCONST
-- On RBRA reduce production int -> INTCONST
-- On PLUS reduce production int -> INTCONST
-- On MINUS reduce production int -> INTCONST
-- On LISTCONS reduce production int -> INTCONST
-- On LESSOREQUAL reduce production int -> INTCONST
-- On LESS reduce production int -> INTCONST
-- On LBRA reduce production int -> INTCONST
-- On INTER reduce production int -> INTCONST
-- On IMPL reduce production int -> INTCONST
-- On GREATEROREQUAL reduce production int -> INTCONST
-- On GREATER reduce production int -> INTCONST
-- On EXPT reduce production int -> INTCONST
-- On EQUAL reduce production int -> INTCONST
-- On EOF reduce production int -> INTCONST
-- On END reduce production int -> INTCONST
-- On ELSE reduce production int -> INTCONST
-- On DOT reduce production int -> INTCONST
-- On DISJ reduce production int -> INTCONST
-- On DISEQ reduce production int -> INTCONST
-- On CONJ reduce production int -> INTCONST
-- On COMMA reduce production int -> INTCONST
-- On CMP reduce production int -> INTCONST
-- On BVCONC reduce production int -> INTCONST
-- On BIIMPL reduce production int -> INTCONST
-- On ASSIGN reduce production int -> INTCONST
-- On APPLY reduce production int -> INTCONST

State 36:
coproduct -> INR . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 37

State 37:
coproduct -> INR LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 150
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 38:
coproduct -> INL . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 39

State 39:
coproduct -> INL LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 148
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 40:
coproduct -> INJ . LBRA INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LBRA shift to state 41

State 41:
coproduct -> INJ LBRA . INTCONST RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 42

State 42:
coproduct -> INJ LBRA INTCONST . RBRA LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RBRA shift to state 43

State 43:
coproduct -> INJ LBRA INTCONST RBRA . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 44

State 44:
coproduct -> INJ LBRA INTCONST RBRA LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 146
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 45:
apply -> I . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production apply -> I
-- On UNION reduce production apply -> I
-- On TIMES reduce production apply -> I
-- On THEN reduce production apply -> I
-- On SUBSET reduce production apply -> I
-- On RPAR reduce production apply -> I
-- On RBRA reduce production apply -> I
-- On PLUS reduce production apply -> I
-- On MINUS reduce production apply -> I
-- On LISTCONS reduce production apply -> I
-- On LESSOREQUAL reduce production apply -> I
-- On LESS reduce production apply -> I
-- On LBRA reduce production apply -> I
-- On INTER reduce production apply -> I
-- On IMPL reduce production apply -> I
-- On GREATEROREQUAL reduce production apply -> I
-- On GREATER reduce production apply -> I
-- On EXPT reduce production apply -> I
-- On EQUAL reduce production apply -> I
-- On EOF reduce production apply -> I
-- On END reduce production apply -> I
-- On ELSE reduce production apply -> I
-- On DOT reduce production apply -> I
-- On DISJ reduce production apply -> I
-- On DISEQ reduce production apply -> I
-- On CONJ reduce production apply -> I
-- On COMMA reduce production apply -> I
-- On CMP reduce production apply -> I
-- On BVCONC reduce production apply -> I
-- On BIIMPL reduce production apply -> I
-- On ASSIGN reduce production apply -> I
-- On APPLY reduce production apply -> I

State 46:
ics_list -> HEAD . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 47

State 47:
ics_list -> HEAD LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 144
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 48:
propset -> FULL . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production propset -> FULL
-- On UNION reduce production propset -> FULL
-- On TIMES reduce production propset -> FULL
-- On THEN reduce production propset -> FULL
-- On SUBSET reduce production propset -> FULL
-- On RPAR reduce production propset -> FULL
-- On RBRA reduce production propset -> FULL
-- On PLUS reduce production propset -> FULL
-- On MINUS reduce production propset -> FULL
-- On LISTCONS reduce production propset -> FULL
-- On LESSOREQUAL reduce production propset -> FULL
-- On LESS reduce production propset -> FULL
-- On LBRA reduce production propset -> FULL
-- On INTER reduce production propset -> FULL
-- On IMPL reduce production propset -> FULL
-- On GREATEROREQUAL reduce production propset -> FULL
-- On GREATER reduce production propset -> FULL
-- On EXPT reduce production propset -> FULL
-- On EQUAL reduce production propset -> FULL
-- On EOF reduce production propset -> FULL
-- On END reduce production propset -> FULL
-- On ELSE reduce production propset -> FULL
-- On DOT reduce production propset -> FULL
-- On DISJ reduce production propset -> FULL
-- On DISEQ reduce production propset -> FULL
-- On CONJ reduce production propset -> FULL
-- On COMMA reduce production propset -> FULL
-- On CMP reduce production propset -> FULL
-- On BVCONC reduce production propset -> FULL
-- On BIIMPL reduce production propset -> FULL
-- On ASSIGN reduce production propset -> FULL
-- On APPLY reduce production propset -> FULL

State 49:
boolean -> FALSE . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production boolean -> FALSE
-- On UNION reduce production boolean -> FALSE
-- On TIMES reduce production boolean -> FALSE
-- On THEN reduce production boolean -> FALSE
-- On SUBSET reduce production boolean -> FALSE
-- On RPAR reduce production boolean -> FALSE
-- On RBRA reduce production boolean -> FALSE
-- On PLUS reduce production boolean -> FALSE
-- On MINUS reduce production boolean -> FALSE
-- On LISTCONS reduce production boolean -> FALSE
-- On LESSOREQUAL reduce production boolean -> FALSE
-- On LESS reduce production boolean -> FALSE
-- On LBRA reduce production boolean -> FALSE
-- On INTER reduce production boolean -> FALSE
-- On IMPL reduce production boolean -> FALSE
-- On GREATEROREQUAL reduce production boolean -> FALSE
-- On GREATER reduce production boolean -> FALSE
-- On EXPT reduce production boolean -> FALSE
-- On EQUAL reduce production boolean -> FALSE
-- On EOF reduce production boolean -> FALSE
-- On END reduce production boolean -> FALSE
-- On ELSE reduce production boolean -> FALSE
-- On DOT reduce production boolean -> FALSE
-- On DISJ reduce production boolean -> FALSE
-- On DISEQ reduce production boolean -> FALSE
-- On CONJ reduce production boolean -> FALSE
-- On COMMA reduce production boolean -> FALSE
-- On CMP reduce production boolean -> FALSE
-- On BVCONC reduce production boolean -> FALSE
-- On BIIMPL reduce production boolean -> FALSE
-- On ASSIGN reduce production boolean -> FALSE
-- On APPLY reduce production boolean -> FALSE

State 50:
propset -> EMPTY . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production propset -> EMPTY
-- On UNION reduce production propset -> EMPTY
-- On TIMES reduce production propset -> EMPTY
-- On THEN reduce production propset -> EMPTY
-- On SUBSET reduce production propset -> EMPTY
-- On RPAR reduce production propset -> EMPTY
-- On RBRA reduce production propset -> EMPTY
-- On PLUS reduce production propset -> EMPTY
-- On MINUS reduce production propset -> EMPTY
-- On LISTCONS reduce production propset -> EMPTY
-- On LESSOREQUAL reduce production propset -> EMPTY
-- On LESS reduce production propset -> EMPTY
-- On LBRA reduce production propset -> EMPTY
-- On INTER reduce production propset -> EMPTY
-- On IMPL reduce production propset -> EMPTY
-- On GREATEROREQUAL reduce production propset -> EMPTY
-- On GREATER reduce production propset -> EMPTY
-- On EXPT reduce production propset -> EMPTY
-- On EQUAL reduce production propset -> EMPTY
-- On EOF reduce production propset -> EMPTY
-- On END reduce production propset -> EMPTY
-- On ELSE reduce production propset -> EMPTY
-- On DOT reduce production propset -> EMPTY
-- On DISJ reduce production propset -> EMPTY
-- On DISEQ reduce production propset -> EMPTY
-- On CONJ reduce production propset -> EMPTY
-- On COMMA reduce production propset -> EMPTY
-- On CMP reduce production propset -> EMPTY
-- On BVCONC reduce production propset -> EMPTY
-- On BIIMPL reduce production propset -> EMPTY
-- On ASSIGN reduce production propset -> EMPTY
-- On APPLY reduce production propset -> EMPTY

State 51:
array -> CREATE . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 52

State 52:
array -> CREATE LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 142
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 53:
product -> CONS . LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 54

State 54:
product -> CONS LPAR . term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 138
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 55:
bv -> CONC . LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LBRA shift to state 56

State 56:
bv -> CONC LBRA . INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 57

State 57:
bv -> CONC LBRA INTCONST . COMMA INTCONST RBRA LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On COMMA shift to state 58

State 58:
bv -> CONC LBRA INTCONST COMMA . INTCONST RBRA LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 59

State 59:
bv -> CONC LBRA INTCONST COMMA INTCONST . RBRA LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RBRA shift to state 60

State 60:
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA . LPAR term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 61

State 61:
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR . term COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 134
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 62:
propset -> COMPL . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 133
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 63:
product -> CDR . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 64

State 64:
product -> CDR LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 131
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 65:
product -> CAR . LPAR term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 66

State 66:
product -> CAR LPAR . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 70
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 67:
apply -> C . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production apply -> C
-- On UNION reduce production apply -> C
-- On TIMES reduce production apply -> C
-- On THEN reduce production apply -> C
-- On SUBSET reduce production apply -> C
-- On RPAR reduce production apply -> C
-- On RBRA reduce production apply -> C
-- On PLUS reduce production apply -> C
-- On MINUS reduce production apply -> C
-- On LISTCONS reduce production apply -> C
-- On LESSOREQUAL reduce production apply -> C
-- On LESS reduce production apply -> C
-- On LBRA reduce production apply -> C
-- On INTER reduce production apply -> C
-- On IMPL reduce production apply -> C
-- On GREATEROREQUAL reduce production apply -> C
-- On GREATER reduce production apply -> C
-- On EXPT reduce production apply -> C
-- On EQUAL reduce production apply -> C
-- On EOF reduce production apply -> C
-- On END reduce production apply -> C
-- On ELSE reduce production apply -> C
-- On DOT reduce production apply -> C
-- On DISJ reduce production apply -> C
-- On DISEQ reduce production apply -> C
-- On CONJ reduce production apply -> C
-- On COMMA reduce production apply -> C
-- On CMP reduce production apply -> C
-- On BVCONC reduce production apply -> C
-- On BIIMPL reduce production apply -> C
-- On ASSIGN reduce production apply -> C
-- On APPLY reduce production apply -> C

State 68:
bv -> BVCONST . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production bv -> BVCONST
-- On UNION reduce production bv -> BVCONST
-- On TIMES reduce production bv -> BVCONST
-- On THEN reduce production bv -> BVCONST
-- On SUBSET reduce production bv -> BVCONST
-- On RPAR reduce production bv -> BVCONST
-- On RBRA reduce production bv -> BVCONST
-- On PLUS reduce production bv -> BVCONST
-- On MINUS reduce production bv -> BVCONST
-- On LISTCONS reduce production bv -> BVCONST
-- On LESSOREQUAL reduce production bv -> BVCONST
-- On LESS reduce production bv -> BVCONST
-- On LBRA reduce production bv -> BVCONST
-- On INTER reduce production bv -> BVCONST
-- On IMPL reduce production bv -> BVCONST
-- On GREATEROREQUAL reduce production bv -> BVCONST
-- On GREATER reduce production bv -> BVCONST
-- On EXPT reduce production bv -> BVCONST
-- On EQUAL reduce production bv -> BVCONST
-- On EOF reduce production bv -> BVCONST
-- On END reduce production bv -> BVCONST
-- On ELSE reduce production bv -> BVCONST
-- On DOT reduce production bv -> BVCONST
-- On DISJ reduce production bv -> BVCONST
-- On DISEQ reduce production bv -> BVCONST
-- On CONJ reduce production bv -> BVCONST
-- On COMMA reduce production bv -> BVCONST
-- On CMP reduce production bv -> BVCONST
-- On BVCONC reduce production bv -> BVCONST
-- On BIIMPL reduce production bv -> BVCONST
-- On ASSIGN reduce production bv -> BVCONST
-- On APPLY reduce production bv -> BVCONST

State 69:
term -> var . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> var
-- On UNION reduce production term -> var
-- On TIMES reduce production term -> var
-- On THEN reduce production term -> var
-- On SUBSET reduce production term -> var
-- On RPAR reduce production term -> var
-- On RBRA reduce production term -> var
-- On PLUS reduce production term -> var
-- On MINUS reduce production term -> var
-- On LISTCONS reduce production term -> var
-- On LESSOREQUAL reduce production term -> var
-- On LESS reduce production term -> var
-- On LBRA reduce production term -> var
-- On INTER reduce production term -> var
-- On IMPL reduce production term -> var
-- On GREATEROREQUAL reduce production term -> var
-- On GREATER reduce production term -> var
-- On EXPT reduce production term -> var
-- On EQUAL reduce production term -> var
-- On EOF reduce production term -> var
-- On END reduce production term -> var
-- On ELSE reduce production term -> var
-- On DOT reduce production term -> var
-- On DISJ reduce production term -> var
-- On DISEQ reduce production term -> var
-- On CONJ reduce production term -> var
-- On COMMA reduce production term -> var
-- On CMP reduce production term -> var
-- On BVCONC reduce production term -> var
-- On BIIMPL reduce production term -> var
-- On ASSIGN reduce production term -> var
-- On APPLY reduce production term -> var

State 70:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
product -> CAR LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 130
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 71:
propset -> term UNION . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 72
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 72:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term UNION term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production propset -> term UNION term
-- On THEN reduce production propset -> term UNION term
-- On SUBSET reduce production propset -> term UNION term
-- On RPAR reduce production propset -> term UNION term
-- On RBRA reduce production propset -> term UNION term
-- On LESSOREQUAL reduce production propset -> term UNION term
-- On LESS reduce production propset -> term UNION term
-- On IMPL reduce production propset -> term UNION term
-- On GREATEROREQUAL reduce production propset -> term UNION term
-- On GREATER reduce production propset -> term UNION term
-- On EQUAL reduce production propset -> term UNION term
-- On EOF reduce production propset -> term UNION term
-- On END reduce production propset -> term UNION term
-- On ELSE reduce production propset -> term UNION term
-- On DOT reduce production propset -> term UNION term
-- On DISJ reduce production propset -> term UNION term
-- On DISEQ reduce production propset -> term UNION term
-- On CONJ reduce production propset -> term UNION term
-- On COMMA reduce production propset -> term UNION term
-- On CMP reduce production propset -> term UNION term
-- On BIIMPL reduce production propset -> term UNION term
-- On ASSIGN reduce production propset -> term UNION term
-- On APPLY reduce production propset -> term UNION term

State 73:
arith -> term TIMES . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 74
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 74:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term TIMES term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production arith -> term TIMES term
-- On UNION reduce production arith -> term TIMES term
-- On TIMES reduce production arith -> term TIMES term
-- On THEN reduce production arith -> term TIMES term
-- On SUBSET reduce production arith -> term TIMES term
-- On RPAR reduce production arith -> term TIMES term
-- On RBRA reduce production arith -> term TIMES term
-- On PLUS reduce production arith -> term TIMES term
-- On MINUS reduce production arith -> term TIMES term
-- On LESSOREQUAL reduce production arith -> term TIMES term
-- On LESS reduce production arith -> term TIMES term
-- On INTER reduce production arith -> term TIMES term
-- On IMPL reduce production arith -> term TIMES term
-- On GREATEROREQUAL reduce production arith -> term TIMES term
-- On GREATER reduce production arith -> term TIMES term
-- On EQUAL reduce production arith -> term TIMES term
-- On EOF reduce production arith -> term TIMES term
-- On END reduce production arith -> term TIMES term
-- On ELSE reduce production arith -> term TIMES term
-- On DOT reduce production arith -> term TIMES term
-- On DISJ reduce production arith -> term TIMES term
-- On DISEQ reduce production arith -> term TIMES term
-- On CONJ reduce production arith -> term TIMES term
-- On COMMA reduce production arith -> term TIMES term
-- On CMP reduce production arith -> term TIMES term
-- On BIIMPL reduce production arith -> term TIMES term
-- On ASSIGN reduce production arith -> term TIMES term
-- On APPLY reduce production arith -> term TIMES term

State 75:
ics_list -> term LISTCONS . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 76
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 76:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term LISTCONS term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On BVCONC shift to state 88
-- On XOR reduce production ics_list -> term LISTCONS term
-- On UNION reduce production ics_list -> term LISTCONS term
-- On TIMES reduce production ics_list -> term LISTCONS term
-- On THEN reduce production ics_list -> term LISTCONS term
-- On SUBSET reduce production ics_list -> term LISTCONS term
-- On RPAR reduce production ics_list -> term LISTCONS term
-- On RBRA reduce production ics_list -> term LISTCONS term
-- On PLUS reduce production ics_list -> term LISTCONS term
-- On MINUS reduce production ics_list -> term LISTCONS term
-- On LESSOREQUAL reduce production ics_list -> term LISTCONS term
-- On LESS reduce production ics_list -> term LISTCONS term
-- On INTER reduce production ics_list -> term LISTCONS term
-- On IMPL reduce production ics_list -> term LISTCONS term
-- On GREATEROREQUAL reduce production ics_list -> term LISTCONS term
-- On GREATER reduce production ics_list -> term LISTCONS term
-- On EXPT reduce production ics_list -> term LISTCONS term
-- On EQUAL reduce production ics_list -> term LISTCONS term
-- On EOF reduce production ics_list -> term LISTCONS term
-- On END reduce production ics_list -> term LISTCONS term
-- On ELSE reduce production ics_list -> term LISTCONS term
-- On DOT reduce production ics_list -> term LISTCONS term
-- On DISJ reduce production ics_list -> term LISTCONS term
-- On DISEQ reduce production ics_list -> term LISTCONS term
-- On CONJ reduce production ics_list -> term LISTCONS term
-- On COMMA reduce production ics_list -> term LISTCONS term
-- On CMP reduce production ics_list -> term LISTCONS term
-- On BIIMPL reduce production ics_list -> term LISTCONS term
-- On ASSIGN reduce production ics_list -> term LISTCONS term
-- On APPLY reduce production ics_list -> term LISTCONS term

State 77:
array -> term LBRA . term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term LBRA . term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term LBRA . INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 78
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 82
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 78:
bv -> term LBRA INTCONST . COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
int -> INTCONST . [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
-- On COLON shift to state 79
-- On UNION reduce production int -> INTCONST
-- On TIMES reduce production int -> INTCONST
-- On RBRA reduce production int -> INTCONST
-- On PLUS reduce production int -> INTCONST
-- On MINUS reduce production int -> INTCONST
-- On LISTCONS reduce production int -> INTCONST
-- On LBRA reduce production int -> INTCONST
-- On INTER reduce production int -> INTCONST
-- On EXPT reduce production int -> INTCONST
-- On BVCONC reduce production int -> INTCONST
-- On ASSIGN reduce production int -> INTCONST
-- On APPLY reduce production int -> INTCONST

State 79:
bv -> term LBRA INTCONST COLON . INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 80

State 80:
bv -> term LBRA INTCONST COLON INTCONST . RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RBRA shift to state 81

State 81:
bv -> term LBRA INTCONST COLON INTCONST RBRA . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On UNION reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On TIMES reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On THEN reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On SUBSET reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On RPAR reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On RBRA reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On PLUS reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On MINUS reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On LISTCONS reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On LESSOREQUAL reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On LESS reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On LBRA reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On INTER reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On IMPL reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On GREATEROREQUAL reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On GREATER reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On EXPT reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On EQUAL reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On EOF reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On END reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On ELSE reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On DOT reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On DISJ reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On DISEQ reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On CONJ reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On COMMA reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On CMP reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On BVCONC reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On BIIMPL reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On ASSIGN reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA
-- On APPLY reduce production bv -> term LBRA INTCONST COLON INTCONST RBRA

State 82:
apply -> term . APPLY term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
arith -> term . PLUS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
arith -> term . MINUS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
arith -> term . TIMES term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
arith -> term . EXPT int [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
array -> term LBRA term . ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
array -> term LBRA term . RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
propset -> term . INTER term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC ASSIGN APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RBRA shift to state 83
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On ASSIGN shift to state 127
-- On APPLY shift to state 124

State 83:
array -> term LBRA term RBRA . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production array -> term LBRA term RBRA
-- On UNION reduce production array -> term LBRA term RBRA
-- On TIMES reduce production array -> term LBRA term RBRA
-- On THEN reduce production array -> term LBRA term RBRA
-- On SUBSET reduce production array -> term LBRA term RBRA
-- On RPAR reduce production array -> term LBRA term RBRA
-- On RBRA reduce production array -> term LBRA term RBRA
-- On PLUS reduce production array -> term LBRA term RBRA
-- On MINUS reduce production array -> term LBRA term RBRA
-- On LISTCONS reduce production array -> term LBRA term RBRA
-- On LESSOREQUAL reduce production array -> term LBRA term RBRA
-- On LESS reduce production array -> term LBRA term RBRA
-- On LBRA reduce production array -> term LBRA term RBRA
-- On INTER reduce production array -> term LBRA term RBRA
-- On IMPL reduce production array -> term LBRA term RBRA
-- On GREATEROREQUAL reduce production array -> term LBRA term RBRA
-- On GREATER reduce production array -> term LBRA term RBRA
-- On EXPT reduce production array -> term LBRA term RBRA
-- On EQUAL reduce production array -> term LBRA term RBRA
-- On EOF reduce production array -> term LBRA term RBRA
-- On END reduce production array -> term LBRA term RBRA
-- On ELSE reduce production array -> term LBRA term RBRA
-- On DOT reduce production array -> term LBRA term RBRA
-- On DISJ reduce production array -> term LBRA term RBRA
-- On DISEQ reduce production array -> term LBRA term RBRA
-- On CONJ reduce production array -> term LBRA term RBRA
-- On COMMA reduce production array -> term LBRA term RBRA
-- On CMP reduce production array -> term LBRA term RBRA
-- On BVCONC reduce production array -> term LBRA term RBRA
-- On BIIMPL reduce production array -> term LBRA term RBRA
-- On ASSIGN reduce production array -> term LBRA term RBRA
-- On APPLY reduce production array -> term LBRA term RBRA

State 84:
arith -> term PLUS . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 85
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 85:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term PLUS term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TIMES shift to state 73
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production arith -> term PLUS term
-- On UNION reduce production arith -> term PLUS term
-- On THEN reduce production arith -> term PLUS term
-- On SUBSET reduce production arith -> term PLUS term
-- On RPAR reduce production arith -> term PLUS term
-- On RBRA reduce production arith -> term PLUS term
-- On PLUS reduce production arith -> term PLUS term
-- On MINUS reduce production arith -> term PLUS term
-- On LESSOREQUAL reduce production arith -> term PLUS term
-- On LESS reduce production arith -> term PLUS term
-- On INTER reduce production arith -> term PLUS term
-- On IMPL reduce production arith -> term PLUS term
-- On GREATEROREQUAL reduce production arith -> term PLUS term
-- On GREATER reduce production arith -> term PLUS term
-- On EQUAL reduce production arith -> term PLUS term
-- On EOF reduce production arith -> term PLUS term
-- On END reduce production arith -> term PLUS term
-- On ELSE reduce production arith -> term PLUS term
-- On DOT reduce production arith -> term PLUS term
-- On DISJ reduce production arith -> term PLUS term
-- On DISEQ reduce production arith -> term PLUS term
-- On CONJ reduce production arith -> term PLUS term
-- On COMMA reduce production arith -> term PLUS term
-- On CMP reduce production arith -> term PLUS term
-- On BIIMPL reduce production arith -> term PLUS term
-- On ASSIGN reduce production arith -> term PLUS term
-- On APPLY reduce production arith -> term PLUS term

State 86:
arith -> term EXPT . int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On INTCONST shift to state 35
-- On int shift to state 87

State 87:
arith -> term EXPT int . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production arith -> term EXPT int
-- On UNION reduce production arith -> term EXPT int
-- On TIMES reduce production arith -> term EXPT int
-- On THEN reduce production arith -> term EXPT int
-- On SUBSET reduce production arith -> term EXPT int
-- On RPAR reduce production arith -> term EXPT int
-- On RBRA reduce production arith -> term EXPT int
-- On PLUS reduce production arith -> term EXPT int
-- On MINUS reduce production arith -> term EXPT int
-- On LISTCONS reduce production arith -> term EXPT int
-- On LESSOREQUAL reduce production arith -> term EXPT int
-- On LESS reduce production arith -> term EXPT int
-- On LBRA reduce production arith -> term EXPT int
-- On INTER reduce production arith -> term EXPT int
-- On IMPL reduce production arith -> term EXPT int
-- On GREATEROREQUAL reduce production arith -> term EXPT int
-- On GREATER reduce production arith -> term EXPT int
-- On EXPT reduce production arith -> term EXPT int
-- On EQUAL reduce production arith -> term EXPT int
-- On EOF reduce production arith -> term EXPT int
-- On END reduce production arith -> term EXPT int
-- On ELSE reduce production arith -> term EXPT int
-- On DOT reduce production arith -> term EXPT int
-- On DISJ reduce production arith -> term EXPT int
-- On DISEQ reduce production arith -> term EXPT int
-- On CONJ reduce production arith -> term EXPT int
-- On COMMA reduce production arith -> term EXPT int
-- On CMP reduce production arith -> term EXPT int
-- On BVCONC reduce production arith -> term EXPT int
-- On BIIMPL reduce production arith -> term EXPT int
-- On ASSIGN reduce production arith -> term EXPT int
-- On APPLY reduce production arith -> term EXPT int

State 88:
bv -> term BVCONC . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 89
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 89:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term BVCONC term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LBRA shift to state 77
-- On BVCONC shift to state 88
-- On XOR reduce production bv -> term BVCONC term
-- On UNION reduce production bv -> term BVCONC term
-- On TIMES reduce production bv -> term BVCONC term
-- On THEN reduce production bv -> term BVCONC term
-- On SUBSET reduce production bv -> term BVCONC term
-- On RPAR reduce production bv -> term BVCONC term
-- On RBRA reduce production bv -> term BVCONC term
-- On PLUS reduce production bv -> term BVCONC term
-- On MINUS reduce production bv -> term BVCONC term
-- On LISTCONS reduce production bv -> term BVCONC term
-- On LESSOREQUAL reduce production bv -> term BVCONC term
-- On LESS reduce production bv -> term BVCONC term
-- On INTER reduce production bv -> term BVCONC term
-- On IMPL reduce production bv -> term BVCONC term
-- On GREATEROREQUAL reduce production bv -> term BVCONC term
-- On GREATER reduce production bv -> term BVCONC term
-- On EXPT reduce production bv -> term BVCONC term
-- On EQUAL reduce production bv -> term BVCONC term
-- On EOF reduce production bv -> term BVCONC term
-- On END reduce production bv -> term BVCONC term
-- On ELSE reduce production bv -> term BVCONC term
-- On DOT reduce production bv -> term BVCONC term
-- On DISJ reduce production bv -> term BVCONC term
-- On DISEQ reduce production bv -> term BVCONC term
-- On CONJ reduce production bv -> term BVCONC term
-- On COMMA reduce production bv -> term BVCONC term
-- On CMP reduce production bv -> term BVCONC term
-- On BIIMPL reduce production bv -> term BVCONC term
-- On ASSIGN reduce production bv -> term BVCONC term
-- On APPLY reduce production bv -> term BVCONC term

State 90:
arith -> rat . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production arith -> rat
-- On UNION reduce production arith -> rat
-- On TIMES reduce production arith -> rat
-- On THEN reduce production arith -> rat
-- On SUBSET reduce production arith -> rat
-- On RPAR reduce production arith -> rat
-- On RBRA reduce production arith -> rat
-- On PLUS reduce production arith -> rat
-- On MINUS reduce production arith -> rat
-- On LISTCONS reduce production arith -> rat
-- On LESSOREQUAL reduce production arith -> rat
-- On LESS reduce production arith -> rat
-- On LBRA reduce production arith -> rat
-- On INTER reduce production arith -> rat
-- On IMPL reduce production arith -> rat
-- On GREATEROREQUAL reduce production arith -> rat
-- On GREATER reduce production arith -> rat
-- On EXPT reduce production arith -> rat
-- On EQUAL reduce production arith -> rat
-- On EOF reduce production arith -> rat
-- On END reduce production arith -> rat
-- On ELSE reduce production arith -> rat
-- On DOT reduce production arith -> rat
-- On DISJ reduce production arith -> rat
-- On DISEQ reduce production arith -> rat
-- On CONJ reduce production arith -> rat
-- On COMMA reduce production arith -> rat
-- On CMP reduce production arith -> rat
-- On BVCONC reduce production arith -> rat
-- On BIIMPL reduce production arith -> rat
-- On ASSIGN reduce production arith -> rat
-- On APPLY reduce production arith -> rat

State 91:
term -> propset . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> propset
-- On UNION reduce production term -> propset
-- On TIMES reduce production term -> propset
-- On THEN reduce production term -> propset
-- On SUBSET reduce production term -> propset
-- On RPAR reduce production term -> propset
-- On RBRA reduce production term -> propset
-- On PLUS reduce production term -> propset
-- On MINUS reduce production term -> propset
-- On LISTCONS reduce production term -> propset
-- On LESSOREQUAL reduce production term -> propset
-- On LESS reduce production term -> propset
-- On LBRA reduce production term -> propset
-- On INTER reduce production term -> propset
-- On IMPL reduce production term -> propset
-- On GREATEROREQUAL reduce production term -> propset
-- On GREATER reduce production term -> propset
-- On EXPT reduce production term -> propset
-- On EQUAL reduce production term -> propset
-- On EOF reduce production term -> propset
-- On END reduce production term -> propset
-- On ELSE reduce production term -> propset
-- On DOT reduce production term -> propset
-- On DISJ reduce production term -> propset
-- On DISEQ reduce production term -> propset
-- On CONJ reduce production term -> propset
-- On COMMA reduce production term -> propset
-- On CMP reduce production term -> propset
-- On BVCONC reduce production term -> propset
-- On BIIMPL reduce production term -> propset
-- On ASSIGN reduce production term -> propset
-- On APPLY reduce production term -> propset

State 92:
term -> product . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> product
-- On UNION reduce production term -> product
-- On TIMES reduce production term -> product
-- On THEN reduce production term -> product
-- On SUBSET reduce production term -> product
-- On RPAR reduce production term -> product
-- On RBRA reduce production term -> product
-- On PLUS reduce production term -> product
-- On MINUS reduce production term -> product
-- On LISTCONS reduce production term -> product
-- On LESSOREQUAL reduce production term -> product
-- On LESS reduce production term -> product
-- On LBRA reduce production term -> product
-- On INTER reduce production term -> product
-- On IMPL reduce production term -> product
-- On GREATEROREQUAL reduce production term -> product
-- On GREATER reduce production term -> product
-- On EXPT reduce production term -> product
-- On EQUAL reduce production term -> product
-- On EOF reduce production term -> product
-- On END reduce production term -> product
-- On ELSE reduce production term -> product
-- On DOT reduce production term -> product
-- On DISJ reduce production term -> product
-- On DISEQ reduce production term -> product
-- On CONJ reduce production term -> product
-- On COMMA reduce production term -> product
-- On CMP reduce production term -> product
-- On BVCONC reduce production term -> product
-- On BIIMPL reduce production term -> product
-- On ASSIGN reduce production term -> product
-- On APPLY reduce production term -> product

State 93:
funsym -> name . [ LPAR ]
var -> name . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
var -> name . LCUR cnstrnt RCUR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LCUR shift to state 94
-- On XOR reduce production var -> name
-- On UNION reduce production var -> name
-- On TIMES reduce production var -> name
-- On THEN reduce production var -> name
-- On SUBSET reduce production var -> name
-- On RPAR reduce production var -> name
-- On RBRA reduce production var -> name
-- On PLUS reduce production var -> name
-- On MINUS reduce production var -> name
-- On LPAR reduce production funsym -> name
-- On LISTCONS reduce production var -> name
-- On LESSOREQUAL reduce production var -> name
-- On LESS reduce production var -> name
-- On LBRA reduce production var -> name
-- On INTER reduce production var -> name
-- On IMPL reduce production var -> name
-- On GREATEROREQUAL reduce production var -> name
-- On GREATER reduce production var -> name
-- On EXPT reduce production var -> name
-- On EQUAL reduce production var -> name
-- On EOF reduce production var -> name
-- On END reduce production var -> name
-- On ELSE reduce production var -> name
-- On DOT reduce production var -> name
-- On DISJ reduce production var -> name
-- On DISEQ reduce production var -> name
-- On CONJ reduce production var -> name
-- On COMMA reduce production var -> name
-- On CMP reduce production var -> name
-- On BVCONC reduce production var -> name
-- On BIIMPL reduce production var -> name
-- On ASSIGN reduce production var -> name
-- On APPLY reduce production var -> name

State 94:
var -> name LCUR . cnstrnt RCUR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On REAL shift to state 95
-- On INT shift to state 96
-- On BV shift to state 97
-- On signature shift to state 101
-- On dom shift to state 102
-- On cnstrnt shift to state 103

State 95:
dom -> REAL . [ RCUR EOF DOT ]
-- On RCUR reduce production dom -> REAL
-- On EOF reduce production dom -> REAL
-- On DOT reduce production dom -> REAL

State 96:
dom -> INT . [ RCUR EOF DOT ]
-- On RCUR reduce production dom -> INT
-- On EOF reduce production dom -> INT
-- On DOT reduce production dom -> INT

State 97:
signature -> BV . LBRA INTCONST RBRA [ RCUR EOF DOT ]
-- On LBRA shift to state 98

State 98:
signature -> BV LBRA . INTCONST RBRA [ RCUR EOF DOT ]
-- On INTCONST shift to state 99

State 99:
signature -> BV LBRA INTCONST . RBRA [ RCUR EOF DOT ]
-- On RBRA shift to state 100

State 100:
signature -> BV LBRA INTCONST RBRA . [ RCUR EOF DOT ]
-- On RCUR reduce production signature -> BV LBRA INTCONST RBRA
-- On EOF reduce production signature -> BV LBRA INTCONST RBRA
-- On DOT reduce production signature -> BV LBRA INTCONST RBRA

State 101:
cnstrnt -> signature . [ RCUR EOF DOT ]
-- On RCUR reduce production cnstrnt -> signature
-- On EOF reduce production cnstrnt -> signature
-- On DOT reduce production cnstrnt -> signature

State 102:
cnstrnt -> dom . [ RCUR EOF DOT ]
-- On RCUR reduce production cnstrnt -> dom
-- On EOF reduce production cnstrnt -> dom
-- On DOT reduce production cnstrnt -> dom

State 103:
var -> name LCUR cnstrnt . RCUR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On RCUR shift to state 104

State 104:
var -> name LCUR cnstrnt RCUR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production var -> name LCUR cnstrnt RCUR
-- On UNION reduce production var -> name LCUR cnstrnt RCUR
-- On TIMES reduce production var -> name LCUR cnstrnt RCUR
-- On THEN reduce production var -> name LCUR cnstrnt RCUR
-- On SUBSET reduce production var -> name LCUR cnstrnt RCUR
-- On RPAR reduce production var -> name LCUR cnstrnt RCUR
-- On RBRA reduce production var -> name LCUR cnstrnt RCUR
-- On PLUS reduce production var -> name LCUR cnstrnt RCUR
-- On MINUS reduce production var -> name LCUR cnstrnt RCUR
-- On LISTCONS reduce production var -> name LCUR cnstrnt RCUR
-- On LESSOREQUAL reduce production var -> name LCUR cnstrnt RCUR
-- On LESS reduce production var -> name LCUR cnstrnt RCUR
-- On LBRA reduce production var -> name LCUR cnstrnt RCUR
-- On INTER reduce production var -> name LCUR cnstrnt RCUR
-- On IMPL reduce production var -> name LCUR cnstrnt RCUR
-- On GREATEROREQUAL reduce production var -> name LCUR cnstrnt RCUR
-- On GREATER reduce production var -> name LCUR cnstrnt RCUR
-- On EXPT reduce production var -> name LCUR cnstrnt RCUR
-- On EQUAL reduce production var -> name LCUR cnstrnt RCUR
-- On EOF reduce production var -> name LCUR cnstrnt RCUR
-- On END reduce production var -> name LCUR cnstrnt RCUR
-- On ELSE reduce production var -> name LCUR cnstrnt RCUR
-- On DOT reduce production var -> name LCUR cnstrnt RCUR
-- On DISJ reduce production var -> name LCUR cnstrnt RCUR
-- On DISEQ reduce production var -> name LCUR cnstrnt RCUR
-- On CONJ reduce production var -> name LCUR cnstrnt RCUR
-- On COMMA reduce production var -> name LCUR cnstrnt RCUR
-- On CMP reduce production var -> name LCUR cnstrnt RCUR
-- On BVCONC reduce production var -> name LCUR cnstrnt RCUR
-- On BIIMPL reduce production var -> name LCUR cnstrnt RCUR
-- On ASSIGN reduce production var -> name LCUR cnstrnt RCUR
-- On APPLY reduce production var -> name LCUR cnstrnt RCUR

State 105:
rat -> int . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production rat -> int
-- On UNION reduce production rat -> int
-- On TIMES reduce production rat -> int
-- On THEN reduce production rat -> int
-- On SUBSET reduce production rat -> int
-- On RPAR reduce production rat -> int
-- On RBRA reduce production rat -> int
-- On PLUS reduce production rat -> int
-- On MINUS reduce production rat -> int
-- On LISTCONS reduce production rat -> int
-- On LESSOREQUAL reduce production rat -> int
-- On LESS reduce production rat -> int
-- On LBRA reduce production rat -> int
-- On INTER reduce production rat -> int
-- On IMPL reduce production rat -> int
-- On GREATEROREQUAL reduce production rat -> int
-- On GREATER reduce production rat -> int
-- On EXPT reduce production rat -> int
-- On EQUAL reduce production rat -> int
-- On EOF reduce production rat -> int
-- On END reduce production rat -> int
-- On ELSE reduce production rat -> int
-- On DOT reduce production rat -> int
-- On DISJ reduce production rat -> int
-- On DISEQ reduce production rat -> int
-- On CONJ reduce production rat -> int
-- On COMMA reduce production rat -> int
-- On CMP reduce production rat -> int
-- On BVCONC reduce production rat -> int
-- On BIIMPL reduce production rat -> int
-- On ASSIGN reduce production rat -> int
-- On APPLY reduce production rat -> int

State 106:
term -> ics_list . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> ics_list
-- On UNION reduce production term -> ics_list
-- On TIMES reduce production term -> ics_list
-- On THEN reduce production term -> ics_list
-- On SUBSET reduce production term -> ics_list
-- On RPAR reduce production term -> ics_list
-- On RBRA reduce production term -> ics_list
-- On PLUS reduce production term -> ics_list
-- On MINUS reduce production term -> ics_list
-- On LISTCONS reduce production term -> ics_list
-- On LESSOREQUAL reduce production term -> ics_list
-- On LESS reduce production term -> ics_list
-- On LBRA reduce production term -> ics_list
-- On INTER reduce production term -> ics_list
-- On IMPL reduce production term -> ics_list
-- On GREATEROREQUAL reduce production term -> ics_list
-- On GREATER reduce production term -> ics_list
-- On EXPT reduce production term -> ics_list
-- On EQUAL reduce production term -> ics_list
-- On EOF reduce production term -> ics_list
-- On END reduce production term -> ics_list
-- On ELSE reduce production term -> ics_list
-- On DOT reduce production term -> ics_list
-- On DISJ reduce production term -> ics_list
-- On DISEQ reduce production term -> ics_list
-- On CONJ reduce production term -> ics_list
-- On COMMA reduce production term -> ics_list
-- On CMP reduce production term -> ics_list
-- On BVCONC reduce production term -> ics_list
-- On BIIMPL reduce production term -> ics_list
-- On ASSIGN reduce production term -> ics_list
-- On APPLY reduce production term -> ics_list

State 107:
app -> funsym . LPAR termlist RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On LPAR shift to state 108

State 108:
app -> funsym LPAR . termlist RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On termlist shift to state 109
-- On term shift to state 126
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121
-- On RPAR reduce production termlist ->
-- On COMMA reduce production termlist ->

State 109:
app -> funsym LPAR termlist . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
termlist -> termlist . COMMA term [ RPAR COMMA ]
-- On RPAR shift to state 110
-- On COMMA shift to state 111

State 110:
app -> funsym LPAR termlist RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production app -> funsym LPAR termlist RPAR
-- On UNION reduce production app -> funsym LPAR termlist RPAR
-- On TIMES reduce production app -> funsym LPAR termlist RPAR
-- On THEN reduce production app -> funsym LPAR termlist RPAR
-- On SUBSET reduce production app -> funsym LPAR termlist RPAR
-- On RPAR reduce production app -> funsym LPAR termlist RPAR
-- On RBRA reduce production app -> funsym LPAR termlist RPAR
-- On PLUS reduce production app -> funsym LPAR termlist RPAR
-- On MINUS reduce production app -> funsym LPAR termlist RPAR
-- On LISTCONS reduce production app -> funsym LPAR termlist RPAR
-- On LESSOREQUAL reduce production app -> funsym LPAR termlist RPAR
-- On LESS reduce production app -> funsym LPAR termlist RPAR
-- On LBRA reduce production app -> funsym LPAR termlist RPAR
-- On INTER reduce production app -> funsym LPAR termlist RPAR
-- On IMPL reduce production app -> funsym LPAR termlist RPAR
-- On GREATEROREQUAL reduce production app -> funsym LPAR termlist RPAR
-- On GREATER reduce production app -> funsym LPAR termlist RPAR
-- On EXPT reduce production app -> funsym LPAR termlist RPAR
-- On EQUAL reduce production app -> funsym LPAR termlist RPAR
-- On EOF reduce production app -> funsym LPAR termlist RPAR
-- On END reduce production app -> funsym LPAR termlist RPAR
-- On ELSE reduce production app -> funsym LPAR termlist RPAR
-- On DOT reduce production app -> funsym LPAR termlist RPAR
-- On DISJ reduce production app -> funsym LPAR termlist RPAR
-- On DISEQ reduce production app -> funsym LPAR termlist RPAR
-- On CONJ reduce production app -> funsym LPAR termlist RPAR
-- On COMMA reduce production app -> funsym LPAR termlist RPAR
-- On CMP reduce production app -> funsym LPAR termlist RPAR
-- On BVCONC reduce production app -> funsym LPAR termlist RPAR
-- On BIIMPL reduce production app -> funsym LPAR termlist RPAR
-- On ASSIGN reduce production app -> funsym LPAR termlist RPAR
-- On APPLY reduce production app -> funsym LPAR termlist RPAR

State 111:
termlist -> termlist COMMA . term [ RPAR COMMA ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 112
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 112:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
termlist -> termlist COMMA term . [ RPAR COMMA ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On RPAR reduce production termlist -> termlist COMMA term
-- On COMMA reduce production termlist -> termlist COMMA term

State 113:
arith -> term MINUS . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 114
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 114:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term MINUS term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TIMES shift to state 73
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production arith -> term MINUS term
-- On UNION reduce production arith -> term MINUS term
-- On THEN reduce production arith -> term MINUS term
-- On SUBSET reduce production arith -> term MINUS term
-- On RPAR reduce production arith -> term MINUS term
-- On RBRA reduce production arith -> term MINUS term
-- On PLUS reduce production arith -> term MINUS term
-- On MINUS reduce production arith -> term MINUS term
-- On LESSOREQUAL reduce production arith -> term MINUS term
-- On LESS reduce production arith -> term MINUS term
-- On INTER reduce production arith -> term MINUS term
-- On IMPL reduce production arith -> term MINUS term
-- On GREATEROREQUAL reduce production arith -> term MINUS term
-- On GREATER reduce production arith -> term MINUS term
-- On EQUAL reduce production arith -> term MINUS term
-- On EOF reduce production arith -> term MINUS term
-- On END reduce production arith -> term MINUS term
-- On ELSE reduce production arith -> term MINUS term
-- On DOT reduce production arith -> term MINUS term
-- On DISJ reduce production arith -> term MINUS term
-- On DISEQ reduce production arith -> term MINUS term
-- On CONJ reduce production arith -> term MINUS term
-- On COMMA reduce production arith -> term MINUS term
-- On CMP reduce production arith -> term MINUS term
-- On BIIMPL reduce production arith -> term MINUS term
-- On ASSIGN reduce production arith -> term MINUS term
-- On APPLY reduce production arith -> term MINUS term

State 115:
term -> coproduct . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> coproduct
-- On UNION reduce production term -> coproduct
-- On TIMES reduce production term -> coproduct
-- On THEN reduce production term -> coproduct
-- On SUBSET reduce production term -> coproduct
-- On RPAR reduce production term -> coproduct
-- On RBRA reduce production term -> coproduct
-- On PLUS reduce production term -> coproduct
-- On MINUS reduce production term -> coproduct
-- On LISTCONS reduce production term -> coproduct
-- On LESSOREQUAL reduce production term -> coproduct
-- On LESS reduce production term -> coproduct
-- On LBRA reduce production term -> coproduct
-- On INTER reduce production term -> coproduct
-- On IMPL reduce production term -> coproduct
-- On GREATEROREQUAL reduce production term -> coproduct
-- On GREATER reduce production term -> coproduct
-- On EXPT reduce production term -> coproduct
-- On EQUAL reduce production term -> coproduct
-- On EOF reduce production term -> coproduct
-- On END reduce production term -> coproduct
-- On ELSE reduce production term -> coproduct
-- On DOT reduce production term -> coproduct
-- On DISJ reduce production term -> coproduct
-- On DISEQ reduce production term -> coproduct
-- On CONJ reduce production term -> coproduct
-- On COMMA reduce production term -> coproduct
-- On CMP reduce production term -> coproduct
-- On BVCONC reduce production term -> coproduct
-- On BIIMPL reduce production term -> coproduct
-- On ASSIGN reduce production term -> coproduct
-- On APPLY reduce production term -> coproduct

State 116:
term -> bv . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> bv
-- On UNION reduce production term -> bv
-- On TIMES reduce production term -> bv
-- On THEN reduce production term -> bv
-- On SUBSET reduce production term -> bv
-- On RPAR reduce production term -> bv
-- On RBRA reduce production term -> bv
-- On PLUS reduce production term -> bv
-- On MINUS reduce production term -> bv
-- On LISTCONS reduce production term -> bv
-- On LESSOREQUAL reduce production term -> bv
-- On LESS reduce production term -> bv
-- On LBRA reduce production term -> bv
-- On INTER reduce production term -> bv
-- On IMPL reduce production term -> bv
-- On GREATEROREQUAL reduce production term -> bv
-- On GREATER reduce production term -> bv
-- On EXPT reduce production term -> bv
-- On EQUAL reduce production term -> bv
-- On EOF reduce production term -> bv
-- On END reduce production term -> bv
-- On ELSE reduce production term -> bv
-- On DOT reduce production term -> bv
-- On DISJ reduce production term -> bv
-- On DISEQ reduce production term -> bv
-- On CONJ reduce production term -> bv
-- On COMMA reduce production term -> bv
-- On CMP reduce production term -> bv
-- On BVCONC reduce production term -> bv
-- On BIIMPL reduce production term -> bv
-- On ASSIGN reduce production term -> bv
-- On APPLY reduce production term -> bv

State 117:
term -> boolean . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> boolean
-- On UNION reduce production term -> boolean
-- On TIMES reduce production term -> boolean
-- On THEN reduce production term -> boolean
-- On SUBSET reduce production term -> boolean
-- On RPAR reduce production term -> boolean
-- On RBRA reduce production term -> boolean
-- On PLUS reduce production term -> boolean
-- On MINUS reduce production term -> boolean
-- On LISTCONS reduce production term -> boolean
-- On LESSOREQUAL reduce production term -> boolean
-- On LESS reduce production term -> boolean
-- On LBRA reduce production term -> boolean
-- On INTER reduce production term -> boolean
-- On IMPL reduce production term -> boolean
-- On GREATEROREQUAL reduce production term -> boolean
-- On GREATER reduce production term -> boolean
-- On EXPT reduce production term -> boolean
-- On EQUAL reduce production term -> boolean
-- On EOF reduce production term -> boolean
-- On END reduce production term -> boolean
-- On ELSE reduce production term -> boolean
-- On DOT reduce production term -> boolean
-- On DISJ reduce production term -> boolean
-- On DISEQ reduce production term -> boolean
-- On CONJ reduce production term -> boolean
-- On COMMA reduce production term -> boolean
-- On CMP reduce production term -> boolean
-- On BVCONC reduce production term -> boolean
-- On BIIMPL reduce production term -> boolean
-- On ASSIGN reduce production term -> boolean
-- On APPLY reduce production term -> boolean

State 118:
term -> array . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> array
-- On UNION reduce production term -> array
-- On TIMES reduce production term -> array
-- On THEN reduce production term -> array
-- On SUBSET reduce production term -> array
-- On RPAR reduce production term -> array
-- On RBRA reduce production term -> array
-- On PLUS reduce production term -> array
-- On MINUS reduce production term -> array
-- On LISTCONS reduce production term -> array
-- On LESSOREQUAL reduce production term -> array
-- On LESS reduce production term -> array
-- On LBRA reduce production term -> array
-- On INTER reduce production term -> array
-- On IMPL reduce production term -> array
-- On GREATEROREQUAL reduce production term -> array
-- On GREATER reduce production term -> array
-- On EXPT reduce production term -> array
-- On EQUAL reduce production term -> array
-- On EOF reduce production term -> array
-- On END reduce production term -> array
-- On ELSE reduce production term -> array
-- On DOT reduce production term -> array
-- On DISJ reduce production term -> array
-- On DISEQ reduce production term -> array
-- On CONJ reduce production term -> array
-- On COMMA reduce production term -> array
-- On CMP reduce production term -> array
-- On BVCONC reduce production term -> array
-- On BIIMPL reduce production term -> array
-- On ASSIGN reduce production term -> array
-- On APPLY reduce production term -> array

State 119:
term -> arith . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> arith
-- On UNION reduce production term -> arith
-- On TIMES reduce production term -> arith
-- On THEN reduce production term -> arith
-- On SUBSET reduce production term -> arith
-- On RPAR reduce production term -> arith
-- On RBRA reduce production term -> arith
-- On PLUS reduce production term -> arith
-- On MINUS reduce production term -> arith
-- On LISTCONS reduce production term -> arith
-- On LESSOREQUAL reduce production term -> arith
-- On LESS reduce production term -> arith
-- On LBRA reduce production term -> arith
-- On INTER reduce production term -> arith
-- On IMPL reduce production term -> arith
-- On GREATEROREQUAL reduce production term -> arith
-- On GREATER reduce production term -> arith
-- On EXPT reduce production term -> arith
-- On EQUAL reduce production term -> arith
-- On EOF reduce production term -> arith
-- On END reduce production term -> arith
-- On ELSE reduce production term -> arith
-- On DOT reduce production term -> arith
-- On DISJ reduce production term -> arith
-- On DISEQ reduce production term -> arith
-- On CONJ reduce production term -> arith
-- On COMMA reduce production term -> arith
-- On CMP reduce production term -> arith
-- On BVCONC reduce production term -> arith
-- On BIIMPL reduce production term -> arith
-- On ASSIGN reduce production term -> arith
-- On APPLY reduce production term -> arith

State 120:
term -> apply . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> apply
-- On UNION reduce production term -> apply
-- On TIMES reduce production term -> apply
-- On THEN reduce production term -> apply
-- On SUBSET reduce production term -> apply
-- On RPAR reduce production term -> apply
-- On RBRA reduce production term -> apply
-- On PLUS reduce production term -> apply
-- On MINUS reduce production term -> apply
-- On LISTCONS reduce production term -> apply
-- On LESSOREQUAL reduce production term -> apply
-- On LESS reduce production term -> apply
-- On LBRA reduce production term -> apply
-- On INTER reduce production term -> apply
-- On IMPL reduce production term -> apply
-- On GREATEROREQUAL reduce production term -> apply
-- On GREATER reduce production term -> apply
-- On EXPT reduce production term -> apply
-- On EQUAL reduce production term -> apply
-- On EOF reduce production term -> apply
-- On END reduce production term -> apply
-- On ELSE reduce production term -> apply
-- On DOT reduce production term -> apply
-- On DISJ reduce production term -> apply
-- On DISEQ reduce production term -> apply
-- On CONJ reduce production term -> apply
-- On COMMA reduce production term -> apply
-- On CMP reduce production term -> apply
-- On BVCONC reduce production term -> apply
-- On BIIMPL reduce production term -> apply
-- On ASSIGN reduce production term -> apply
-- On APPLY reduce production term -> apply

State 121:
term -> app . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> app
-- On UNION reduce production term -> app
-- On TIMES reduce production term -> app
-- On THEN reduce production term -> app
-- On SUBSET reduce production term -> app
-- On RPAR reduce production term -> app
-- On RBRA reduce production term -> app
-- On PLUS reduce production term -> app
-- On MINUS reduce production term -> app
-- On LISTCONS reduce production term -> app
-- On LESSOREQUAL reduce production term -> app
-- On LESS reduce production term -> app
-- On LBRA reduce production term -> app
-- On INTER reduce production term -> app
-- On IMPL reduce production term -> app
-- On GREATEROREQUAL reduce production term -> app
-- On GREATER reduce production term -> app
-- On EXPT reduce production term -> app
-- On EQUAL reduce production term -> app
-- On EOF reduce production term -> app
-- On END reduce production term -> app
-- On ELSE reduce production term -> app
-- On DOT reduce production term -> app
-- On DISJ reduce production term -> app
-- On DISEQ reduce production term -> app
-- On CONJ reduce production term -> app
-- On COMMA reduce production term -> app
-- On CMP reduce production term -> app
-- On BVCONC reduce production term -> app
-- On BIIMPL reduce production term -> app
-- On ASSIGN reduce production term -> app
-- On APPLY reduce production term -> app

State 122:
propset -> term INTER . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 123
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 123:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term INTER term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production propset -> term INTER term
-- On UNION reduce production propset -> term INTER term
-- On THEN reduce production propset -> term INTER term
-- On SUBSET reduce production propset -> term INTER term
-- On RPAR reduce production propset -> term INTER term
-- On RBRA reduce production propset -> term INTER term
-- On LESSOREQUAL reduce production propset -> term INTER term
-- On LESS reduce production propset -> term INTER term
-- On IMPL reduce production propset -> term INTER term
-- On GREATEROREQUAL reduce production propset -> term INTER term
-- On GREATER reduce production propset -> term INTER term
-- On EQUAL reduce production propset -> term INTER term
-- On EOF reduce production propset -> term INTER term
-- On END reduce production propset -> term INTER term
-- On ELSE reduce production propset -> term INTER term
-- On DOT reduce production propset -> term INTER term
-- On DISJ reduce production propset -> term INTER term
-- On DISEQ reduce production propset -> term INTER term
-- On CONJ reduce production propset -> term INTER term
-- On COMMA reduce production propset -> term INTER term
-- On CMP reduce production propset -> term INTER term
-- On BIIMPL reduce production propset -> term INTER term
-- On ASSIGN reduce production propset -> term INTER term
-- On APPLY reduce production propset -> term INTER term

State 124:
apply -> term APPLY . term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 125
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 125:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
apply -> term APPLY term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On XOR reduce production apply -> term APPLY term
-- On THEN reduce production apply -> term APPLY term
-- On SUBSET reduce production apply -> term APPLY term
-- On RPAR reduce production apply -> term APPLY term
-- On RBRA reduce production apply -> term APPLY term
-- On LESSOREQUAL reduce production apply -> term APPLY term
-- On LESS reduce production apply -> term APPLY term
-- On IMPL reduce production apply -> term APPLY term
-- On GREATEROREQUAL reduce production apply -> term APPLY term
-- On GREATER reduce production apply -> term APPLY term
-- On EQUAL reduce production apply -> term APPLY term
-- On EOF reduce production apply -> term APPLY term
-- On END reduce production apply -> term APPLY term
-- On ELSE reduce production apply -> term APPLY term
-- On DOT reduce production apply -> term APPLY term
-- On DISJ reduce production apply -> term APPLY term
-- On DISEQ reduce production apply -> term APPLY term
-- On CONJ reduce production apply -> term APPLY term
-- On COMMA reduce production apply -> term APPLY term
-- On CMP reduce production apply -> term APPLY term
-- On BIIMPL reduce production apply -> term APPLY term
-- On ASSIGN reduce production apply -> term APPLY term
-- On APPLY reduce production apply -> term APPLY term

State 126:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
termlist -> term . [ RPAR COMMA ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On RPAR reduce production termlist -> term
-- On COMMA reduce production termlist -> term

State 127:
array -> term LBRA term ASSIGN . term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 128
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 128:
apply -> term . APPLY term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term LBRA term ASSIGN term . RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RBRA PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RBRA shift to state 129
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 129:
array -> term LBRA term ASSIGN term RBRA . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production array -> term LBRA term ASSIGN term RBRA
-- On UNION reduce production array -> term LBRA term ASSIGN term RBRA
-- On TIMES reduce production array -> term LBRA term ASSIGN term RBRA
-- On THEN reduce production array -> term LBRA term ASSIGN term RBRA
-- On SUBSET reduce production array -> term LBRA term ASSIGN term RBRA
-- On RPAR reduce production array -> term LBRA term ASSIGN term RBRA
-- On RBRA reduce production array -> term LBRA term ASSIGN term RBRA
-- On PLUS reduce production array -> term LBRA term ASSIGN term RBRA
-- On MINUS reduce production array -> term LBRA term ASSIGN term RBRA
-- On LISTCONS reduce production array -> term LBRA term ASSIGN term RBRA
-- On LESSOREQUAL reduce production array -> term LBRA term ASSIGN term RBRA
-- On LESS reduce production array -> term LBRA term ASSIGN term RBRA
-- On LBRA reduce production array -> term LBRA term ASSIGN term RBRA
-- On INTER reduce production array -> term LBRA term ASSIGN term RBRA
-- On IMPL reduce production array -> term LBRA term ASSIGN term RBRA
-- On GREATEROREQUAL reduce production array -> term LBRA term ASSIGN term RBRA
-- On GREATER reduce production array -> term LBRA term ASSIGN term RBRA
-- On EXPT reduce production array -> term LBRA term ASSIGN term RBRA
-- On EQUAL reduce production array -> term LBRA term ASSIGN term RBRA
-- On EOF reduce production array -> term LBRA term ASSIGN term RBRA
-- On END reduce production array -> term LBRA term ASSIGN term RBRA
-- On ELSE reduce production array -> term LBRA term ASSIGN term RBRA
-- On DOT reduce production array -> term LBRA term ASSIGN term RBRA
-- On DISJ reduce production array -> term LBRA term ASSIGN term RBRA
-- On DISEQ reduce production array -> term LBRA term ASSIGN term RBRA
-- On CONJ reduce production array -> term LBRA term ASSIGN term RBRA
-- On COMMA reduce production array -> term LBRA term ASSIGN term RBRA
-- On CMP reduce production array -> term LBRA term ASSIGN term RBRA
-- On BVCONC reduce production array -> term LBRA term ASSIGN term RBRA
-- On BIIMPL reduce production array -> term LBRA term ASSIGN term RBRA
-- On ASSIGN reduce production array -> term LBRA term ASSIGN term RBRA
-- On APPLY reduce production array -> term LBRA term ASSIGN term RBRA

State 130:
product -> CAR LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production product -> CAR LPAR term RPAR
-- On UNION reduce production product -> CAR LPAR term RPAR
-- On TIMES reduce production product -> CAR LPAR term RPAR
-- On THEN reduce production product -> CAR LPAR term RPAR
-- On SUBSET reduce production product -> CAR LPAR term RPAR
-- On RPAR reduce production product -> CAR LPAR term RPAR
-- On RBRA reduce production product -> CAR LPAR term RPAR
-- On PLUS reduce production product -> CAR LPAR term RPAR
-- On MINUS reduce production product -> CAR LPAR term RPAR
-- On LISTCONS reduce production product -> CAR LPAR term RPAR
-- On LESSOREQUAL reduce production product -> CAR LPAR term RPAR
-- On LESS reduce production product -> CAR LPAR term RPAR
-- On LBRA reduce production product -> CAR LPAR term RPAR
-- On INTER reduce production product -> CAR LPAR term RPAR
-- On IMPL reduce production product -> CAR LPAR term RPAR
-- On GREATEROREQUAL reduce production product -> CAR LPAR term RPAR
-- On GREATER reduce production product -> CAR LPAR term RPAR
-- On EXPT reduce production product -> CAR LPAR term RPAR
-- On EQUAL reduce production product -> CAR LPAR term RPAR
-- On EOF reduce production product -> CAR LPAR term RPAR
-- On END reduce production product -> CAR LPAR term RPAR
-- On ELSE reduce production product -> CAR LPAR term RPAR
-- On DOT reduce production product -> CAR LPAR term RPAR
-- On DISJ reduce production product -> CAR LPAR term RPAR
-- On DISEQ reduce production product -> CAR LPAR term RPAR
-- On CONJ reduce production product -> CAR LPAR term RPAR
-- On COMMA reduce production product -> CAR LPAR term RPAR
-- On CMP reduce production product -> CAR LPAR term RPAR
-- On BVCONC reduce production product -> CAR LPAR term RPAR
-- On BIIMPL reduce production product -> CAR LPAR term RPAR
-- On ASSIGN reduce production product -> CAR LPAR term RPAR
-- On APPLY reduce production product -> CAR LPAR term RPAR

State 131:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
product -> CDR LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 132
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 132:
product -> CDR LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production product -> CDR LPAR term RPAR
-- On UNION reduce production product -> CDR LPAR term RPAR
-- On TIMES reduce production product -> CDR LPAR term RPAR
-- On THEN reduce production product -> CDR LPAR term RPAR
-- On SUBSET reduce production product -> CDR LPAR term RPAR
-- On RPAR reduce production product -> CDR LPAR term RPAR
-- On RBRA reduce production product -> CDR LPAR term RPAR
-- On PLUS reduce production product -> CDR LPAR term RPAR
-- On MINUS reduce production product -> CDR LPAR term RPAR
-- On LISTCONS reduce production product -> CDR LPAR term RPAR
-- On LESSOREQUAL reduce production product -> CDR LPAR term RPAR
-- On LESS reduce production product -> CDR LPAR term RPAR
-- On LBRA reduce production product -> CDR LPAR term RPAR
-- On INTER reduce production product -> CDR LPAR term RPAR
-- On IMPL reduce production product -> CDR LPAR term RPAR
-- On GREATEROREQUAL reduce production product -> CDR LPAR term RPAR
-- On GREATER reduce production product -> CDR LPAR term RPAR
-- On EXPT reduce production product -> CDR LPAR term RPAR
-- On EQUAL reduce production product -> CDR LPAR term RPAR
-- On EOF reduce production product -> CDR LPAR term RPAR
-- On END reduce production product -> CDR LPAR term RPAR
-- On ELSE reduce production product -> CDR LPAR term RPAR
-- On DOT reduce production product -> CDR LPAR term RPAR
-- On DISJ reduce production product -> CDR LPAR term RPAR
-- On DISEQ reduce production product -> CDR LPAR term RPAR
-- On CONJ reduce production product -> CDR LPAR term RPAR
-- On COMMA reduce production product -> CDR LPAR term RPAR
-- On CMP reduce production product -> CDR LPAR term RPAR
-- On BVCONC reduce production product -> CDR LPAR term RPAR
-- On BIIMPL reduce production product -> CDR LPAR term RPAR
-- On ASSIGN reduce production product -> CDR LPAR term RPAR
-- On APPLY reduce production product -> CDR LPAR term RPAR

State 133:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> COMPL term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production propset -> COMPL term
-- On UNION reduce production propset -> COMPL term
-- On TIMES reduce production propset -> COMPL term
-- On THEN reduce production propset -> COMPL term
-- On SUBSET reduce production propset -> COMPL term
-- On RPAR reduce production propset -> COMPL term
-- On RBRA reduce production propset -> COMPL term
-- On PLUS reduce production propset -> COMPL term
-- On MINUS reduce production propset -> COMPL term
-- On LISTCONS reduce production propset -> COMPL term
-- On LESSOREQUAL reduce production propset -> COMPL term
-- On LESS reduce production propset -> COMPL term
-- On LBRA reduce production propset -> COMPL term
-- On INTER reduce production propset -> COMPL term
-- On IMPL reduce production propset -> COMPL term
-- On GREATEROREQUAL reduce production propset -> COMPL term
-- On GREATER reduce production propset -> COMPL term
-- On EXPT reduce production propset -> COMPL term
-- On EQUAL reduce production propset -> COMPL term
-- On EOF reduce production propset -> COMPL term
-- On END reduce production propset -> COMPL term
-- On ELSE reduce production propset -> COMPL term
-- On DOT reduce production propset -> COMPL term
-- On DISJ reduce production propset -> COMPL term
-- On DISEQ reduce production propset -> COMPL term
-- On CONJ reduce production propset -> COMPL term
-- On COMMA reduce production propset -> COMPL term
-- On CMP reduce production propset -> COMPL term
-- On BVCONC reduce production propset -> COMPL term
-- On BIIMPL reduce production propset -> COMPL term
-- On ASSIGN reduce production propset -> COMPL term
-- On APPLY reduce production propset -> COMPL term

State 134:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term . COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On COMMA shift to state 135
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 135:
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 136
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 136:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 137
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 137:
bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On UNION reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On TIMES reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On THEN reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On SUBSET reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On RPAR reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On RBRA reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On PLUS reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On MINUS reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On LISTCONS reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On LESSOREQUAL reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On LESS reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On LBRA reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On INTER reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On IMPL reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On GREATEROREQUAL reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On GREATER reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On EXPT reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On EQUAL reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On EOF reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On END reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On ELSE reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On DOT reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On DISJ reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On DISEQ reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On CONJ reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On COMMA reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On CMP reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On BVCONC reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On BIIMPL reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On ASSIGN reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR
-- On APPLY reduce production bv -> CONC LBRA INTCONST COMMA INTCONST RBRA LPAR term COMMA term RPAR

State 138:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
product -> CONS LPAR term . COMMA term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT COMMA BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On COMMA shift to state 139
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 139:
product -> CONS LPAR term COMMA . term RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 140
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 140:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
product -> CONS LPAR term COMMA term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 141
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 141:
product -> CONS LPAR term COMMA term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production product -> CONS LPAR term COMMA term RPAR
-- On UNION reduce production product -> CONS LPAR term COMMA term RPAR
-- On TIMES reduce production product -> CONS LPAR term COMMA term RPAR
-- On THEN reduce production product -> CONS LPAR term COMMA term RPAR
-- On SUBSET reduce production product -> CONS LPAR term COMMA term RPAR
-- On RPAR reduce production product -> CONS LPAR term COMMA term RPAR
-- On RBRA reduce production product -> CONS LPAR term COMMA term RPAR
-- On PLUS reduce production product -> CONS LPAR term COMMA term RPAR
-- On MINUS reduce production product -> CONS LPAR term COMMA term RPAR
-- On LISTCONS reduce production product -> CONS LPAR term COMMA term RPAR
-- On LESSOREQUAL reduce production product -> CONS LPAR term COMMA term RPAR
-- On LESS reduce production product -> CONS LPAR term COMMA term RPAR
-- On LBRA reduce production product -> CONS LPAR term COMMA term RPAR
-- On INTER reduce production product -> CONS LPAR term COMMA term RPAR
-- On IMPL reduce production product -> CONS LPAR term COMMA term RPAR
-- On GREATEROREQUAL reduce production product -> CONS LPAR term COMMA term RPAR
-- On GREATER reduce production product -> CONS LPAR term COMMA term RPAR
-- On EXPT reduce production product -> CONS LPAR term COMMA term RPAR
-- On EQUAL reduce production product -> CONS LPAR term COMMA term RPAR
-- On EOF reduce production product -> CONS LPAR term COMMA term RPAR
-- On END reduce production product -> CONS LPAR term COMMA term RPAR
-- On ELSE reduce production product -> CONS LPAR term COMMA term RPAR
-- On DOT reduce production product -> CONS LPAR term COMMA term RPAR
-- On DISJ reduce production product -> CONS LPAR term COMMA term RPAR
-- On DISEQ reduce production product -> CONS LPAR term COMMA term RPAR
-- On CONJ reduce production product -> CONS LPAR term COMMA term RPAR
-- On COMMA reduce production product -> CONS LPAR term COMMA term RPAR
-- On CMP reduce production product -> CONS LPAR term COMMA term RPAR
-- On BVCONC reduce production product -> CONS LPAR term COMMA term RPAR
-- On BIIMPL reduce production product -> CONS LPAR term COMMA term RPAR
-- On ASSIGN reduce production product -> CONS LPAR term COMMA term RPAR
-- On APPLY reduce production product -> CONS LPAR term COMMA term RPAR

State 142:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> CREATE LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 143
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 143:
array -> CREATE LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production array -> CREATE LPAR term RPAR
-- On UNION reduce production array -> CREATE LPAR term RPAR
-- On TIMES reduce production array -> CREATE LPAR term RPAR
-- On THEN reduce production array -> CREATE LPAR term RPAR
-- On SUBSET reduce production array -> CREATE LPAR term RPAR
-- On RPAR reduce production array -> CREATE LPAR term RPAR
-- On RBRA reduce production array -> CREATE LPAR term RPAR
-- On PLUS reduce production array -> CREATE LPAR term RPAR
-- On MINUS reduce production array -> CREATE LPAR term RPAR
-- On LISTCONS reduce production array -> CREATE LPAR term RPAR
-- On LESSOREQUAL reduce production array -> CREATE LPAR term RPAR
-- On LESS reduce production array -> CREATE LPAR term RPAR
-- On LBRA reduce production array -> CREATE LPAR term RPAR
-- On INTER reduce production array -> CREATE LPAR term RPAR
-- On IMPL reduce production array -> CREATE LPAR term RPAR
-- On GREATEROREQUAL reduce production array -> CREATE LPAR term RPAR
-- On GREATER reduce production array -> CREATE LPAR term RPAR
-- On EXPT reduce production array -> CREATE LPAR term RPAR
-- On EQUAL reduce production array -> CREATE LPAR term RPAR
-- On EOF reduce production array -> CREATE LPAR term RPAR
-- On END reduce production array -> CREATE LPAR term RPAR
-- On ELSE reduce production array -> CREATE LPAR term RPAR
-- On DOT reduce production array -> CREATE LPAR term RPAR
-- On DISJ reduce production array -> CREATE LPAR term RPAR
-- On DISEQ reduce production array -> CREATE LPAR term RPAR
-- On CONJ reduce production array -> CREATE LPAR term RPAR
-- On COMMA reduce production array -> CREATE LPAR term RPAR
-- On CMP reduce production array -> CREATE LPAR term RPAR
-- On BVCONC reduce production array -> CREATE LPAR term RPAR
-- On BIIMPL reduce production array -> CREATE LPAR term RPAR
-- On ASSIGN reduce production array -> CREATE LPAR term RPAR
-- On APPLY reduce production array -> CREATE LPAR term RPAR

State 144:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> HEAD LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 145
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 145:
ics_list -> HEAD LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production ics_list -> HEAD LPAR term RPAR
-- On UNION reduce production ics_list -> HEAD LPAR term RPAR
-- On TIMES reduce production ics_list -> HEAD LPAR term RPAR
-- On THEN reduce production ics_list -> HEAD LPAR term RPAR
-- On SUBSET reduce production ics_list -> HEAD LPAR term RPAR
-- On RPAR reduce production ics_list -> HEAD LPAR term RPAR
-- On RBRA reduce production ics_list -> HEAD LPAR term RPAR
-- On PLUS reduce production ics_list -> HEAD LPAR term RPAR
-- On MINUS reduce production ics_list -> HEAD LPAR term RPAR
-- On LISTCONS reduce production ics_list -> HEAD LPAR term RPAR
-- On LESSOREQUAL reduce production ics_list -> HEAD LPAR term RPAR
-- On LESS reduce production ics_list -> HEAD LPAR term RPAR
-- On LBRA reduce production ics_list -> HEAD LPAR term RPAR
-- On INTER reduce production ics_list -> HEAD LPAR term RPAR
-- On IMPL reduce production ics_list -> HEAD LPAR term RPAR
-- On GREATEROREQUAL reduce production ics_list -> HEAD LPAR term RPAR
-- On GREATER reduce production ics_list -> HEAD LPAR term RPAR
-- On EXPT reduce production ics_list -> HEAD LPAR term RPAR
-- On EQUAL reduce production ics_list -> HEAD LPAR term RPAR
-- On EOF reduce production ics_list -> HEAD LPAR term RPAR
-- On END reduce production ics_list -> HEAD LPAR term RPAR
-- On ELSE reduce production ics_list -> HEAD LPAR term RPAR
-- On DOT reduce production ics_list -> HEAD LPAR term RPAR
-- On DISJ reduce production ics_list -> HEAD LPAR term RPAR
-- On DISEQ reduce production ics_list -> HEAD LPAR term RPAR
-- On CONJ reduce production ics_list -> HEAD LPAR term RPAR
-- On COMMA reduce production ics_list -> HEAD LPAR term RPAR
-- On CMP reduce production ics_list -> HEAD LPAR term RPAR
-- On BVCONC reduce production ics_list -> HEAD LPAR term RPAR
-- On BIIMPL reduce production ics_list -> HEAD LPAR term RPAR
-- On ASSIGN reduce production ics_list -> HEAD LPAR term RPAR
-- On APPLY reduce production ics_list -> HEAD LPAR term RPAR

State 146:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> INJ LBRA INTCONST RBRA LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 147
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 147:
coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On UNION reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On TIMES reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On THEN reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On SUBSET reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On RPAR reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On RBRA reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On PLUS reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On MINUS reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On LISTCONS reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On LESS reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On LBRA reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On INTER reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On IMPL reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On GREATER reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On EXPT reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On EQUAL reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On EOF reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On END reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On ELSE reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On DOT reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On DISJ reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On DISEQ reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On CONJ reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On COMMA reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On CMP reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On BVCONC reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On BIIMPL reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On ASSIGN reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR
-- On APPLY reduce production coproduct -> INJ LBRA INTCONST RBRA LPAR term RPAR

State 148:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> INL LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 149
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 149:
coproduct -> INL LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> INL LPAR term RPAR
-- On UNION reduce production coproduct -> INL LPAR term RPAR
-- On TIMES reduce production coproduct -> INL LPAR term RPAR
-- On THEN reduce production coproduct -> INL LPAR term RPAR
-- On SUBSET reduce production coproduct -> INL LPAR term RPAR
-- On RPAR reduce production coproduct -> INL LPAR term RPAR
-- On RBRA reduce production coproduct -> INL LPAR term RPAR
-- On PLUS reduce production coproduct -> INL LPAR term RPAR
-- On MINUS reduce production coproduct -> INL LPAR term RPAR
-- On LISTCONS reduce production coproduct -> INL LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> INL LPAR term RPAR
-- On LESS reduce production coproduct -> INL LPAR term RPAR
-- On LBRA reduce production coproduct -> INL LPAR term RPAR
-- On INTER reduce production coproduct -> INL LPAR term RPAR
-- On IMPL reduce production coproduct -> INL LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> INL LPAR term RPAR
-- On GREATER reduce production coproduct -> INL LPAR term RPAR
-- On EXPT reduce production coproduct -> INL LPAR term RPAR
-- On EQUAL reduce production coproduct -> INL LPAR term RPAR
-- On EOF reduce production coproduct -> INL LPAR term RPAR
-- On END reduce production coproduct -> INL LPAR term RPAR
-- On ELSE reduce production coproduct -> INL LPAR term RPAR
-- On DOT reduce production coproduct -> INL LPAR term RPAR
-- On DISJ reduce production coproduct -> INL LPAR term RPAR
-- On DISEQ reduce production coproduct -> INL LPAR term RPAR
-- On CONJ reduce production coproduct -> INL LPAR term RPAR
-- On COMMA reduce production coproduct -> INL LPAR term RPAR
-- On CMP reduce production coproduct -> INL LPAR term RPAR
-- On BVCONC reduce production coproduct -> INL LPAR term RPAR
-- On BIIMPL reduce production coproduct -> INL LPAR term RPAR
-- On ASSIGN reduce production coproduct -> INL LPAR term RPAR
-- On APPLY reduce production coproduct -> INL LPAR term RPAR

State 150:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> INR LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 151
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 151:
coproduct -> INR LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> INR LPAR term RPAR
-- On UNION reduce production coproduct -> INR LPAR term RPAR
-- On TIMES reduce production coproduct -> INR LPAR term RPAR
-- On THEN reduce production coproduct -> INR LPAR term RPAR
-- On SUBSET reduce production coproduct -> INR LPAR term RPAR
-- On RPAR reduce production coproduct -> INR LPAR term RPAR
-- On RBRA reduce production coproduct -> INR LPAR term RPAR
-- On PLUS reduce production coproduct -> INR LPAR term RPAR
-- On MINUS reduce production coproduct -> INR LPAR term RPAR
-- On LISTCONS reduce production coproduct -> INR LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> INR LPAR term RPAR
-- On LESS reduce production coproduct -> INR LPAR term RPAR
-- On LBRA reduce production coproduct -> INR LPAR term RPAR
-- On INTER reduce production coproduct -> INR LPAR term RPAR
-- On IMPL reduce production coproduct -> INR LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> INR LPAR term RPAR
-- On GREATER reduce production coproduct -> INR LPAR term RPAR
-- On EXPT reduce production coproduct -> INR LPAR term RPAR
-- On EQUAL reduce production coproduct -> INR LPAR term RPAR
-- On EOF reduce production coproduct -> INR LPAR term RPAR
-- On END reduce production coproduct -> INR LPAR term RPAR
-- On ELSE reduce production coproduct -> INR LPAR term RPAR
-- On DOT reduce production coproduct -> INR LPAR term RPAR
-- On DISJ reduce production coproduct -> INR LPAR term RPAR
-- On DISEQ reduce production coproduct -> INR LPAR term RPAR
-- On CONJ reduce production coproduct -> INR LPAR term RPAR
-- On COMMA reduce production coproduct -> INR LPAR term RPAR
-- On CMP reduce production coproduct -> INR LPAR term RPAR
-- On BVCONC reduce production coproduct -> INR LPAR term RPAR
-- On BIIMPL reduce production coproduct -> INR LPAR term RPAR
-- On ASSIGN reduce production coproduct -> INR LPAR term RPAR
-- On APPLY reduce production coproduct -> INR LPAR term RPAR

State 152:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
apply -> LAMBDA namelist COLON term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production apply -> LAMBDA namelist COLON term
-- On UNION reduce production apply -> LAMBDA namelist COLON term
-- On TIMES reduce production apply -> LAMBDA namelist COLON term
-- On THEN reduce production apply -> LAMBDA namelist COLON term
-- On SUBSET reduce production apply -> LAMBDA namelist COLON term
-- On RPAR reduce production apply -> LAMBDA namelist COLON term
-- On RBRA reduce production apply -> LAMBDA namelist COLON term
-- On PLUS reduce production apply -> LAMBDA namelist COLON term
-- On MINUS reduce production apply -> LAMBDA namelist COLON term
-- On LISTCONS reduce production apply -> LAMBDA namelist COLON term
-- On LESSOREQUAL reduce production apply -> LAMBDA namelist COLON term
-- On LESS reduce production apply -> LAMBDA namelist COLON term
-- On LBRA reduce production apply -> LAMBDA namelist COLON term
-- On INTER reduce production apply -> LAMBDA namelist COLON term
-- On IMPL reduce production apply -> LAMBDA namelist COLON term
-- On GREATEROREQUAL reduce production apply -> LAMBDA namelist COLON term
-- On GREATER reduce production apply -> LAMBDA namelist COLON term
-- On EXPT reduce production apply -> LAMBDA namelist COLON term
-- On EQUAL reduce production apply -> LAMBDA namelist COLON term
-- On EOF reduce production apply -> LAMBDA namelist COLON term
-- On END reduce production apply -> LAMBDA namelist COLON term
-- On ELSE reduce production apply -> LAMBDA namelist COLON term
-- On DOT reduce production apply -> LAMBDA namelist COLON term
-- On DISJ reduce production apply -> LAMBDA namelist COLON term
-- On DISEQ reduce production apply -> LAMBDA namelist COLON term
-- On CONJ reduce production apply -> LAMBDA namelist COLON term
-- On COMMA reduce production apply -> LAMBDA namelist COLON term
-- On CMP reduce production apply -> LAMBDA namelist COLON term
-- On BVCONC reduce production apply -> LAMBDA namelist COLON term
-- On BIIMPL reduce production apply -> LAMBDA namelist COLON term
-- On ASSIGN reduce production apply -> LAMBDA namelist COLON term
-- On APPLY reduce production apply -> LAMBDA namelist COLON term

State 153:
namelist -> name . [ COMMA COLON ]
-- On COMMA reduce production namelist -> name
-- On COLON reduce production namelist -> name

State 154:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
term -> LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 155
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 155:
term -> LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production term -> LPAR term RPAR
-- On UNION reduce production term -> LPAR term RPAR
-- On TIMES reduce production term -> LPAR term RPAR
-- On THEN reduce production term -> LPAR term RPAR
-- On SUBSET reduce production term -> LPAR term RPAR
-- On RPAR reduce production term -> LPAR term RPAR
-- On RBRA reduce production term -> LPAR term RPAR
-- On PLUS reduce production term -> LPAR term RPAR
-- On MINUS reduce production term -> LPAR term RPAR
-- On LISTCONS reduce production term -> LPAR term RPAR
-- On LESSOREQUAL reduce production term -> LPAR term RPAR
-- On LESS reduce production term -> LPAR term RPAR
-- On LBRA reduce production term -> LPAR term RPAR
-- On INTER reduce production term -> LPAR term RPAR
-- On IMPL reduce production term -> LPAR term RPAR
-- On GREATEROREQUAL reduce production term -> LPAR term RPAR
-- On GREATER reduce production term -> LPAR term RPAR
-- On EXPT reduce production term -> LPAR term RPAR
-- On EQUAL reduce production term -> LPAR term RPAR
-- On EOF reduce production term -> LPAR term RPAR
-- On END reduce production term -> LPAR term RPAR
-- On ELSE reduce production term -> LPAR term RPAR
-- On DOT reduce production term -> LPAR term RPAR
-- On DISJ reduce production term -> LPAR term RPAR
-- On DISEQ reduce production term -> LPAR term RPAR
-- On CONJ reduce production term -> LPAR term RPAR
-- On COMMA reduce production term -> LPAR term RPAR
-- On CMP reduce production term -> LPAR term RPAR
-- On BVCONC reduce production term -> LPAR term RPAR
-- On BIIMPL reduce production term -> LPAR term RPAR
-- On ASSIGN reduce production term -> LPAR term RPAR
-- On APPLY reduce production term -> LPAR term RPAR

State 156:
apply -> term . APPLY term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> MINUS term . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production arith -> MINUS term
-- On UNION reduce production arith -> MINUS term
-- On TIMES reduce production arith -> MINUS term
-- On THEN reduce production arith -> MINUS term
-- On SUBSET reduce production arith -> MINUS term
-- On RPAR reduce production arith -> MINUS term
-- On RBRA reduce production arith -> MINUS term
-- On PLUS reduce production arith -> MINUS term
-- On MINUS reduce production arith -> MINUS term
-- On LISTCONS reduce production arith -> MINUS term
-- On LESSOREQUAL reduce production arith -> MINUS term
-- On LESS reduce production arith -> MINUS term
-- On LBRA reduce production arith -> MINUS term
-- On INTER reduce production arith -> MINUS term
-- On IMPL reduce production arith -> MINUS term
-- On GREATEROREQUAL reduce production arith -> MINUS term
-- On GREATER reduce production arith -> MINUS term
-- On EXPT reduce production arith -> MINUS term
-- On EQUAL reduce production arith -> MINUS term
-- On EOF reduce production arith -> MINUS term
-- On END reduce production arith -> MINUS term
-- On ELSE reduce production arith -> MINUS term
-- On DOT reduce production arith -> MINUS term
-- On DISJ reduce production arith -> MINUS term
-- On DISEQ reduce production arith -> MINUS term
-- On CONJ reduce production arith -> MINUS term
-- On COMMA reduce production arith -> MINUS term
-- On CMP reduce production arith -> MINUS term
-- On BVCONC reduce production arith -> MINUS term
-- On BIIMPL reduce production arith -> MINUS term
-- On ASSIGN reduce production arith -> MINUS term
-- On APPLY reduce production arith -> MINUS term

State 157:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> OUT LBRA INTCONST RBRA LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 158
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 158:
coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On UNION reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On TIMES reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On THEN reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On SUBSET reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On RPAR reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On RBRA reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On PLUS reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On MINUS reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On LISTCONS reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On LESS reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On LBRA reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On INTER reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On IMPL reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On GREATER reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On EXPT reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On EQUAL reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On EOF reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On END reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On ELSE reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On DOT reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On DISJ reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On DISEQ reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On CONJ reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On COMMA reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On CMP reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On BVCONC reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On BIIMPL reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On ASSIGN reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR
-- On APPLY reduce production coproduct -> OUT LBRA INTCONST RBRA LPAR term RPAR

State 159:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> OUTL LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 160
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 160:
coproduct -> OUTL LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> OUTL LPAR term RPAR
-- On UNION reduce production coproduct -> OUTL LPAR term RPAR
-- On TIMES reduce production coproduct -> OUTL LPAR term RPAR
-- On THEN reduce production coproduct -> OUTL LPAR term RPAR
-- On SUBSET reduce production coproduct -> OUTL LPAR term RPAR
-- On RPAR reduce production coproduct -> OUTL LPAR term RPAR
-- On RBRA reduce production coproduct -> OUTL LPAR term RPAR
-- On PLUS reduce production coproduct -> OUTL LPAR term RPAR
-- On MINUS reduce production coproduct -> OUTL LPAR term RPAR
-- On LISTCONS reduce production coproduct -> OUTL LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> OUTL LPAR term RPAR
-- On LESS reduce production coproduct -> OUTL LPAR term RPAR
-- On LBRA reduce production coproduct -> OUTL LPAR term RPAR
-- On INTER reduce production coproduct -> OUTL LPAR term RPAR
-- On IMPL reduce production coproduct -> OUTL LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> OUTL LPAR term RPAR
-- On GREATER reduce production coproduct -> OUTL LPAR term RPAR
-- On EXPT reduce production coproduct -> OUTL LPAR term RPAR
-- On EQUAL reduce production coproduct -> OUTL LPAR term RPAR
-- On EOF reduce production coproduct -> OUTL LPAR term RPAR
-- On END reduce production coproduct -> OUTL LPAR term RPAR
-- On ELSE reduce production coproduct -> OUTL LPAR term RPAR
-- On DOT reduce production coproduct -> OUTL LPAR term RPAR
-- On DISJ reduce production coproduct -> OUTL LPAR term RPAR
-- On DISEQ reduce production coproduct -> OUTL LPAR term RPAR
-- On CONJ reduce production coproduct -> OUTL LPAR term RPAR
-- On COMMA reduce production coproduct -> OUTL LPAR term RPAR
-- On CMP reduce production coproduct -> OUTL LPAR term RPAR
-- On BVCONC reduce production coproduct -> OUTL LPAR term RPAR
-- On BIIMPL reduce production coproduct -> OUTL LPAR term RPAR
-- On ASSIGN reduce production coproduct -> OUTL LPAR term RPAR
-- On APPLY reduce production coproduct -> OUTL LPAR term RPAR

State 161:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
coproduct -> OUTR LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 162
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 162:
coproduct -> OUTR LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production coproduct -> OUTR LPAR term RPAR
-- On UNION reduce production coproduct -> OUTR LPAR term RPAR
-- On TIMES reduce production coproduct -> OUTR LPAR term RPAR
-- On THEN reduce production coproduct -> OUTR LPAR term RPAR
-- On SUBSET reduce production coproduct -> OUTR LPAR term RPAR
-- On RPAR reduce production coproduct -> OUTR LPAR term RPAR
-- On RBRA reduce production coproduct -> OUTR LPAR term RPAR
-- On PLUS reduce production coproduct -> OUTR LPAR term RPAR
-- On MINUS reduce production coproduct -> OUTR LPAR term RPAR
-- On LISTCONS reduce production coproduct -> OUTR LPAR term RPAR
-- On LESSOREQUAL reduce production coproduct -> OUTR LPAR term RPAR
-- On LESS reduce production coproduct -> OUTR LPAR term RPAR
-- On LBRA reduce production coproduct -> OUTR LPAR term RPAR
-- On INTER reduce production coproduct -> OUTR LPAR term RPAR
-- On IMPL reduce production coproduct -> OUTR LPAR term RPAR
-- On GREATEROREQUAL reduce production coproduct -> OUTR LPAR term RPAR
-- On GREATER reduce production coproduct -> OUTR LPAR term RPAR
-- On EXPT reduce production coproduct -> OUTR LPAR term RPAR
-- On EQUAL reduce production coproduct -> OUTR LPAR term RPAR
-- On EOF reduce production coproduct -> OUTR LPAR term RPAR
-- On END reduce production coproduct -> OUTR LPAR term RPAR
-- On ELSE reduce production coproduct -> OUTR LPAR term RPAR
-- On DOT reduce production coproduct -> OUTR LPAR term RPAR
-- On DISJ reduce production coproduct -> OUTR LPAR term RPAR
-- On DISEQ reduce production coproduct -> OUTR LPAR term RPAR
-- On CONJ reduce production coproduct -> OUTR LPAR term RPAR
-- On COMMA reduce production coproduct -> OUTR LPAR term RPAR
-- On CMP reduce production coproduct -> OUTR LPAR term RPAR
-- On BVCONC reduce production coproduct -> OUTR LPAR term RPAR
-- On BIIMPL reduce production coproduct -> OUTR LPAR term RPAR
-- On ASSIGN reduce production coproduct -> OUTR LPAR term RPAR
-- On APPLY reduce production coproduct -> OUTR LPAR term RPAR

State 163:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 164
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 164:
bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On UNION reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On TIMES reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On THEN reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On SUBSET reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On RPAR reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On RBRA reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On PLUS reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On MINUS reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On LISTCONS reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On LESSOREQUAL reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On LESS reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On LBRA reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On INTER reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On IMPL reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On GREATEROREQUAL reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On GREATER reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On EXPT reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On EQUAL reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On EOF reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On END reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On ELSE reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On DOT reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On DISJ reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On DISEQ reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On CONJ reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On COMMA reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On CMP reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On BVCONC reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On BIIMPL reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On ASSIGN reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR
-- On APPLY reduce production bv -> SUB LBRA INTCONST COMMA INTCONST COMMA INTCONST RBRA LPAR term RPAR

State 165:
apply -> term . APPLY term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
ics_list -> TAIL LPAR term . RPAR [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
propset -> term . UNION term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES RPAR PLUS MINUS LISTCONS LBRA INTER EXPT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On RPAR shift to state 166
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 166:
ics_list -> TAIL LPAR term RPAR . [ XOR UNION TIMES THEN SUBSET RPAR RBRA PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER IMPL GREATEROREQUAL GREATER EXPT EQUAL EOF END ELSE DOT DISJ DISEQ CONJ COMMA CMP BVCONC BIIMPL ASSIGN APPLY ]
-- On XOR reduce production ics_list -> TAIL LPAR term RPAR
-- On UNION reduce production ics_list -> TAIL LPAR term RPAR
-- On TIMES reduce production ics_list -> TAIL LPAR term RPAR
-- On THEN reduce production ics_list -> TAIL LPAR term RPAR
-- On SUBSET reduce production ics_list -> TAIL LPAR term RPAR
-- On RPAR reduce production ics_list -> TAIL LPAR term RPAR
-- On RBRA reduce production ics_list -> TAIL LPAR term RPAR
-- On PLUS reduce production ics_list -> TAIL LPAR term RPAR
-- On MINUS reduce production ics_list -> TAIL LPAR term RPAR
-- On LISTCONS reduce production ics_list -> TAIL LPAR term RPAR
-- On LESSOREQUAL reduce production ics_list -> TAIL LPAR term RPAR
-- On LESS reduce production ics_list -> TAIL LPAR term RPAR
-- On LBRA reduce production ics_list -> TAIL LPAR term RPAR
-- On INTER reduce production ics_list -> TAIL LPAR term RPAR
-- On IMPL reduce production ics_list -> TAIL LPAR term RPAR
-- On GREATEROREQUAL reduce production ics_list -> TAIL LPAR term RPAR
-- On GREATER reduce production ics_list -> TAIL LPAR term RPAR
-- On EXPT reduce production ics_list -> TAIL LPAR term RPAR
-- On EQUAL reduce production ics_list -> TAIL LPAR term RPAR
-- On EOF reduce production ics_list -> TAIL LPAR term RPAR
-- On END reduce production ics_list -> TAIL LPAR term RPAR
-- On ELSE reduce production ics_list -> TAIL LPAR term RPAR
-- On DOT reduce production ics_list -> TAIL LPAR term RPAR
-- On DISJ reduce production ics_list -> TAIL LPAR term RPAR
-- On DISEQ reduce production ics_list -> TAIL LPAR term RPAR
-- On CONJ reduce production ics_list -> TAIL LPAR term RPAR
-- On COMMA reduce production ics_list -> TAIL LPAR term RPAR
-- On CMP reduce production ics_list -> TAIL LPAR term RPAR
-- On BVCONC reduce production ics_list -> TAIL LPAR term RPAR
-- On BIIMPL reduce production ics_list -> TAIL LPAR term RPAR
-- On ASSIGN reduce production ics_list -> TAIL LPAR term RPAR
-- On APPLY reduce production ics_list -> TAIL LPAR term RPAR

State 167:
atom -> FF . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On XOR reduce production atom -> FF
-- On THEN reduce production atom -> FF
-- On RBRA reduce production atom -> FF
-- On IMPL reduce production atom -> FF
-- On EOF reduce production atom -> FF
-- On END reduce production atom -> FF
-- On ELSE reduce production atom -> FF
-- On DOT reduce production atom -> FF
-- On DISJ reduce production atom -> FF
-- On CONJ reduce production atom -> FF
-- On COMMA reduce production atom -> FF
-- On BIIMPL reduce production atom -> FF

State 168:
apply -> term . APPLY term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
atom -> term . EQUAL term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . DISEQ term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . LESS term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . GREATER term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . LESSOREQUAL term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . GREATEROREQUAL term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
atom -> term . SUBSET term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On SUBSET shift to state 169
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LESSOREQUAL shift to state 171
-- On LESS shift to state 173
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On GREATEROREQUAL shift to state 175
-- On GREATER shift to state 177
-- On EXPT shift to state 86
-- On EQUAL shift to state 179
-- On DISEQ shift to state 181
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 169:
atom -> term SUBSET . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 170
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 170:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term SUBSET term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term SUBSET term
-- On THEN reduce production atom -> term SUBSET term
-- On RBRA reduce production atom -> term SUBSET term
-- On IMPL reduce production atom -> term SUBSET term
-- On EOF reduce production atom -> term SUBSET term
-- On END reduce production atom -> term SUBSET term
-- On ELSE reduce production atom -> term SUBSET term
-- On DOT reduce production atom -> term SUBSET term
-- On DISJ reduce production atom -> term SUBSET term
-- On CONJ reduce production atom -> term SUBSET term
-- On COMMA reduce production atom -> term SUBSET term
-- On BIIMPL reduce production atom -> term SUBSET term

State 171:
atom -> term LESSOREQUAL . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 172
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 172:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term LESSOREQUAL term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term LESSOREQUAL term
-- On THEN reduce production atom -> term LESSOREQUAL term
-- On RBRA reduce production atom -> term LESSOREQUAL term
-- On IMPL reduce production atom -> term LESSOREQUAL term
-- On EOF reduce production atom -> term LESSOREQUAL term
-- On END reduce production atom -> term LESSOREQUAL term
-- On ELSE reduce production atom -> term LESSOREQUAL term
-- On DOT reduce production atom -> term LESSOREQUAL term
-- On DISJ reduce production atom -> term LESSOREQUAL term
-- On CONJ reduce production atom -> term LESSOREQUAL term
-- On COMMA reduce production atom -> term LESSOREQUAL term
-- On BIIMPL reduce production atom -> term LESSOREQUAL term

State 173:
atom -> term LESS . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 174
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 174:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term LESS term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term LESS term
-- On THEN reduce production atom -> term LESS term
-- On RBRA reduce production atom -> term LESS term
-- On IMPL reduce production atom -> term LESS term
-- On EOF reduce production atom -> term LESS term
-- On END reduce production atom -> term LESS term
-- On ELSE reduce production atom -> term LESS term
-- On DOT reduce production atom -> term LESS term
-- On DISJ reduce production atom -> term LESS term
-- On CONJ reduce production atom -> term LESS term
-- On COMMA reduce production atom -> term LESS term
-- On BIIMPL reduce production atom -> term LESS term

State 175:
atom -> term GREATEROREQUAL . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 176
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 176:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term GREATEROREQUAL term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term GREATEROREQUAL term
-- On THEN reduce production atom -> term GREATEROREQUAL term
-- On RBRA reduce production atom -> term GREATEROREQUAL term
-- On IMPL reduce production atom -> term GREATEROREQUAL term
-- On EOF reduce production atom -> term GREATEROREQUAL term
-- On END reduce production atom -> term GREATEROREQUAL term
-- On ELSE reduce production atom -> term GREATEROREQUAL term
-- On DOT reduce production atom -> term GREATEROREQUAL term
-- On DISJ reduce production atom -> term GREATEROREQUAL term
-- On CONJ reduce production atom -> term GREATEROREQUAL term
-- On COMMA reduce production atom -> term GREATEROREQUAL term
-- On BIIMPL reduce production atom -> term GREATEROREQUAL term

State 177:
atom -> term GREATER . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 178
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 178:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term GREATER term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term GREATER term
-- On THEN reduce production atom -> term GREATER term
-- On RBRA reduce production atom -> term GREATER term
-- On IMPL reduce production atom -> term GREATER term
-- On EOF reduce production atom -> term GREATER term
-- On END reduce production atom -> term GREATER term
-- On ELSE reduce production atom -> term GREATER term
-- On DOT reduce production atom -> term GREATER term
-- On DISJ reduce production atom -> term GREATER term
-- On CONJ reduce production atom -> term GREATER term
-- On COMMA reduce production atom -> term GREATER term
-- On BIIMPL reduce production atom -> term GREATER term

State 179:
atom -> term EQUAL . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 180
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 180:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term EQUAL term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term EQUAL term
-- On THEN reduce production atom -> term EQUAL term
-- On RBRA reduce production atom -> term EQUAL term
-- On IMPL reduce production atom -> term EQUAL term
-- On EOF reduce production atom -> term EQUAL term
-- On END reduce production atom -> term EQUAL term
-- On ELSE reduce production atom -> term EQUAL term
-- On DOT reduce production atom -> term EQUAL term
-- On DISJ reduce production atom -> term EQUAL term
-- On CONJ reduce production atom -> term EQUAL term
-- On COMMA reduce production atom -> term EQUAL term
-- On BIIMPL reduce production atom -> term EQUAL term

State 181:
atom -> term DISEQ . term [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 182
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 182:
apply -> term . APPLY term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . PLUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . MINUS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . TIMES term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
arith -> term . EXPT int [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
array -> term . LBRA term RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
atom -> term DISEQ term . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ COMMA BIIMPL ]
bv -> term . BVCONC term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
ics_list -> term . LISTCONS term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . UNION term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
propset -> term . INTER term [ XOR UNION TIMES THEN RBRA PLUS MINUS LISTCONS LBRA INTER IMPL EXPT EOF END ELSE DOT DISJ CONJ COMMA BVCONC BIIMPL APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On XOR reduce production atom -> term DISEQ term
-- On THEN reduce production atom -> term DISEQ term
-- On RBRA reduce production atom -> term DISEQ term
-- On IMPL reduce production atom -> term DISEQ term
-- On EOF reduce production atom -> term DISEQ term
-- On END reduce production atom -> term DISEQ term
-- On ELSE reduce production atom -> term DISEQ term
-- On DOT reduce production atom -> term DISEQ term
-- On DISJ reduce production atom -> term DISEQ term
-- On CONJ reduce production atom -> term DISEQ term
-- On COMMA reduce production atom -> term DISEQ term
-- On BIIMPL reduce production atom -> term DISEQ term

State 183:
atomeof' -> atomeof . [ # ]
-- On # accept atomeof

State 184:
atomeof -> atom . EOF [ # ]
-- On EOF shift to state 185

State 185:
atomeof -> atom EOF . [ # ]
-- On # reduce production atomeof -> atom EOF

State 186:
commands' -> . commands [ # ]
-- On VALID shift to state 187
-- On USE shift to state 195
-- On UNTRACE shift to state 200
-- On UNSAT shift to state 205
-- On UNDO shift to state 208
-- On TRUE shift to state 2
-- On TRACE shift to state 209
-- On TAIL shift to state 3
-- On SYMTAB shift to state 211
-- On SUP shift to state 213
-- On SUB shift to state 5
-- On SPLIT shift to state 216
-- On SOLVE shift to state 218
-- On SIMPLIFY shift to state 223
-- On SIGMA shift to state 225
-- On SIG shift to state 227
-- On SHOW shift to state 234
-- On SAVE shift to state 238
-- On SAT shift to state 240
-- On S shift to state 14
-- On RESTORE shift to state 267
-- On RESET shift to state 269
-- On REMOVE shift to state 270
-- On RATCONST shift to state 15
-- On PROP shift to state 272
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MODEL shift to state 276
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INV shift to state 279
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On INF shift to state 283
-- On IDENT shift to state 286
-- On I shift to state 45
-- On HELP shift to state 287
-- On HEAD shift to state 46
-- On GET shift to state 330
-- On FULL shift to state 48
-- On FORGET shift to state 333
-- On FIND shift to state 334
-- On FALSE shift to state 49
-- On EXIT shift to state 338
-- On EOF shift to state 339
-- On EMPTY shift to state 50
-- On ECHO shift to state 340
-- On DROP shift to state 342
-- On DOM shift to state 343
-- On DISEQ shift to state 346
-- On DEF shift to state 349
-- On CTXT shift to state 353
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CHECK shift to state 355
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On CAN shift to state 357
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On ASSERT shift to state 359
-- On varname shift to state 364
-- On var shift to state 69
-- On term shift to state 370
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On help shift to state 373
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On commands shift to state 374
-- On command shift to state 375
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 187:
command -> VALID . optname atomlist [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 190
-- On TT reduce production optname ->
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FF reduce production optname ->
-- On FALSE reduce production optname ->
-- On EOF reduce production optname ->
-- On EMPTY reduce production optname ->
-- On DOT reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On COMMA reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 188:
optname -> KLAMMERAFFE . name [ TT TRUE TAIL SUB S RATCONST OUTR OUTL OUT NIL NEG MINUS LPAR LBRA LAMBDA K INTCONST INR INL INJ IF IDENT I HEAD FULL FF FALSE EOF EMPTY DOT CREATE CONS CONC COMPL COMMA CDR CAR C BVCONST ]
-- On IDENT shift to state 29
-- On name shift to state 189

State 189:
optname -> KLAMMERAFFE name . [ TT TRUE TAIL SUB S RATCONST OUTR OUTL OUT NIL NEG MINUS LPAR LBRA LAMBDA K INTCONST INR INL INJ IF IDENT I HEAD FULL FF FALSE EOF EMPTY DOT CREATE CONS CONC COMPL COMMA CDR CAR C BVCONST ]
-- On TT reduce production optname -> KLAMMERAFFE name
-- On TRUE reduce production optname -> KLAMMERAFFE name
-- On TAIL reduce production optname -> KLAMMERAFFE name
-- On SUB reduce production optname -> KLAMMERAFFE name
-- On S reduce production optname -> KLAMMERAFFE name
-- On RATCONST reduce production optname -> KLAMMERAFFE name
-- On OUTR reduce production optname -> KLAMMERAFFE name
-- On OUTL reduce production optname -> KLAMMERAFFE name
-- On OUT reduce production optname -> KLAMMERAFFE name
-- On NIL reduce production optname -> KLAMMERAFFE name
-- On NEG reduce production optname -> KLAMMERAFFE name
-- On MINUS reduce production optname -> KLAMMERAFFE name
-- On LPAR reduce production optname -> KLAMMERAFFE name
-- On LBRA reduce production optname -> KLAMMERAFFE name
-- On LAMBDA reduce production optname -> KLAMMERAFFE name
-- On K reduce production optname -> KLAMMERAFFE name
-- On INTCONST reduce production optname -> KLAMMERAFFE name
-- On INR reduce production optname -> KLAMMERAFFE name
-- On INL reduce production optname -> KLAMMERAFFE name
-- On INJ reduce production optname -> KLAMMERAFFE name
-- On IF reduce production optname -> KLAMMERAFFE name
-- On IDENT reduce production optname -> KLAMMERAFFE name
-- On I reduce production optname -> KLAMMERAFFE name
-- On HEAD reduce production optname -> KLAMMERAFFE name
-- On FULL reduce production optname -> KLAMMERAFFE name
-- On FF reduce production optname -> KLAMMERAFFE name
-- On FALSE reduce production optname -> KLAMMERAFFE name
-- On EOF reduce production optname -> KLAMMERAFFE name
-- On EMPTY reduce production optname -> KLAMMERAFFE name
-- On DOT reduce production optname -> KLAMMERAFFE name
-- On CREATE reduce production optname -> KLAMMERAFFE name
-- On CONS reduce production optname -> KLAMMERAFFE name
-- On CONC reduce production optname -> KLAMMERAFFE name
-- On COMPL reduce production optname -> KLAMMERAFFE name
-- On COMMA reduce production optname -> KLAMMERAFFE name
-- On CDR reduce production optname -> KLAMMERAFFE name
-- On CAR reduce production optname -> KLAMMERAFFE name
-- On C reduce production optname -> KLAMMERAFFE name
-- On BVCONST reduce production optname -> KLAMMERAFFE name

State 190:
command -> VALID optname . atomlist [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atomlist shift to state 191
-- On atom shift to state 194
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121
-- On EOF reduce production atomlist ->
-- On DOT reduce production atomlist ->
-- On COMMA reduce production atomlist ->

State 191:
atomlist -> atomlist . COMMA atom [ EOF DOT COMMA ]
command -> VALID optname atomlist . [ EOF DOT ]
-- On COMMA shift to state 192
-- On EOF reduce production command -> VALID optname atomlist
-- On DOT reduce production command -> VALID optname atomlist

State 192:
atomlist -> atomlist COMMA . atom [ EOF DOT COMMA ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 193
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 193:
atomlist -> atomlist COMMA atom . [ EOF DOT COMMA ]
-- On EOF reduce production atomlist -> atomlist COMMA atom
-- On DOT reduce production atomlist -> atomlist COMMA atom
-- On COMMA reduce production atomlist -> atomlist COMMA atom

State 194:
atomlist -> atom . [ EOF DOT COMMA ]
-- On EOF reduce production atomlist -> atom
-- On DOT reduce production atomlist -> atom
-- On COMMA reduce production atomlist -> atom

State 195:
command -> USE . optname th term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 196
-- On IDENT reduce production optname ->

State 196:
command -> USE optname . th term [ EOF DOT ]
-- On IDENT shift to state 197
-- On th shift to state 198

State 197:
th -> IDENT . [ TRUE TAIL SUB S RATCONST OUTR OUTL OUT NIL MINUS LPAR LAMBDA K INTCONST INR INL INJ IDENT I HEAD FULL FALSE EMPTY CREATE CONS CONC COMPL CDR CAR C BVCONST ]
-- On TRUE reduce production th -> IDENT
-- On TAIL reduce production th -> IDENT
-- On SUB reduce production th -> IDENT
-- On S reduce production th -> IDENT
-- On RATCONST reduce production th -> IDENT
-- On OUTR reduce production th -> IDENT
-- On OUTL reduce production th -> IDENT
-- On OUT reduce production th -> IDENT
-- On NIL reduce production th -> IDENT
-- On MINUS reduce production th -> IDENT
-- On LPAR reduce production th -> IDENT
-- On LAMBDA reduce production th -> IDENT
-- On K reduce production th -> IDENT
-- On INTCONST reduce production th -> IDENT
-- On INR reduce production th -> IDENT
-- On INL reduce production th -> IDENT
-- On INJ reduce production th -> IDENT
-- On IDENT reduce production th -> IDENT
-- On I reduce production th -> IDENT
-- On HEAD reduce production th -> IDENT
-- On FULL reduce production th -> IDENT
-- On FALSE reduce production th -> IDENT
-- On EMPTY reduce production th -> IDENT
-- On CREATE reduce production th -> IDENT
-- On CONS reduce production th -> IDENT
-- On CONC reduce production th -> IDENT
-- On COMPL reduce production th -> IDENT
-- On CDR reduce production th -> IDENT
-- On CAR reduce production th -> IDENT
-- On C reduce production th -> IDENT
-- On BVCONST reduce production th -> IDENT

State 198:
command -> USE optname th . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 199
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 199:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> USE optname th term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> USE optname th term
-- On DOT reduce production command -> USE optname th term

State 200:
command -> UNTRACE . [ EOF DOT ]
command -> UNTRACE . identlist [ EOF DOT ]
-- On IDENT shift to state 201
-- On identlist shift to state 202
-- On EOF reduce production command -> UNTRACE
-- On DOT reduce production command -> UNTRACE

State 201:
identlist -> IDENT . [ EOF DOT COMMA ]
-- On EOF reduce production identlist -> IDENT
-- On DOT reduce production identlist -> IDENT
-- On COMMA reduce production identlist -> IDENT

State 202:
command -> UNTRACE identlist . [ EOF DOT ]
identlist -> identlist . COMMA IDENT [ EOF DOT COMMA ]
-- On COMMA shift to state 203
-- On EOF reduce production command -> UNTRACE identlist
-- On DOT reduce production command -> UNTRACE identlist

State 203:
identlist -> identlist COMMA . IDENT [ EOF DOT COMMA ]
-- On IDENT shift to state 204

State 204:
identlist -> identlist COMMA IDENT . [ EOF DOT COMMA ]
-- On EOF reduce production identlist -> identlist COMMA IDENT
-- On DOT reduce production identlist -> identlist COMMA IDENT
-- On COMMA reduce production identlist -> identlist COMMA IDENT

State 205:
command -> UNSAT . optname atomlist [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 206
-- On TT reduce production optname ->
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FF reduce production optname ->
-- On FALSE reduce production optname ->
-- On EOF reduce production optname ->
-- On EMPTY reduce production optname ->
-- On DOT reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On COMMA reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 206:
command -> UNSAT optname . atomlist [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atomlist shift to state 207
-- On atom shift to state 194
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121
-- On EOF reduce production atomlist ->
-- On DOT reduce production atomlist ->
-- On COMMA reduce production atomlist ->

State 207:
atomlist -> atomlist . COMMA atom [ EOF DOT COMMA ]
command -> UNSAT optname atomlist . [ EOF DOT ]
-- On COMMA shift to state 192
-- On EOF reduce production command -> UNSAT optname atomlist
-- On DOT reduce production command -> UNSAT optname atomlist

State 208:
command -> UNDO . [ EOF DOT ]
-- On EOF reduce production command -> UNDO
-- On DOT reduce production command -> UNDO

State 209:
command -> TRACE . identlist [ EOF DOT ]
-- On IDENT shift to state 201
-- On identlist shift to state 210

State 210:
command -> TRACE identlist . [ EOF DOT ]
identlist -> identlist . COMMA IDENT [ EOF DOT COMMA ]
-- On COMMA shift to state 203
-- On EOF reduce production command -> TRACE identlist
-- On DOT reduce production command -> TRACE identlist

State 211:
command -> SYMTAB . [ EOF DOT ]
command -> SYMTAB . name [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 212
-- On EOF reduce production command -> SYMTAB
-- On DOT reduce production command -> SYMTAB

State 212:
command -> SYMTAB name . [ EOF DOT ]
-- On EOF reduce production command -> SYMTAB name
-- On DOT reduce production command -> SYMTAB name

State 213:
command -> SUP . optname term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 214
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 214:
command -> SUP optname . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 215
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 215:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> SUP optname term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> SUP optname term
-- On DOT reduce production command -> SUP optname term

State 216:
command -> SPLIT . optname [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 217
-- On EOF reduce production optname ->
-- On DOT reduce production optname ->

State 217:
command -> SPLIT optname . [ EOF DOT ]
-- On EOF reduce production command -> SPLIT optname
-- On DOT reduce production command -> SPLIT optname

State 218:
command -> SOLVE . th term EQUAL term [ EOF DOT ]
-- On IDENT shift to state 197
-- On th shift to state 219

State 219:
command -> SOLVE th . term EQUAL term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 220
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 220:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
command -> SOLVE th term . EQUAL term [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EQUAL BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On EQUAL shift to state 221
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 221:
command -> SOLVE th term EQUAL . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 222
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 222:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> SOLVE th term EQUAL term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> SOLVE th term EQUAL term
-- On DOT reduce production command -> SOLVE th term EQUAL term

State 223:
command -> SIMPLIFY . atom [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 224
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 224:
command -> SIMPLIFY atom . [ EOF DOT ]
-- On EOF reduce production command -> SIMPLIFY atom
-- On DOT reduce production command -> SIMPLIFY atom

State 225:
command -> SIGMA . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 226
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 226:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> SIGMA term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> SIGMA term
-- On DOT reduce production command -> SIGMA term

State 227:
command -> SIG . name COLON cnstrnt [ EOF DOT ]
command -> SIG . namelist COLON cnstrnt [ EOF DOT ]
-- On IDENT shift to state 29
-- On namelist shift to state 228
-- On name shift to state 231

State 228:
command -> SIG namelist . COLON cnstrnt [ EOF DOT ]
namelist -> namelist . COMMA name [ COMMA COLON ]
-- On COMMA shift to state 31
-- On COLON shift to state 229

State 229:
command -> SIG namelist COLON . cnstrnt [ EOF DOT ]
-- On REAL shift to state 95
-- On INT shift to state 96
-- On BV shift to state 97
-- On signature shift to state 101
-- On dom shift to state 102
-- On cnstrnt shift to state 230

State 230:
command -> SIG namelist COLON cnstrnt . [ EOF DOT ]
-- On EOF reduce production command -> SIG namelist COLON cnstrnt
-- On DOT reduce production command -> SIG namelist COLON cnstrnt

State 231:
command -> SIG name . COLON cnstrnt [ EOF DOT ]
namelist -> name . [ COMMA COLON ]
-- On COLON shift to state 232
-- On COMMA reduce production namelist -> name
** Conflict on COLON

State 232:
command -> SIG name COLON . cnstrnt [ EOF DOT ]
-- On REAL shift to state 95
-- On INT shift to state 96
-- On BV shift to state 97
-- On signature shift to state 101
-- On dom shift to state 102
-- On cnstrnt shift to state 233

State 233:
command -> SIG name COLON cnstrnt . [ EOF DOT ]
-- On EOF reduce production command -> SIG name COLON cnstrnt
-- On DOT reduce production command -> SIG name COLON cnstrnt

State 234:
command -> SHOW . optname [ EOF DOT ]
command -> SHOW . optname eqth [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 235
-- On IDENT reduce production optname ->
-- On EOF reduce production optname ->
-- On DOT reduce production optname ->

State 235:
command -> SHOW optname . [ EOF DOT ]
command -> SHOW optname . eqth [ EOF DOT ]
-- On IDENT shift to state 236
-- On eqth shift to state 237
-- On EOF reduce production command -> SHOW optname
-- On DOT reduce production command -> SHOW optname

State 236:
eqth -> IDENT . [ TRUE TAIL SUB S RATCONST OUTR OUTL OUT NIL MINUS LPAR LAMBDA K INTCONST INR INL INJ IDENT I HEAD FULL FALSE EOF EMPTY DOT CREATE CONS CONC COMPL CDR CAR C BVCONST ]
-- On TRUE reduce production eqth -> IDENT
-- On TAIL reduce production eqth -> IDENT
-- On SUB reduce production eqth -> IDENT
-- On S reduce production eqth -> IDENT
-- On RATCONST reduce production eqth -> IDENT
-- On OUTR reduce production eqth -> IDENT
-- On OUTL reduce production eqth -> IDENT
-- On OUT reduce production eqth -> IDENT
-- On NIL reduce production eqth -> IDENT
-- On MINUS reduce production eqth -> IDENT
-- On LPAR reduce production eqth -> IDENT
-- On LAMBDA reduce production eqth -> IDENT
-- On K reduce production eqth -> IDENT
-- On INTCONST reduce production eqth -> IDENT
-- On INR reduce production eqth -> IDENT
-- On INL reduce production eqth -> IDENT
-- On INJ reduce production eqth -> IDENT
-- On IDENT reduce production eqth -> IDENT
-- On I reduce production eqth -> IDENT
-- On HEAD reduce production eqth -> IDENT
-- On FULL reduce production eqth -> IDENT
-- On FALSE reduce production eqth -> IDENT
-- On EOF reduce production eqth -> IDENT
-- On EMPTY reduce production eqth -> IDENT
-- On DOT reduce production eqth -> IDENT
-- On CREATE reduce production eqth -> IDENT
-- On CONS reduce production eqth -> IDENT
-- On CONC reduce production eqth -> IDENT
-- On COMPL reduce production eqth -> IDENT
-- On CDR reduce production eqth -> IDENT
-- On CAR reduce production eqth -> IDENT
-- On C reduce production eqth -> IDENT
-- On BVCONST reduce production eqth -> IDENT

State 237:
command -> SHOW optname eqth . [ EOF DOT ]
-- On EOF reduce production command -> SHOW optname eqth
-- On DOT reduce production command -> SHOW optname eqth

State 238:
command -> SAVE . name [ EOF DOT ]
command -> SAVE . [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 239
-- On EOF reduce production command -> SAVE
-- On DOT reduce production command -> SAVE

State 239:
command -> SAVE name . [ EOF DOT ]
-- On EOF reduce production command -> SAVE name
-- On DOT reduce production command -> SAVE name

State 240:
command -> SAT . optname prop [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 241
-- On TT reduce production optname ->
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On NEG reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LBRA reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IF reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FF reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 241:
command -> SAT optname . prop [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 266
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 242:
prop -> NEG . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 265
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 243:
prop -> LBRA . prop RBRA [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 263
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 244:
prop -> IF . prop THEN prop ELSE prop END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 245
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 245:
prop -> prop . CONJ prop [ XOR THEN IMPL DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN IMPL DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN IMPL DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN IMPL DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN IMPL DISJ CONJ BIIMPL ]
prop -> IF prop . THEN prop ELSE prop END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On THEN shift to state 258
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256

State 246:
prop -> prop XOR . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 247
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 247:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop XOR prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256
-- On THEN reduce production prop -> prop XOR prop
-- On RBRA reduce production prop -> prop XOR prop
-- On EOF reduce production prop -> prop XOR prop
-- On END reduce production prop -> prop XOR prop
-- On ELSE reduce production prop -> prop XOR prop
-- On DOT reduce production prop -> prop XOR prop

State 248:
prop -> prop IMPL . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 249
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 249:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop IMPL prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256
-- On THEN reduce production prop -> prop IMPL prop
-- On RBRA reduce production prop -> prop IMPL prop
-- On EOF reduce production prop -> prop IMPL prop
-- On END reduce production prop -> prop IMPL prop
-- On ELSE reduce production prop -> prop IMPL prop
-- On DOT reduce production prop -> prop IMPL prop

State 250:
prop -> prop DISJ . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 251
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 251:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop DISJ prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256
-- On THEN reduce production prop -> prop DISJ prop
-- On RBRA reduce production prop -> prop DISJ prop
-- On EOF reduce production prop -> prop DISJ prop
-- On END reduce production prop -> prop DISJ prop
-- On ELSE reduce production prop -> prop DISJ prop
-- On DOT reduce production prop -> prop DISJ prop

State 252:
prop -> prop CONJ . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 253
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 253:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop CONJ prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> prop CONJ prop
-- On THEN reduce production prop -> prop CONJ prop
-- On RBRA reduce production prop -> prop CONJ prop
-- On IMPL reduce production prop -> prop CONJ prop
-- On EOF reduce production prop -> prop CONJ prop
-- On END reduce production prop -> prop CONJ prop
-- On ELSE reduce production prop -> prop CONJ prop
-- On DOT reduce production prop -> prop CONJ prop
-- On DISJ reduce production prop -> prop CONJ prop
-- On CONJ reduce production prop -> prop CONJ prop
-- On BIIMPL reduce production prop -> prop CONJ prop

State 254:
funsym -> name . [ LPAR ]
prop -> name . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
var -> name . [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
var -> name . LCUR cnstrnt RCUR [ UNION TIMES SUBSET PLUS MINUS LISTCONS LESSOREQUAL LESS LBRA INTER GREATEROREQUAL GREATER EXPT EQUAL DISEQ BVCONC APPLY ]
-- On LCUR shift to state 94
-- On XOR reduce production prop -> name
-- On UNION reduce production var -> name
-- On TIMES reduce production var -> name
-- On THEN reduce production prop -> name
-- On SUBSET reduce production var -> name
-- On RBRA reduce production prop -> name
-- On PLUS reduce production var -> name
-- On MINUS reduce production var -> name
-- On LPAR reduce production funsym -> name
-- On LISTCONS reduce production var -> name
-- On LESSOREQUAL reduce production var -> name
-- On LESS reduce production var -> name
-- On LBRA reduce production var -> name
-- On INTER reduce production var -> name
-- On IMPL reduce production prop -> name
-- On GREATEROREQUAL reduce production var -> name
-- On GREATER reduce production var -> name
-- On EXPT reduce production var -> name
-- On EQUAL reduce production var -> name
-- On EOF reduce production prop -> name
-- On END reduce production prop -> name
-- On ELSE reduce production prop -> name
-- On DOT reduce production prop -> name
-- On DISJ reduce production prop -> name
-- On DISEQ reduce production var -> name
-- On CONJ reduce production prop -> name
-- On BVCONC reduce production var -> name
-- On BIIMPL reduce production prop -> name
-- On APPLY reduce production var -> name

State 255:
prop -> atom . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> atom
-- On THEN reduce production prop -> atom
-- On RBRA reduce production prop -> atom
-- On IMPL reduce production prop -> atom
-- On EOF reduce production prop -> atom
-- On END reduce production prop -> atom
-- On ELSE reduce production prop -> atom
-- On DOT reduce production prop -> atom
-- On DISJ reduce production prop -> atom
-- On CONJ reduce production prop -> atom
-- On BIIMPL reduce production prop -> atom

State 256:
prop -> prop BIIMPL . prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 257
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 257:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop BIIMPL prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> prop BIIMPL prop
-- On THEN reduce production prop -> prop BIIMPL prop
-- On RBRA reduce production prop -> prop BIIMPL prop
-- On IMPL reduce production prop -> prop BIIMPL prop
-- On EOF reduce production prop -> prop BIIMPL prop
-- On END reduce production prop -> prop BIIMPL prop
-- On ELSE reduce production prop -> prop BIIMPL prop
-- On DOT reduce production prop -> prop BIIMPL prop
-- On DISJ reduce production prop -> prop BIIMPL prop
-- On CONJ reduce production prop -> prop BIIMPL prop
-- On BIIMPL reduce production prop -> prop BIIMPL prop

State 258:
prop -> IF prop THEN . prop ELSE prop END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 259
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 259:
prop -> prop . CONJ prop [ XOR IMPL ELSE DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR IMPL ELSE DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR IMPL ELSE DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR IMPL ELSE DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR IMPL ELSE DISJ CONJ BIIMPL ]
prop -> IF prop THEN prop . ELSE prop END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On ELSE shift to state 260
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256

State 260:
prop -> IF prop THEN prop ELSE . prop END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 261
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 261:
prop -> prop . CONJ prop [ XOR IMPL END DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR IMPL END DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR IMPL END DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR IMPL END DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR IMPL END DISJ CONJ BIIMPL ]
prop -> IF prop THEN prop ELSE prop . END [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On END shift to state 262
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256

State 262:
prop -> IF prop THEN prop ELSE prop END . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> IF prop THEN prop ELSE prop END
-- On THEN reduce production prop -> IF prop THEN prop ELSE prop END
-- On RBRA reduce production prop -> IF prop THEN prop ELSE prop END
-- On IMPL reduce production prop -> IF prop THEN prop ELSE prop END
-- On EOF reduce production prop -> IF prop THEN prop ELSE prop END
-- On END reduce production prop -> IF prop THEN prop ELSE prop END
-- On ELSE reduce production prop -> IF prop THEN prop ELSE prop END
-- On DOT reduce production prop -> IF prop THEN prop ELSE prop END
-- On DISJ reduce production prop -> IF prop THEN prop ELSE prop END
-- On CONJ reduce production prop -> IF prop THEN prop ELSE prop END
-- On BIIMPL reduce production prop -> IF prop THEN prop ELSE prop END

State 263:
prop -> LBRA prop . RBRA [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . CONJ prop [ XOR RBRA IMPL DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR RBRA IMPL DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR RBRA IMPL DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR RBRA IMPL DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR RBRA IMPL DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On RBRA shift to state 264
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256

State 264:
prop -> LBRA prop RBRA . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> LBRA prop RBRA
-- On THEN reduce production prop -> LBRA prop RBRA
-- On RBRA reduce production prop -> LBRA prop RBRA
-- On IMPL reduce production prop -> LBRA prop RBRA
-- On EOF reduce production prop -> LBRA prop RBRA
-- On END reduce production prop -> LBRA prop RBRA
-- On ELSE reduce production prop -> LBRA prop RBRA
-- On DOT reduce production prop -> LBRA prop RBRA
-- On DISJ reduce production prop -> LBRA prop RBRA
-- On CONJ reduce production prop -> LBRA prop RBRA
-- On BIIMPL reduce production prop -> LBRA prop RBRA

State 265:
prop -> prop . CONJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
prop -> NEG prop . [ XOR THEN RBRA IMPL EOF END ELSE DOT DISJ CONJ BIIMPL ]
-- On XOR reduce production prop -> NEG prop
-- On THEN reduce production prop -> NEG prop
-- On RBRA reduce production prop -> NEG prop
-- On IMPL reduce production prop -> NEG prop
-- On EOF reduce production prop -> NEG prop
-- On END reduce production prop -> NEG prop
-- On ELSE reduce production prop -> NEG prop
-- On DOT reduce production prop -> NEG prop
-- On DISJ reduce production prop -> NEG prop
-- On CONJ reduce production prop -> NEG prop
-- On BIIMPL reduce production prop -> NEG prop

State 266:
command -> SAT optname prop . [ EOF DOT ]
prop -> prop . CONJ prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256
-- On EOF reduce production command -> SAT optname prop
-- On DOT reduce production command -> SAT optname prop

State 267:
command -> RESTORE . name [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 268

State 268:
command -> RESTORE name . [ EOF DOT ]
-- On EOF reduce production command -> RESTORE name
-- On DOT reduce production command -> RESTORE name

State 269:
command -> RESET . [ EOF DOT ]
-- On EOF reduce production command -> RESET
-- On DOT reduce production command -> RESET

State 270:
command -> REMOVE . name [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 271

State 271:
command -> REMOVE name . [ EOF DOT ]
-- On EOF reduce production command -> REMOVE name
-- On DOT reduce production command -> REMOVE name

State 272:
command -> PROP . name ASSIGN prop [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 273

State 273:
command -> PROP name . ASSIGN prop [ EOF DOT ]
-- On ASSIGN shift to state 274

State 274:
command -> PROP name ASSIGN . prop [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On prop shift to state 275
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 275:
command -> PROP name ASSIGN prop . [ EOF DOT ]
prop -> prop . CONJ prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR IMPL EOF DOT DISJ CONJ BIIMPL ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256
-- On EOF reduce production command -> PROP name ASSIGN prop
-- On DOT reduce production command -> PROP name ASSIGN prop

State 276:
command -> MODEL . optname optvarspecs [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 277
-- On EOF reduce production optname ->
-- On DOT reduce production optname ->

State 277:
command -> MODEL optname . optvarspecs [ EOF DOT ]
-- On optvarspecs shift to state 278
-- On EOF reduce production optvarspecs ->
-- On DOT reduce production optvarspecs ->

State 278:
command -> MODEL optname optvarspecs . [ EOF DOT ]
-- On EOF reduce production command -> MODEL optname optvarspecs
-- On DOT reduce production command -> MODEL optname optvarspecs

State 279:
command -> INV . optname th term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 280
-- On IDENT reduce production optname ->

State 280:
command -> INV optname . th term [ EOF DOT ]
-- On IDENT shift to state 197
-- On th shift to state 281

State 281:
command -> INV optname th . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 282
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 282:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> INV optname th term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> INV optname th term
-- On DOT reduce production command -> INV optname th term

State 283:
command -> INF . optname term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 284
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 284:
command -> INF optname . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 285
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 285:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> INF optname term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> INF optname term
-- On DOT reduce production command -> INF optname term

State 286:
name -> IDENT . [ UNION TIMES PLUS MINUS LPAR LISTCONS LCUR LBRA INTER EXPT CMP BVCONC APPLY ]
varname -> IDENT . [ ASSIGN ]
-- On UNION reduce production name -> IDENT
-- On TIMES reduce production name -> IDENT
-- On PLUS reduce production name -> IDENT
-- On MINUS reduce production name -> IDENT
-- On LPAR reduce production name -> IDENT
-- On LISTCONS reduce production name -> IDENT
-- On LCUR reduce production name -> IDENT
-- On LBRA reduce production name -> IDENT
-- On INTER reduce production name -> IDENT
-- On EXPT reduce production name -> IDENT
-- On CMP reduce production name -> IDENT
-- On BVCONC reduce production name -> IDENT
-- On ASSIGN reduce production varname -> IDENT
-- On APPLY reduce production name -> IDENT

State 287:
help -> HELP . [ EOF DOT ]
help -> HELP . CAN [ EOF DOT ]
help -> HELP . HELP [ EOF DOT ]
help -> HELP . SIMPLIFY [ EOF DOT ]
help -> HELP . ASSERT [ EOF DOT ]
help -> HELP . DEF [ EOF DOT ]
help -> HELP . PROP [ EOF DOT ]
help -> HELP . SIG [ EOF DOT ]
help -> HELP . RESET [ EOF DOT ]
help -> HELP . SAVE [ EOF DOT ]
help -> HELP . RESTORE [ EOF DOT ]
help -> HELP . REMOVE [ EOF DOT ]
help -> HELP . FORGET [ EOF DOT ]
help -> HELP . VALID [ EOF DOT ]
help -> HELP . UNSAT [ EOF DOT ]
help -> HELP . EXIT [ EOF DOT ]
help -> HELP . DROP [ EOF DOT ]
help -> HELP . SYMTAB [ EOF DOT ]
help -> HELP . CTXT [ EOF DOT ]
help -> HELP . SIGMA [ EOF DOT ]
help -> HELP . CMP [ EOF DOT ]
help -> HELP . SHOW [ EOF DOT ]
help -> HELP . FIND [ EOF DOT ]
help -> HELP . INV [ EOF DOT ]
help -> HELP . USE [ EOF DOT ]
help -> HELP . DOM [ EOF DOT ]
help -> HELP . DISEQ [ EOF DOT ]
help -> HELP . SPLIT [ EOF DOT ]
help -> HELP . SOLVE [ EOF DOT ]
help -> HELP . TRACE [ EOF DOT ]
help -> HELP . UNTRACE [ EOF DOT ]
help -> HELP . SAT [ EOF DOT ]
help -> HELP . MODEL [ EOF DOT ]
help -> HELP . CHECK [ EOF DOT ]
help -> HELP . ECHO [ EOF DOT ]
help -> HELP . GET [ EOF DOT ]
help -> HELP . SUP [ EOF DOT ]
help -> HELP . INF [ EOF DOT ]
help -> HELP . ASSIGN [ EOF DOT ]
help -> HELP . LESS IDENT GREATER [ EOF DOT ]
help -> HELP . UNDO [ EOF DOT ]
-- On VALID shift to state 288
-- On USE shift to state 289
-- On UNTRACE shift to state 290
-- On UNSAT shift to state 291
-- On UNDO shift to state 292
-- On TRACE shift to state 293
-- On SYMTAB shift to state 294
-- On SUP shift to state 295
-- On SPLIT shift to state 296
-- On SOLVE shift to state 297
-- On SIMPLIFY shift to state 298
-- On SIGMA shift to state 299
-- On SIG shift to state 300
-- On SHOW shift to state 301
-- On SAVE shift to state 302
-- On SAT shift to state 303
-- On RESTORE shift to state 304
-- On RESET shift to state 305
-- On REMOVE shift to state 306
-- On PROP shift to state 307
-- On MODEL shift to state 308
-- On LESS shift to state 309
-- On INV shift to state 312
-- On INF shift to state 313
-- On HELP shift to state 314
-- On GET shift to state 315
-- On FORGET shift to state 316
-- On FIND shift to state 317
-- On EXIT shift to state 318
-- On ECHO shift to state 319
-- On DROP shift to state 320
-- On DOM shift to state 321
-- On DISEQ shift to state 322
-- On DEF shift to state 323
-- On CTXT shift to state 324
-- On CMP shift to state 325
-- On CHECK shift to state 326
-- On CAN shift to state 327
-- On ASSIGN shift to state 328
-- On ASSERT shift to state 329
-- On EOF reduce production help -> HELP
-- On DOT reduce production help -> HELP

State 288:
help -> HELP VALID . [ EOF DOT ]
-- On EOF reduce production help -> HELP VALID
-- On DOT reduce production help -> HELP VALID

State 289:
help -> HELP USE . [ EOF DOT ]
-- On EOF reduce production help -> HELP USE
-- On DOT reduce production help -> HELP USE

State 290:
help -> HELP UNTRACE . [ EOF DOT ]
-- On EOF reduce production help -> HELP UNTRACE
-- On DOT reduce production help -> HELP UNTRACE

State 291:
help -> HELP UNSAT . [ EOF DOT ]
-- On EOF reduce production help -> HELP UNSAT
-- On DOT reduce production help -> HELP UNSAT

State 292:
help -> HELP UNDO . [ EOF DOT ]
-- On EOF reduce production help -> HELP UNDO
-- On DOT reduce production help -> HELP UNDO

State 293:
help -> HELP TRACE . [ EOF DOT ]
-- On EOF reduce production help -> HELP TRACE
-- On DOT reduce production help -> HELP TRACE

State 294:
help -> HELP SYMTAB . [ EOF DOT ]
-- On EOF reduce production help -> HELP SYMTAB
-- On DOT reduce production help -> HELP SYMTAB

State 295:
help -> HELP SUP . [ EOF DOT ]
-- On EOF reduce production help -> HELP SUP
-- On DOT reduce production help -> HELP SUP

State 296:
help -> HELP SPLIT . [ EOF DOT ]
-- On EOF reduce production help -> HELP SPLIT
-- On DOT reduce production help -> HELP SPLIT

State 297:
help -> HELP SOLVE . [ EOF DOT ]
-- On EOF reduce production help -> HELP SOLVE
-- On DOT reduce production help -> HELP SOLVE

State 298:
help -> HELP SIMPLIFY . [ EOF DOT ]
-- On EOF reduce production help -> HELP SIMPLIFY
-- On DOT reduce production help -> HELP SIMPLIFY

State 299:
help -> HELP SIGMA . [ EOF DOT ]
-- On EOF reduce production help -> HELP SIGMA
-- On DOT reduce production help -> HELP SIGMA

State 300:
help -> HELP SIG . [ EOF DOT ]
-- On EOF reduce production help -> HELP SIG
-- On DOT reduce production help -> HELP SIG

State 301:
help -> HELP SHOW . [ EOF DOT ]
-- On EOF reduce production help -> HELP SHOW
-- On DOT reduce production help -> HELP SHOW

State 302:
help -> HELP SAVE . [ EOF DOT ]
-- On EOF reduce production help -> HELP SAVE
-- On DOT reduce production help -> HELP SAVE

State 303:
help -> HELP SAT . [ EOF DOT ]
-- On EOF reduce production help -> HELP SAT
-- On DOT reduce production help -> HELP SAT

State 304:
help -> HELP RESTORE . [ EOF DOT ]
-- On EOF reduce production help -> HELP RESTORE
-- On DOT reduce production help -> HELP RESTORE

State 305:
help -> HELP RESET . [ EOF DOT ]
-- On EOF reduce production help -> HELP RESET
-- On DOT reduce production help -> HELP RESET

State 306:
help -> HELP REMOVE . [ EOF DOT ]
-- On EOF reduce production help -> HELP REMOVE
-- On DOT reduce production help -> HELP REMOVE

State 307:
help -> HELP PROP . [ EOF DOT ]
-- On EOF reduce production help -> HELP PROP
-- On DOT reduce production help -> HELP PROP

State 308:
help -> HELP MODEL . [ EOF DOT ]
-- On EOF reduce production help -> HELP MODEL
-- On DOT reduce production help -> HELP MODEL

State 309:
help -> HELP LESS . IDENT GREATER [ EOF DOT ]
-- On IDENT shift to state 310

State 310:
help -> HELP LESS IDENT . GREATER [ EOF DOT ]
-- On GREATER shift to state 311

State 311:
help -> HELP LESS IDENT GREATER . [ EOF DOT ]
-- On EOF reduce production help -> HELP LESS IDENT GREATER
-- On DOT reduce production help -> HELP LESS IDENT GREATER

State 312:
help -> HELP INV . [ EOF DOT ]
-- On EOF reduce production help -> HELP INV
-- On DOT reduce production help -> HELP INV

State 313:
help -> HELP INF . [ EOF DOT ]
-- On EOF reduce production help -> HELP INF
-- On DOT reduce production help -> HELP INF

State 314:
help -> HELP HELP . [ EOF DOT ]
-- On EOF reduce production help -> HELP HELP
-- On DOT reduce production help -> HELP HELP

State 315:
help -> HELP GET . [ EOF DOT ]
-- On EOF reduce production help -> HELP GET
-- On DOT reduce production help -> HELP GET

State 316:
help -> HELP FORGET . [ EOF DOT ]
-- On EOF reduce production help -> HELP FORGET
-- On DOT reduce production help -> HELP FORGET

State 317:
help -> HELP FIND . [ EOF DOT ]
-- On EOF reduce production help -> HELP FIND
-- On DOT reduce production help -> HELP FIND

State 318:
help -> HELP EXIT . [ EOF DOT ]
-- On EOF reduce production help -> HELP EXIT
-- On DOT reduce production help -> HELP EXIT

State 319:
help -> HELP ECHO . [ EOF DOT ]
-- On EOF reduce production help -> HELP ECHO
-- On DOT reduce production help -> HELP ECHO

State 320:
help -> HELP DROP . [ EOF DOT ]
-- On EOF reduce production help -> HELP DROP
-- On DOT reduce production help -> HELP DROP

State 321:
help -> HELP DOM . [ EOF DOT ]
-- On EOF reduce production help -> HELP DOM
-- On DOT reduce production help -> HELP DOM

State 322:
help -> HELP DISEQ . [ EOF DOT ]
-- On EOF reduce production help -> HELP DISEQ
-- On DOT reduce production help -> HELP DISEQ

State 323:
help -> HELP DEF . [ EOF DOT ]
-- On EOF reduce production help -> HELP DEF
-- On DOT reduce production help -> HELP DEF

State 324:
help -> HELP CTXT . [ EOF DOT ]
-- On EOF reduce production help -> HELP CTXT
-- On DOT reduce production help -> HELP CTXT

State 325:
help -> HELP CMP . [ EOF DOT ]
-- On EOF reduce production help -> HELP CMP
-- On DOT reduce production help -> HELP CMP

State 326:
help -> HELP CHECK . [ EOF DOT ]
-- On EOF reduce production help -> HELP CHECK
-- On DOT reduce production help -> HELP CHECK

State 327:
help -> HELP CAN . [ EOF DOT ]
-- On EOF reduce production help -> HELP CAN
-- On DOT reduce production help -> HELP CAN

State 328:
help -> HELP ASSIGN . [ EOF DOT ]
-- On EOF reduce production help -> HELP ASSIGN
-- On DOT reduce production help -> HELP ASSIGN

State 329:
help -> HELP ASSERT . [ EOF DOT ]
-- On EOF reduce production help -> HELP ASSERT
-- On DOT reduce production help -> HELP ASSERT

State 330:
command -> GET . varname [ EOF DOT ]
command -> GET . [ EOF DOT ]
-- On IDENT shift to state 331
-- On varname shift to state 332
-- On EOF reduce production command -> GET
-- On DOT reduce production command -> GET

State 331:
varname -> IDENT . [ EOF DOT ]
-- On EOF reduce production varname -> IDENT
-- On DOT reduce production varname -> IDENT

State 332:
command -> GET varname . [ EOF DOT ]
-- On EOF reduce production command -> GET varname
-- On DOT reduce production command -> GET varname

State 333:
command -> FORGET . [ EOF DOT ]
-- On EOF reduce production command -> FORGET
-- On DOT reduce production command -> FORGET

State 334:
command -> FIND . optname eqth term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 335
-- On IDENT reduce production optname ->

State 335:
command -> FIND optname . eqth term [ EOF DOT ]
-- On IDENT shift to state 236
-- On eqth shift to state 336

State 336:
command -> FIND optname eqth . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 337
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 337:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> FIND optname eqth term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> FIND optname eqth term
-- On DOT reduce production command -> FIND optname eqth term

State 338:
command -> EXIT . [ EOF DOT ]
-- On EOF reduce production command -> EXIT
-- On DOT reduce production command -> EXIT

State 339:
commands -> EOF . [ # ]
-- On # reduce production commands -> EOF

State 340:
command -> ECHO . STRING [ EOF DOT ]
-- On STRING shift to state 341

State 341:
command -> ECHO STRING . [ EOF DOT ]
-- On EOF reduce production command -> ECHO STRING
-- On DOT reduce production command -> ECHO STRING

State 342:
command -> DROP . [ EOF DOT ]
-- On EOF reduce production command -> DROP
-- On DOT reduce production command -> DROP

State 343:
command -> DOM . optname term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 344
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 344:
command -> DOM optname . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 345
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 345:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> DOM optname term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> DOM optname term
-- On DOT reduce production command -> DOM optname term

State 346:
command -> DISEQ . optname term [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 347
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 347:
command -> DISEQ optname . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 348
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 348:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> DISEQ optname term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> DISEQ optname term
-- On DOT reduce production command -> DISEQ optname term

State 349:
command -> DEF . name ASSIGN term [ EOF DOT ]
-- On IDENT shift to state 29
-- On name shift to state 350

State 350:
command -> DEF name . ASSIGN term [ EOF DOT ]
-- On ASSIGN shift to state 351

State 351:
command -> DEF name ASSIGN . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 352
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 352:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> DEF name ASSIGN term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> DEF name ASSIGN term
-- On DOT reduce production command -> DEF name ASSIGN term

State 353:
command -> CTXT . optname [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 354
-- On EOF reduce production optname ->
-- On DOT reduce production optname ->

State 354:
command -> CTXT optname . [ EOF DOT ]
-- On EOF reduce production command -> CTXT optname
-- On DOT reduce production command -> CTXT optname

State 355:
command -> CHECK . optname [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 356
-- On EOF reduce production optname ->
-- On DOT reduce production optname ->

State 356:
command -> CHECK optname . [ EOF DOT ]
-- On EOF reduce production command -> CHECK optname
-- On DOT reduce production command -> CHECK optname

State 357:
command -> CAN . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 358
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 358:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> CAN term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> CAN term
-- On DOT reduce production command -> CAN term

State 359:
command -> ASSERT . optname atom [ EOF DOT ]
command -> ASSERT . optname atom COMMA atomlist [ EOF DOT ]
-- On KLAMMERAFFE shift to state 188
-- On optname shift to state 360
-- On TT reduce production optname ->
-- On TRUE reduce production optname ->
-- On TAIL reduce production optname ->
-- On SUB reduce production optname ->
-- On S reduce production optname ->
-- On RATCONST reduce production optname ->
-- On OUTR reduce production optname ->
-- On OUTL reduce production optname ->
-- On OUT reduce production optname ->
-- On NIL reduce production optname ->
-- On MINUS reduce production optname ->
-- On LPAR reduce production optname ->
-- On LAMBDA reduce production optname ->
-- On K reduce production optname ->
-- On INTCONST reduce production optname ->
-- On INR reduce production optname ->
-- On INL reduce production optname ->
-- On INJ reduce production optname ->
-- On IDENT reduce production optname ->
-- On I reduce production optname ->
-- On HEAD reduce production optname ->
-- On FULL reduce production optname ->
-- On FF reduce production optname ->
-- On FALSE reduce production optname ->
-- On EMPTY reduce production optname ->
-- On CREATE reduce production optname ->
-- On CONS reduce production optname ->
-- On CONC reduce production optname ->
-- On COMPL reduce production optname ->
-- On CDR reduce production optname ->
-- On CAR reduce production optname ->
-- On C reduce production optname ->
-- On BVCONST reduce production optname ->

State 360:
command -> ASSERT optname . atom [ EOF DOT ]
command -> ASSERT optname . atom COMMA atomlist [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 361
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 361:
command -> ASSERT optname atom . [ EOF DOT ]
command -> ASSERT optname atom . COMMA atomlist [ EOF DOT ]
-- On COMMA shift to state 362
-- On EOF reduce production command -> ASSERT optname atom
-- On DOT reduce production command -> ASSERT optname atom

State 362:
command -> ASSERT optname atom COMMA . atomlist [ EOF DOT ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atomlist shift to state 363
-- On atom shift to state 194
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121
-- On EOF reduce production atomlist ->
-- On DOT reduce production atomlist ->
-- On COMMA reduce production atomlist ->

State 363:
atomlist -> atomlist . COMMA atom [ EOF DOT COMMA ]
command -> ASSERT optname atom COMMA atomlist . [ EOF DOT ]
-- On COMMA shift to state 192
-- On EOF reduce production command -> ASSERT optname atom COMMA atomlist
-- On DOT reduce production command -> ASSERT optname atom COMMA atomlist

State 364:
command -> varname . ASSIGN value [ EOF DOT ]
-- On ASSIGN shift to state 365

State 365:
command -> varname ASSIGN . value [ EOF DOT ]
-- On TRUE shift to state 366
-- On IDENT shift to state 367
-- On FALSE shift to state 368
-- On value shift to state 369

State 366:
value -> TRUE . [ EOF DOT ]
-- On EOF reduce production value -> TRUE
-- On DOT reduce production value -> TRUE

State 367:
value -> IDENT . [ EOF DOT ]
-- On EOF reduce production value -> IDENT
-- On DOT reduce production value -> IDENT

State 368:
value -> FALSE . [ EOF DOT ]
-- On EOF reduce production value -> FALSE
-- On DOT reduce production value -> FALSE

State 369:
command -> varname ASSIGN value . [ EOF DOT ]
-- On EOF reduce production command -> varname ASSIGN value
-- On DOT reduce production command -> varname ASSIGN value

State 370:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
command -> term . CMP term [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT CMP BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On CMP shift to state 371
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 371:
command -> term CMP . term [ EOF DOT ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 372
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 372:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
command -> term CMP term . [ EOF DOT ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF DOT BVCONC APPLY ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On BVCONC shift to state 88
-- On APPLY shift to state 124
-- On EOF reduce production command -> term CMP term
-- On DOT reduce production command -> term CMP term

State 373:
command -> help . [ EOF DOT ]
-- On EOF reduce production command -> help
-- On DOT reduce production command -> help

State 374:
commands' -> commands . [ # ]
-- On # accept commands

State 375:
commands -> command . DOT [ # ]
-- On DOT shift to state 376

State 376:
commands -> command DOT . [ # ]
-- On # reduce production commands -> command DOT

State 377:
commandseof' -> . commandseof [ # ]
-- On VALID shift to state 187
-- On USE shift to state 195
-- On UNTRACE shift to state 200
-- On UNSAT shift to state 205
-- On UNDO shift to state 208
-- On TRUE shift to state 2
-- On TRACE shift to state 209
-- On TAIL shift to state 3
-- On SYMTAB shift to state 211
-- On SUP shift to state 213
-- On SUB shift to state 5
-- On SPLIT shift to state 216
-- On SOLVE shift to state 218
-- On SIMPLIFY shift to state 223
-- On SIGMA shift to state 225
-- On SIG shift to state 227
-- On SHOW shift to state 234
-- On SAVE shift to state 238
-- On SAT shift to state 240
-- On S shift to state 14
-- On RESTORE shift to state 267
-- On RESET shift to state 269
-- On REMOVE shift to state 270
-- On RATCONST shift to state 15
-- On PROP shift to state 272
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MODEL shift to state 276
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INV shift to state 279
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On INF shift to state 283
-- On IDENT shift to state 286
-- On I shift to state 45
-- On HELP shift to state 287
-- On HEAD shift to state 46
-- On GET shift to state 330
-- On FULL shift to state 48
-- On FORGET shift to state 333
-- On FIND shift to state 334
-- On FALSE shift to state 49
-- On EXIT shift to state 338
-- On EMPTY shift to state 50
-- On ECHO shift to state 340
-- On DROP shift to state 342
-- On DOM shift to state 343
-- On DISEQ shift to state 346
-- On DEF shift to state 349
-- On CTXT shift to state 353
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CHECK shift to state 355
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On CAN shift to state 357
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On ASSERT shift to state 359
-- On varname shift to state 364
-- On var shift to state 69
-- On term shift to state 370
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On help shift to state 373
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On commandseof shift to state 378
-- On command shift to state 379
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 378:
commandseof' -> commandseof . [ # ]
-- On # accept commandseof

State 379:
commandseof -> command . EOF [ # ]
-- On EOF shift to state 380

State 380:
commandseof -> command EOF . [ # ]
-- On # reduce production commandseof -> command EOF

State 381:
commandsequence' -> . commandsequence [ # ]
-- On VALID shift to state 187
-- On USE shift to state 195
-- On UNTRACE shift to state 200
-- On UNSAT shift to state 205
-- On UNDO shift to state 208
-- On TRUE shift to state 2
-- On TRACE shift to state 209
-- On TAIL shift to state 3
-- On SYMTAB shift to state 211
-- On SUP shift to state 213
-- On SUB shift to state 5
-- On SPLIT shift to state 216
-- On SOLVE shift to state 218
-- On SIMPLIFY shift to state 223
-- On SIGMA shift to state 225
-- On SIG shift to state 227
-- On SHOW shift to state 234
-- On SAVE shift to state 238
-- On SAT shift to state 240
-- On S shift to state 14
-- On RESTORE shift to state 267
-- On RESET shift to state 269
-- On REMOVE shift to state 270
-- On RATCONST shift to state 15
-- On PROP shift to state 272
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MODEL shift to state 276
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INV shift to state 279
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On INF shift to state 283
-- On IDENT shift to state 286
-- On I shift to state 45
-- On HELP shift to state 287
-- On HEAD shift to state 46
-- On GET shift to state 330
-- On FULL shift to state 48
-- On FORGET shift to state 333
-- On FIND shift to state 334
-- On FALSE shift to state 49
-- On EXIT shift to state 338
-- On EOF shift to state 382
-- On EMPTY shift to state 50
-- On ECHO shift to state 340
-- On DROP shift to state 342
-- On DOM shift to state 343
-- On DISEQ shift to state 346
-- On DEF shift to state 349
-- On CTXT shift to state 353
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CHECK shift to state 355
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On CAN shift to state 357
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On ASSERT shift to state 359
-- On varname shift to state 364
-- On var shift to state 69
-- On term shift to state 370
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On help shift to state 373
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On commandsequence shift to state 383
-- On command shift to state 384
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 382:
commandsequence -> EOF . [ # ]
-- On # reduce production commandsequence -> EOF

State 383:
commandsequence' -> commandsequence . [ # ]
-- On # accept commandsequence

State 384:
commandsequence -> command . DOT commandsequence [ # ]
commandsequence -> command . DOT [ # ]
-- On DOT shift to state 385

State 385:
commandsequence -> command DOT . commandsequence [ # ]
commandsequence -> command DOT . [ # ]
-- On VALID shift to state 187
-- On USE shift to state 195
-- On UNTRACE shift to state 200
-- On UNSAT shift to state 205
-- On UNDO shift to state 208
-- On TRUE shift to state 2
-- On TRACE shift to state 209
-- On TAIL shift to state 3
-- On SYMTAB shift to state 211
-- On SUP shift to state 213
-- On SUB shift to state 5
-- On SPLIT shift to state 216
-- On SOLVE shift to state 218
-- On SIMPLIFY shift to state 223
-- On SIGMA shift to state 225
-- On SIG shift to state 227
-- On SHOW shift to state 234
-- On SAVE shift to state 238
-- On SAT shift to state 240
-- On S shift to state 14
-- On RESTORE shift to state 267
-- On RESET shift to state 269
-- On REMOVE shift to state 270
-- On RATCONST shift to state 15
-- On PROP shift to state 272
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MODEL shift to state 276
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INV shift to state 279
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On INF shift to state 283
-- On IDENT shift to state 286
-- On I shift to state 45
-- On HELP shift to state 287
-- On HEAD shift to state 46
-- On GET shift to state 330
-- On FULL shift to state 48
-- On FORGET shift to state 333
-- On FIND shift to state 334
-- On FALSE shift to state 49
-- On EXIT shift to state 338
-- On EOF shift to state 382
-- On EMPTY shift to state 50
-- On ECHO shift to state 340
-- On DROP shift to state 342
-- On DOM shift to state 343
-- On DISEQ shift to state 346
-- On DEF shift to state 349
-- On CTXT shift to state 353
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CHECK shift to state 355
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On CAN shift to state 357
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On ASSERT shift to state 359
-- On varname shift to state 364
-- On var shift to state 69
-- On term shift to state 370
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On help shift to state 373
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On commandsequence shift to state 386
-- On command shift to state 384
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 386:
commandsequence -> command DOT commandsequence . [ # ]
-- On # reduce production commandsequence -> command DOT commandsequence

State 387:
propeof' -> . propeof [ # ]
-- On TT shift to state 1
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On NEG shift to state 242
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LBRA shift to state 243
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IF shift to state 244
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FF shift to state 167
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On term shift to state 168
-- On rat shift to state 90
-- On propset shift to state 91
-- On propeof shift to state 388
-- On prop shift to state 389
-- On product shift to state 92
-- On name shift to state 254
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On atom shift to state 255
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 388:
propeof' -> propeof . [ # ]
-- On # accept propeof

State 389:
prop -> prop . CONJ prop [ XOR IMPL EOF DISJ CONJ BIIMPL ]
prop -> prop . DISJ prop [ XOR IMPL EOF DISJ CONJ BIIMPL ]
prop -> prop . BIIMPL prop [ XOR IMPL EOF DISJ CONJ BIIMPL ]
prop -> prop . XOR prop [ XOR IMPL EOF DISJ CONJ BIIMPL ]
prop -> prop . IMPL prop [ XOR IMPL EOF DISJ CONJ BIIMPL ]
propeof -> prop . EOF [ # ]
-- On XOR shift to state 246
-- On IMPL shift to state 248
-- On EOF shift to state 390
-- On DISJ shift to state 250
-- On CONJ shift to state 252
-- On BIIMPL shift to state 256

State 390:
propeof -> prop EOF . [ # ]
-- On # reduce production propeof -> prop EOF

State 391:
termeof' -> . termeof [ # ]
-- On TRUE shift to state 2
-- On TAIL shift to state 3
-- On SUB shift to state 5
-- On S shift to state 14
-- On RATCONST shift to state 15
-- On OUTR shift to state 16
-- On OUTL shift to state 18
-- On OUT shift to state 20
-- On NIL shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On LAMBDA shift to state 28
-- On K shift to state 34
-- On INTCONST shift to state 35
-- On INR shift to state 36
-- On INL shift to state 38
-- On INJ shift to state 40
-- On IDENT shift to state 29
-- On I shift to state 45
-- On HEAD shift to state 46
-- On FULL shift to state 48
-- On FALSE shift to state 49
-- On EMPTY shift to state 50
-- On CREATE shift to state 51
-- On CONS shift to state 53
-- On CONC shift to state 55
-- On COMPL shift to state 62
-- On CDR shift to state 63
-- On CAR shift to state 65
-- On C shift to state 67
-- On BVCONST shift to state 68
-- On var shift to state 69
-- On termeof shift to state 392
-- On term shift to state 393
-- On rat shift to state 90
-- On propset shift to state 91
-- On product shift to state 92
-- On name shift to state 93
-- On int shift to state 105
-- On ics_list shift to state 106
-- On funsym shift to state 107
-- On coproduct shift to state 115
-- On bv shift to state 116
-- On boolean shift to state 117
-- On array shift to state 118
-- On arith shift to state 119
-- On apply shift to state 120
-- On app shift to state 121

State 392:
termeof' -> termeof . [ # ]
-- On # accept termeof

State 393:
apply -> term . APPLY term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
arith -> term . PLUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
arith -> term . MINUS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
arith -> term . TIMES term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
arith -> term . EXPT int [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
array -> term . LBRA term ASSIGN term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
array -> term . LBRA term RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
bv -> term . BVCONC term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
bv -> term . LBRA INTCONST COLON INTCONST RBRA [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
ics_list -> term . LISTCONS term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
propset -> term . UNION term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
propset -> term . INTER term [ UNION TIMES PLUS MINUS LISTCONS LBRA INTER EXPT EOF BVCONC APPLY ]
termeof -> term . EOF [ # ]
-- On UNION shift to state 71
-- On TIMES shift to state 73
-- On PLUS shift to state 84
-- On MINUS shift to state 113
-- On LISTCONS shift to state 75
-- On LBRA shift to state 77
-- On INTER shift to state 122
-- On EXPT shift to state 86
-- On EOF shift to state 394
-- On BVCONC shift to state 88
-- On APPLY shift to state 124

State 394:
termeof -> term EOF . [ # ]
-- On # reduce production termeof -> term EOF

