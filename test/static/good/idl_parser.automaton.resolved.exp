State 0:
## Known stack suffix:
##
## LR(1) items:
idlFile' -> . idlFile [ # ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrDefList(definition)) shift to state 915
-- On idlFile shift to state 916
-- On extendedAttributeList shift to state 917
-- On extAttrDefList(definition) shift to state 1266
-- On definitions shift to state 1268
## Reductions:
-- On TYPEDEF reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On NATIVE reduce production extendedAttributeList ->
-- On MODULE reduce production extendedAttributeList ->
-- On INTERFACE reduce production extendedAttributeList ->
-- On INCLUDE reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On EXCEPTION reduce production extendedAttributeList ->
-- On EOF reduce production ilist(extAttrDefList(definition)) ->
-- On ENUM reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On CALLBACK reduce production extendedAttributeList ->

State 1:
## Known stack suffix:
## LBRACK
## LR(1) items:
extendedAttributeList -> LBRACK . iseparated_nonempty_list(COMMA,extendedAttribute) RBRACK [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OUT OPTIONAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER INTERFACE INOUT INHERIT INCLUDE IN ID GETTER FLOAT EXCEPTION ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UUID shift to state 2
-- On UNSAFE shift to state 3
-- On UNFORGEABLE shift to state 193
-- On TREATNULLAS shift to state 194
-- On SIZE_IS shift to state 235
-- On SETTER shift to state 239
-- On SCRIPTABLE shift to state 292
-- On RETVAL shift to state 293
-- On REPLACEABLENAMEDPROPERTIES shift to state 343
-- On REPLACEABLE shift to state 344
-- On QUERYINTERFACETYPE shift to state 345
-- On QUERYELEMENTATTYPE shift to state 395
-- On PUTFORWARDS shift to state 399
-- On PRIVATEBROWSINGCHECK shift to state 402
-- On PARTIAL shift to state 452
-- On OVERRIDEBUILTINS shift to state 505
-- On OPTIONAL_ARGC shift to state 506
-- On OPTIONAL shift to state 507
-- On NOTXPCOM shift to state 508
-- On NOSCRIPT shift to state 558
-- On NOINTERFACEOBJECT shift to state 559
-- On NAMEDCONSTRUCTOR shift to state 560
-- On IMPLICIT_JSCONTEXT shift to state 634
-- On ID shift to state 635
-- On GETTER shift to state 688
-- On DICTIONARY shift to state 741
-- On CREATOR shift to state 794
-- On CONSTRUCTOR shift to state 847
-- On CONST shift to state 900
-- On CLAMP shift to state 901
-- On CALLBACK shift to state 902
-- On ALLOWANY shift to state 905
-- On iseparated_nonempty_list(COMMA,extendedAttribute) shift to state 906
-- On extendedAttributeNoArgs shift to state 908
-- On extendedAttributeNamedArgList shift to state 909
-- On extendedAttributeIdent shift to state 910
-- On extendedAttributeArgList shift to state 911
-- On extendedAttribute shift to state 912
## Reductions:

State 2:
## Known stack suffix:
## UUID
## LR(1) items:
extendedAttributeArgList -> UUID . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> UUID

State 3:
## Known stack suffix:
## UNSAFE
## LR(1) items:
extendedAttributeIdent -> UNSAFE . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> UNSAFE . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 4
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> UNSAFE
-- On COMMA reduce production extendedAttributeNoArgs -> UNSAFE

State 4:
## Known stack suffix:
## UNSAFE EQUALS
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> UNSAFE EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 5
-- On SETTER shift to state 149
-- On RETVAL shift to state 153
-- On QUERYINTERFACETYPE shift to state 157
-- On PRIVATEBROWSINGCHECK shift to state 161
-- On PARTIAL shift to state 165
-- On NOTXPCOM shift to state 169
-- On ID shift to state 173
-- On GETTER shift to state 177
-- On DICTIONARY shift to state 181
-- On CREATOR shift to state 185
-- On CONSTRUCTOR shift to state 189
## Reductions:

State 5:
## Known stack suffix:
## UNSAFE EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 6
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS UNSAFE

State 6:
## Known stack suffix:
## UNSAFE EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 144
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 7:
## Known stack suffix:
## UNSAFE
## LR(1) items:
relativeScopedName -> UNSAFE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 33
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 8:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
scopedNameParts -> COLONCOLON . CONSTRUCTOR scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . NOTXPCOM scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . RETVAL scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . UNSAFE scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . PRIVATEBROWSINGCHECK scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . QUERYINTERFACETYPE scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . CREATOR scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . GETTER scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . SETTER scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . ID scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . DICTIONARY scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
scopedNameParts -> COLONCOLON . PARTIAL scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 9
-- On SETTER shift to state 11
-- On RETVAL shift to state 13
-- On QUERYINTERFACETYPE shift to state 15
-- On PRIVATEBROWSINGCHECK shift to state 17
-- On PARTIAL shift to state 19
-- On NOTXPCOM shift to state 21
-- On ID shift to state 23
-- On GETTER shift to state 25
-- On DICTIONARY shift to state 27
-- On CREATOR shift to state 29
-- On CONSTRUCTOR shift to state 31
## Reductions:

State 9:
## Known stack suffix:
## COLONCOLON UNSAFE
## LR(1) items:
scopedNameParts -> COLONCOLON UNSAFE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 10
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 10:
## Known stack suffix:
## COLONCOLON UNSAFE scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON UNSAFE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON UNSAFE scopedNameParts

State 11:
## Known stack suffix:
## COLONCOLON SETTER
## LR(1) items:
scopedNameParts -> COLONCOLON SETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 12
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 12:
## Known stack suffix:
## COLONCOLON SETTER scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON SETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON SETTER scopedNameParts

State 13:
## Known stack suffix:
## COLONCOLON RETVAL
## LR(1) items:
scopedNameParts -> COLONCOLON RETVAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 14
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 14:
## Known stack suffix:
## COLONCOLON RETVAL scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON RETVAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON RETVAL scopedNameParts

State 15:
## Known stack suffix:
## COLONCOLON QUERYINTERFACETYPE
## LR(1) items:
scopedNameParts -> COLONCOLON QUERYINTERFACETYPE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 16
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 16:
## Known stack suffix:
## COLONCOLON QUERYINTERFACETYPE scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON QUERYINTERFACETYPE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON QUERYINTERFACETYPE scopedNameParts

State 17:
## Known stack suffix:
## COLONCOLON PRIVATEBROWSINGCHECK
## LR(1) items:
scopedNameParts -> COLONCOLON PRIVATEBROWSINGCHECK . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 18
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 18:
## Known stack suffix:
## COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts

State 19:
## Known stack suffix:
## COLONCOLON PARTIAL
## LR(1) items:
scopedNameParts -> COLONCOLON PARTIAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 20
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 20:
## Known stack suffix:
## COLONCOLON PARTIAL scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON PARTIAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON PARTIAL scopedNameParts

State 21:
## Known stack suffix:
## COLONCOLON NOTXPCOM
## LR(1) items:
scopedNameParts -> COLONCOLON NOTXPCOM . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 22
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 22:
## Known stack suffix:
## COLONCOLON NOTXPCOM scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON NOTXPCOM scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON NOTXPCOM scopedNameParts

State 23:
## Known stack suffix:
## COLONCOLON ID
## LR(1) items:
scopedNameParts -> COLONCOLON ID . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 24
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 24:
## Known stack suffix:
## COLONCOLON ID scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON ID scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON ID scopedNameParts

State 25:
## Known stack suffix:
## COLONCOLON GETTER
## LR(1) items:
scopedNameParts -> COLONCOLON GETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 26
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 26:
## Known stack suffix:
## COLONCOLON GETTER scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON GETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON GETTER scopedNameParts

State 27:
## Known stack suffix:
## COLONCOLON DICTIONARY
## LR(1) items:
scopedNameParts -> COLONCOLON DICTIONARY . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 28
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 28:
## Known stack suffix:
## COLONCOLON DICTIONARY scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON DICTIONARY scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON DICTIONARY scopedNameParts

State 29:
## Known stack suffix:
## COLONCOLON CREATOR
## LR(1) items:
scopedNameParts -> COLONCOLON CREATOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 30
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 30:
## Known stack suffix:
## COLONCOLON CREATOR scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON CREATOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON CREATOR scopedNameParts

State 31:
## Known stack suffix:
## COLONCOLON CONSTRUCTOR
## LR(1) items:
scopedNameParts -> COLONCOLON CONSTRUCTOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 32
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 32:
## Known stack suffix:
## COLONCOLON CONSTRUCTOR scopedNameParts
## LR(1) items:
scopedNameParts -> COLONCOLON CONSTRUCTOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedNameParts -> COLONCOLON CONSTRUCTOR scopedNameParts

State 33:
## Known stack suffix:
## UNSAFE scopedNameParts
## LR(1) items:
relativeScopedName -> UNSAFE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> UNSAFE scopedNameParts

State 34:
## Known stack suffix:
## TRUE
## LR(1) items:
exprUn -> TRUE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TRUE

State 35:
## Known stack suffix:
## TILDE
## LR(1) items:
exprUn -> TILDE . scopedName [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . INTLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . FLOATLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . STRING [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . TRUE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . FALSE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> TILDE . LPAREN expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 36
-- On STRING shift to state 37
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On LPAREN shift to state 50
-- On INTLIT shift to state 139
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 140
-- On FALSE shift to state 141
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 142
-- On relativeScopedName shift to state 100
-- On absoluteScopedName shift to state 107
## Reductions:

State 36:
## Known stack suffix:
## TILDE TRUE
## LR(1) items:
exprUn -> TILDE TRUE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE TRUE

State 37:
## Known stack suffix:
## TILDE STRING
## LR(1) items:
exprUn -> TILDE STRING . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE STRING

State 38:
## Known stack suffix:
## SETTER
## LR(1) items:
relativeScopedName -> SETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 39
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 39:
## Known stack suffix:
## SETTER scopedNameParts
## LR(1) items:
relativeScopedName -> SETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> SETTER scopedNameParts

State 40:
## Known stack suffix:
## RETVAL
## LR(1) items:
relativeScopedName -> RETVAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 41
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 41:
## Known stack suffix:
## RETVAL scopedNameParts
## LR(1) items:
relativeScopedName -> RETVAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> RETVAL scopedNameParts

State 42:
## Known stack suffix:
## QUERYINTERFACETYPE
## LR(1) items:
relativeScopedName -> QUERYINTERFACETYPE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 43
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 43:
## Known stack suffix:
## QUERYINTERFACETYPE scopedNameParts
## LR(1) items:
relativeScopedName -> QUERYINTERFACETYPE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> QUERYINTERFACETYPE scopedNameParts

State 44:
## Known stack suffix:
## PRIVATEBROWSINGCHECK
## LR(1) items:
relativeScopedName -> PRIVATEBROWSINGCHECK . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 45
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 45:
## Known stack suffix:
## PRIVATEBROWSINGCHECK scopedNameParts
## LR(1) items:
relativeScopedName -> PRIVATEBROWSINGCHECK scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> PRIVATEBROWSINGCHECK scopedNameParts

State 46:
## Known stack suffix:
## PARTIAL
## LR(1) items:
relativeScopedName -> PARTIAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 47
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 47:
## Known stack suffix:
## PARTIAL scopedNameParts
## LR(1) items:
relativeScopedName -> PARTIAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> PARTIAL scopedNameParts

State 48:
## Known stack suffix:
## NOTXPCOM
## LR(1) items:
relativeScopedName -> NOTXPCOM . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 49
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 49:
## Known stack suffix:
## NOTXPCOM scopedNameParts
## LR(1) items:
relativeScopedName -> NOTXPCOM scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> NOTXPCOM scopedNameParts

State 50:
## Known stack suffix:
## TILDE LPAREN
## LR(1) items:
exprUn -> TILDE LPAREN . expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 137
-- On absoluteScopedName shift to state 107
## Reductions:

State 51:
## Known stack suffix:
## STRING
## LR(1) items:
exprUn -> STRING . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> STRING

State 52:
## Known stack suffix:
## PLUS
## LR(1) items:
exprUn -> PLUS . scopedName [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . INTLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . FLOATLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . STRING [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . TRUE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . FALSE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> PLUS . LPAREN expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 53
-- On STRING shift to state 54
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On LPAREN shift to state 55
-- On INTLIT shift to state 133
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 134
-- On FALSE shift to state 135
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 136
-- On relativeScopedName shift to state 100
-- On absoluteScopedName shift to state 107
## Reductions:

State 53:
## Known stack suffix:
## PLUS TRUE
## LR(1) items:
exprUn -> PLUS TRUE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS TRUE

State 54:
## Known stack suffix:
## PLUS STRING
## LR(1) items:
exprUn -> PLUS STRING . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS STRING

State 55:
## Known stack suffix:
## PLUS LPAREN
## LR(1) items:
exprUn -> PLUS LPAREN . expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 131
-- On absoluteScopedName shift to state 107
## Reductions:

State 56:
## Known stack suffix:
## MINUS
## LR(1) items:
exprUn -> MINUS . scopedName [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . INTLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . FLOATLIT [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . STRING [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . TRUE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . FALSE [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
exprUn -> MINUS . LPAREN expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 57
-- On STRING shift to state 58
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On LPAREN shift to state 59
-- On INTLIT shift to state 127
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 128
-- On FALSE shift to state 129
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 130
-- On relativeScopedName shift to state 100
-- On absoluteScopedName shift to state 107
## Reductions:

State 57:
## Known stack suffix:
## MINUS TRUE
## LR(1) items:
exprUn -> MINUS TRUE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS TRUE

State 58:
## Known stack suffix:
## MINUS STRING
## LR(1) items:
exprUn -> MINUS STRING . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS STRING

State 59:
## Known stack suffix:
## MINUS LPAREN
## LR(1) items:
exprUn -> MINUS LPAREN . expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 125
-- On absoluteScopedName shift to state 107
## Reductions:

State 60:
## Known stack suffix:
## LPAREN
## LR(1) items:
exprUn -> LPAREN . expr RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 102
-- On absoluteScopedName shift to state 107
## Reductions:

State 61:
## Known stack suffix:
## INTLIT
## LR(1) items:
exprUn -> INTLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> INTLIT

State 62:
## Known stack suffix:
## ID
## LR(1) items:
relativeScopedName -> ID . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 63
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 63:
## Known stack suffix:
## ID scopedNameParts
## LR(1) items:
relativeScopedName -> ID scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> ID scopedNameParts

State 64:
## Known stack suffix:
## GETTER
## LR(1) items:
relativeScopedName -> GETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 65
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 65:
## Known stack suffix:
## GETTER scopedNameParts
## LR(1) items:
relativeScopedName -> GETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> GETTER scopedNameParts

State 66:
## Known stack suffix:
## FLOATLIT
## LR(1) items:
exprUn -> FLOATLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> FLOATLIT

State 67:
## Known stack suffix:
## FALSE
## LR(1) items:
exprUn -> FALSE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> FALSE

State 68:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
relativeScopedName -> DICTIONARY . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 69
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 69:
## Known stack suffix:
## DICTIONARY scopedNameParts
## LR(1) items:
relativeScopedName -> DICTIONARY scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> DICTIONARY scopedNameParts

State 70:
## Known stack suffix:
## CREATOR
## LR(1) items:
relativeScopedName -> CREATOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 71
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 71:
## Known stack suffix:
## CREATOR scopedNameParts
## LR(1) items:
relativeScopedName -> CREATOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> CREATOR scopedNameParts

State 72:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
relativeScopedName -> CONSTRUCTOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 73
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 73:
## Known stack suffix:
## CONSTRUCTOR scopedNameParts
## LR(1) items:
relativeScopedName -> CONSTRUCTOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relativeScopedName -> CONSTRUCTOR scopedNameParts

State 74:
## Known stack suffix:
## COLONCOLON
## LR(1) items:
absoluteScopedName -> COLONCOLON . CONSTRUCTOR scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . NOTXPCOM scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . RETVAL scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . UNSAFE scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . PRIVATEBROWSINGCHECK scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . QUERYINTERFACETYPE scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . CREATOR scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . GETTER scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . SETTER scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . ID scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . DICTIONARY scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
absoluteScopedName -> COLONCOLON . PARTIAL scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 75
-- On SETTER shift to state 77
-- On RETVAL shift to state 79
-- On QUERYINTERFACETYPE shift to state 81
-- On PRIVATEBROWSINGCHECK shift to state 83
-- On PARTIAL shift to state 85
-- On NOTXPCOM shift to state 87
-- On ID shift to state 89
-- On GETTER shift to state 91
-- On DICTIONARY shift to state 93
-- On CREATOR shift to state 95
-- On CONSTRUCTOR shift to state 97
## Reductions:

State 75:
## Known stack suffix:
## COLONCOLON UNSAFE
## LR(1) items:
absoluteScopedName -> COLONCOLON UNSAFE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 76
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 76:
## Known stack suffix:
## COLONCOLON UNSAFE scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON UNSAFE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON UNSAFE scopedNameParts

State 77:
## Known stack suffix:
## COLONCOLON SETTER
## LR(1) items:
absoluteScopedName -> COLONCOLON SETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 78
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 78:
## Known stack suffix:
## COLONCOLON SETTER scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON SETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON SETTER scopedNameParts

State 79:
## Known stack suffix:
## COLONCOLON RETVAL
## LR(1) items:
absoluteScopedName -> COLONCOLON RETVAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 80
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 80:
## Known stack suffix:
## COLONCOLON RETVAL scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON RETVAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON RETVAL scopedNameParts

State 81:
## Known stack suffix:
## COLONCOLON QUERYINTERFACETYPE
## LR(1) items:
absoluteScopedName -> COLONCOLON QUERYINTERFACETYPE . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 82
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 82:
## Known stack suffix:
## COLONCOLON QUERYINTERFACETYPE scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON QUERYINTERFACETYPE scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON QUERYINTERFACETYPE scopedNameParts

State 83:
## Known stack suffix:
## COLONCOLON PRIVATEBROWSINGCHECK
## LR(1) items:
absoluteScopedName -> COLONCOLON PRIVATEBROWSINGCHECK . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 84
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 84:
## Known stack suffix:
## COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON PRIVATEBROWSINGCHECK scopedNameParts

State 85:
## Known stack suffix:
## COLONCOLON PARTIAL
## LR(1) items:
absoluteScopedName -> COLONCOLON PARTIAL . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 86
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 86:
## Known stack suffix:
## COLONCOLON PARTIAL scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON PARTIAL scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON PARTIAL scopedNameParts

State 87:
## Known stack suffix:
## COLONCOLON NOTXPCOM
## LR(1) items:
absoluteScopedName -> COLONCOLON NOTXPCOM . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 88
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 88:
## Known stack suffix:
## COLONCOLON NOTXPCOM scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON NOTXPCOM scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON NOTXPCOM scopedNameParts

State 89:
## Known stack suffix:
## COLONCOLON ID
## LR(1) items:
absoluteScopedName -> COLONCOLON ID . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 90
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 90:
## Known stack suffix:
## COLONCOLON ID scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON ID scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON ID scopedNameParts

State 91:
## Known stack suffix:
## COLONCOLON GETTER
## LR(1) items:
absoluteScopedName -> COLONCOLON GETTER . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 92
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 92:
## Known stack suffix:
## COLONCOLON GETTER scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON GETTER scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON GETTER scopedNameParts

State 93:
## Known stack suffix:
## COLONCOLON DICTIONARY
## LR(1) items:
absoluteScopedName -> COLONCOLON DICTIONARY . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 94
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 94:
## Known stack suffix:
## COLONCOLON DICTIONARY scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON DICTIONARY scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON DICTIONARY scopedNameParts

State 95:
## Known stack suffix:
## COLONCOLON CREATOR
## LR(1) items:
absoluteScopedName -> COLONCOLON CREATOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 96
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 96:
## Known stack suffix:
## COLONCOLON CREATOR scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON CREATOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON CREATOR scopedNameParts

State 97:
## Known stack suffix:
## COLONCOLON CONSTRUCTOR
## LR(1) items:
absoluteScopedName -> COLONCOLON CONSTRUCTOR . scopedNameParts [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
-- On COLONCOLON shift to state 8
-- On scopedNameParts shift to state 98
## Reductions:
-- On XOR reduce production scopedNameParts ->
-- On TIMES reduce production scopedNameParts ->
-- On SHRIGHT reduce production scopedNameParts ->
-- On SHLEFT reduce production scopedNameParts ->
-- On SEMI reduce production scopedNameParts ->
-- On RPAREN reduce production scopedNameParts ->
-- On PLUS reduce production scopedNameParts ->
-- On MOD reduce production scopedNameParts ->
-- On MINUS reduce production scopedNameParts ->
-- On LBRACE reduce production scopedNameParts ->
-- On DIVIDE reduce production scopedNameParts ->
-- On COMMA reduce production scopedNameParts ->
-- On BAR reduce production scopedNameParts ->
-- On AND reduce production scopedNameParts ->

State 98:
## Known stack suffix:
## COLONCOLON CONSTRUCTOR scopedNameParts
## LR(1) items:
absoluteScopedName -> COLONCOLON CONSTRUCTOR scopedNameParts . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production absoluteScopedName -> COLONCOLON CONSTRUCTOR scopedNameParts

State 99:
## Known stack suffix:
## scopedName
## LR(1) items:
exprUn -> scopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> scopedName

State 100:
## Known stack suffix:
## relativeScopedName
## LR(1) items:
scopedName -> relativeScopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedName -> relativeScopedName

State 101:
## Known stack suffix:
## exprUn
## LR(1) items:
expr -> exprUn . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> exprUn

State 102:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
exprUn -> LPAREN expr . RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On RPAREN shift to state 122
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:

State 103:
## Known stack suffix:
## expr XOR
## LR(1) items:
expr -> expr XOR . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 104
-- On absoluteScopedName shift to state 107
## Reductions:

State 104:
## Known stack suffix:
## expr XOR expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr XOR expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On AND shift to state 120
## Reductions:
-- On XOR reduce production expr -> expr XOR expr
-- On SEMI reduce production expr -> expr XOR expr
-- On RPAREN reduce production expr -> expr XOR expr
-- On COMMA reduce production expr -> expr XOR expr
-- On BAR reduce production expr -> expr XOR expr

State 105:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 106
-- On absoluteScopedName shift to state 107
## Reductions:

State 106:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr TIMES expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr TIMES expr

State 107:
## Known stack suffix:
## absoluteScopedName
## LR(1) items:
scopedName -> absoluteScopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS LBRACE DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production scopedName -> absoluteScopedName

State 108:
## Known stack suffix:
## expr SHRIGHT
## LR(1) items:
expr -> expr SHRIGHT . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 109
-- On absoluteScopedName shift to state 107
## Reductions:

State 109:
## Known stack suffix:
## expr SHRIGHT expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr SHRIGHT expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
## Reductions:
-- On XOR reduce production expr -> expr SHRIGHT expr
-- On SEMI reduce production expr -> expr SHRIGHT expr
-- On RPAREN reduce production expr -> expr SHRIGHT expr
-- On COMMA reduce production expr -> expr SHRIGHT expr
-- On BAR reduce production expr -> expr SHRIGHT expr
-- On AND reduce production expr -> expr SHRIGHT expr

State 110:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 111
-- On absoluteScopedName shift to state 107
## Reductions:

State 111:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr PLUS expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On MOD shift to state 112
-- On DIVIDE shift to state 114
## Reductions:
-- On XOR reduce production expr -> expr PLUS expr
-- On SHRIGHT reduce production expr -> expr PLUS expr
-- On SHLEFT reduce production expr -> expr PLUS expr
-- On SEMI reduce production expr -> expr PLUS expr
-- On RPAREN reduce production expr -> expr PLUS expr
-- On PLUS reduce production expr -> expr PLUS expr
-- On MINUS reduce production expr -> expr PLUS expr
-- On COMMA reduce production expr -> expr PLUS expr
-- On BAR reduce production expr -> expr PLUS expr
-- On AND reduce production expr -> expr PLUS expr

State 112:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr -> expr MOD . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 113
-- On absoluteScopedName shift to state 107
## Reductions:

State 113:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr MOD expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr MOD expr

State 114:
## Known stack suffix:
## expr DIVIDE
## LR(1) items:
expr -> expr DIVIDE . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 115
-- On absoluteScopedName shift to state 107
## Reductions:

State 115:
## Known stack suffix:
## expr DIVIDE expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr DIVIDE expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr DIVIDE expr

State 116:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 117
-- On absoluteScopedName shift to state 107
## Reductions:

State 117:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr MINUS expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On MOD shift to state 112
-- On DIVIDE shift to state 114
## Reductions:
-- On XOR reduce production expr -> expr MINUS expr
-- On SHRIGHT reduce production expr -> expr MINUS expr
-- On SHLEFT reduce production expr -> expr MINUS expr
-- On SEMI reduce production expr -> expr MINUS expr
-- On RPAREN reduce production expr -> expr MINUS expr
-- On PLUS reduce production expr -> expr MINUS expr
-- On MINUS reduce production expr -> expr MINUS expr
-- On COMMA reduce production expr -> expr MINUS expr
-- On BAR reduce production expr -> expr MINUS expr
-- On AND reduce production expr -> expr MINUS expr

State 118:
## Known stack suffix:
## expr SHLEFT
## LR(1) items:
expr -> expr SHLEFT . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 119
-- On absoluteScopedName shift to state 107
## Reductions:

State 119:
## Known stack suffix:
## expr SHLEFT expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr SHLEFT expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
## Reductions:
-- On XOR reduce production expr -> expr SHLEFT expr
-- On SEMI reduce production expr -> expr SHLEFT expr
-- On RPAREN reduce production expr -> expr SHLEFT expr
-- On COMMA reduce production expr -> expr SHLEFT expr
-- On BAR reduce production expr -> expr SHLEFT expr
-- On AND reduce production expr -> expr SHLEFT expr

State 120:
## Known stack suffix:
## expr AND
## LR(1) items:
expr -> expr AND . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 121
-- On absoluteScopedName shift to state 107
## Reductions:

State 121:
## Known stack suffix:
## expr AND expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr AND expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
## Reductions:
-- On XOR reduce production expr -> expr AND expr
-- On SEMI reduce production expr -> expr AND expr
-- On RPAREN reduce production expr -> expr AND expr
-- On COMMA reduce production expr -> expr AND expr
-- On BAR reduce production expr -> expr AND expr
-- On AND reduce production expr -> expr AND expr

State 122:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
exprUn -> LPAREN expr RPAREN . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> LPAREN expr RPAREN

State 123:
## Known stack suffix:
## expr BAR
## LR(1) items:
expr -> expr BAR . expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 124
-- On absoluteScopedName shift to state 107
## Reductions:

State 124:
## Known stack suffix:
## expr BAR expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr BAR expr . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On AND shift to state 120
## Reductions:
-- On SEMI reduce production expr -> expr BAR expr
-- On RPAREN reduce production expr -> expr BAR expr
-- On COMMA reduce production expr -> expr BAR expr
-- On BAR reduce production expr -> expr BAR expr

State 125:
## Known stack suffix:
## MINUS LPAREN expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
exprUn -> MINUS LPAREN expr . RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On RPAREN shift to state 126
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:

State 126:
## Known stack suffix:
## MINUS LPAREN expr RPAREN
## LR(1) items:
exprUn -> MINUS LPAREN expr RPAREN . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS LPAREN expr RPAREN

State 127:
## Known stack suffix:
## MINUS INTLIT
## LR(1) items:
exprUn -> MINUS INTLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS INTLIT

State 128:
## Known stack suffix:
## MINUS FLOATLIT
## LR(1) items:
exprUn -> MINUS FLOATLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS FLOATLIT

State 129:
## Known stack suffix:
## MINUS FALSE
## LR(1) items:
exprUn -> MINUS FALSE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS FALSE

State 130:
## Known stack suffix:
## MINUS scopedName
## LR(1) items:
exprUn -> MINUS scopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> MINUS scopedName

State 131:
## Known stack suffix:
## PLUS LPAREN expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
exprUn -> PLUS LPAREN expr . RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On RPAREN shift to state 132
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:

State 132:
## Known stack suffix:
## PLUS LPAREN expr RPAREN
## LR(1) items:
exprUn -> PLUS LPAREN expr RPAREN . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS LPAREN expr RPAREN

State 133:
## Known stack suffix:
## PLUS INTLIT
## LR(1) items:
exprUn -> PLUS INTLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS INTLIT

State 134:
## Known stack suffix:
## PLUS FLOATLIT
## LR(1) items:
exprUn -> PLUS FLOATLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS FLOATLIT

State 135:
## Known stack suffix:
## PLUS FALSE
## LR(1) items:
exprUn -> PLUS FALSE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS FALSE

State 136:
## Known stack suffix:
## PLUS scopedName
## LR(1) items:
exprUn -> PLUS scopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> PLUS scopedName

State 137:
## Known stack suffix:
## TILDE LPAREN expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE BAR AND ]
exprUn -> TILDE LPAREN expr . RPAREN [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On RPAREN shift to state 138
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:

State 138:
## Known stack suffix:
## TILDE LPAREN expr RPAREN
## LR(1) items:
exprUn -> TILDE LPAREN expr RPAREN . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE LPAREN expr RPAREN

State 139:
## Known stack suffix:
## TILDE INTLIT
## LR(1) items:
exprUn -> TILDE INTLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE INTLIT

State 140:
## Known stack suffix:
## TILDE FLOATLIT
## LR(1) items:
exprUn -> TILDE FLOATLIT . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE FLOATLIT

State 141:
## Known stack suffix:
## TILDE FALSE
## LR(1) items:
exprUn -> TILDE FALSE . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE FALSE

State 142:
## Known stack suffix:
## TILDE scopedName
## LR(1) items:
exprUn -> TILDE scopedName . [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exprUn -> TILDE scopedName

State 143:
## Known stack suffix:
## separated_nonempty_list(COMMA,expr)
## LR(1) items:
loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(COMMA,expr)) -> separated_nonempty_list(COMMA,expr)

State 144:
## Known stack suffix:
## UNSAFE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## UNSAFE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 146:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
separated_nonempty_list(COMMA,expr) -> expr . [ RPAREN ]
separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On COMMA shift to state 147
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,expr) -> expr

State 147:
## Known stack suffix:
## expr COMMA
## LR(1) items:
separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RPAREN ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 148
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:

State 148:
## Known stack suffix:
## expr COMMA separated_nonempty_list(COMMA,expr)
## LR(1) items:
separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,expr) -> expr COMMA separated_nonempty_list(COMMA,expr)

State 149:
## Known stack suffix:
## UNSAFE EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 150
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS SETTER

State 150:
## Known stack suffix:
## UNSAFE EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 151
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 151:
## Known stack suffix:
## UNSAFE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## UNSAFE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 153:
## Known stack suffix:
## UNSAFE EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 154
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS RETVAL

State 154:
## Known stack suffix:
## UNSAFE EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 155
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 155:
## Known stack suffix:
## UNSAFE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 156
## Reductions:

State 156:
## Known stack suffix:
## UNSAFE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 157:
## Known stack suffix:
## UNSAFE EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 158
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS QUERYINTERFACETYPE

State 158:
## Known stack suffix:
## UNSAFE EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 159
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 159:
## Known stack suffix:
## UNSAFE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## UNSAFE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 161:
## Known stack suffix:
## UNSAFE EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 162
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS PRIVATEBROWSINGCHECK

State 162:
## Known stack suffix:
## UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 163
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 163:
## Known stack suffix:
## UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 165:
## Known stack suffix:
## UNSAFE EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 166
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS PARTIAL

State 166:
## Known stack suffix:
## UNSAFE EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 167
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 167:
## Known stack suffix:
## UNSAFE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## UNSAFE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 169:
## Known stack suffix:
## UNSAFE EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 170
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS NOTXPCOM

State 170:
## Known stack suffix:
## UNSAFE EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 171
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 171:
## Known stack suffix:
## UNSAFE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## UNSAFE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 173:
## Known stack suffix:
## UNSAFE EQUALS ID
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 174
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS ID

State 174:
## Known stack suffix:
## UNSAFE EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 175
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 175:
## Known stack suffix:
## UNSAFE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## UNSAFE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 177:
## Known stack suffix:
## UNSAFE EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 178
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS GETTER

State 178:
## Known stack suffix:
## UNSAFE EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 179
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 179:
## Known stack suffix:
## UNSAFE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## UNSAFE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 181:
## Known stack suffix:
## UNSAFE EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 182
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS DICTIONARY

State 182:
## Known stack suffix:
## UNSAFE EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 183
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 183:
## Known stack suffix:
## UNSAFE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## UNSAFE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 185:
## Known stack suffix:
## UNSAFE EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 186
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS CREATOR

State 186:
## Known stack suffix:
## UNSAFE EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 187
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 187:
## Known stack suffix:
## UNSAFE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## UNSAFE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 189:
## Known stack suffix:
## UNSAFE EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> UNSAFE EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> UNSAFE EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 190
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> UNSAFE EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> UNSAFE EQUALS CONSTRUCTOR

State 190:
## Known stack suffix:
## UNSAFE EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 191
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 191:
## Known stack suffix:
## UNSAFE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## UNSAFE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> UNSAFE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> UNSAFE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 193:
## Known stack suffix:
## UNFORGEABLE
## LR(1) items:
extendedAttributeNoArgs -> UNFORGEABLE . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> UNFORGEABLE

State 194:
## Known stack suffix:
## TREATNULLAS
## LR(1) items:
extendedAttributeIdent -> TREATNULLAS . EQUALS typeDecl [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## TREATNULLAS EQUALS
## LR(1) items:
extendedAttributeIdent -> TREATNULLAS EQUALS . typeDecl [ RBRACK COMMA ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 234
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 196:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
unsignedIntegerType -> UNSIGNED . integerType [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On SHORT shift to state 197
-- On LONG shift to state 198
-- On BYTE shift to state 200
-- On integerType shift to state 201
## Reductions:

State 197:
## Known stack suffix:
## SHORT
## LR(1) items:
integerType -> SHORT . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production integerType -> SHORT

State 198:
## Known stack suffix:
## LONG
## LR(1) items:
integerType -> LONG . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
integerType -> LONG . LONG [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On LONG shift to state 199
## Reductions:
-- On UNSAFE reduce production integerType -> LONG
-- On SETTER reduce production integerType -> LONG
-- On RETVAL reduce production integerType -> LONG
-- On RBRACK reduce production integerType -> LONG
-- On RANGLE reduce production integerType -> LONG
-- On QUES reduce production integerType -> LONG
-- On QUERYINTERFACETYPE reduce production integerType -> LONG
-- On PRIVATEBROWSINGCHECK reduce production integerType -> LONG
-- On PARTIAL reduce production integerType -> LONG
-- On NOTXPCOM reduce production integerType -> LONG
-- On LRBRACK reduce production integerType -> LONG
-- On LPAREN reduce production integerType -> LONG
-- On ID reduce production integerType -> LONG
-- On GETTER reduce production integerType -> LONG
-- On DOTDOTDOT reduce production integerType -> LONG
-- On DICTIONARY reduce production integerType -> LONG
-- On CREATOR reduce production integerType -> LONG
-- On CONSTRUCTOR reduce production integerType -> LONG
-- On COMMA reduce production integerType -> LONG

State 199:
## Known stack suffix:
## LONG LONG
## LR(1) items:
integerType -> LONG LONG . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production integerType -> LONG LONG

State 200:
## Known stack suffix:
## BYTE
## LR(1) items:
integerType -> BYTE . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production integerType -> BYTE

State 201:
## Known stack suffix:
## UNSIGNED integerType
## LR(1) items:
unsignedIntegerType -> UNSIGNED integerType . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsignedIntegerType -> UNSIGNED integerType

State 202:
## Known stack suffix:
## UNSAFE
## LR(1) items:
primitiveType -> UNSAFE . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> UNSAFE

State 203:
## Known stack suffix:
## SEQUENCE
## LR(1) items:
nonAnyType -> SEQUENCE . LANGLE typeDecl RANGLE [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
nonAnyType -> SEQUENCE . LANGLE typeDecl RANGLE QUES [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On LANGLE shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## SEQUENCE LANGLE
## LR(1) items:
nonAnyType -> SEQUENCE LANGLE . typeDecl RANGLE [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
nonAnyType -> SEQUENCE LANGLE . typeDecl RANGLE QUES [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 226
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 205:
## Known stack suffix:
## RETVAL
## LR(1) items:
primitiveType -> RETVAL . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> RETVAL

State 206:
## Known stack suffix:
## QUERYINTERFACETYPE
## LR(1) items:
primitiveType -> QUERYINTERFACETYPE . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> QUERYINTERFACETYPE

State 207:
## Known stack suffix:
## PRIVATEBROWSINGCHECK
## LR(1) items:
primitiveType -> PRIVATEBROWSINGCHECK . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> PRIVATEBROWSINGCHECK

State 208:
## Known stack suffix:
## PARTIAL
## LR(1) items:
primitiveType -> PARTIAL . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> PARTIAL

State 209:
## Known stack suffix:
## OCTET
## LR(1) items:
primitiveType -> OCTET . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> OCTET

State 210:
## Known stack suffix:
## NOTXPCOM
## LR(1) items:
primitiveType -> NOTXPCOM . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> NOTXPCOM

State 211:
## Known stack suffix:
## ID
## LR(1) items:
primitiveType -> ID . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> ID

State 212:
## Known stack suffix:
## FLOAT
## LR(1) items:
primitiveType -> FLOAT . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> FLOAT

State 213:
## Known stack suffix:
## DOUBLE
## LR(1) items:
primitiveType -> DOUBLE . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> DOUBLE

State 214:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
primitiveType -> DICTIONARY . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> DICTIONARY

State 215:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
primitiveType -> CONSTRUCTOR . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> CONSTRUCTOR

State 216:
## Known stack suffix:
## BOOLEAN
## LR(1) items:
primitiveType -> BOOLEAN . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> BOOLEAN

State 217:
## Known stack suffix:
## ANY
## LR(1) items:
singleType -> ANY . typeSuffixStartingWithArray [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On LRBRACK shift to state 218
-- On typeSuffixStartingWithArray shift to state 224
## Reductions:
-- On UNSAFE reduce production typeSuffixStartingWithArray ->
-- On SETTER reduce production typeSuffixStartingWithArray ->
-- On RETVAL reduce production typeSuffixStartingWithArray ->
-- On RBRACK reduce production typeSuffixStartingWithArray ->
-- On RANGLE reduce production typeSuffixStartingWithArray ->
-- On QUERYINTERFACETYPE reduce production typeSuffixStartingWithArray ->
-- On PRIVATEBROWSINGCHECK reduce production typeSuffixStartingWithArray ->
-- On PARTIAL reduce production typeSuffixStartingWithArray ->
-- On NOTXPCOM reduce production typeSuffixStartingWithArray ->
-- On LPAREN reduce production typeSuffixStartingWithArray ->
-- On ID reduce production typeSuffixStartingWithArray ->
-- On GETTER reduce production typeSuffixStartingWithArray ->
-- On DOTDOTDOT reduce production typeSuffixStartingWithArray ->
-- On DICTIONARY reduce production typeSuffixStartingWithArray ->
-- On CREATOR reduce production typeSuffixStartingWithArray ->
-- On CONSTRUCTOR reduce production typeSuffixStartingWithArray ->
-- On COMMA reduce production typeSuffixStartingWithArray ->

State 218:
## Known stack suffix:
## LRBRACK
## LR(1) items:
typeSuffixStartingWithArray -> LRBRACK . typeSuffix [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On QUES shift to state 219
-- On LRBRACK shift to state 221
-- On typeSuffix shift to state 223
## Reductions:
-- On UNSAFE reduce production typeSuffix ->
-- On SETTER reduce production typeSuffix ->
-- On RETVAL reduce production typeSuffix ->
-- On RBRACK reduce production typeSuffix ->
-- On RANGLE reduce production typeSuffix ->
-- On QUERYINTERFACETYPE reduce production typeSuffix ->
-- On PRIVATEBROWSINGCHECK reduce production typeSuffix ->
-- On PARTIAL reduce production typeSuffix ->
-- On NOTXPCOM reduce production typeSuffix ->
-- On LPAREN reduce production typeSuffix ->
-- On ID reduce production typeSuffix ->
-- On GETTER reduce production typeSuffix ->
-- On DOTDOTDOT reduce production typeSuffix ->
-- On DICTIONARY reduce production typeSuffix ->
-- On CREATOR reduce production typeSuffix ->
-- On CONSTRUCTOR reduce production typeSuffix ->
-- On COMMA reduce production typeSuffix ->

State 219:
## Known stack suffix:
## QUES
## LR(1) items:
typeSuffix -> QUES . typeSuffixStartingWithArray [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On LRBRACK shift to state 218
-- On typeSuffixStartingWithArray shift to state 220
## Reductions:
-- On UNSAFE reduce production typeSuffixStartingWithArray ->
-- On SETTER reduce production typeSuffixStartingWithArray ->
-- On RETVAL reduce production typeSuffixStartingWithArray ->
-- On RBRACK reduce production typeSuffixStartingWithArray ->
-- On RANGLE reduce production typeSuffixStartingWithArray ->
-- On QUERYINTERFACETYPE reduce production typeSuffixStartingWithArray ->
-- On PRIVATEBROWSINGCHECK reduce production typeSuffixStartingWithArray ->
-- On PARTIAL reduce production typeSuffixStartingWithArray ->
-- On NOTXPCOM reduce production typeSuffixStartingWithArray ->
-- On LPAREN reduce production typeSuffixStartingWithArray ->
-- On ID reduce production typeSuffixStartingWithArray ->
-- On GETTER reduce production typeSuffixStartingWithArray ->
-- On DOTDOTDOT reduce production typeSuffixStartingWithArray ->
-- On DICTIONARY reduce production typeSuffixStartingWithArray ->
-- On CREATOR reduce production typeSuffixStartingWithArray ->
-- On CONSTRUCTOR reduce production typeSuffixStartingWithArray ->
-- On COMMA reduce production typeSuffixStartingWithArray ->

State 220:
## Known stack suffix:
## QUES typeSuffixStartingWithArray
## LR(1) items:
typeSuffix -> QUES typeSuffixStartingWithArray . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeSuffix -> QUES typeSuffixStartingWithArray

State 221:
## Known stack suffix:
## LRBRACK
## LR(1) items:
typeSuffix -> LRBRACK . typeSuffix [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On QUES shift to state 219
-- On LRBRACK shift to state 221
-- On typeSuffix shift to state 222
## Reductions:
-- On UNSAFE reduce production typeSuffix ->
-- On SETTER reduce production typeSuffix ->
-- On RETVAL reduce production typeSuffix ->
-- On RBRACK reduce production typeSuffix ->
-- On RANGLE reduce production typeSuffix ->
-- On QUERYINTERFACETYPE reduce production typeSuffix ->
-- On PRIVATEBROWSINGCHECK reduce production typeSuffix ->
-- On PARTIAL reduce production typeSuffix ->
-- On NOTXPCOM reduce production typeSuffix ->
-- On LPAREN reduce production typeSuffix ->
-- On ID reduce production typeSuffix ->
-- On GETTER reduce production typeSuffix ->
-- On DOTDOTDOT reduce production typeSuffix ->
-- On DICTIONARY reduce production typeSuffix ->
-- On CREATOR reduce production typeSuffix ->
-- On CONSTRUCTOR reduce production typeSuffix ->
-- On COMMA reduce production typeSuffix ->

State 222:
## Known stack suffix:
## LRBRACK typeSuffix
## LR(1) items:
typeSuffix -> LRBRACK typeSuffix . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeSuffix -> LRBRACK typeSuffix

State 223:
## Known stack suffix:
## LRBRACK typeSuffix
## LR(1) items:
typeSuffixStartingWithArray -> LRBRACK typeSuffix . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeSuffixStartingWithArray -> LRBRACK typeSuffix

State 224:
## Known stack suffix:
## ANY typeSuffixStartingWithArray
## LR(1) items:
singleType -> ANY typeSuffixStartingWithArray . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production singleType -> ANY typeSuffixStartingWithArray

State 225:
## Known stack suffix:
## unsignedIntegerType
## LR(1) items:
primitiveType -> unsignedIntegerType . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primitiveType -> unsignedIntegerType

State 226:
## Known stack suffix:
## SEQUENCE LANGLE typeDecl
## LR(1) items:
nonAnyType -> SEQUENCE LANGLE typeDecl . RANGLE [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
nonAnyType -> SEQUENCE LANGLE typeDecl . RANGLE QUES [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On RANGLE shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## SEQUENCE LANGLE typeDecl RANGLE
## LR(1) items:
nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE . QUES [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On QUES shift to state 228
## Reductions:
-- On UNSAFE reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On SETTER reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On RETVAL reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On RBRACK reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On RANGLE reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On QUERYINTERFACETYPE reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On PRIVATEBROWSINGCHECK reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On PARTIAL reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On NOTXPCOM reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On LPAREN reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On ID reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On GETTER reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On DOTDOTDOT reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On DICTIONARY reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On CREATOR reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On CONSTRUCTOR reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE
-- On COMMA reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE

State 228:
## Known stack suffix:
## SEQUENCE LANGLE typeDecl RANGLE QUES
## LR(1) items:
nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE QUES . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonAnyType -> SEQUENCE LANGLE typeDecl RANGLE QUES

State 229:
## Known stack suffix:
## singleType
## LR(1) items:
typeDecl -> singleType . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typeDecl -> singleType

State 230:
## Known stack suffix:
## primitiveType
## LR(1) items:
nonAnyType -> primitiveType . typeSuffix [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
-- On QUES shift to state 219
-- On LRBRACK shift to state 221
-- On typeSuffix shift to state 231
## Reductions:
-- On UNSAFE reduce production typeSuffix ->
-- On SETTER reduce production typeSuffix ->
-- On RETVAL reduce production typeSuffix ->
-- On RBRACK reduce production typeSuffix ->
-- On RANGLE reduce production typeSuffix ->
-- On QUERYINTERFACETYPE reduce production typeSuffix ->
-- On PRIVATEBROWSINGCHECK reduce production typeSuffix ->
-- On PARTIAL reduce production typeSuffix ->
-- On NOTXPCOM reduce production typeSuffix ->
-- On LPAREN reduce production typeSuffix ->
-- On ID reduce production typeSuffix ->
-- On GETTER reduce production typeSuffix ->
-- On DOTDOTDOT reduce production typeSuffix ->
-- On DICTIONARY reduce production typeSuffix ->
-- On CREATOR reduce production typeSuffix ->
-- On CONSTRUCTOR reduce production typeSuffix ->
-- On COMMA reduce production typeSuffix ->

State 231:
## Known stack suffix:
## primitiveType typeSuffix
## LR(1) items:
nonAnyType -> primitiveType typeSuffix . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonAnyType -> primitiveType typeSuffix

State 232:
## Known stack suffix:
## nonAnyType
## LR(1) items:
singleType -> nonAnyType . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production singleType -> nonAnyType

State 233:
## Known stack suffix:
## integerType
## LR(1) items:
unsignedIntegerType -> integerType . [ UNSAFE SETTER RETVAL RBRACK RANGLE QUES QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LRBRACK LPAREN ID GETTER DOTDOTDOT DICTIONARY CREATOR CONSTRUCTOR COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unsignedIntegerType -> integerType

State 234:
## Known stack suffix:
## TREATNULLAS EQUALS typeDecl
## LR(1) items:
extendedAttributeIdent -> TREATNULLAS EQUALS typeDecl . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeIdent -> TREATNULLAS EQUALS typeDecl

State 235:
## Known stack suffix:
## SIZE_IS
## LR(1) items:
extendedAttributeArgList -> SIZE_IS . LPAREN ID RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## SIZE_IS LPAREN
## LR(1) items:
extendedAttributeArgList -> SIZE_IS LPAREN . ID RPAREN [ RBRACK COMMA ]
## Transitions:
-- On ID shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## SIZE_IS LPAREN ID
## LR(1) items:
extendedAttributeArgList -> SIZE_IS LPAREN ID . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## SIZE_IS LPAREN ID RPAREN
## LR(1) items:
extendedAttributeArgList -> SIZE_IS LPAREN ID RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> SIZE_IS LPAREN ID RPAREN

State 239:
## Known stack suffix:
## SETTER
## LR(1) items:
extendedAttributeArgList -> SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> SETTER . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 240
-- On EQUALS shift to state 243
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> SETTER
-- On COMMA reduce production extendedAttributeNoArgs -> SETTER

State 240:
## Known stack suffix:
## SETTER LPAREN
## LR(1) items:
extendedAttributeArgList -> SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 241
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 241:
## Known stack suffix:
## SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 243:
## Known stack suffix:
## SETTER EQUALS
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> SETTER EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 244
-- On SETTER shift to state 248
-- On RETVAL shift to state 252
-- On QUERYINTERFACETYPE shift to state 256
-- On PRIVATEBROWSINGCHECK shift to state 260
-- On PARTIAL shift to state 264
-- On NOTXPCOM shift to state 268
-- On ID shift to state 272
-- On GETTER shift to state 276
-- On DICTIONARY shift to state 280
-- On CREATOR shift to state 284
-- On CONSTRUCTOR shift to state 288
## Reductions:

State 244:
## Known stack suffix:
## SETTER EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 245
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS UNSAFE

State 245:
## Known stack suffix:
## SETTER EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 246
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 246:
## Known stack suffix:
## SETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## SETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 248:
## Known stack suffix:
## SETTER EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 249
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS SETTER

State 249:
## Known stack suffix:
## SETTER EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 250
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 250:
## Known stack suffix:
## SETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## SETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 252:
## Known stack suffix:
## SETTER EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 253
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS RETVAL

State 253:
## Known stack suffix:
## SETTER EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 254
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 254:
## Known stack suffix:
## SETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## SETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 256:
## Known stack suffix:
## SETTER EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 257
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS QUERYINTERFACETYPE

State 257:
## Known stack suffix:
## SETTER EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 258
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 258:
## Known stack suffix:
## SETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## SETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 260:
## Known stack suffix:
## SETTER EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 261
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS PRIVATEBROWSINGCHECK

State 261:
## Known stack suffix:
## SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 262
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 262:
## Known stack suffix:
## SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 264:
## Known stack suffix:
## SETTER EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 265
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS PARTIAL

State 265:
## Known stack suffix:
## SETTER EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 266
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 266:
## Known stack suffix:
## SETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## SETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 268:
## Known stack suffix:
## SETTER EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 269
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS NOTXPCOM

State 269:
## Known stack suffix:
## SETTER EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 270
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 270:
## Known stack suffix:
## SETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## SETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 272:
## Known stack suffix:
## SETTER EQUALS ID
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 273
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS ID

State 273:
## Known stack suffix:
## SETTER EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 274
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 274:
## Known stack suffix:
## SETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## SETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 276:
## Known stack suffix:
## SETTER EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 277
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS GETTER

State 277:
## Known stack suffix:
## SETTER EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 278
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 278:
## Known stack suffix:
## SETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## SETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 280:
## Known stack suffix:
## SETTER EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 281
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS DICTIONARY

State 281:
## Known stack suffix:
## SETTER EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 282
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 282:
## Known stack suffix:
## SETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## SETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 284:
## Known stack suffix:
## SETTER EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 285
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS CREATOR

State 285:
## Known stack suffix:
## SETTER EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 286
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 286:
## Known stack suffix:
## SETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## SETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 288:
## Known stack suffix:
## SETTER EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> SETTER EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> SETTER EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 289
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> SETTER EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> SETTER EQUALS CONSTRUCTOR

State 289:
## Known stack suffix:
## SETTER EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 290
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 290:
## Known stack suffix:
## SETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## SETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> SETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> SETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 292:
## Known stack suffix:
## SCRIPTABLE
## LR(1) items:
extendedAttributeNoArgs -> SCRIPTABLE . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> SCRIPTABLE

State 293:
## Known stack suffix:
## RETVAL
## LR(1) items:
extendedAttributeIdent -> RETVAL . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> RETVAL . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 294
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> RETVAL
-- On COMMA reduce production extendedAttributeNoArgs -> RETVAL

State 294:
## Known stack suffix:
## RETVAL EQUALS
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> RETVAL EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 295
-- On SETTER shift to state 299
-- On RETVAL shift to state 303
-- On QUERYINTERFACETYPE shift to state 307
-- On PRIVATEBROWSINGCHECK shift to state 311
-- On PARTIAL shift to state 315
-- On NOTXPCOM shift to state 319
-- On ID shift to state 323
-- On GETTER shift to state 327
-- On DICTIONARY shift to state 331
-- On CREATOR shift to state 335
-- On CONSTRUCTOR shift to state 339
## Reductions:

State 295:
## Known stack suffix:
## RETVAL EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 296
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS UNSAFE

State 296:
## Known stack suffix:
## RETVAL EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 297
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 297:
## Known stack suffix:
## RETVAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 298
## Reductions:

State 298:
## Known stack suffix:
## RETVAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 299:
## Known stack suffix:
## RETVAL EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 300
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS SETTER

State 300:
## Known stack suffix:
## RETVAL EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 301
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 301:
## Known stack suffix:
## RETVAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 302
## Reductions:

State 302:
## Known stack suffix:
## RETVAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 303:
## Known stack suffix:
## RETVAL EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 304
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS RETVAL

State 304:
## Known stack suffix:
## RETVAL EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 305
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 305:
## Known stack suffix:
## RETVAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## RETVAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 307:
## Known stack suffix:
## RETVAL EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 308
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS QUERYINTERFACETYPE

State 308:
## Known stack suffix:
## RETVAL EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 309
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 309:
## Known stack suffix:
## RETVAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## RETVAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 311:
## Known stack suffix:
## RETVAL EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 312
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS PRIVATEBROWSINGCHECK

State 312:
## Known stack suffix:
## RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 313
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 313:
## Known stack suffix:
## RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 315:
## Known stack suffix:
## RETVAL EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 316
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS PARTIAL

State 316:
## Known stack suffix:
## RETVAL EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 317
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 317:
## Known stack suffix:
## RETVAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 318
## Reductions:

State 318:
## Known stack suffix:
## RETVAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 319:
## Known stack suffix:
## RETVAL EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 320
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS NOTXPCOM

State 320:
## Known stack suffix:
## RETVAL EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 321
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 321:
## Known stack suffix:
## RETVAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## RETVAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 323:
## Known stack suffix:
## RETVAL EQUALS ID
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 324
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS ID

State 324:
## Known stack suffix:
## RETVAL EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 325
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 325:
## Known stack suffix:
## RETVAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## RETVAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 327:
## Known stack suffix:
## RETVAL EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 328
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS GETTER

State 328:
## Known stack suffix:
## RETVAL EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 329
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 329:
## Known stack suffix:
## RETVAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## RETVAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 331:
## Known stack suffix:
## RETVAL EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 332
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS DICTIONARY

State 332:
## Known stack suffix:
## RETVAL EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 333
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 333:
## Known stack suffix:
## RETVAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## RETVAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 335:
## Known stack suffix:
## RETVAL EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 336
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS CREATOR

State 336:
## Known stack suffix:
## RETVAL EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 337
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 337:
## Known stack suffix:
## RETVAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## RETVAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 339:
## Known stack suffix:
## RETVAL EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> RETVAL EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> RETVAL EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 340
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> RETVAL EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> RETVAL EQUALS CONSTRUCTOR

State 340:
## Known stack suffix:
## RETVAL EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 341
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 341:
## Known stack suffix:
## RETVAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## RETVAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> RETVAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> RETVAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 343:
## Known stack suffix:
## REPLACEABLENAMEDPROPERTIES
## LR(1) items:
extendedAttributeNoArgs -> REPLACEABLENAMEDPROPERTIES . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> REPLACEABLENAMEDPROPERTIES

State 344:
## Known stack suffix:
## REPLACEABLE
## LR(1) items:
extendedAttributeNoArgs -> REPLACEABLE . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> REPLACEABLE

State 345:
## Known stack suffix:
## QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> QUERYINTERFACETYPE . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 346
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeNoArgs -> QUERYINTERFACETYPE

State 346:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 347
-- On SETTER shift to state 351
-- On RETVAL shift to state 355
-- On QUERYINTERFACETYPE shift to state 359
-- On PRIVATEBROWSINGCHECK shift to state 363
-- On PARTIAL shift to state 367
-- On NOTXPCOM shift to state 371
-- On ID shift to state 375
-- On GETTER shift to state 379
-- On DICTIONARY shift to state 383
-- On CREATOR shift to state 387
-- On CONSTRUCTOR shift to state 391
## Reductions:

State 347:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 348
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS UNSAFE

State 348:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 349
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 349:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 351:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 352
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS SETTER

State 352:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 353
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 353:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 354
## Reductions:

State 354:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 355:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 356
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS RETVAL

State 356:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 357
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 357:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 358
## Reductions:

State 358:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 359:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 360
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE

State 360:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 361
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 361:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 362
## Reductions:

State 362:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 363:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 364
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK

State 364:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 365
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 365:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 367:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 368
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS PARTIAL

State 368:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 369
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 369:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 370
## Reductions:

State 370:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 371:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 372
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS NOTXPCOM

State 372:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 373
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 373:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 374
## Reductions:

State 374:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 375:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS ID
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 376
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS ID

State 376:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 377
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 377:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 379:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 380
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS GETTER

State 380:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 381
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 381:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 383:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 384
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS DICTIONARY

State 384:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 385
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 385:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 386
## Reductions:

State 386:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 387:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 388
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CREATOR

State 388:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 389
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 389:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 390
## Reductions:

State 390:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 391:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 392
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR

State 392:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 393
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 393:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> QUERYINTERFACETYPE EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 395:
## Known stack suffix:
## QUERYELEMENTATTYPE
## LR(1) items:
extendedAttributeArgList -> QUERYELEMENTATTYPE . LPAREN INTLIT RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 396
## Reductions:

State 396:
## Known stack suffix:
## QUERYELEMENTATTYPE LPAREN
## LR(1) items:
extendedAttributeArgList -> QUERYELEMENTATTYPE LPAREN . INTLIT RPAREN [ RBRACK COMMA ]
## Transitions:
-- On INTLIT shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## QUERYELEMENTATTYPE LPAREN INTLIT
## LR(1) items:
extendedAttributeArgList -> QUERYELEMENTATTYPE LPAREN INTLIT . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 398
## Reductions:

State 398:
## Known stack suffix:
## QUERYELEMENTATTYPE LPAREN INTLIT RPAREN
## LR(1) items:
extendedAttributeArgList -> QUERYELEMENTATTYPE LPAREN INTLIT RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> QUERYELEMENTATTYPE LPAREN INTLIT RPAREN

State 399:
## Known stack suffix:
## PUTFORWARDS
## LR(1) items:
extendedAttributeIdent -> PUTFORWARDS . EQUALS ID [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## PUTFORWARDS EQUALS
## LR(1) items:
extendedAttributeIdent -> PUTFORWARDS EQUALS . ID [ RBRACK COMMA ]
## Transitions:
-- On ID shift to state 401
## Reductions:

State 401:
## Known stack suffix:
## PUTFORWARDS EQUALS ID
## LR(1) items:
extendedAttributeIdent -> PUTFORWARDS EQUALS ID . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeIdent -> PUTFORWARDS EQUALS ID

State 402:
## Known stack suffix:
## PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 403
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeNoArgs -> PRIVATEBROWSINGCHECK

State 403:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 404
-- On SETTER shift to state 408
-- On RETVAL shift to state 412
-- On QUERYINTERFACETYPE shift to state 416
-- On PRIVATEBROWSINGCHECK shift to state 420
-- On PARTIAL shift to state 424
-- On NOTXPCOM shift to state 428
-- On ID shift to state 432
-- On GETTER shift to state 436
-- On DICTIONARY shift to state 440
-- On CREATOR shift to state 444
-- On CONSTRUCTOR shift to state 448
## Reductions:

State 404:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 405
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS UNSAFE

State 405:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 406
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 406:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 408:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 409
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS SETTER

State 409:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 410
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 410:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 412:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 413
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS RETVAL

State 413:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 414
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 414:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 415
## Reductions:

State 415:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 416:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 417
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE

State 417:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 418
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 418:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 420:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 421
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK

State 421:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 422
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 422:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 424:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 425
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS PARTIAL

State 425:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 426
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 426:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 428:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 429
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM

State 429:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 430
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 430:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 431
## Reductions:

State 431:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 432:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS ID
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 433
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS ID

State 433:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 434
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 434:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 435
## Reductions:

State 435:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 436:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 437
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS GETTER

State 437:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 438
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 438:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 440:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 441
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY

State 441:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 442
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 442:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 444:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 445
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CREATOR

State 445:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 446
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 446:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 447
## Reductions:

State 447:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 448:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 449
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR

State 449:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 450
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 450:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 451
## Reductions:

State 451:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PRIVATEBROWSINGCHECK EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 452:
## Known stack suffix:
## PARTIAL
## LR(1) items:
extendedAttributeArgList -> PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> PARTIAL . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 453
-- On EQUALS shift to state 456
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> PARTIAL
-- On COMMA reduce production extendedAttributeNoArgs -> PARTIAL

State 453:
## Known stack suffix:
## PARTIAL LPAREN
## LR(1) items:
extendedAttributeArgList -> PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 454
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 454:
## Known stack suffix:
## PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 455
## Reductions:

State 455:
## Known stack suffix:
## PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 456:
## Known stack suffix:
## PARTIAL EQUALS
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> PARTIAL EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 457
-- On SETTER shift to state 461
-- On RETVAL shift to state 465
-- On QUERYINTERFACETYPE shift to state 469
-- On PRIVATEBROWSINGCHECK shift to state 473
-- On PARTIAL shift to state 477
-- On NOTXPCOM shift to state 481
-- On ID shift to state 485
-- On GETTER shift to state 489
-- On DICTIONARY shift to state 493
-- On CREATOR shift to state 497
-- On CONSTRUCTOR shift to state 501
## Reductions:

State 457:
## Known stack suffix:
## PARTIAL EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 458
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS UNSAFE

State 458:
## Known stack suffix:
## PARTIAL EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 459
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 459:
## Known stack suffix:
## PARTIAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 460
## Reductions:

State 460:
## Known stack suffix:
## PARTIAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 461:
## Known stack suffix:
## PARTIAL EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 462
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS SETTER

State 462:
## Known stack suffix:
## PARTIAL EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 463
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 463:
## Known stack suffix:
## PARTIAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 464
## Reductions:

State 464:
## Known stack suffix:
## PARTIAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 465:
## Known stack suffix:
## PARTIAL EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 466
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS RETVAL

State 466:
## Known stack suffix:
## PARTIAL EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 467
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 467:
## Known stack suffix:
## PARTIAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 468
## Reductions:

State 468:
## Known stack suffix:
## PARTIAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 469:
## Known stack suffix:
## PARTIAL EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 470
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS QUERYINTERFACETYPE

State 470:
## Known stack suffix:
## PARTIAL EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 471
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 471:
## Known stack suffix:
## PARTIAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 472
## Reductions:

State 472:
## Known stack suffix:
## PARTIAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 473:
## Known stack suffix:
## PARTIAL EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 474
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS PRIVATEBROWSINGCHECK

State 474:
## Known stack suffix:
## PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 475
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 475:
## Known stack suffix:
## PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 476
## Reductions:

State 476:
## Known stack suffix:
## PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 477:
## Known stack suffix:
## PARTIAL EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 478
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS PARTIAL

State 478:
## Known stack suffix:
## PARTIAL EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 479
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 479:
## Known stack suffix:
## PARTIAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## PARTIAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 481:
## Known stack suffix:
## PARTIAL EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 482
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS NOTXPCOM

State 482:
## Known stack suffix:
## PARTIAL EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 483
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 483:
## Known stack suffix:
## PARTIAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 484
## Reductions:

State 484:
## Known stack suffix:
## PARTIAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 485:
## Known stack suffix:
## PARTIAL EQUALS ID
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 486
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS ID

State 486:
## Known stack suffix:
## PARTIAL EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 487
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 487:
## Known stack suffix:
## PARTIAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 488
## Reductions:

State 488:
## Known stack suffix:
## PARTIAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 489:
## Known stack suffix:
## PARTIAL EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 490
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS GETTER

State 490:
## Known stack suffix:
## PARTIAL EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 491
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 491:
## Known stack suffix:
## PARTIAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 492
## Reductions:

State 492:
## Known stack suffix:
## PARTIAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 493:
## Known stack suffix:
## PARTIAL EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 494
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS DICTIONARY

State 494:
## Known stack suffix:
## PARTIAL EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 495
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 495:
## Known stack suffix:
## PARTIAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 496
## Reductions:

State 496:
## Known stack suffix:
## PARTIAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 497:
## Known stack suffix:
## PARTIAL EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 498
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS CREATOR

State 498:
## Known stack suffix:
## PARTIAL EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 499
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 499:
## Known stack suffix:
## PARTIAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 500
## Reductions:

State 500:
## Known stack suffix:
## PARTIAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 501:
## Known stack suffix:
## PARTIAL EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> PARTIAL EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> PARTIAL EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 502
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> PARTIAL EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> PARTIAL EQUALS CONSTRUCTOR

State 502:
## Known stack suffix:
## PARTIAL EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 503
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 503:
## Known stack suffix:
## PARTIAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 504
## Reductions:

State 504:
## Known stack suffix:
## PARTIAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> PARTIAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> PARTIAL EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 505:
## Known stack suffix:
## OVERRIDEBUILTINS
## LR(1) items:
extendedAttributeNoArgs -> OVERRIDEBUILTINS . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> OVERRIDEBUILTINS

State 506:
## Known stack suffix:
## OPTIONAL_ARGC
## LR(1) items:
extendedAttributeNoArgs -> OPTIONAL_ARGC . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> OPTIONAL_ARGC

State 507:
## Known stack suffix:
## OPTIONAL
## LR(1) items:
extendedAttributeNoArgs -> OPTIONAL . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> OPTIONAL

State 508:
## Known stack suffix:
## NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> NOTXPCOM . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 509
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> NOTXPCOM
-- On COMMA reduce production extendedAttributeNoArgs -> NOTXPCOM

State 509:
## Known stack suffix:
## NOTXPCOM EQUALS
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> NOTXPCOM EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 510
-- On SETTER shift to state 514
-- On RETVAL shift to state 518
-- On QUERYINTERFACETYPE shift to state 522
-- On PRIVATEBROWSINGCHECK shift to state 526
-- On PARTIAL shift to state 530
-- On NOTXPCOM shift to state 534
-- On ID shift to state 538
-- On GETTER shift to state 542
-- On DICTIONARY shift to state 546
-- On CREATOR shift to state 550
-- On CONSTRUCTOR shift to state 554
## Reductions:

State 510:
## Known stack suffix:
## NOTXPCOM EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 511
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS UNSAFE

State 511:
## Known stack suffix:
## NOTXPCOM EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 512
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 512:
## Known stack suffix:
## NOTXPCOM EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 513
## Reductions:

State 513:
## Known stack suffix:
## NOTXPCOM EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 514:
## Known stack suffix:
## NOTXPCOM EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 515
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS SETTER

State 515:
## Known stack suffix:
## NOTXPCOM EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 516
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 516:
## Known stack suffix:
## NOTXPCOM EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 517
## Reductions:

State 517:
## Known stack suffix:
## NOTXPCOM EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 518:
## Known stack suffix:
## NOTXPCOM EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 519
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS RETVAL

State 519:
## Known stack suffix:
## NOTXPCOM EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 520
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 520:
## Known stack suffix:
## NOTXPCOM EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 521
## Reductions:

State 521:
## Known stack suffix:
## NOTXPCOM EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 522:
## Known stack suffix:
## NOTXPCOM EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 523
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS QUERYINTERFACETYPE

State 523:
## Known stack suffix:
## NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 524
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 524:
## Known stack suffix:
## NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 525
## Reductions:

State 525:
## Known stack suffix:
## NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 526:
## Known stack suffix:
## NOTXPCOM EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 527
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK

State 527:
## Known stack suffix:
## NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 528
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 528:
## Known stack suffix:
## NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 529
## Reductions:

State 529:
## Known stack suffix:
## NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 530:
## Known stack suffix:
## NOTXPCOM EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 531
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS PARTIAL

State 531:
## Known stack suffix:
## NOTXPCOM EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 532
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 532:
## Known stack suffix:
## NOTXPCOM EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## NOTXPCOM EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 534:
## Known stack suffix:
## NOTXPCOM EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 535
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS NOTXPCOM

State 535:
## Known stack suffix:
## NOTXPCOM EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 536
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 536:
## Known stack suffix:
## NOTXPCOM EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## NOTXPCOM EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 538:
## Known stack suffix:
## NOTXPCOM EQUALS ID
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 539
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS ID

State 539:
## Known stack suffix:
## NOTXPCOM EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 540
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 540:
## Known stack suffix:
## NOTXPCOM EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 541
## Reductions:

State 541:
## Known stack suffix:
## NOTXPCOM EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 542:
## Known stack suffix:
## NOTXPCOM EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 543
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS GETTER

State 543:
## Known stack suffix:
## NOTXPCOM EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 544
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 544:
## Known stack suffix:
## NOTXPCOM EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 545
## Reductions:

State 545:
## Known stack suffix:
## NOTXPCOM EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 546:
## Known stack suffix:
## NOTXPCOM EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 547
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS DICTIONARY

State 547:
## Known stack suffix:
## NOTXPCOM EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 548
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 548:
## Known stack suffix:
## NOTXPCOM EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 549
## Reductions:

State 549:
## Known stack suffix:
## NOTXPCOM EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 550:
## Known stack suffix:
## NOTXPCOM EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 551
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS CREATOR

State 551:
## Known stack suffix:
## NOTXPCOM EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 552
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 552:
## Known stack suffix:
## NOTXPCOM EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 553
## Reductions:

State 553:
## Known stack suffix:
## NOTXPCOM EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 554:
## Known stack suffix:
## NOTXPCOM EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> NOTXPCOM EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 555
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> NOTXPCOM EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> NOTXPCOM EQUALS CONSTRUCTOR

State 555:
## Known stack suffix:
## NOTXPCOM EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 556
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 556:
## Known stack suffix:
## NOTXPCOM EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 557
## Reductions:

State 557:
## Known stack suffix:
## NOTXPCOM EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NOTXPCOM EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NOTXPCOM EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 558:
## Known stack suffix:
## NOSCRIPT
## LR(1) items:
extendedAttributeNoArgs -> NOSCRIPT . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> NOSCRIPT

State 559:
## Known stack suffix:
## NOINTERFACEOBJECT
## LR(1) items:
extendedAttributeNoArgs -> NOINTERFACEOBJECT . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> NOINTERFACEOBJECT

State 560:
## Known stack suffix:
## NAMEDCONSTRUCTOR
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR . EQUALS ID LPAREN argumentList RPAREN [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 561
## Reductions:

State 561:
## Known stack suffix:
## NAMEDCONSTRUCTOR EQUALS
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS . ID LPAREN argumentList RPAREN [ RBRACK COMMA ]
## Transitions:
-- On ID shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## NAMEDCONSTRUCTOR EQUALS ID
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS ID . LPAREN argumentList RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 563
## Reductions:

State 563:
## Known stack suffix:
## NAMEDCONSTRUCTOR EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS ID LPAREN . argumentList RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 629
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 564:
## Known stack suffix:
## separated_nonempty_list(COMMA,argument)
## LR(1) items:
loption(separated_nonempty_list(COMMA,argument)) -> separated_nonempty_list(COMMA,argument) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(COMMA,argument)) -> separated_nonempty_list(COMMA,argument)

State 565:
## Known stack suffix:
## loption(separated_nonempty_list(COMMA,argument))
## LR(1) items:
argumentList -> loption(separated_nonempty_list(COMMA,argument)) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argumentList -> loption(separated_nonempty_list(COMMA,argument))

State 566:
## Known stack suffix:
## extendedAttributeList
## LR(1) items:
extAttrArgList(optionalOrRequiredArgument) -> extendedAttributeList . optionalOrRequiredArgument [ RPAREN COMMA ]
## Transitions:
-- On OUT shift to state 567
-- On INOUT shift to state 568
-- On IN shift to state 569
-- On optionalOrRequiredArgument shift to state 570
-- On inout shift to state 571
## Reductions:
-- On UNSIGNED reduce production inout ->
-- On UNSAFE reduce production inout ->
-- On SHORT reduce production inout ->
-- On SEQUENCE reduce production inout ->
-- On RETVAL reduce production inout ->
-- On QUERYINTERFACETYPE reduce production inout ->
-- On PRIVATEBROWSINGCHECK reduce production inout ->
-- On PARTIAL reduce production inout ->
-- On OPTIONAL reduce production inout ->
-- On OCTET reduce production inout ->
-- On NOTXPCOM reduce production inout ->
-- On LONG reduce production inout ->
-- On ID reduce production inout ->
-- On FLOAT reduce production inout ->
-- On DOUBLE reduce production inout ->
-- On DICTIONARY reduce production inout ->
-- On CONSTRUCTOR reduce production inout ->
-- On BYTE reduce production inout ->
-- On BOOLEAN reduce production inout ->
-- On ANY reduce production inout ->

State 567:
## Known stack suffix:
## OUT
## LR(1) items:
inout -> OUT . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OPTIONAL OCTET NOTXPCOM LONG ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inout -> OUT

State 568:
## Known stack suffix:
## INOUT
## LR(1) items:
inout -> INOUT . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OPTIONAL OCTET NOTXPCOM LONG ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inout -> INOUT

State 569:
## Known stack suffix:
## IN
## LR(1) items:
inout -> IN . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OPTIONAL OCTET NOTXPCOM LONG ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inout -> IN

State 570:
## Known stack suffix:
## extendedAttributeList optionalOrRequiredArgument
## LR(1) items:
extAttrArgList(optionalOrRequiredArgument) -> extendedAttributeList optionalOrRequiredArgument . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extAttrArgList(optionalOrRequiredArgument) -> extendedAttributeList optionalOrRequiredArgument

State 571:
## Known stack suffix:
## inout
## LR(1) items:
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl CONSTRUCTOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl NOTXPCOM option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl RETVAL option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl UNSAFE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl PRIVATEBROWSINGCHECK option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl QUERYINTERFACETYPE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl CREATOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl GETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl SETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl ID option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl DICTIONARY option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . OPTIONAL typeDecl PARTIAL option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT CONSTRUCTOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT NOTXPCOM [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT RETVAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT UNSAFE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT PRIVATEBROWSINGCHECK [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT QUERYINTERFACETYPE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT CREATOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT GETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT SETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT ID [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT DICTIONARY [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DOTDOTDOT PARTIAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl CONSTRUCTOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl NOTXPCOM [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl RETVAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl UNSAFE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl PRIVATEBROWSINGCHECK [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl QUERYINTERFACETYPE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl CREATOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl GETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl SETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl ID [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl DICTIONARY [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout . typeDecl PARTIAL [ RPAREN COMMA ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OPTIONAL shift to state 572
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 602
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 572:
## Known stack suffix:
## inout OPTIONAL
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl CONSTRUCTOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl NOTXPCOM option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl RETVAL option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl UNSAFE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl PRIVATEBROWSINGCHECK option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl QUERYINTERFACETYPE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl CREATOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl GETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl SETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl ID option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl DICTIONARY option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL . typeDecl PARTIAL option(default) [ RPAREN COMMA ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 573
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 573:
## Known stack suffix:
## inout OPTIONAL typeDecl
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . CONSTRUCTOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . NOTXPCOM option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . RETVAL option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . UNSAFE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . PRIVATEBROWSINGCHECK option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . QUERYINTERFACETYPE option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . CREATOR option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . GETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . SETTER option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . ID option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . DICTIONARY option(default) [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout OPTIONAL typeDecl . PARTIAL option(default) [ RPAREN COMMA ]
## Transitions:
-- On UNSAFE shift to state 574
-- On SETTER shift to state 580
-- On RETVAL shift to state 582
-- On QUERYINTERFACETYPE shift to state 584
-- On PRIVATEBROWSINGCHECK shift to state 586
-- On PARTIAL shift to state 588
-- On NOTXPCOM shift to state 590
-- On ID shift to state 592
-- On GETTER shift to state 594
-- On DICTIONARY shift to state 596
-- On CREATOR shift to state 598
-- On CONSTRUCTOR shift to state 600
## Reductions:

State 574:
## Known stack suffix:
## inout OPTIONAL typeDecl UNSAFE
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl UNSAFE . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 578
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 575:
## Known stack suffix:
## EQUALS
## LR(1) items:
default -> EQUALS . constValue [ SEMI RPAREN COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 576
-- On constValue shift to state 577
-- On absoluteScopedName shift to state 107
## Reductions:

State 576:
## Known stack suffix:
## expr
## LR(1) items:
constValue -> expr . [ SEMI RPAREN COMMA ]
expr -> expr . MOD expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . DIVIDE expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . TIMES expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . MINUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . PLUS expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHRIGHT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . SHLEFT expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . AND expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . XOR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
expr -> expr . BAR expr [ XOR TIMES SHRIGHT SHLEFT SEMI RPAREN PLUS MOD MINUS DIVIDE COMMA BAR AND ]
## Transitions:
-- On XOR shift to state 103
-- On TIMES shift to state 105
-- On SHRIGHT shift to state 108
-- On SHLEFT shift to state 118
-- On PLUS shift to state 110
-- On MOD shift to state 112
-- On MINUS shift to state 116
-- On DIVIDE shift to state 114
-- On BAR shift to state 123
-- On AND shift to state 120
## Reductions:
-- On SEMI reduce production constValue -> expr
-- On RPAREN reduce production constValue -> expr
-- On COMMA reduce production constValue -> expr

State 577:
## Known stack suffix:
## EQUALS constValue
## LR(1) items:
default -> EQUALS constValue . [ SEMI RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production default -> EQUALS constValue

State 578:
## Known stack suffix:
## inout OPTIONAL typeDecl UNSAFE option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl UNSAFE option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl UNSAFE option(default)

State 579:
## Known stack suffix:
## default
## LR(1) items:
option(default) -> default . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(default) -> default

State 580:
## Known stack suffix:
## inout OPTIONAL typeDecl SETTER
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl SETTER . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 581
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 581:
## Known stack suffix:
## inout OPTIONAL typeDecl SETTER option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl SETTER option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl SETTER option(default)

State 582:
## Known stack suffix:
## inout OPTIONAL typeDecl RETVAL
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl RETVAL . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 583
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 583:
## Known stack suffix:
## inout OPTIONAL typeDecl RETVAL option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl RETVAL option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl RETVAL option(default)

State 584:
## Known stack suffix:
## inout OPTIONAL typeDecl QUERYINTERFACETYPE
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl QUERYINTERFACETYPE . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 585
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 585:
## Known stack suffix:
## inout OPTIONAL typeDecl QUERYINTERFACETYPE option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl QUERYINTERFACETYPE option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl QUERYINTERFACETYPE option(default)

State 586:
## Known stack suffix:
## inout OPTIONAL typeDecl PRIVATEBROWSINGCHECK
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl PRIVATEBROWSINGCHECK . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 587
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 587:
## Known stack suffix:
## inout OPTIONAL typeDecl PRIVATEBROWSINGCHECK option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl PRIVATEBROWSINGCHECK option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl PRIVATEBROWSINGCHECK option(default)

State 588:
## Known stack suffix:
## inout OPTIONAL typeDecl PARTIAL
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl PARTIAL . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 589
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 589:
## Known stack suffix:
## inout OPTIONAL typeDecl PARTIAL option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl PARTIAL option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl PARTIAL option(default)

State 590:
## Known stack suffix:
## inout OPTIONAL typeDecl NOTXPCOM
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl NOTXPCOM . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 591
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 591:
## Known stack suffix:
## inout OPTIONAL typeDecl NOTXPCOM option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl NOTXPCOM option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl NOTXPCOM option(default)

State 592:
## Known stack suffix:
## inout OPTIONAL typeDecl ID
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl ID . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 593
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 593:
## Known stack suffix:
## inout OPTIONAL typeDecl ID option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl ID option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl ID option(default)

State 594:
## Known stack suffix:
## inout OPTIONAL typeDecl GETTER
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl GETTER . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 595
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 595:
## Known stack suffix:
## inout OPTIONAL typeDecl GETTER option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl GETTER option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl GETTER option(default)

State 596:
## Known stack suffix:
## inout OPTIONAL typeDecl DICTIONARY
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl DICTIONARY . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 597
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 597:
## Known stack suffix:
## inout OPTIONAL typeDecl DICTIONARY option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl DICTIONARY option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl DICTIONARY option(default)

State 598:
## Known stack suffix:
## inout OPTIONAL typeDecl CREATOR
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl CREATOR . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 599
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 599:
## Known stack suffix:
## inout OPTIONAL typeDecl CREATOR option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl CREATOR option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl CREATOR option(default)

State 600:
## Known stack suffix:
## inout OPTIONAL typeDecl CONSTRUCTOR
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl CONSTRUCTOR . option(default) [ RPAREN COMMA ]
## Transitions:
-- On EQUALS shift to state 575
-- On option(default) shift to state 601
-- On default shift to state 579
## Reductions:
-- On RPAREN reduce production option(default) ->
-- On COMMA reduce production option(default) ->

State 601:
## Known stack suffix:
## inout OPTIONAL typeDecl CONSTRUCTOR option(default)
## LR(1) items:
optionalOrRequiredArgument -> inout OPTIONAL typeDecl CONSTRUCTOR option(default) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout OPTIONAL typeDecl CONSTRUCTOR option(default)

State 602:
## Known stack suffix:
## inout typeDecl
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT CONSTRUCTOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT NOTXPCOM [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT RETVAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT UNSAFE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT PRIVATEBROWSINGCHECK [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT QUERYINTERFACETYPE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT CREATOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT GETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT SETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT ID [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT DICTIONARY [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DOTDOTDOT PARTIAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . CONSTRUCTOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . NOTXPCOM [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . RETVAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . UNSAFE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . PRIVATEBROWSINGCHECK [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . QUERYINTERFACETYPE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . CREATOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . GETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . SETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . ID [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . DICTIONARY [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl . PARTIAL [ RPAREN COMMA ]
## Transitions:
-- On UNSAFE shift to state 603
-- On SETTER shift to state 604
-- On RETVAL shift to state 605
-- On QUERYINTERFACETYPE shift to state 606
-- On PRIVATEBROWSINGCHECK shift to state 607
-- On PARTIAL shift to state 608
-- On NOTXPCOM shift to state 609
-- On ID shift to state 610
-- On GETTER shift to state 611
-- On DOTDOTDOT shift to state 612
-- On DICTIONARY shift to state 625
-- On CREATOR shift to state 626
-- On CONSTRUCTOR shift to state 627
## Reductions:

State 603:
## Known stack suffix:
## inout typeDecl UNSAFE
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl UNSAFE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl UNSAFE

State 604:
## Known stack suffix:
## inout typeDecl SETTER
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl SETTER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl SETTER

State 605:
## Known stack suffix:
## inout typeDecl RETVAL
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl RETVAL . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl RETVAL

State 606:
## Known stack suffix:
## inout typeDecl QUERYINTERFACETYPE
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl QUERYINTERFACETYPE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl QUERYINTERFACETYPE

State 607:
## Known stack suffix:
## inout typeDecl PRIVATEBROWSINGCHECK
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl PRIVATEBROWSINGCHECK . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl PRIVATEBROWSINGCHECK

State 608:
## Known stack suffix:
## inout typeDecl PARTIAL
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl PARTIAL . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl PARTIAL

State 609:
## Known stack suffix:
## inout typeDecl NOTXPCOM
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl NOTXPCOM . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl NOTXPCOM

State 610:
## Known stack suffix:
## inout typeDecl ID
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl ID . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl ID

State 611:
## Known stack suffix:
## inout typeDecl GETTER
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl GETTER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl GETTER

State 612:
## Known stack suffix:
## inout typeDecl DOTDOTDOT
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . CONSTRUCTOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . NOTXPCOM [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . RETVAL [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . UNSAFE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . PRIVATEBROWSINGCHECK [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . QUERYINTERFACETYPE [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . CREATOR [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . GETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . SETTER [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . ID [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . DICTIONARY [ RPAREN COMMA ]
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT . PARTIAL [ RPAREN COMMA ]
## Transitions:
-- On UNSAFE shift to state 613
-- On SETTER shift to state 614
-- On RETVAL shift to state 615
-- On QUERYINTERFACETYPE shift to state 616
-- On PRIVATEBROWSINGCHECK shift to state 617
-- On PARTIAL shift to state 618
-- On NOTXPCOM shift to state 619
-- On ID shift to state 620
-- On GETTER shift to state 621
-- On DICTIONARY shift to state 622
-- On CREATOR shift to state 623
-- On CONSTRUCTOR shift to state 624
## Reductions:

State 613:
## Known stack suffix:
## inout typeDecl DOTDOTDOT UNSAFE
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT UNSAFE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT UNSAFE

State 614:
## Known stack suffix:
## inout typeDecl DOTDOTDOT SETTER
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT SETTER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT SETTER

State 615:
## Known stack suffix:
## inout typeDecl DOTDOTDOT RETVAL
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT RETVAL . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT RETVAL

State 616:
## Known stack suffix:
## inout typeDecl DOTDOTDOT QUERYINTERFACETYPE
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT QUERYINTERFACETYPE . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT QUERYINTERFACETYPE

State 617:
## Known stack suffix:
## inout typeDecl DOTDOTDOT PRIVATEBROWSINGCHECK
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT PRIVATEBROWSINGCHECK . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT PRIVATEBROWSINGCHECK

State 618:
## Known stack suffix:
## inout typeDecl DOTDOTDOT PARTIAL
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT PARTIAL . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT PARTIAL

State 619:
## Known stack suffix:
## inout typeDecl DOTDOTDOT NOTXPCOM
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT NOTXPCOM . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT NOTXPCOM

State 620:
## Known stack suffix:
## inout typeDecl DOTDOTDOT ID
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT ID . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT ID

State 621:
## Known stack suffix:
## inout typeDecl DOTDOTDOT GETTER
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT GETTER . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT GETTER

State 622:
## Known stack suffix:
## inout typeDecl DOTDOTDOT DICTIONARY
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT DICTIONARY . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT DICTIONARY

State 623:
## Known stack suffix:
## inout typeDecl DOTDOTDOT CREATOR
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT CREATOR . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT CREATOR

State 624:
## Known stack suffix:
## inout typeDecl DOTDOTDOT CONSTRUCTOR
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT CONSTRUCTOR . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DOTDOTDOT CONSTRUCTOR

State 625:
## Known stack suffix:
## inout typeDecl DICTIONARY
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl DICTIONARY . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl DICTIONARY

State 626:
## Known stack suffix:
## inout typeDecl CREATOR
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl CREATOR . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl CREATOR

State 627:
## Known stack suffix:
## inout typeDecl CONSTRUCTOR
## LR(1) items:
optionalOrRequiredArgument -> inout typeDecl CONSTRUCTOR . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optionalOrRequiredArgument -> inout typeDecl CONSTRUCTOR

State 628:
## Known stack suffix:
## extAttrArgList(optionalOrRequiredArgument)
## LR(1) items:
argument -> extAttrArgList(optionalOrRequiredArgument) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> extAttrArgList(optionalOrRequiredArgument)

State 629:
## Known stack suffix:
## NAMEDCONSTRUCTOR EQUALS ID LPAREN argumentList
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS ID LPAREN argumentList . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 630
## Reductions:

State 630:
## Known stack suffix:
## NAMEDCONSTRUCTOR EQUALS ID LPAREN argumentList RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS ID LPAREN argumentList RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> NAMEDCONSTRUCTOR EQUALS ID LPAREN argumentList RPAREN

State 631:
## Known stack suffix:
## argument
## LR(1) items:
separated_nonempty_list(COMMA,argument) -> argument . [ RPAREN ]
separated_nonempty_list(COMMA,argument) -> argument . COMMA separated_nonempty_list(COMMA,argument) [ RPAREN ]
## Transitions:
-- On COMMA shift to state 632
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,argument) -> argument

State 632:
## Known stack suffix:
## argument COMMA
## LR(1) items:
separated_nonempty_list(COMMA,argument) -> argument COMMA . separated_nonempty_list(COMMA,argument) [ RPAREN ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 633
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 633:
## Known stack suffix:
## argument COMMA separated_nonempty_list(COMMA,argument)
## LR(1) items:
separated_nonempty_list(COMMA,argument) -> argument COMMA separated_nonempty_list(COMMA,argument) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,argument) -> argument COMMA separated_nonempty_list(COMMA,argument)

State 634:
## Known stack suffix:
## IMPLICIT_JSCONTEXT
## LR(1) items:
extendedAttributeNoArgs -> IMPLICIT_JSCONTEXT . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> IMPLICIT_JSCONTEXT

State 635:
## Known stack suffix:
## ID
## LR(1) items:
extendedAttributeArgList -> ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> ID . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> ID . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 636
-- On EQUALS shift to state 639
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> ID
-- On COMMA reduce production extendedAttributeNoArgs -> ID

State 636:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
extendedAttributeArgList -> ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 637
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 637:
## Known stack suffix:
## ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 638
## Reductions:

State 638:
## Known stack suffix:
## ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 639:
## Known stack suffix:
## ID EQUALS
## LR(1) items:
extendedAttributeIdent -> ID EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> ID EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 640
-- On SETTER shift to state 644
-- On RETVAL shift to state 648
-- On QUERYINTERFACETYPE shift to state 652
-- On PRIVATEBROWSINGCHECK shift to state 656
-- On PARTIAL shift to state 660
-- On NOTXPCOM shift to state 664
-- On ID shift to state 668
-- On GETTER shift to state 672
-- On DICTIONARY shift to state 676
-- On CREATOR shift to state 680
-- On CONSTRUCTOR shift to state 684
## Reductions:

State 640:
## Known stack suffix:
## ID EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> ID EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 641
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS UNSAFE

State 641:
## Known stack suffix:
## ID EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 642
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 642:
## Known stack suffix:
## ID EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 643
## Reductions:

State 643:
## Known stack suffix:
## ID EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 644:
## Known stack suffix:
## ID EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> ID EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 645
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS SETTER

State 645:
## Known stack suffix:
## ID EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 646
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 646:
## Known stack suffix:
## ID EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 647
## Reductions:

State 647:
## Known stack suffix:
## ID EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 648:
## Known stack suffix:
## ID EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> ID EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 649
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS RETVAL

State 649:
## Known stack suffix:
## ID EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 650
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 650:
## Known stack suffix:
## ID EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 651
## Reductions:

State 651:
## Known stack suffix:
## ID EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 652:
## Known stack suffix:
## ID EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> ID EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 653
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS QUERYINTERFACETYPE

State 653:
## Known stack suffix:
## ID EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 654
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 654:
## Known stack suffix:
## ID EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 655
## Reductions:

State 655:
## Known stack suffix:
## ID EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 656:
## Known stack suffix:
## ID EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> ID EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 657
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS PRIVATEBROWSINGCHECK

State 657:
## Known stack suffix:
## ID EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 658
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 658:
## Known stack suffix:
## ID EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## ID EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 660:
## Known stack suffix:
## ID EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> ID EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 661
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS PARTIAL

State 661:
## Known stack suffix:
## ID EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 662
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 662:
## Known stack suffix:
## ID EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 663
## Reductions:

State 663:
## Known stack suffix:
## ID EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 664:
## Known stack suffix:
## ID EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> ID EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 665
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS NOTXPCOM

State 665:
## Known stack suffix:
## ID EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 666
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 666:
## Known stack suffix:
## ID EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 667
## Reductions:

State 667:
## Known stack suffix:
## ID EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 668:
## Known stack suffix:
## ID EQUALS ID
## LR(1) items:
extendedAttributeIdent -> ID EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 669
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS ID

State 669:
## Known stack suffix:
## ID EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 670
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 670:
## Known stack suffix:
## ID EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 671
## Reductions:

State 671:
## Known stack suffix:
## ID EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 672:
## Known stack suffix:
## ID EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> ID EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 673
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS GETTER

State 673:
## Known stack suffix:
## ID EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 674
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 674:
## Known stack suffix:
## ID EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 675
## Reductions:

State 675:
## Known stack suffix:
## ID EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 676:
## Known stack suffix:
## ID EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> ID EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 677
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS DICTIONARY

State 677:
## Known stack suffix:
## ID EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 678
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 678:
## Known stack suffix:
## ID EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 679
## Reductions:

State 679:
## Known stack suffix:
## ID EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 680:
## Known stack suffix:
## ID EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> ID EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 681
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS CREATOR

State 681:
## Known stack suffix:
## ID EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 682
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 682:
## Known stack suffix:
## ID EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 683
## Reductions:

State 683:
## Known stack suffix:
## ID EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 684:
## Known stack suffix:
## ID EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> ID EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> ID EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 685
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> ID EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> ID EQUALS CONSTRUCTOR

State 685:
## Known stack suffix:
## ID EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 686
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 686:
## Known stack suffix:
## ID EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 687
## Reductions:

State 687:
## Known stack suffix:
## ID EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> ID EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> ID EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 688:
## Known stack suffix:
## GETTER
## LR(1) items:
extendedAttributeArgList -> GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> GETTER . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 689
-- On EQUALS shift to state 692
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> GETTER
-- On COMMA reduce production extendedAttributeNoArgs -> GETTER

State 689:
## Known stack suffix:
## GETTER LPAREN
## LR(1) items:
extendedAttributeArgList -> GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 690
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 690:
## Known stack suffix:
## GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 691
## Reductions:

State 691:
## Known stack suffix:
## GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 692:
## Known stack suffix:
## GETTER EQUALS
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> GETTER EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 693
-- On SETTER shift to state 697
-- On RETVAL shift to state 701
-- On QUERYINTERFACETYPE shift to state 705
-- On PRIVATEBROWSINGCHECK shift to state 709
-- On PARTIAL shift to state 713
-- On NOTXPCOM shift to state 717
-- On ID shift to state 721
-- On GETTER shift to state 725
-- On DICTIONARY shift to state 729
-- On CREATOR shift to state 733
-- On CONSTRUCTOR shift to state 737
## Reductions:

State 693:
## Known stack suffix:
## GETTER EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 694
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS UNSAFE

State 694:
## Known stack suffix:
## GETTER EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 695
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 695:
## Known stack suffix:
## GETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 696
## Reductions:

State 696:
## Known stack suffix:
## GETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 697:
## Known stack suffix:
## GETTER EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 698
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS SETTER

State 698:
## Known stack suffix:
## GETTER EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 699
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 699:
## Known stack suffix:
## GETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 700
## Reductions:

State 700:
## Known stack suffix:
## GETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 701:
## Known stack suffix:
## GETTER EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 702
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS RETVAL

State 702:
## Known stack suffix:
## GETTER EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 703
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 703:
## Known stack suffix:
## GETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 704
## Reductions:

State 704:
## Known stack suffix:
## GETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 705:
## Known stack suffix:
## GETTER EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 706
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS QUERYINTERFACETYPE

State 706:
## Known stack suffix:
## GETTER EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 707
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 707:
## Known stack suffix:
## GETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 708
## Reductions:

State 708:
## Known stack suffix:
## GETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 709:
## Known stack suffix:
## GETTER EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 710
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS PRIVATEBROWSINGCHECK

State 710:
## Known stack suffix:
## GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 711
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 711:
## Known stack suffix:
## GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 712
## Reductions:

State 712:
## Known stack suffix:
## GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 713:
## Known stack suffix:
## GETTER EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 714
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS PARTIAL

State 714:
## Known stack suffix:
## GETTER EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 715
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 715:
## Known stack suffix:
## GETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 716
## Reductions:

State 716:
## Known stack suffix:
## GETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 717:
## Known stack suffix:
## GETTER EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 718
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS NOTXPCOM

State 718:
## Known stack suffix:
## GETTER EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 719
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 719:
## Known stack suffix:
## GETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 720
## Reductions:

State 720:
## Known stack suffix:
## GETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 721:
## Known stack suffix:
## GETTER EQUALS ID
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 722
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS ID

State 722:
## Known stack suffix:
## GETTER EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 723
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 723:
## Known stack suffix:
## GETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 724
## Reductions:

State 724:
## Known stack suffix:
## GETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 725:
## Known stack suffix:
## GETTER EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 726
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS GETTER

State 726:
## Known stack suffix:
## GETTER EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 727
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 727:
## Known stack suffix:
## GETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 728
## Reductions:

State 728:
## Known stack suffix:
## GETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 729:
## Known stack suffix:
## GETTER EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 730
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS DICTIONARY

State 730:
## Known stack suffix:
## GETTER EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 731
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 731:
## Known stack suffix:
## GETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 732
## Reductions:

State 732:
## Known stack suffix:
## GETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 733:
## Known stack suffix:
## GETTER EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 734
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS CREATOR

State 734:
## Known stack suffix:
## GETTER EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 735
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 735:
## Known stack suffix:
## GETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 736
## Reductions:

State 736:
## Known stack suffix:
## GETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 737:
## Known stack suffix:
## GETTER EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> GETTER EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> GETTER EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 738
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> GETTER EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> GETTER EQUALS CONSTRUCTOR

State 738:
## Known stack suffix:
## GETTER EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 739
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 739:
## Known stack suffix:
## GETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 740
## Reductions:

State 740:
## Known stack suffix:
## GETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> GETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> GETTER EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 741:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
extendedAttributeArgList -> DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> DICTIONARY . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 742
-- On EQUALS shift to state 745
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> DICTIONARY
-- On COMMA reduce production extendedAttributeNoArgs -> DICTIONARY

State 742:
## Known stack suffix:
## DICTIONARY LPAREN
## LR(1) items:
extendedAttributeArgList -> DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 743
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 743:
## Known stack suffix:
## DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 744
## Reductions:

State 744:
## Known stack suffix:
## DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 745:
## Known stack suffix:
## DICTIONARY EQUALS
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> DICTIONARY EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 746
-- On SETTER shift to state 750
-- On RETVAL shift to state 754
-- On QUERYINTERFACETYPE shift to state 758
-- On PRIVATEBROWSINGCHECK shift to state 762
-- On PARTIAL shift to state 766
-- On NOTXPCOM shift to state 770
-- On ID shift to state 774
-- On GETTER shift to state 778
-- On DICTIONARY shift to state 782
-- On CREATOR shift to state 786
-- On CONSTRUCTOR shift to state 790
## Reductions:

State 746:
## Known stack suffix:
## DICTIONARY EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 747
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS UNSAFE

State 747:
## Known stack suffix:
## DICTIONARY EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 748
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 748:
## Known stack suffix:
## DICTIONARY EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 749
## Reductions:

State 749:
## Known stack suffix:
## DICTIONARY EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 750:
## Known stack suffix:
## DICTIONARY EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 751
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS SETTER

State 751:
## Known stack suffix:
## DICTIONARY EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 752
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 752:
## Known stack suffix:
## DICTIONARY EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 753
## Reductions:

State 753:
## Known stack suffix:
## DICTIONARY EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 754:
## Known stack suffix:
## DICTIONARY EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 755
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS RETVAL

State 755:
## Known stack suffix:
## DICTIONARY EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 756
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 756:
## Known stack suffix:
## DICTIONARY EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 757
## Reductions:

State 757:
## Known stack suffix:
## DICTIONARY EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 758:
## Known stack suffix:
## DICTIONARY EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 759
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS QUERYINTERFACETYPE

State 759:
## Known stack suffix:
## DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 760
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 760:
## Known stack suffix:
## DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 761
## Reductions:

State 761:
## Known stack suffix:
## DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 762:
## Known stack suffix:
## DICTIONARY EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 763
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK

State 763:
## Known stack suffix:
## DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 764
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 764:
## Known stack suffix:
## DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 765
## Reductions:

State 765:
## Known stack suffix:
## DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 766:
## Known stack suffix:
## DICTIONARY EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 767
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS PARTIAL

State 767:
## Known stack suffix:
## DICTIONARY EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 768
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 768:
## Known stack suffix:
## DICTIONARY EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 769
## Reductions:

State 769:
## Known stack suffix:
## DICTIONARY EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 770:
## Known stack suffix:
## DICTIONARY EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 771
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS NOTXPCOM

State 771:
## Known stack suffix:
## DICTIONARY EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 772
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 772:
## Known stack suffix:
## DICTIONARY EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 773
## Reductions:

State 773:
## Known stack suffix:
## DICTIONARY EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 774:
## Known stack suffix:
## DICTIONARY EQUALS ID
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 775
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS ID

State 775:
## Known stack suffix:
## DICTIONARY EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 776
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 776:
## Known stack suffix:
## DICTIONARY EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 777
## Reductions:

State 777:
## Known stack suffix:
## DICTIONARY EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 778:
## Known stack suffix:
## DICTIONARY EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 779
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS GETTER

State 779:
## Known stack suffix:
## DICTIONARY EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 780
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 780:
## Known stack suffix:
## DICTIONARY EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 781
## Reductions:

State 781:
## Known stack suffix:
## DICTIONARY EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 782:
## Known stack suffix:
## DICTIONARY EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 783
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS DICTIONARY

State 783:
## Known stack suffix:
## DICTIONARY EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 784
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 784:
## Known stack suffix:
## DICTIONARY EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 785
## Reductions:

State 785:
## Known stack suffix:
## DICTIONARY EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 786:
## Known stack suffix:
## DICTIONARY EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 787
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS CREATOR

State 787:
## Known stack suffix:
## DICTIONARY EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 788
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 788:
## Known stack suffix:
## DICTIONARY EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 789
## Reductions:

State 789:
## Known stack suffix:
## DICTIONARY EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 790:
## Known stack suffix:
## DICTIONARY EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> DICTIONARY EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> DICTIONARY EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 791
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> DICTIONARY EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> DICTIONARY EQUALS CONSTRUCTOR

State 791:
## Known stack suffix:
## DICTIONARY EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 792
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 792:
## Known stack suffix:
## DICTIONARY EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 793
## Reductions:

State 793:
## Known stack suffix:
## DICTIONARY EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> DICTIONARY EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> DICTIONARY EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 794:
## Known stack suffix:
## CREATOR
## LR(1) items:
extendedAttributeArgList -> CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> CREATOR . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 795
-- On EQUALS shift to state 798
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> CREATOR
-- On COMMA reduce production extendedAttributeNoArgs -> CREATOR

State 795:
## Known stack suffix:
## CREATOR LPAREN
## LR(1) items:
extendedAttributeArgList -> CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 796
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 796:
## Known stack suffix:
## CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeArgList -> CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 797
## Reductions:

State 797:
## Known stack suffix:
## CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeArgList -> CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 798:
## Known stack suffix:
## CREATOR EQUALS
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> CREATOR EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 799
-- On SETTER shift to state 803
-- On RETVAL shift to state 807
-- On QUERYINTERFACETYPE shift to state 811
-- On PRIVATEBROWSINGCHECK shift to state 815
-- On PARTIAL shift to state 819
-- On NOTXPCOM shift to state 823
-- On ID shift to state 827
-- On GETTER shift to state 831
-- On DICTIONARY shift to state 835
-- On CREATOR shift to state 839
-- On CONSTRUCTOR shift to state 843
## Reductions:

State 799:
## Known stack suffix:
## CREATOR EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 800
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS UNSAFE

State 800:
## Known stack suffix:
## CREATOR EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 801
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 801:
## Known stack suffix:
## CREATOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 802
## Reductions:

State 802:
## Known stack suffix:
## CREATOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 803:
## Known stack suffix:
## CREATOR EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 804
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS SETTER

State 804:
## Known stack suffix:
## CREATOR EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 805
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 805:
## Known stack suffix:
## CREATOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 806
## Reductions:

State 806:
## Known stack suffix:
## CREATOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 807:
## Known stack suffix:
## CREATOR EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 808
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS RETVAL

State 808:
## Known stack suffix:
## CREATOR EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 809
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 809:
## Known stack suffix:
## CREATOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## CREATOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 811:
## Known stack suffix:
## CREATOR EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 812
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS QUERYINTERFACETYPE

State 812:
## Known stack suffix:
## CREATOR EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 813
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 813:
## Known stack suffix:
## CREATOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 814
## Reductions:

State 814:
## Known stack suffix:
## CREATOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 815:
## Known stack suffix:
## CREATOR EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 816
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS PRIVATEBROWSINGCHECK

State 816:
## Known stack suffix:
## CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 817
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 817:
## Known stack suffix:
## CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 819:
## Known stack suffix:
## CREATOR EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 820
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS PARTIAL

State 820:
## Known stack suffix:
## CREATOR EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 821
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 821:
## Known stack suffix:
## CREATOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## CREATOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 823:
## Known stack suffix:
## CREATOR EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 824
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS NOTXPCOM

State 824:
## Known stack suffix:
## CREATOR EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 825
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 825:
## Known stack suffix:
## CREATOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 826
## Reductions:

State 826:
## Known stack suffix:
## CREATOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 827:
## Known stack suffix:
## CREATOR EQUALS ID
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 828
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS ID

State 828:
## Known stack suffix:
## CREATOR EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 829
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 829:
## Known stack suffix:
## CREATOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 830
## Reductions:

State 830:
## Known stack suffix:
## CREATOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 831:
## Known stack suffix:
## CREATOR EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 832
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS GETTER

State 832:
## Known stack suffix:
## CREATOR EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 833
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 833:
## Known stack suffix:
## CREATOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 834
## Reductions:

State 834:
## Known stack suffix:
## CREATOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 835:
## Known stack suffix:
## CREATOR EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 836
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS DICTIONARY

State 836:
## Known stack suffix:
## CREATOR EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 837
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 837:
## Known stack suffix:
## CREATOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 838
## Reductions:

State 838:
## Known stack suffix:
## CREATOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 839:
## Known stack suffix:
## CREATOR EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 840
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS CREATOR

State 840:
## Known stack suffix:
## CREATOR EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 841
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 841:
## Known stack suffix:
## CREATOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 842
## Reductions:

State 842:
## Known stack suffix:
## CREATOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 843:
## Known stack suffix:
## CREATOR EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> CREATOR EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CREATOR EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 844
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CREATOR EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> CREATOR EQUALS CONSTRUCTOR

State 844:
## Known stack suffix:
## CREATOR EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 845
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 845:
## Known stack suffix:
## CREATOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 846
## Reductions:

State 846:
## Known stack suffix:
## CREATOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CREATOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CREATOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 847:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
extendedAttributeArgList -> CONSTRUCTOR . LPAREN argumentList RPAREN [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS ID [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR . EQUALS PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR . EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNoArgs -> CONSTRUCTOR . [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 848
-- On EQUALS shift to state 851
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> CONSTRUCTOR
-- On COMMA reduce production extendedAttributeNoArgs -> CONSTRUCTOR

State 848:
## Known stack suffix:
## CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeArgList -> CONSTRUCTOR LPAREN . argumentList RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 849
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 849:
## Known stack suffix:
## CONSTRUCTOR LPAREN argumentList
## LR(1) items:
extendedAttributeArgList -> CONSTRUCTOR LPAREN argumentList . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 850
## Reductions:

State 850:
## Known stack suffix:
## CONSTRUCTOR LPAREN argumentList RPAREN
## LR(1) items:
extendedAttributeArgList -> CONSTRUCTOR LPAREN argumentList RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeArgList -> CONSTRUCTOR LPAREN argumentList RPAREN

State 851:
## Known stack suffix:
## CONSTRUCTOR EQUALS
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS . CONSTRUCTOR [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . NOTXPCOM [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . RETVAL [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . UNSAFE [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . PRIVATEBROWSINGCHECK [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . QUERYINTERFACETYPE [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . CREATOR [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . GETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . SETTER [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . ID [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . DICTIONARY [ RBRACK COMMA ]
extendedAttributeIdent -> CONSTRUCTOR EQUALS . PARTIAL [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS . PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 852
-- On SETTER shift to state 856
-- On RETVAL shift to state 860
-- On QUERYINTERFACETYPE shift to state 864
-- On PRIVATEBROWSINGCHECK shift to state 868
-- On PARTIAL shift to state 872
-- On NOTXPCOM shift to state 876
-- On ID shift to state 880
-- On GETTER shift to state 884
-- On DICTIONARY shift to state 888
-- On CREATOR shift to state 892
-- On CONSTRUCTOR shift to state 896
## Reductions:

State 852:
## Known stack suffix:
## CONSTRUCTOR EQUALS UNSAFE
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS UNSAFE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS UNSAFE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 853
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS UNSAFE
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS UNSAFE

State 853:
## Known stack suffix:
## CONSTRUCTOR EQUALS UNSAFE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS UNSAFE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 854
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 854:
## Known stack suffix:
## CONSTRUCTOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 855
## Reductions:

State 855:
## Known stack suffix:
## CONSTRUCTOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS UNSAFE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 856:
## Known stack suffix:
## CONSTRUCTOR EQUALS SETTER
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS SETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS SETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 857
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS SETTER
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS SETTER

State 857:
## Known stack suffix:
## CONSTRUCTOR EQUALS SETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS SETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 858
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 858:
## Known stack suffix:
## CONSTRUCTOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 859
## Reductions:

State 859:
## Known stack suffix:
## CONSTRUCTOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS SETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 860:
## Known stack suffix:
## CONSTRUCTOR EQUALS RETVAL
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS RETVAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS RETVAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 861
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS RETVAL
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS RETVAL

State 861:
## Known stack suffix:
## CONSTRUCTOR EQUALS RETVAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS RETVAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 862
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 862:
## Known stack suffix:
## CONSTRUCTOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 863
## Reductions:

State 863:
## Known stack suffix:
## CONSTRUCTOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS RETVAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 864:
## Known stack suffix:
## CONSTRUCTOR EQUALS QUERYINTERFACETYPE
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 865
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE

State 865:
## Known stack suffix:
## CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 866
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 866:
## Known stack suffix:
## CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS QUERYINTERFACETYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 868:
## Known stack suffix:
## CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 869
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK

State 869:
## Known stack suffix:
## CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 870
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 870:
## Known stack suffix:
## CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 871
## Reductions:

State 871:
## Known stack suffix:
## CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PRIVATEBROWSINGCHECK LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 872:
## Known stack suffix:
## CONSTRUCTOR EQUALS PARTIAL
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS PARTIAL . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PARTIAL . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 873
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS PARTIAL
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS PARTIAL

State 873:
## Known stack suffix:
## CONSTRUCTOR EQUALS PARTIAL LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PARTIAL LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 874
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 874:
## Known stack suffix:
## CONSTRUCTOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 875
## Reductions:

State 875:
## Known stack suffix:
## CONSTRUCTOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS PARTIAL LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 876:
## Known stack suffix:
## CONSTRUCTOR EQUALS NOTXPCOM
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS NOTXPCOM . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS NOTXPCOM . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 877
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS NOTXPCOM
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS NOTXPCOM

State 877:
## Known stack suffix:
## CONSTRUCTOR EQUALS NOTXPCOM LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS NOTXPCOM LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 878
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 878:
## Known stack suffix:
## CONSTRUCTOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 879
## Reductions:

State 879:
## Known stack suffix:
## CONSTRUCTOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS NOTXPCOM LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 880:
## Known stack suffix:
## CONSTRUCTOR EQUALS ID
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS ID . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS ID . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 881
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS ID
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS ID

State 881:
## Known stack suffix:
## CONSTRUCTOR EQUALS ID LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS ID LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 882
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 882:
## Known stack suffix:
## CONSTRUCTOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 883
## Reductions:

State 883:
## Known stack suffix:
## CONSTRUCTOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS ID LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 884:
## Known stack suffix:
## CONSTRUCTOR EQUALS GETTER
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS GETTER . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS GETTER . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 885
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS GETTER
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS GETTER

State 885:
## Known stack suffix:
## CONSTRUCTOR EQUALS GETTER LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS GETTER LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 886
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 886:
## Known stack suffix:
## CONSTRUCTOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 887
## Reductions:

State 887:
## Known stack suffix:
## CONSTRUCTOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS GETTER LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 888:
## Known stack suffix:
## CONSTRUCTOR EQUALS DICTIONARY
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS DICTIONARY . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS DICTIONARY . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 889
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS DICTIONARY
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS DICTIONARY

State 889:
## Known stack suffix:
## CONSTRUCTOR EQUALS DICTIONARY LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS DICTIONARY LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 890
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 890:
## Known stack suffix:
## CONSTRUCTOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 891
## Reductions:

State 891:
## Known stack suffix:
## CONSTRUCTOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS DICTIONARY LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 892:
## Known stack suffix:
## CONSTRUCTOR EQUALS CREATOR
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS CREATOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CREATOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 893
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS CREATOR
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS CREATOR

State 893:
## Known stack suffix:
## CONSTRUCTOR EQUALS CREATOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CREATOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 894
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 894:
## Known stack suffix:
## CONSTRUCTOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 895
## Reductions:

State 895:
## Known stack suffix:
## CONSTRUCTOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CREATOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 896:
## Known stack suffix:
## CONSTRUCTOR EQUALS CONSTRUCTOR
## LR(1) items:
extendedAttributeIdent -> CONSTRUCTOR EQUALS CONSTRUCTOR . [ RBRACK COMMA ]
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CONSTRUCTOR . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On LPAREN shift to state 897
## Reductions:
-- On RBRACK reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS CONSTRUCTOR
-- On COMMA reduce production extendedAttributeIdent -> CONSTRUCTOR EQUALS CONSTRUCTOR

State 897:
## Known stack suffix:
## CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ RBRACK COMMA ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On separated_nonempty_list(COMMA,expr) shift to state 143
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On loption(separated_nonempty_list(COMMA,expr)) shift to state 898
-- On exprUn shift to state 101
-- On expr shift to state 146
-- On absoluteScopedName shift to state 107
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,expr)) ->

State 898:
## Known stack suffix:
## CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr))
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) . RPAREN [ RBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 899
## Reductions:

State 899:
## Known stack suffix:
## CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
## LR(1) items:
extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNamedArgList -> CONSTRUCTOR EQUALS CONSTRUCTOR LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN

State 900:
## Known stack suffix:
## CONST
## LR(1) items:
extendedAttributeNoArgs -> CONST . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> CONST

State 901:
## Known stack suffix:
## CLAMP
## LR(1) items:
extendedAttributeNoArgs -> CLAMP . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> CLAMP

State 902:
## Known stack suffix:
## CALLBACK
## LR(1) items:
extendedAttributeIdent -> CALLBACK . EQUALS FUNCTIONONLY [ RBRACK COMMA ]
extendedAttributeNoArgs -> CALLBACK . [ RBRACK COMMA ]
## Transitions:
-- On EQUALS shift to state 903
## Reductions:
-- On RBRACK reduce production extendedAttributeNoArgs -> CALLBACK
-- On COMMA reduce production extendedAttributeNoArgs -> CALLBACK

State 903:
## Known stack suffix:
## CALLBACK EQUALS
## LR(1) items:
extendedAttributeIdent -> CALLBACK EQUALS . FUNCTIONONLY [ RBRACK COMMA ]
## Transitions:
-- On FUNCTIONONLY shift to state 904
## Reductions:

State 904:
## Known stack suffix:
## CALLBACK EQUALS FUNCTIONONLY
## LR(1) items:
extendedAttributeIdent -> CALLBACK EQUALS FUNCTIONONLY . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeIdent -> CALLBACK EQUALS FUNCTIONONLY

State 905:
## Known stack suffix:
## ALLOWANY
## LR(1) items:
extendedAttributeNoArgs -> ALLOWANY . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeNoArgs -> ALLOWANY

State 906:
## Known stack suffix:
## LBRACK iseparated_nonempty_list(COMMA,extendedAttribute)
## LR(1) items:
extendedAttributeList -> LBRACK iseparated_nonempty_list(COMMA,extendedAttribute) . RBRACK [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OUT OPTIONAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER INTERFACE INOUT INHERIT INCLUDE IN ID GETTER FLOAT EXCEPTION ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On RBRACK shift to state 907
## Reductions:

State 907:
## Known stack suffix:
## LBRACK iseparated_nonempty_list(COMMA,extendedAttribute) RBRACK
## LR(1) items:
extendedAttributeList -> LBRACK iseparated_nonempty_list(COMMA,extendedAttribute) RBRACK . [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OUT OPTIONAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER INTERFACE INOUT INHERIT INCLUDE IN ID GETTER FLOAT EXCEPTION ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttributeList -> LBRACK iseparated_nonempty_list(COMMA,extendedAttribute) RBRACK

State 908:
## Known stack suffix:
## extendedAttributeNoArgs
## LR(1) items:
extendedAttribute -> extendedAttributeNoArgs . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttribute -> extendedAttributeNoArgs

State 909:
## Known stack suffix:
## extendedAttributeNamedArgList
## LR(1) items:
extendedAttribute -> extendedAttributeNamedArgList . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttribute -> extendedAttributeNamedArgList

State 910:
## Known stack suffix:
## extendedAttributeIdent
## LR(1) items:
extendedAttribute -> extendedAttributeIdent . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttribute -> extendedAttributeIdent

State 911:
## Known stack suffix:
## extendedAttributeArgList
## LR(1) items:
extendedAttribute -> extendedAttributeArgList . [ RBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extendedAttribute -> extendedAttributeArgList

State 912:
## Known stack suffix:
## extendedAttribute
## LR(1) items:
iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute . [ RBRACK ]
iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute . COMMA iseparated_nonempty_list(COMMA,extendedAttribute) [ RBRACK ]
## Transitions:
-- On COMMA shift to state 913
## Reductions:
-- On RBRACK reduce production iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute

State 913:
## Known stack suffix:
## extendedAttribute COMMA
## LR(1) items:
iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute COMMA . iseparated_nonempty_list(COMMA,extendedAttribute) [ RBRACK ]
## Transitions:
-- On UUID shift to state 2
-- On UNSAFE shift to state 3
-- On UNFORGEABLE shift to state 193
-- On TREATNULLAS shift to state 194
-- On SIZE_IS shift to state 235
-- On SETTER shift to state 239
-- On SCRIPTABLE shift to state 292
-- On RETVAL shift to state 293
-- On REPLACEABLENAMEDPROPERTIES shift to state 343
-- On REPLACEABLE shift to state 344
-- On QUERYINTERFACETYPE shift to state 345
-- On QUERYELEMENTATTYPE shift to state 395
-- On PUTFORWARDS shift to state 399
-- On PRIVATEBROWSINGCHECK shift to state 402
-- On PARTIAL shift to state 452
-- On OVERRIDEBUILTINS shift to state 505
-- On OPTIONAL_ARGC shift to state 506
-- On OPTIONAL shift to state 507
-- On NOTXPCOM shift to state 508
-- On NOSCRIPT shift to state 558
-- On NOINTERFACEOBJECT shift to state 559
-- On NAMEDCONSTRUCTOR shift to state 560
-- On IMPLICIT_JSCONTEXT shift to state 634
-- On ID shift to state 635
-- On GETTER shift to state 688
-- On DICTIONARY shift to state 741
-- On CREATOR shift to state 794
-- On CONSTRUCTOR shift to state 847
-- On CONST shift to state 900
-- On CLAMP shift to state 901
-- On CALLBACK shift to state 902
-- On ALLOWANY shift to state 905
-- On iseparated_nonempty_list(COMMA,extendedAttribute) shift to state 914
-- On extendedAttributeNoArgs shift to state 908
-- On extendedAttributeNamedArgList shift to state 909
-- On extendedAttributeIdent shift to state 910
-- On extendedAttributeArgList shift to state 911
-- On extendedAttribute shift to state 912
## Reductions:

State 914:
## Known stack suffix:
## extendedAttribute COMMA iseparated_nonempty_list(COMMA,extendedAttribute)
## LR(1) items:
iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute COMMA iseparated_nonempty_list(COMMA,extendedAttribute) . [ RBRACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iseparated_nonempty_list(COMMA,extendedAttribute) -> extendedAttribute COMMA iseparated_nonempty_list(COMMA,extendedAttribute)

State 915:
## Known stack suffix:
## ilist(extAttrDefList(definition))
## LR(1) items:
definitions -> ilist(extAttrDefList(definition)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definitions -> ilist(extAttrDefList(definition))

State 916:
## Known stack suffix:
## idlFile
## LR(1) items:
idlFile' -> idlFile . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept idlFile

State 917:
## Known stack suffix:
## extendedAttributeList
## LR(1) items:
extAttrDefList(definition) -> extendedAttributeList . definition [ TYPEDEF PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On TYPEDEF shift to state 918
-- On PARTIAL shift to state 923
-- On NATIVE shift to state 1053
-- On MODULE shift to state 1055
-- On INTERFACE shift to state 1058
-- On INCLUDE shift to state 1068
-- On ID shift to state 1070
-- On EXCEPTION shift to state 1074
-- On ENUM shift to state 1091
-- On DICTIONARY shift to state 1100
-- On CONST shift to state 1038
-- On CALLBACK shift to state 1161
-- On typedef shift to state 1251
-- On partialInterface shift to state 1252
-- On interface shift to state 1253
-- On implementsStatement shift to state 1254
-- On exceptionDef shift to state 1258
-- On enum shift to state 1259
-- On dictionary shift to state 1260
-- On definition shift to state 1265
-- On const shift to state 1263
-- On callbackOrInterface shift to state 1264
## Reductions:

State 918:
## Known stack suffix:
## TYPEDEF
## LR(1) items:
typedef -> TYPEDEF . extendedAttributeList typeDecl ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On extendedAttributeList shift to state 919
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 919:
## Known stack suffix:
## TYPEDEF extendedAttributeList
## LR(1) items:
typedef -> TYPEDEF extendedAttributeList . typeDecl ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 920
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 920:
## Known stack suffix:
## TYPEDEF extendedAttributeList typeDecl
## LR(1) items:
typedef -> TYPEDEF extendedAttributeList typeDecl . ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 921
## Reductions:

State 921:
## Known stack suffix:
## TYPEDEF extendedAttributeList typeDecl ID
## LR(1) items:
typedef -> TYPEDEF extendedAttributeList typeDecl ID . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 922
## Reductions:

State 922:
## Known stack suffix:
## TYPEDEF extendedAttributeList typeDecl ID SEMI
## LR(1) items:
typedef -> TYPEDEF extendedAttributeList typeDecl ID SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef -> TYPEDEF extendedAttributeList typeDecl ID SEMI

State 923:
## Known stack suffix:
## PARTIAL
## LR(1) items:
partialInterface -> PARTIAL . INTERFACE ID LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On INTERFACE shift to state 924
## Reductions:

State 924:
## Known stack suffix:
## PARTIAL INTERFACE
## LR(1) items:
partialInterface -> PARTIAL INTERFACE . ID LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 925
## Reductions:

State 925:
## Known stack suffix:
## PARTIAL INTERFACE ID
## LR(1) items:
partialInterface -> PARTIAL INTERFACE ID . LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 926
## Reductions:

State 926:
## Known stack suffix:
## PARTIAL INTERFACE ID LBRACE
## LR(1) items:
partialInterface -> PARTIAL INTERFACE ID LBRACE . interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On interfaceMembers shift to state 927
-- On ilist(extAttrIfaceMemList(interfaceMember)) shift to state 930
-- On extendedAttributeList shift to state 931
-- On extAttrIfaceMemList(interfaceMember) shift to state 1051
## Reductions:
-- On VOID reduce production extendedAttributeList ->
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On STRINGIFIER reduce production extendedAttributeList ->
-- On STATIC reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SETTER reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On READONLY reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrIfaceMemList(interfaceMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On LEGACYCALLER reduce production extendedAttributeList ->
-- On INHERIT reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On GETTER reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On DELETER reduce production extendedAttributeList ->
-- On CREATOR reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ATTRIBUTE reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 927:
## Known stack suffix:
## PARTIAL INTERFACE ID LBRACE interfaceMembers
## LR(1) items:
partialInterface -> PARTIAL INTERFACE ID LBRACE interfaceMembers . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 928
## Reductions:

State 928:
## Known stack suffix:
## PARTIAL INTERFACE ID LBRACE interfaceMembers RBRACE
## LR(1) items:
partialInterface -> PARTIAL INTERFACE ID LBRACE interfaceMembers RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 929
## Reductions:

State 929:
## Known stack suffix:
## PARTIAL INTERFACE ID LBRACE interfaceMembers RBRACE SEMI
## LR(1) items:
partialInterface -> PARTIAL INTERFACE ID LBRACE interfaceMembers RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production partialInterface -> PARTIAL INTERFACE ID LBRACE interfaceMembers RBRACE SEMI

State 930:
## Known stack suffix:
## ilist(extAttrIfaceMemList(interfaceMember))
## LR(1) items:
interfaceMembers -> ilist(extAttrIfaceMemList(interfaceMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfaceMembers -> ilist(extAttrIfaceMemList(interfaceMember))

State 931:
## Known stack suffix:
## extendedAttributeList
## LR(1) items:
extAttrIfaceMemList(interfaceMember) -> extendedAttributeList . interfaceMember [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On STRINGIFIER shift to state 933
-- On STATIC shift to state 934
-- On SHORT shift to state 197
-- On SETTER shift to state 965
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On LEGACYCALLER shift to state 970
-- On INHERIT shift to state 973
-- On ID shift to state 211
-- On GETTER shift to state 974
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On DELETER shift to state 976
-- On CREATOR shift to state 978
-- On CONSTRUCTOR shift to state 215
-- On CONST shift to state 1038
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On option(INHERIT) shift to state 981
-- On operationRest shift to state 1035
-- On operation shift to state 1046
-- On nonAnyType shift to state 232
-- On interfaceMember shift to state 1047
-- On integerType shift to state 233
-- On const shift to state 1048
-- On attributeOrOperation shift to state 1049
-- On attribute shift to state 1050
## Reductions:
-- On READONLY reduce production option(INHERIT) ->
-- On ATTRIBUTE reduce production option(INHERIT) ->

State 932:
## Known stack suffix:
## VOID
## LR(1) items:
returnType -> VOID . [ UNSAFE SETTER RETVAL QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DICTIONARY CREATOR CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnType -> VOID

State 933:
## Known stack suffix:
## STRINGIFIER
## LR(1) items:
attributeOrOperation -> STRINGIFIER . stringifierAttributeOrOperation [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On STATIC shift to state 934
-- On SHORT shift to state 197
-- On SETTER shift to state 965
-- On SEQUENCE shift to state 203
-- On SEMI shift to state 969
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On LEGACYCALLER shift to state 970
-- On INHERIT shift to state 973
-- On ID shift to state 211
-- On GETTER shift to state 974
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On DELETER shift to state 976
-- On CREATOR shift to state 978
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On stringifierAttributeOrOperation shift to state 980
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On option(INHERIT) shift to state 981
-- On operationRest shift to state 1035
-- On operation shift to state 1036
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
-- On attribute shift to state 1037
## Reductions:
-- On READONLY reduce production option(INHERIT) ->
-- On ATTRIBUTE reduce production option(INHERIT) ->

State 934:
## Known stack suffix:
## STATIC
## LR(1) items:
operation -> STATIC . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 964
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 935:
## Known stack suffix:
## typeDecl
## LR(1) items:
returnType -> typeDecl . [ UNSAFE SETTER RETVAL QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL NOTXPCOM LPAREN ID GETTER DICTIONARY CREATOR CONSTRUCTOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production returnType -> typeDecl

State 936:
## Known stack suffix:
## returnType
## LR(1) items:
operationRest -> returnType . option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause) SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSAFE shift to state 937
-- On SETTER shift to state 938
-- On RETVAL shift to state 939
-- On QUERYINTERFACETYPE shift to state 940
-- On PRIVATEBROWSINGCHECK shift to state 941
-- On PARTIAL shift to state 942
-- On NOTXPCOM shift to state 943
-- On ID shift to state 944
-- On GETTER shift to state 945
-- On DICTIONARY shift to state 946
-- On CREATOR shift to state 947
-- On CONSTRUCTOR shift to state 948
-- On option(identOrKeyword) shift to state 949
## Reductions:
-- On LPAREN reduce production option(identOrKeyword) ->

State 937:
## Known stack suffix:
## UNSAFE
## LR(1) items:
option(identOrKeyword) -> UNSAFE . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> UNSAFE

State 938:
## Known stack suffix:
## SETTER
## LR(1) items:
option(identOrKeyword) -> SETTER . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> SETTER

State 939:
## Known stack suffix:
## RETVAL
## LR(1) items:
option(identOrKeyword) -> RETVAL . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> RETVAL

State 940:
## Known stack suffix:
## QUERYINTERFACETYPE
## LR(1) items:
option(identOrKeyword) -> QUERYINTERFACETYPE . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> QUERYINTERFACETYPE

State 941:
## Known stack suffix:
## PRIVATEBROWSINGCHECK
## LR(1) items:
option(identOrKeyword) -> PRIVATEBROWSINGCHECK . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> PRIVATEBROWSINGCHECK

State 942:
## Known stack suffix:
## PARTIAL
## LR(1) items:
option(identOrKeyword) -> PARTIAL . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> PARTIAL

State 943:
## Known stack suffix:
## NOTXPCOM
## LR(1) items:
option(identOrKeyword) -> NOTXPCOM . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> NOTXPCOM

State 944:
## Known stack suffix:
## ID
## LR(1) items:
option(identOrKeyword) -> ID . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> ID

State 945:
## Known stack suffix:
## GETTER
## LR(1) items:
option(identOrKeyword) -> GETTER . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> GETTER

State 946:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
option(identOrKeyword) -> DICTIONARY . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> DICTIONARY

State 947:
## Known stack suffix:
## CREATOR
## LR(1) items:
option(identOrKeyword) -> CREATOR . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> CREATOR

State 948:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
option(identOrKeyword) -> CONSTRUCTOR . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(identOrKeyword) -> CONSTRUCTOR

State 949:
## Known stack suffix:
## returnType option(identOrKeyword)
## LR(1) items:
operationRest -> returnType option(identOrKeyword) . LPAREN argumentList RPAREN option(raisesClause) SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On LPAREN shift to state 950
## Reductions:

State 950:
## Known stack suffix:
## returnType option(identOrKeyword) LPAREN
## LR(1) items:
operationRest -> returnType option(identOrKeyword) LPAREN . argumentList RPAREN option(raisesClause) SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 951
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 951:
## Known stack suffix:
## returnType option(identOrKeyword) LPAREN argumentList
## LR(1) items:
operationRest -> returnType option(identOrKeyword) LPAREN argumentList . RPAREN option(raisesClause) SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On RPAREN shift to state 952
## Reductions:

State 952:
## Known stack suffix:
## returnType option(identOrKeyword) LPAREN argumentList RPAREN
## LR(1) items:
operationRest -> returnType option(identOrKeyword) LPAREN argumentList RPAREN . option(raisesClause) SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On RAISES shift to state 953
-- On raisesClause shift to state 961
-- On option(raisesClause) shift to state 962
## Reductions:
-- On SEMI reduce production option(raisesClause) ->

State 953:
## Known stack suffix:
## RAISES
## LR(1) items:
raisesClause -> RAISES . LPAREN loption(separated_nonempty_list(COMMA,ID)) RPAREN [ SEMI ]
## Transitions:
-- On LPAREN shift to state 954
## Reductions:

State 954:
## Known stack suffix:
## RAISES LPAREN
## LR(1) items:
raisesClause -> RAISES LPAREN . loption(separated_nonempty_list(COMMA,ID)) RPAREN [ SEMI ]
## Transitions:
-- On ID shift to state 955
-- On separated_nonempty_list(COMMA,ID) shift to state 958
-- On loption(separated_nonempty_list(COMMA,ID)) shift to state 959
## Reductions:
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,ID)) ->

State 955:
## Known stack suffix:
## ID
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID . [ RPAREN ]
separated_nonempty_list(COMMA,ID) -> ID . COMMA separated_nonempty_list(COMMA,ID) [ RPAREN ]
## Transitions:
-- On COMMA shift to state 956
## Reductions:
-- On RPAREN reduce production separated_nonempty_list(COMMA,ID) -> ID

State 956:
## Known stack suffix:
## ID COMMA
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID COMMA . separated_nonempty_list(COMMA,ID) [ RPAREN ]
## Transitions:
-- On ID shift to state 955
-- On separated_nonempty_list(COMMA,ID) shift to state 957
## Reductions:

State 957:
## Known stack suffix:
## ID COMMA separated_nonempty_list(COMMA,ID)
## LR(1) items:
separated_nonempty_list(COMMA,ID) -> ID COMMA separated_nonempty_list(COMMA,ID) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list(COMMA,ID) -> ID COMMA separated_nonempty_list(COMMA,ID)

State 958:
## Known stack suffix:
## separated_nonempty_list(COMMA,ID)
## LR(1) items:
loption(separated_nonempty_list(COMMA,ID)) -> separated_nonempty_list(COMMA,ID) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production loption(separated_nonempty_list(COMMA,ID)) -> separated_nonempty_list(COMMA,ID)

State 959:
## Known stack suffix:
## RAISES LPAREN loption(separated_nonempty_list(COMMA,ID))
## LR(1) items:
raisesClause -> RAISES LPAREN loption(separated_nonempty_list(COMMA,ID)) . RPAREN [ SEMI ]
## Transitions:
-- On RPAREN shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## RAISES LPAREN loption(separated_nonempty_list(COMMA,ID)) RPAREN
## LR(1) items:
raisesClause -> RAISES LPAREN loption(separated_nonempty_list(COMMA,ID)) RPAREN . [ SEMI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raisesClause -> RAISES LPAREN loption(separated_nonempty_list(COMMA,ID)) RPAREN

State 961:
## Known stack suffix:
## raisesClause
## LR(1) items:
option(raisesClause) -> raisesClause . [ SEMI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(raisesClause) -> raisesClause

State 962:
## Known stack suffix:
## returnType option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause)
## LR(1) items:
operationRest -> returnType option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause) . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 963
## Reductions:

State 963:
## Known stack suffix:
## returnType option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause) SEMI
## LR(1) items:
operationRest -> returnType option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause) SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operationRest -> returnType option(identOrKeyword) LPAREN argumentList RPAREN option(raisesClause) SEMI

State 964:
## Known stack suffix:
## STATIC operationRest
## LR(1) items:
operation -> STATIC operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> STATIC operationRest

State 965:
## Known stack suffix:
## SETTER
## LR(1) items:
operation -> SETTER . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
operation -> SETTER . CREATOR operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CREATOR shift to state 966
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 968
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 966:
## Known stack suffix:
## SETTER CREATOR
## LR(1) items:
operation -> SETTER CREATOR . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 967
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 967:
## Known stack suffix:
## SETTER CREATOR operationRest
## LR(1) items:
operation -> SETTER CREATOR operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> SETTER CREATOR operationRest

State 968:
## Known stack suffix:
## SETTER operationRest
## LR(1) items:
operation -> SETTER operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> SETTER operationRest

State 969:
## Known stack suffix:
## SEMI
## LR(1) items:
stringifierAttributeOrOperation -> SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stringifierAttributeOrOperation -> SEMI

State 970:
## Known stack suffix:
## LEGACYCALLER
## LR(1) items:
operation -> LEGACYCALLER . GETTER operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On GETTER shift to state 971
## Reductions:

State 971:
## Known stack suffix:
## LEGACYCALLER GETTER
## LR(1) items:
operation -> LEGACYCALLER GETTER . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 972
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 972:
## Known stack suffix:
## LEGACYCALLER GETTER operationRest
## LR(1) items:
operation -> LEGACYCALLER GETTER operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> LEGACYCALLER GETTER operationRest

State 973:
## Known stack suffix:
## INHERIT
## LR(1) items:
option(INHERIT) -> INHERIT . [ READONLY ATTRIBUTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(INHERIT) -> INHERIT

State 974:
## Known stack suffix:
## GETTER
## LR(1) items:
operation -> GETTER . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 975
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 975:
## Known stack suffix:
## GETTER operationRest
## LR(1) items:
operation -> GETTER operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> GETTER operationRest

State 976:
## Known stack suffix:
## DELETER
## LR(1) items:
operation -> DELETER . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 977
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 977:
## Known stack suffix:
## DELETER operationRest
## LR(1) items:
operation -> DELETER operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> DELETER operationRest

State 978:
## Known stack suffix:
## CREATOR
## LR(1) items:
operation -> CREATOR . operationRest [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 936
-- On primitiveType shift to state 230
-- On operationRest shift to state 979
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 979:
## Known stack suffix:
## CREATOR operationRest
## LR(1) items:
operation -> CREATOR operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> CREATOR operationRest

State 980:
## Known stack suffix:
## STRINGIFIER stringifierAttributeOrOperation
## LR(1) items:
attributeOrOperation -> STRINGIFIER stringifierAttributeOrOperation . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributeOrOperation -> STRINGIFIER stringifierAttributeOrOperation

State 981:
## Known stack suffix:
## option(INHERIT)
## LR(1) items:
attribute -> option(INHERIT) . ATTRIBUTE typeDecl CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . ATTRIBUTE typeDecl PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) . READONLY ATTRIBUTE typeDecl PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On READONLY shift to state 982
-- On ATTRIBUTE shift to state 1009
## Reductions:

State 982:
## Known stack suffix:
## option(INHERIT) READONLY
## LR(1) items:
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY . ATTRIBUTE typeDecl PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On ATTRIBUTE shift to state 983
## Reductions:

State 983:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE . typeDecl PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 984
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 984:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl . PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSAFE shift to state 985
-- On SETTER shift to state 987
-- On RETVAL shift to state 989
-- On QUERYINTERFACETYPE shift to state 991
-- On PRIVATEBROWSINGCHECK shift to state 993
-- On PARTIAL shift to state 995
-- On NOTXPCOM shift to state 997
-- On ID shift to state 999
-- On GETTER shift to state 1001
-- On DICTIONARY shift to state 1003
-- On CREATOR shift to state 1005
-- On CONSTRUCTOR shift to state 1007
## Reductions:

State 985:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl UNSAFE
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl UNSAFE . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 986
## Reductions:

State 986:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl UNSAFE SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl UNSAFE SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl UNSAFE SEMI

State 987:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl SETTER
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl SETTER . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 988
## Reductions:

State 988:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl SETTER SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl SETTER SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl SETTER SEMI

State 989:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl RETVAL
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl RETVAL . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 990
## Reductions:

State 990:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl RETVAL SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl RETVAL SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl RETVAL SEMI

State 991:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 992
## Reductions:

State 992:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI

State 993:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 994
## Reductions:

State 994:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI

State 995:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl PARTIAL
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PARTIAL . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 996
## Reductions:

State 996:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl PARTIAL SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PARTIAL SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl PARTIAL SEMI

State 997:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl NOTXPCOM
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl NOTXPCOM . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 998
## Reductions:

State 998:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl NOTXPCOM SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl NOTXPCOM SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl NOTXPCOM SEMI

State 999:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl ID
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl ID . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1000
## Reductions:

State 1000:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl ID SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl ID SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl ID SEMI

State 1001:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl GETTER
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl GETTER . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1002
## Reductions:

State 1002:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl GETTER SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl GETTER SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl GETTER SEMI

State 1003:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl DICTIONARY
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl DICTIONARY . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1004
## Reductions:

State 1004:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl DICTIONARY SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl DICTIONARY SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl DICTIONARY SEMI

State 1005:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl CREATOR
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CREATOR . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1006
## Reductions:

State 1006:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl CREATOR SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CREATOR SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CREATOR SEMI

State 1007:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl CONSTRUCTOR
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CONSTRUCTOR . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1008
## Reductions:

State 1008:
## Known stack suffix:
## option(INHERIT) READONLY ATTRIBUTE typeDecl CONSTRUCTOR SEMI
## LR(1) items:
attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CONSTRUCTOR SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) READONLY ATTRIBUTE typeDecl CONSTRUCTOR SEMI

State 1009:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE . typeDecl CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE . typeDecl PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 1010
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1010:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl . CONSTRUCTOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . NOTXPCOM SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . RETVAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . UNSAFE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . PRIVATEBROWSINGCHECK SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . QUERYINTERFACETYPE SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . CREATOR SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . GETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . SETTER SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . ID SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . DICTIONARY SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
attribute -> option(INHERIT) ATTRIBUTE typeDecl . PARTIAL SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSAFE shift to state 1011
-- On SETTER shift to state 1013
-- On RETVAL shift to state 1015
-- On QUERYINTERFACETYPE shift to state 1017
-- On PRIVATEBROWSINGCHECK shift to state 1019
-- On PARTIAL shift to state 1021
-- On NOTXPCOM shift to state 1023
-- On ID shift to state 1025
-- On GETTER shift to state 1027
-- On DICTIONARY shift to state 1029
-- On CREATOR shift to state 1031
-- On CONSTRUCTOR shift to state 1033
## Reductions:

State 1011:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl UNSAFE
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl UNSAFE . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1012
## Reductions:

State 1012:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl UNSAFE SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl UNSAFE SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl UNSAFE SEMI

State 1013:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl SETTER
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl SETTER . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1014
## Reductions:

State 1014:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl SETTER SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl SETTER SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl SETTER SEMI

State 1015:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl RETVAL
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl RETVAL . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1016
## Reductions:

State 1016:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl RETVAL SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl RETVAL SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl RETVAL SEMI

State 1017:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl QUERYINTERFACETYPE
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl QUERYINTERFACETYPE . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1018
## Reductions:

State 1018:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl QUERYINTERFACETYPE SEMI

State 1019:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1020
## Reductions:

State 1020:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl PRIVATEBROWSINGCHECK SEMI

State 1021:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl PARTIAL
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl PARTIAL . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1022
## Reductions:

State 1022:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl PARTIAL SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl PARTIAL SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl PARTIAL SEMI

State 1023:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl NOTXPCOM
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl NOTXPCOM . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1024
## Reductions:

State 1024:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl NOTXPCOM SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl NOTXPCOM SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl NOTXPCOM SEMI

State 1025:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl ID
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl ID . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1026
## Reductions:

State 1026:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl ID SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl ID SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl ID SEMI

State 1027:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl GETTER
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl GETTER . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1028
## Reductions:

State 1028:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl GETTER SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl GETTER SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl GETTER SEMI

State 1029:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl DICTIONARY
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl DICTIONARY . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1030
## Reductions:

State 1030:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl DICTIONARY SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl DICTIONARY SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl DICTIONARY SEMI

State 1031:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl CREATOR
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl CREATOR . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1032
## Reductions:

State 1032:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl CREATOR SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl CREATOR SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl CREATOR SEMI

State 1033:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl CONSTRUCTOR
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl CONSTRUCTOR . SEMI [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1034
## Reductions:

State 1034:
## Known stack suffix:
## option(INHERIT) ATTRIBUTE typeDecl CONSTRUCTOR SEMI
## LR(1) items:
attribute -> option(INHERIT) ATTRIBUTE typeDecl CONSTRUCTOR SEMI . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> option(INHERIT) ATTRIBUTE typeDecl CONSTRUCTOR SEMI

State 1035:
## Known stack suffix:
## operationRest
## LR(1) items:
operation -> operationRest . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operation -> operationRest

State 1036:
## Known stack suffix:
## operation
## LR(1) items:
stringifierAttributeOrOperation -> operation . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stringifierAttributeOrOperation -> operation

State 1037:
## Known stack suffix:
## attribute
## LR(1) items:
stringifierAttributeOrOperation -> attribute . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stringifierAttributeOrOperation -> attribute

State 1038:
## Known stack suffix:
## CONST
## LR(1) items:
const -> CONST . constType ID EQUALS constValue SEMI [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On unsignedIntegerType shift to state 225
-- On primitiveType shift to state 1039
-- On integerType shift to state 233
-- On constType shift to state 1041
## Reductions:

State 1039:
## Known stack suffix:
## primitiveType
## LR(1) items:
constType -> primitiveType . [ ID ]
constType -> primitiveType . QUES [ ID ]
## Transitions:
-- On QUES shift to state 1040
## Reductions:
-- On ID reduce production constType -> primitiveType

State 1040:
## Known stack suffix:
## primitiveType QUES
## LR(1) items:
constType -> primitiveType QUES . [ ID ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constType -> primitiveType QUES

State 1041:
## Known stack suffix:
## CONST constType
## LR(1) items:
const -> CONST constType . ID EQUALS constValue SEMI [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On ID shift to state 1042
## Reductions:

State 1042:
## Known stack suffix:
## CONST constType ID
## LR(1) items:
const -> CONST constType ID . EQUALS constValue SEMI [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On EQUALS shift to state 1043
## Reductions:

State 1043:
## Known stack suffix:
## CONST constType ID EQUALS
## LR(1) items:
const -> CONST constType ID EQUALS . constValue SEMI [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On UNSAFE shift to state 7
-- On TRUE shift to state 34
-- On TILDE shift to state 35
-- On STRING shift to state 51
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PLUS shift to state 52
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On MINUS shift to state 56
-- On LPAREN shift to state 60
-- On INTLIT shift to state 61
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On FLOATLIT shift to state 66
-- On FALSE shift to state 67
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 99
-- On relativeScopedName shift to state 100
-- On exprUn shift to state 101
-- On expr shift to state 576
-- On constValue shift to state 1044
-- On absoluteScopedName shift to state 107
## Reductions:

State 1044:
## Known stack suffix:
## CONST constType ID EQUALS constValue
## LR(1) items:
const -> CONST constType ID EQUALS constValue . SEMI [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
-- On SEMI shift to state 1045
## Reductions:

State 1045:
## Known stack suffix:
## CONST constType ID EQUALS constValue SEMI
## LR(1) items:
const -> CONST constType ID EQUALS constValue SEMI . [ VOID UNSIGNED UNSAFE TYPEDEF STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM NATIVE MODULE LONG LEGACYCALLER LBRACK INTERFACE INHERIT INCLUDE ID GETTER FLOAT EXCEPTION EOF ENUM DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST CALLBACK BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production const -> CONST constType ID EQUALS constValue SEMI

State 1046:
## Known stack suffix:
## operation
## LR(1) items:
attributeOrOperation -> operation . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributeOrOperation -> operation

State 1047:
## Known stack suffix:
## extendedAttributeList interfaceMember
## LR(1) items:
extAttrIfaceMemList(interfaceMember) -> extendedAttributeList interfaceMember . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extAttrIfaceMemList(interfaceMember) -> extendedAttributeList interfaceMember

State 1048:
## Known stack suffix:
## const
## LR(1) items:
interfaceMember -> const . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfaceMember -> const

State 1049:
## Known stack suffix:
## attributeOrOperation
## LR(1) items:
interfaceMember -> attributeOrOperation . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interfaceMember -> attributeOrOperation

State 1050:
## Known stack suffix:
## attribute
## LR(1) items:
attributeOrOperation -> attribute . [ VOID UNSIGNED UNSAFE STRINGIFIER STATIC SHORT SETTER SEQUENCE RETVAL READONLY RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LEGACYCALLER LBRACK INHERIT ID GETTER FLOAT DOUBLE DICTIONARY DELETER CREATOR CONSTRUCTOR CONST BYTE BOOLEAN ATTRIBUTE ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributeOrOperation -> attribute

State 1051:
## Known stack suffix:
## extAttrIfaceMemList(interfaceMember)
## LR(1) items:
ilist(extAttrIfaceMemList(interfaceMember)) -> extAttrIfaceMemList(interfaceMember) . ilist(extAttrIfaceMemList(interfaceMember)) [ RBRACE ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrIfaceMemList(interfaceMember)) shift to state 1052
-- On extendedAttributeList shift to state 931
-- On extAttrIfaceMemList(interfaceMember) shift to state 1051
## Reductions:
-- On VOID reduce production extendedAttributeList ->
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On STRINGIFIER reduce production extendedAttributeList ->
-- On STATIC reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SETTER reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On READONLY reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrIfaceMemList(interfaceMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On LEGACYCALLER reduce production extendedAttributeList ->
-- On INHERIT reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On GETTER reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On DELETER reduce production extendedAttributeList ->
-- On CREATOR reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ATTRIBUTE reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1052:
## Known stack suffix:
## extAttrIfaceMemList(interfaceMember) ilist(extAttrIfaceMemList(interfaceMember))
## LR(1) items:
ilist(extAttrIfaceMemList(interfaceMember)) -> extAttrIfaceMemList(interfaceMember) ilist(extAttrIfaceMemList(interfaceMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ilist(extAttrIfaceMemList(interfaceMember)) -> extAttrIfaceMemList(interfaceMember) ilist(extAttrIfaceMemList(interfaceMember))

State 1053:
## Known stack suffix:
## NATIVE
## LR(1) items:
typedef -> NATIVE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1054
## Reductions:

State 1054:
## Known stack suffix:
## NATIVE SEMI
## LR(1) items:
typedef -> NATIVE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef -> NATIVE SEMI

State 1055:
## Known stack suffix:
## MODULE
## LR(1) items:
definition -> MODULE . ID LBRACE ilist(definition) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1056
## Reductions:

State 1056:
## Known stack suffix:
## MODULE ID
## LR(1) items:
definition -> MODULE ID . LBRACE ilist(definition) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 1057
## Reductions:

State 1057:
## Known stack suffix:
## MODULE ID LBRACE
## LR(1) items:
definition -> MODULE ID LBRACE . ilist(definition) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On TYPEDEF shift to state 918
-- On PARTIAL shift to state 923
-- On NATIVE shift to state 1053
-- On MODULE shift to state 1055
-- On INTERFACE shift to state 1058
-- On INCLUDE shift to state 1068
-- On ID shift to state 1070
-- On EXCEPTION shift to state 1074
-- On ENUM shift to state 1091
-- On DICTIONARY shift to state 1100
-- On CONST shift to state 1038
-- On CALLBACK shift to state 1161
-- On typedef shift to state 1251
-- On partialInterface shift to state 1252
-- On interface shift to state 1253
-- On implementsStatement shift to state 1254
-- On ilist(definition) shift to state 1255
-- On exceptionDef shift to state 1258
-- On enum shift to state 1259
-- On dictionary shift to state 1260
-- On definition shift to state 1261
-- On const shift to state 1263
-- On callbackOrInterface shift to state 1264
## Reductions:
-- On RBRACE reduce production ilist(definition) ->

State 1058:
## Known stack suffix:
## INTERFACE
## LR(1) items:
definition -> INTERFACE . ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
interface -> INTERFACE . ID inheritance LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1059
## Reductions:

State 1059:
## Known stack suffix:
## INTERFACE ID
## LR(1) items:
definition -> INTERFACE ID . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
interface -> INTERFACE ID . inheritance LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1060
-- On COLON shift to state 1061
-- On inheritance shift to state 1063
## Reductions:
-- On LBRACE reduce production inheritance ->

State 1060:
## Known stack suffix:
## INTERFACE ID SEMI
## LR(1) items:
definition -> INTERFACE ID SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> INTERFACE ID SEMI

State 1061:
## Known stack suffix:
## COLON
## LR(1) items:
inheritance -> COLON . scopedName [ LBRACE ]
## Transitions:
-- On UNSAFE shift to state 7
-- On SETTER shift to state 38
-- On RETVAL shift to state 40
-- On QUERYINTERFACETYPE shift to state 42
-- On PRIVATEBROWSINGCHECK shift to state 44
-- On PARTIAL shift to state 46
-- On NOTXPCOM shift to state 48
-- On ID shift to state 62
-- On GETTER shift to state 64
-- On DICTIONARY shift to state 68
-- On CREATOR shift to state 70
-- On CONSTRUCTOR shift to state 72
-- On COLONCOLON shift to state 74
-- On scopedName shift to state 1062
-- On relativeScopedName shift to state 100
-- On absoluteScopedName shift to state 107
## Reductions:

State 1062:
## Known stack suffix:
## COLON scopedName
## LR(1) items:
inheritance -> COLON scopedName . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inheritance -> COLON scopedName

State 1063:
## Known stack suffix:
## INTERFACE ID inheritance
## LR(1) items:
interface -> INTERFACE ID inheritance . LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 1064
## Reductions:

State 1064:
## Known stack suffix:
## INTERFACE ID inheritance LBRACE
## LR(1) items:
interface -> INTERFACE ID inheritance LBRACE . interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On interfaceMembers shift to state 1065
-- On ilist(extAttrIfaceMemList(interfaceMember)) shift to state 930
-- On extendedAttributeList shift to state 931
-- On extAttrIfaceMemList(interfaceMember) shift to state 1051
## Reductions:
-- On VOID reduce production extendedAttributeList ->
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On STRINGIFIER reduce production extendedAttributeList ->
-- On STATIC reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SETTER reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On READONLY reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrIfaceMemList(interfaceMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On LEGACYCALLER reduce production extendedAttributeList ->
-- On INHERIT reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On GETTER reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On DELETER reduce production extendedAttributeList ->
-- On CREATOR reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ATTRIBUTE reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1065:
## Known stack suffix:
## INTERFACE ID inheritance LBRACE interfaceMembers
## LR(1) items:
interface -> INTERFACE ID inheritance LBRACE interfaceMembers . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 1066
## Reductions:

State 1066:
## Known stack suffix:
## INTERFACE ID inheritance LBRACE interfaceMembers RBRACE
## LR(1) items:
interface -> INTERFACE ID inheritance LBRACE interfaceMembers RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1067
## Reductions:

State 1067:
## Known stack suffix:
## INTERFACE ID inheritance LBRACE interfaceMembers RBRACE SEMI
## LR(1) items:
interface -> INTERFACE ID inheritance LBRACE interfaceMembers RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface -> INTERFACE ID inheritance LBRACE interfaceMembers RBRACE SEMI

State 1068:
## Known stack suffix:
## INCLUDE
## LR(1) items:
definition -> INCLUDE . STRING [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On STRING shift to state 1069
## Reductions:

State 1069:
## Known stack suffix:
## INCLUDE STRING
## LR(1) items:
definition -> INCLUDE STRING . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> INCLUDE STRING

State 1070:
## Known stack suffix:
## ID
## LR(1) items:
implementsStatement -> ID . IMPLEMENTS ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On IMPLEMENTS shift to state 1071
## Reductions:

State 1071:
## Known stack suffix:
## ID IMPLEMENTS
## LR(1) items:
implementsStatement -> ID IMPLEMENTS . ID SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1072
## Reductions:

State 1072:
## Known stack suffix:
## ID IMPLEMENTS ID
## LR(1) items:
implementsStatement -> ID IMPLEMENTS ID . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1073
## Reductions:

State 1073:
## Known stack suffix:
## ID IMPLEMENTS ID SEMI
## LR(1) items:
implementsStatement -> ID IMPLEMENTS ID SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implementsStatement -> ID IMPLEMENTS ID SEMI

State 1074:
## Known stack suffix:
## EXCEPTION
## LR(1) items:
exceptionDef -> EXCEPTION . ID inheritance LBRACE exceptionMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1075
## Reductions:

State 1075:
## Known stack suffix:
## EXCEPTION ID
## LR(1) items:
exceptionDef -> EXCEPTION ID . inheritance LBRACE exceptionMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On COLON shift to state 1061
-- On inheritance shift to state 1076
## Reductions:
-- On LBRACE reduce production inheritance ->

State 1076:
## Known stack suffix:
## EXCEPTION ID inheritance
## LR(1) items:
exceptionDef -> EXCEPTION ID inheritance . LBRACE exceptionMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 1077
## Reductions:

State 1077:
## Known stack suffix:
## EXCEPTION ID inheritance LBRACE
## LR(1) items:
exceptionDef -> EXCEPTION ID inheritance LBRACE . exceptionMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrExnMemList(exceptionMember)) shift to state 1078
-- On extendedAttributeList shift to state 1079
-- On extAttrExnMemList(exceptionMember) shift to state 1086
-- On exceptionMembers shift to state 1088
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrExnMemList(exceptionMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1078:
## Known stack suffix:
## ilist(extAttrExnMemList(exceptionMember))
## LR(1) items:
exceptionMembers -> ilist(extAttrExnMemList(exceptionMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionMembers -> ilist(extAttrExnMemList(exceptionMember))

State 1079:
## Known stack suffix:
## extendedAttributeList
## LR(1) items:
extAttrExnMemList(exceptionMember) -> extendedAttributeList . exceptionMember [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On CONST shift to state 1038
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 1080
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
-- On exceptionMember shift to state 1083
-- On exceptionField shift to state 1084
-- On const shift to state 1085
## Reductions:

State 1080:
## Known stack suffix:
## typeDecl
## LR(1) items:
exceptionField -> typeDecl . ID SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
-- On ID shift to state 1081
## Reductions:

State 1081:
## Known stack suffix:
## typeDecl ID
## LR(1) items:
exceptionField -> typeDecl ID . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1082
## Reductions:

State 1082:
## Known stack suffix:
## typeDecl ID SEMI
## LR(1) items:
exceptionField -> typeDecl ID SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionField -> typeDecl ID SEMI

State 1083:
## Known stack suffix:
## extendedAttributeList exceptionMember
## LR(1) items:
extAttrExnMemList(exceptionMember) -> extendedAttributeList exceptionMember . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extAttrExnMemList(exceptionMember) -> extendedAttributeList exceptionMember

State 1084:
## Known stack suffix:
## exceptionField
## LR(1) items:
exceptionMember -> exceptionField . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionMember -> exceptionField

State 1085:
## Known stack suffix:
## const
## LR(1) items:
exceptionMember -> const . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR CONST BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionMember -> const

State 1086:
## Known stack suffix:
## extAttrExnMemList(exceptionMember)
## LR(1) items:
ilist(extAttrExnMemList(exceptionMember)) -> extAttrExnMemList(exceptionMember) . ilist(extAttrExnMemList(exceptionMember)) [ RBRACE ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrExnMemList(exceptionMember)) shift to state 1087
-- On extendedAttributeList shift to state 1079
-- On extAttrExnMemList(exceptionMember) shift to state 1086
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrExnMemList(exceptionMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1087:
## Known stack suffix:
## extAttrExnMemList(exceptionMember) ilist(extAttrExnMemList(exceptionMember))
## LR(1) items:
ilist(extAttrExnMemList(exceptionMember)) -> extAttrExnMemList(exceptionMember) ilist(extAttrExnMemList(exceptionMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ilist(extAttrExnMemList(exceptionMember)) -> extAttrExnMemList(exceptionMember) ilist(extAttrExnMemList(exceptionMember))

State 1088:
## Known stack suffix:
## EXCEPTION ID inheritance LBRACE exceptionMembers
## LR(1) items:
exceptionDef -> EXCEPTION ID inheritance LBRACE exceptionMembers . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 1089
## Reductions:

State 1089:
## Known stack suffix:
## EXCEPTION ID inheritance LBRACE exceptionMembers RBRACE
## LR(1) items:
exceptionDef -> EXCEPTION ID inheritance LBRACE exceptionMembers RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1090
## Reductions:

State 1090:
## Known stack suffix:
## EXCEPTION ID inheritance LBRACE exceptionMembers RBRACE SEMI
## LR(1) items:
exceptionDef -> EXCEPTION ID inheritance LBRACE exceptionMembers RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exceptionDef -> EXCEPTION ID inheritance LBRACE exceptionMembers RBRACE SEMI

State 1091:
## Known stack suffix:
## ENUM
## LR(1) items:
enum -> ENUM . ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1092
## Reductions:

State 1092:
## Known stack suffix:
## ENUM ID
## LR(1) items:
enum -> ENUM ID . LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 1093
## Reductions:

State 1093:
## Known stack suffix:
## ENUM ID LBRACE
## LR(1) items:
enum -> ENUM ID LBRACE . iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On STRING shift to state 1094
-- On iseparated_nonempty_list(COMMA,STRING) shift to state 1097
## Reductions:

State 1094:
## Known stack suffix:
## STRING
## LR(1) items:
iseparated_nonempty_list(COMMA,STRING) -> STRING . [ RBRACE ]
iseparated_nonempty_list(COMMA,STRING) -> STRING . COMMA iseparated_nonempty_list(COMMA,STRING) [ RBRACE ]
## Transitions:
-- On COMMA shift to state 1095
## Reductions:
-- On RBRACE reduce production iseparated_nonempty_list(COMMA,STRING) -> STRING

State 1095:
## Known stack suffix:
## STRING COMMA
## LR(1) items:
iseparated_nonempty_list(COMMA,STRING) -> STRING COMMA . iseparated_nonempty_list(COMMA,STRING) [ RBRACE ]
## Transitions:
-- On STRING shift to state 1094
-- On iseparated_nonempty_list(COMMA,STRING) shift to state 1096
## Reductions:

State 1096:
## Known stack suffix:
## STRING COMMA iseparated_nonempty_list(COMMA,STRING)
## LR(1) items:
iseparated_nonempty_list(COMMA,STRING) -> STRING COMMA iseparated_nonempty_list(COMMA,STRING) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iseparated_nonempty_list(COMMA,STRING) -> STRING COMMA iseparated_nonempty_list(COMMA,STRING)

State 1097:
## Known stack suffix:
## ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING)
## LR(1) items:
enum -> ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 1098
## Reductions:

State 1098:
## Known stack suffix:
## ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE
## LR(1) items:
enum -> ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1099
## Reductions:

State 1099:
## Known stack suffix:
## ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI
## LR(1) items:
enum -> ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum -> ENUM ID LBRACE iseparated_nonempty_list(COMMA,STRING) RBRACE SEMI

State 1100:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
dictionary -> DICTIONARY . ID inheritance LBRACE dictionaryMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1101
## Reductions:

State 1101:
## Known stack suffix:
## DICTIONARY ID
## LR(1) items:
dictionary -> DICTIONARY ID . inheritance LBRACE dictionaryMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On COLON shift to state 1061
-- On inheritance shift to state 1102
## Reductions:
-- On LBRACE reduce production inheritance ->

State 1102:
## Known stack suffix:
## DICTIONARY ID inheritance
## LR(1) items:
dictionary -> DICTIONARY ID inheritance . LBRACE dictionaryMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACE shift to state 1103
## Reductions:

State 1103:
## Known stack suffix:
## DICTIONARY ID inheritance LBRACE
## LR(1) items:
dictionary -> DICTIONARY ID inheritance LBRACE . dictionaryMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrDictList(dictionaryMember)) shift to state 1104
-- On extendedAttributeList shift to state 1105
-- On extAttrDictList(dictionaryMember) shift to state 1156
-- On dictionaryMembers shift to state 1158
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrDictList(dictionaryMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1104:
## Known stack suffix:
## ilist(extAttrDictList(dictionaryMember))
## LR(1) items:
dictionaryMembers -> ilist(extAttrDictList(dictionaryMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMembers -> ilist(extAttrDictList(dictionaryMember))

State 1105:
## Known stack suffix:
## extendedAttributeList
## LR(1) items:
extAttrDictList(dictionaryMember) -> extendedAttributeList . dictionaryMember [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 1106
-- On singleType shift to state 229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
-- On dictionaryMember shift to state 1155
## Reductions:

State 1106:
## Known stack suffix:
## typeDecl
## LR(1) items:
dictionaryMember -> typeDecl . CONSTRUCTOR SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . CONSTRUCTOR default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . NOTXPCOM SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . NOTXPCOM default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . RETVAL SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . RETVAL default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . UNSAFE SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . UNSAFE default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . PRIVATEBROWSINGCHECK SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . PRIVATEBROWSINGCHECK default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . QUERYINTERFACETYPE SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . QUERYINTERFACETYPE default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . CREATOR SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . CREATOR default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . GETTER SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . GETTER default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . SETTER SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . SETTER default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . ID SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . ID default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . DICTIONARY SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . DICTIONARY default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . PARTIAL SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl . PARTIAL default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On UNSAFE shift to state 1107
-- On SETTER shift to state 1111
-- On RETVAL shift to state 1115
-- On QUERYINTERFACETYPE shift to state 1119
-- On PRIVATEBROWSINGCHECK shift to state 1123
-- On PARTIAL shift to state 1127
-- On NOTXPCOM shift to state 1131
-- On ID shift to state 1135
-- On GETTER shift to state 1139
-- On DICTIONARY shift to state 1143
-- On CREATOR shift to state 1147
-- On CONSTRUCTOR shift to state 1151
## Reductions:

State 1107:
## Known stack suffix:
## typeDecl UNSAFE
## LR(1) items:
dictionaryMember -> typeDecl UNSAFE . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl UNSAFE . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1108
-- On EQUALS shift to state 575
-- On default shift to state 1109
## Reductions:

State 1108:
## Known stack suffix:
## typeDecl UNSAFE SEMI
## LR(1) items:
dictionaryMember -> typeDecl UNSAFE SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl UNSAFE SEMI

State 1109:
## Known stack suffix:
## typeDecl UNSAFE default
## LR(1) items:
dictionaryMember -> typeDecl UNSAFE default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1110
## Reductions:

State 1110:
## Known stack suffix:
## typeDecl UNSAFE default SEMI
## LR(1) items:
dictionaryMember -> typeDecl UNSAFE default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl UNSAFE default SEMI

State 1111:
## Known stack suffix:
## typeDecl SETTER
## LR(1) items:
dictionaryMember -> typeDecl SETTER . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl SETTER . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1112
-- On EQUALS shift to state 575
-- On default shift to state 1113
## Reductions:

State 1112:
## Known stack suffix:
## typeDecl SETTER SEMI
## LR(1) items:
dictionaryMember -> typeDecl SETTER SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl SETTER SEMI

State 1113:
## Known stack suffix:
## typeDecl SETTER default
## LR(1) items:
dictionaryMember -> typeDecl SETTER default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1114
## Reductions:

State 1114:
## Known stack suffix:
## typeDecl SETTER default SEMI
## LR(1) items:
dictionaryMember -> typeDecl SETTER default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl SETTER default SEMI

State 1115:
## Known stack suffix:
## typeDecl RETVAL
## LR(1) items:
dictionaryMember -> typeDecl RETVAL . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl RETVAL . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1116
-- On EQUALS shift to state 575
-- On default shift to state 1117
## Reductions:

State 1116:
## Known stack suffix:
## typeDecl RETVAL SEMI
## LR(1) items:
dictionaryMember -> typeDecl RETVAL SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl RETVAL SEMI

State 1117:
## Known stack suffix:
## typeDecl RETVAL default
## LR(1) items:
dictionaryMember -> typeDecl RETVAL default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1118
## Reductions:

State 1118:
## Known stack suffix:
## typeDecl RETVAL default SEMI
## LR(1) items:
dictionaryMember -> typeDecl RETVAL default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl RETVAL default SEMI

State 1119:
## Known stack suffix:
## typeDecl QUERYINTERFACETYPE
## LR(1) items:
dictionaryMember -> typeDecl QUERYINTERFACETYPE . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl QUERYINTERFACETYPE . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1120
-- On EQUALS shift to state 575
-- On default shift to state 1121
## Reductions:

State 1120:
## Known stack suffix:
## typeDecl QUERYINTERFACETYPE SEMI
## LR(1) items:
dictionaryMember -> typeDecl QUERYINTERFACETYPE SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl QUERYINTERFACETYPE SEMI

State 1121:
## Known stack suffix:
## typeDecl QUERYINTERFACETYPE default
## LR(1) items:
dictionaryMember -> typeDecl QUERYINTERFACETYPE default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1122
## Reductions:

State 1122:
## Known stack suffix:
## typeDecl QUERYINTERFACETYPE default SEMI
## LR(1) items:
dictionaryMember -> typeDecl QUERYINTERFACETYPE default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl QUERYINTERFACETYPE default SEMI

State 1123:
## Known stack suffix:
## typeDecl PRIVATEBROWSINGCHECK
## LR(1) items:
dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1124
-- On EQUALS shift to state 575
-- On default shift to state 1125
## Reductions:

State 1124:
## Known stack suffix:
## typeDecl PRIVATEBROWSINGCHECK SEMI
## LR(1) items:
dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK SEMI

State 1125:
## Known stack suffix:
## typeDecl PRIVATEBROWSINGCHECK default
## LR(1) items:
dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1126
## Reductions:

State 1126:
## Known stack suffix:
## typeDecl PRIVATEBROWSINGCHECK default SEMI
## LR(1) items:
dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl PRIVATEBROWSINGCHECK default SEMI

State 1127:
## Known stack suffix:
## typeDecl PARTIAL
## LR(1) items:
dictionaryMember -> typeDecl PARTIAL . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl PARTIAL . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1128
-- On EQUALS shift to state 575
-- On default shift to state 1129
## Reductions:

State 1128:
## Known stack suffix:
## typeDecl PARTIAL SEMI
## LR(1) items:
dictionaryMember -> typeDecl PARTIAL SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl PARTIAL SEMI

State 1129:
## Known stack suffix:
## typeDecl PARTIAL default
## LR(1) items:
dictionaryMember -> typeDecl PARTIAL default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1130
## Reductions:

State 1130:
## Known stack suffix:
## typeDecl PARTIAL default SEMI
## LR(1) items:
dictionaryMember -> typeDecl PARTIAL default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl PARTIAL default SEMI

State 1131:
## Known stack suffix:
## typeDecl NOTXPCOM
## LR(1) items:
dictionaryMember -> typeDecl NOTXPCOM . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl NOTXPCOM . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1132
-- On EQUALS shift to state 575
-- On default shift to state 1133
## Reductions:

State 1132:
## Known stack suffix:
## typeDecl NOTXPCOM SEMI
## LR(1) items:
dictionaryMember -> typeDecl NOTXPCOM SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl NOTXPCOM SEMI

State 1133:
## Known stack suffix:
## typeDecl NOTXPCOM default
## LR(1) items:
dictionaryMember -> typeDecl NOTXPCOM default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1134
## Reductions:

State 1134:
## Known stack suffix:
## typeDecl NOTXPCOM default SEMI
## LR(1) items:
dictionaryMember -> typeDecl NOTXPCOM default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl NOTXPCOM default SEMI

State 1135:
## Known stack suffix:
## typeDecl ID
## LR(1) items:
dictionaryMember -> typeDecl ID . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl ID . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1136
-- On EQUALS shift to state 575
-- On default shift to state 1137
## Reductions:

State 1136:
## Known stack suffix:
## typeDecl ID SEMI
## LR(1) items:
dictionaryMember -> typeDecl ID SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl ID SEMI

State 1137:
## Known stack suffix:
## typeDecl ID default
## LR(1) items:
dictionaryMember -> typeDecl ID default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1138
## Reductions:

State 1138:
## Known stack suffix:
## typeDecl ID default SEMI
## LR(1) items:
dictionaryMember -> typeDecl ID default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl ID default SEMI

State 1139:
## Known stack suffix:
## typeDecl GETTER
## LR(1) items:
dictionaryMember -> typeDecl GETTER . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl GETTER . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1140
-- On EQUALS shift to state 575
-- On default shift to state 1141
## Reductions:

State 1140:
## Known stack suffix:
## typeDecl GETTER SEMI
## LR(1) items:
dictionaryMember -> typeDecl GETTER SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl GETTER SEMI

State 1141:
## Known stack suffix:
## typeDecl GETTER default
## LR(1) items:
dictionaryMember -> typeDecl GETTER default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1142
## Reductions:

State 1142:
## Known stack suffix:
## typeDecl GETTER default SEMI
## LR(1) items:
dictionaryMember -> typeDecl GETTER default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl GETTER default SEMI

State 1143:
## Known stack suffix:
## typeDecl DICTIONARY
## LR(1) items:
dictionaryMember -> typeDecl DICTIONARY . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl DICTIONARY . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1144
-- On EQUALS shift to state 575
-- On default shift to state 1145
## Reductions:

State 1144:
## Known stack suffix:
## typeDecl DICTIONARY SEMI
## LR(1) items:
dictionaryMember -> typeDecl DICTIONARY SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl DICTIONARY SEMI

State 1145:
## Known stack suffix:
## typeDecl DICTIONARY default
## LR(1) items:
dictionaryMember -> typeDecl DICTIONARY default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1146
## Reductions:

State 1146:
## Known stack suffix:
## typeDecl DICTIONARY default SEMI
## LR(1) items:
dictionaryMember -> typeDecl DICTIONARY default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl DICTIONARY default SEMI

State 1147:
## Known stack suffix:
## typeDecl CREATOR
## LR(1) items:
dictionaryMember -> typeDecl CREATOR . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl CREATOR . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1148
-- On EQUALS shift to state 575
-- On default shift to state 1149
## Reductions:

State 1148:
## Known stack suffix:
## typeDecl CREATOR SEMI
## LR(1) items:
dictionaryMember -> typeDecl CREATOR SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl CREATOR SEMI

State 1149:
## Known stack suffix:
## typeDecl CREATOR default
## LR(1) items:
dictionaryMember -> typeDecl CREATOR default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1150
## Reductions:

State 1150:
## Known stack suffix:
## typeDecl CREATOR default SEMI
## LR(1) items:
dictionaryMember -> typeDecl CREATOR default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl CREATOR default SEMI

State 1151:
## Known stack suffix:
## typeDecl CONSTRUCTOR
## LR(1) items:
dictionaryMember -> typeDecl CONSTRUCTOR . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
dictionaryMember -> typeDecl CONSTRUCTOR . default SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1152
-- On EQUALS shift to state 575
-- On default shift to state 1153
## Reductions:

State 1152:
## Known stack suffix:
## typeDecl CONSTRUCTOR SEMI
## LR(1) items:
dictionaryMember -> typeDecl CONSTRUCTOR SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl CONSTRUCTOR SEMI

State 1153:
## Known stack suffix:
## typeDecl CONSTRUCTOR default
## LR(1) items:
dictionaryMember -> typeDecl CONSTRUCTOR default . SEMI [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
-- On SEMI shift to state 1154
## Reductions:

State 1154:
## Known stack suffix:
## typeDecl CONSTRUCTOR default SEMI
## LR(1) items:
dictionaryMember -> typeDecl CONSTRUCTOR default SEMI . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionaryMember -> typeDecl CONSTRUCTOR default SEMI

State 1155:
## Known stack suffix:
## extendedAttributeList dictionaryMember
## LR(1) items:
extAttrDictList(dictionaryMember) -> extendedAttributeList dictionaryMember . [ UNSIGNED UNSAFE SHORT SEQUENCE RETVAL RBRACE QUERYINTERFACETYPE PRIVATEBROWSINGCHECK PARTIAL OCTET NOTXPCOM LONG LBRACK ID FLOAT DOUBLE DICTIONARY CONSTRUCTOR BYTE BOOLEAN ANY ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extAttrDictList(dictionaryMember) -> extendedAttributeList dictionaryMember

State 1156:
## Known stack suffix:
## extAttrDictList(dictionaryMember)
## LR(1) items:
ilist(extAttrDictList(dictionaryMember)) -> extAttrDictList(dictionaryMember) . ilist(extAttrDictList(dictionaryMember)) [ RBRACE ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrDictList(dictionaryMember)) shift to state 1157
-- On extendedAttributeList shift to state 1105
-- On extAttrDictList(dictionaryMember) shift to state 1156
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RETVAL reduce production extendedAttributeList ->
-- On RBRACE reduce production ilist(extAttrDictList(dictionaryMember)) ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1157:
## Known stack suffix:
## extAttrDictList(dictionaryMember) ilist(extAttrDictList(dictionaryMember))
## LR(1) items:
ilist(extAttrDictList(dictionaryMember)) -> extAttrDictList(dictionaryMember) ilist(extAttrDictList(dictionaryMember)) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ilist(extAttrDictList(dictionaryMember)) -> extAttrDictList(dictionaryMember) ilist(extAttrDictList(dictionaryMember))

State 1158:
## Known stack suffix:
## DICTIONARY ID inheritance LBRACE dictionaryMembers
## LR(1) items:
dictionary -> DICTIONARY ID inheritance LBRACE dictionaryMembers . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 1159
## Reductions:

State 1159:
## Known stack suffix:
## DICTIONARY ID inheritance LBRACE dictionaryMembers RBRACE
## LR(1) items:
dictionary -> DICTIONARY ID inheritance LBRACE dictionaryMembers RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1160
## Reductions:

State 1160:
## Known stack suffix:
## DICTIONARY ID inheritance LBRACE dictionaryMembers RBRACE SEMI
## LR(1) items:
dictionary -> DICTIONARY ID inheritance LBRACE dictionaryMembers RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dictionary -> DICTIONARY ID inheritance LBRACE dictionaryMembers RBRACE SEMI

State 1161:
## Known stack suffix:
## CALLBACK
## LR(1) items:
callbackOrInterface -> CALLBACK . callbackRestOrInterface [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On UNSAFE shift to state 1162
-- On SETTER shift to state 1169
-- On RETVAL shift to state 1176
-- On QUERYINTERFACETYPE shift to state 1183
-- On PRIVATEBROWSINGCHECK shift to state 1190
-- On PARTIAL shift to state 1197
-- On NOTXPCOM shift to state 1204
-- On INTERFACE shift to state 1211
-- On ID shift to state 1213
-- On GETTER shift to state 1220
-- On DICTIONARY shift to state 1227
-- On CREATOR shift to state 1234
-- On CONSTRUCTOR shift to state 1241
-- On interface shift to state 1248
-- On callbackRestOrInterface shift to state 1249
-- On callbackRest shift to state 1250
## Reductions:

State 1162:
## Known stack suffix:
## UNSAFE
## LR(1) items:
callbackRest -> UNSAFE . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1163
## Reductions:

State 1163:
## Known stack suffix:
## UNSAFE EQUALS
## LR(1) items:
callbackRest -> UNSAFE EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1164
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1164:
## Known stack suffix:
## UNSAFE EQUALS returnType
## LR(1) items:
callbackRest -> UNSAFE EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1165
## Reductions:

State 1165:
## Known stack suffix:
## UNSAFE EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> UNSAFE EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1166
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1166:
## Known stack suffix:
## UNSAFE EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> UNSAFE EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1167
## Reductions:

State 1167:
## Known stack suffix:
## UNSAFE EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> UNSAFE EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1168
## Reductions:

State 1168:
## Known stack suffix:
## UNSAFE EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> UNSAFE EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> UNSAFE EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1169:
## Known stack suffix:
## SETTER
## LR(1) items:
callbackRest -> SETTER . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1170
## Reductions:

State 1170:
## Known stack suffix:
## SETTER EQUALS
## LR(1) items:
callbackRest -> SETTER EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1171
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1171:
## Known stack suffix:
## SETTER EQUALS returnType
## LR(1) items:
callbackRest -> SETTER EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1172
## Reductions:

State 1172:
## Known stack suffix:
## SETTER EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> SETTER EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1173
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1173:
## Known stack suffix:
## SETTER EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> SETTER EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1174
## Reductions:

State 1174:
## Known stack suffix:
## SETTER EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> SETTER EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1175
## Reductions:

State 1175:
## Known stack suffix:
## SETTER EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> SETTER EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> SETTER EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1176:
## Known stack suffix:
## RETVAL
## LR(1) items:
callbackRest -> RETVAL . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1177
## Reductions:

State 1177:
## Known stack suffix:
## RETVAL EQUALS
## LR(1) items:
callbackRest -> RETVAL EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1178
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1178:
## Known stack suffix:
## RETVAL EQUALS returnType
## LR(1) items:
callbackRest -> RETVAL EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1179
## Reductions:

State 1179:
## Known stack suffix:
## RETVAL EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> RETVAL EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1180
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1180:
## Known stack suffix:
## RETVAL EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> RETVAL EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1181
## Reductions:

State 1181:
## Known stack suffix:
## RETVAL EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> RETVAL EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1182
## Reductions:

State 1182:
## Known stack suffix:
## RETVAL EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> RETVAL EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> RETVAL EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1183:
## Known stack suffix:
## QUERYINTERFACETYPE
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1184
## Reductions:

State 1184:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1185
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1185:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS returnType
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1186
## Reductions:

State 1186:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1187
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1187:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1188
## Reductions:

State 1188:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1189
## Reductions:

State 1189:
## Known stack suffix:
## QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> QUERYINTERFACETYPE EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1190:
## Known stack suffix:
## PRIVATEBROWSINGCHECK
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1191
## Reductions:

State 1191:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1192
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1192:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS returnType
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1193
## Reductions:

State 1193:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1194
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1194:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1195
## Reductions:

State 1195:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1196
## Reductions:

State 1196:
## Known stack suffix:
## PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> PRIVATEBROWSINGCHECK EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1197:
## Known stack suffix:
## PARTIAL
## LR(1) items:
callbackRest -> PARTIAL . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1198
## Reductions:

State 1198:
## Known stack suffix:
## PARTIAL EQUALS
## LR(1) items:
callbackRest -> PARTIAL EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1199
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1199:
## Known stack suffix:
## PARTIAL EQUALS returnType
## LR(1) items:
callbackRest -> PARTIAL EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1200
## Reductions:

State 1200:
## Known stack suffix:
## PARTIAL EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> PARTIAL EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1201
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1201:
## Known stack suffix:
## PARTIAL EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> PARTIAL EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1202
## Reductions:

State 1202:
## Known stack suffix:
## PARTIAL EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> PARTIAL EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1203
## Reductions:

State 1203:
## Known stack suffix:
## PARTIAL EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> PARTIAL EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> PARTIAL EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1204:
## Known stack suffix:
## NOTXPCOM
## LR(1) items:
callbackRest -> NOTXPCOM . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1205
## Reductions:

State 1205:
## Known stack suffix:
## NOTXPCOM EQUALS
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1206
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1206:
## Known stack suffix:
## NOTXPCOM EQUALS returnType
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1207
## Reductions:

State 1207:
## Known stack suffix:
## NOTXPCOM EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1208
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1208:
## Known stack suffix:
## NOTXPCOM EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1209
## Reductions:

State 1209:
## Known stack suffix:
## NOTXPCOM EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1210
## Reductions:

State 1210:
## Known stack suffix:
## NOTXPCOM EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> NOTXPCOM EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> NOTXPCOM EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1211:
## Known stack suffix:
## INTERFACE
## LR(1) items:
interface -> INTERFACE . ID inheritance LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On ID shift to state 1212
## Reductions:

State 1212:
## Known stack suffix:
## INTERFACE ID
## LR(1) items:
interface -> INTERFACE ID . inheritance LBRACE interfaceMembers RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On COLON shift to state 1061
-- On inheritance shift to state 1063
## Reductions:
-- On LBRACE reduce production inheritance ->

State 1213:
## Known stack suffix:
## ID
## LR(1) items:
callbackRest -> ID . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1214
## Reductions:

State 1214:
## Known stack suffix:
## ID EQUALS
## LR(1) items:
callbackRest -> ID EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1215
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1215:
## Known stack suffix:
## ID EQUALS returnType
## LR(1) items:
callbackRest -> ID EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1216
## Reductions:

State 1216:
## Known stack suffix:
## ID EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> ID EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1217
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1217:
## Known stack suffix:
## ID EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> ID EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1218
## Reductions:

State 1218:
## Known stack suffix:
## ID EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> ID EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1219
## Reductions:

State 1219:
## Known stack suffix:
## ID EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> ID EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> ID EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1220:
## Known stack suffix:
## GETTER
## LR(1) items:
callbackRest -> GETTER . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1221
## Reductions:

State 1221:
## Known stack suffix:
## GETTER EQUALS
## LR(1) items:
callbackRest -> GETTER EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1222
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1222:
## Known stack suffix:
## GETTER EQUALS returnType
## LR(1) items:
callbackRest -> GETTER EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1223
## Reductions:

State 1223:
## Known stack suffix:
## GETTER EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> GETTER EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1224
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1224:
## Known stack suffix:
## GETTER EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> GETTER EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1225
## Reductions:

State 1225:
## Known stack suffix:
## GETTER EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> GETTER EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1226
## Reductions:

State 1226:
## Known stack suffix:
## GETTER EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> GETTER EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> GETTER EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1227:
## Known stack suffix:
## DICTIONARY
## LR(1) items:
callbackRest -> DICTIONARY . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1228
## Reductions:

State 1228:
## Known stack suffix:
## DICTIONARY EQUALS
## LR(1) items:
callbackRest -> DICTIONARY EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1229
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1229:
## Known stack suffix:
## DICTIONARY EQUALS returnType
## LR(1) items:
callbackRest -> DICTIONARY EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1230
## Reductions:

State 1230:
## Known stack suffix:
## DICTIONARY EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> DICTIONARY EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1231
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1231:
## Known stack suffix:
## DICTIONARY EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> DICTIONARY EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1232
## Reductions:

State 1232:
## Known stack suffix:
## DICTIONARY EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> DICTIONARY EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1233
## Reductions:

State 1233:
## Known stack suffix:
## DICTIONARY EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> DICTIONARY EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> DICTIONARY EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1234:
## Known stack suffix:
## CREATOR
## LR(1) items:
callbackRest -> CREATOR . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1235
## Reductions:

State 1235:
## Known stack suffix:
## CREATOR EQUALS
## LR(1) items:
callbackRest -> CREATOR EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1236
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1236:
## Known stack suffix:
## CREATOR EQUALS returnType
## LR(1) items:
callbackRest -> CREATOR EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1237
## Reductions:

State 1237:
## Known stack suffix:
## CREATOR EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> CREATOR EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1238
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1238:
## Known stack suffix:
## CREATOR EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> CREATOR EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1239
## Reductions:

State 1239:
## Known stack suffix:
## CREATOR EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> CREATOR EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1240
## Reductions:

State 1240:
## Known stack suffix:
## CREATOR EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> CREATOR EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> CREATOR EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1241:
## Known stack suffix:
## CONSTRUCTOR
## LR(1) items:
callbackRest -> CONSTRUCTOR . EQUALS returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On EQUALS shift to state 1242
## Reductions:

State 1242:
## Known stack suffix:
## CONSTRUCTOR EQUALS
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS . returnType LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On VOID shift to state 932
-- On UNSIGNED shift to state 196
-- On UNSAFE shift to state 202
-- On SHORT shift to state 197
-- On SEQUENCE shift to state 203
-- On RETVAL shift to state 205
-- On QUERYINTERFACETYPE shift to state 206
-- On PRIVATEBROWSINGCHECK shift to state 207
-- On PARTIAL shift to state 208
-- On OCTET shift to state 209
-- On NOTXPCOM shift to state 210
-- On LONG shift to state 198
-- On ID shift to state 211
-- On FLOAT shift to state 212
-- On DOUBLE shift to state 213
-- On DICTIONARY shift to state 214
-- On CONSTRUCTOR shift to state 215
-- On BYTE shift to state 200
-- On BOOLEAN shift to state 216
-- On ANY shift to state 217
-- On unsignedIntegerType shift to state 225
-- On typeDecl shift to state 935
-- On singleType shift to state 229
-- On returnType shift to state 1243
-- On primitiveType shift to state 230
-- On nonAnyType shift to state 232
-- On integerType shift to state 233
## Reductions:

State 1243:
## Known stack suffix:
## CONSTRUCTOR EQUALS returnType
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS returnType . LPAREN argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LPAREN shift to state 1244
## Reductions:

State 1244:
## Known stack suffix:
## CONSTRUCTOR EQUALS returnType LPAREN
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS returnType LPAREN . argumentList RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On LBRACK shift to state 1
-- On separated_nonempty_list(COMMA,argument) shift to state 564
-- On loption(separated_nonempty_list(COMMA,argument)) shift to state 565
-- On extendedAttributeList shift to state 566
-- On extAttrArgList(optionalOrRequiredArgument) shift to state 628
-- On argumentList shift to state 1245
-- On argument shift to state 631
## Reductions:
-- On UNSIGNED reduce production extendedAttributeList ->
-- On UNSAFE reduce production extendedAttributeList ->
-- On SHORT reduce production extendedAttributeList ->
-- On SEQUENCE reduce production extendedAttributeList ->
-- On RPAREN reduce production loption(separated_nonempty_list(COMMA,argument)) ->
-- On RETVAL reduce production extendedAttributeList ->
-- On QUERYINTERFACETYPE reduce production extendedAttributeList ->
-- On PRIVATEBROWSINGCHECK reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On OUT reduce production extendedAttributeList ->
-- On OPTIONAL reduce production extendedAttributeList ->
-- On OCTET reduce production extendedAttributeList ->
-- On NOTXPCOM reduce production extendedAttributeList ->
-- On LONG reduce production extendedAttributeList ->
-- On INOUT reduce production extendedAttributeList ->
-- On IN reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On FLOAT reduce production extendedAttributeList ->
-- On DOUBLE reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONSTRUCTOR reduce production extendedAttributeList ->
-- On BYTE reduce production extendedAttributeList ->
-- On BOOLEAN reduce production extendedAttributeList ->
-- On ANY reduce production extendedAttributeList ->

State 1245:
## Known stack suffix:
## CONSTRUCTOR EQUALS returnType LPAREN argumentList
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS returnType LPAREN argumentList . RPAREN SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RPAREN shift to state 1246
## Reductions:

State 1246:
## Known stack suffix:
## CONSTRUCTOR EQUALS returnType LPAREN argumentList RPAREN
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS returnType LPAREN argumentList RPAREN . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1247
## Reductions:

State 1247:
## Known stack suffix:
## CONSTRUCTOR EQUALS returnType LPAREN argumentList RPAREN SEMI
## LR(1) items:
callbackRest -> CONSTRUCTOR EQUALS returnType LPAREN argumentList RPAREN SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRest -> CONSTRUCTOR EQUALS returnType LPAREN argumentList RPAREN SEMI

State 1248:
## Known stack suffix:
## interface
## LR(1) items:
callbackRestOrInterface -> interface . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRestOrInterface -> interface

State 1249:
## Known stack suffix:
## CALLBACK callbackRestOrInterface
## LR(1) items:
callbackOrInterface -> CALLBACK callbackRestOrInterface . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackOrInterface -> CALLBACK callbackRestOrInterface

State 1250:
## Known stack suffix:
## callbackRest
## LR(1) items:
callbackRestOrInterface -> callbackRest . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackRestOrInterface -> callbackRest

State 1251:
## Known stack suffix:
## typedef
## LR(1) items:
definition -> typedef . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> typedef

State 1252:
## Known stack suffix:
## partialInterface
## LR(1) items:
definition -> partialInterface . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> partialInterface

State 1253:
## Known stack suffix:
## interface
## LR(1) items:
callbackOrInterface -> interface . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production callbackOrInterface -> interface

State 1254:
## Known stack suffix:
## implementsStatement
## LR(1) items:
definition -> implementsStatement . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> implementsStatement

State 1255:
## Known stack suffix:
## MODULE ID LBRACE ilist(definition)
## LR(1) items:
definition -> MODULE ID LBRACE ilist(definition) . RBRACE SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On RBRACE shift to state 1256
## Reductions:

State 1256:
## Known stack suffix:
## MODULE ID LBRACE ilist(definition) RBRACE
## LR(1) items:
definition -> MODULE ID LBRACE ilist(definition) RBRACE . SEMI [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
-- On SEMI shift to state 1257
## Reductions:

State 1257:
## Known stack suffix:
## MODULE ID LBRACE ilist(definition) RBRACE SEMI
## LR(1) items:
definition -> MODULE ID LBRACE ilist(definition) RBRACE SEMI . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> MODULE ID LBRACE ilist(definition) RBRACE SEMI

State 1258:
## Known stack suffix:
## exceptionDef
## LR(1) items:
definition -> exceptionDef . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> exceptionDef

State 1259:
## Known stack suffix:
## enum
## LR(1) items:
definition -> enum . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> enum

State 1260:
## Known stack suffix:
## dictionary
## LR(1) items:
definition -> dictionary . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> dictionary

State 1261:
## Known stack suffix:
## definition
## LR(1) items:
ilist(definition) -> definition . ilist(definition) [ RBRACE ]
## Transitions:
-- On TYPEDEF shift to state 918
-- On PARTIAL shift to state 923
-- On NATIVE shift to state 1053
-- On MODULE shift to state 1055
-- On INTERFACE shift to state 1058
-- On INCLUDE shift to state 1068
-- On ID shift to state 1070
-- On EXCEPTION shift to state 1074
-- On ENUM shift to state 1091
-- On DICTIONARY shift to state 1100
-- On CONST shift to state 1038
-- On CALLBACK shift to state 1161
-- On typedef shift to state 1251
-- On partialInterface shift to state 1252
-- On interface shift to state 1253
-- On implementsStatement shift to state 1254
-- On ilist(definition) shift to state 1262
-- On exceptionDef shift to state 1258
-- On enum shift to state 1259
-- On dictionary shift to state 1260
-- On definition shift to state 1261
-- On const shift to state 1263
-- On callbackOrInterface shift to state 1264
## Reductions:
-- On RBRACE reduce production ilist(definition) ->

State 1262:
## Known stack suffix:
## definition ilist(definition)
## LR(1) items:
ilist(definition) -> definition ilist(definition) . [ RBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ilist(definition) -> definition ilist(definition)

State 1263:
## Known stack suffix:
## const
## LR(1) items:
definition -> const . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> const

State 1264:
## Known stack suffix:
## callbackOrInterface
## LR(1) items:
definition -> callbackOrInterface . [ TYPEDEF RBRACE PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production definition -> callbackOrInterface

State 1265:
## Known stack suffix:
## extendedAttributeList definition
## LR(1) items:
extAttrDefList(definition) -> extendedAttributeList definition . [ TYPEDEF PARTIAL NATIVE MODULE LBRACK INTERFACE INCLUDE ID EXCEPTION EOF ENUM DICTIONARY CONST CALLBACK ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extAttrDefList(definition) -> extendedAttributeList definition

State 1266:
## Known stack suffix:
## extAttrDefList(definition)
## LR(1) items:
ilist(extAttrDefList(definition)) -> extAttrDefList(definition) . ilist(extAttrDefList(definition)) [ EOF ]
## Transitions:
-- On LBRACK shift to state 1
-- On ilist(extAttrDefList(definition)) shift to state 1267
-- On extendedAttributeList shift to state 917
-- On extAttrDefList(definition) shift to state 1266
## Reductions:
-- On TYPEDEF reduce production extendedAttributeList ->
-- On PARTIAL reduce production extendedAttributeList ->
-- On NATIVE reduce production extendedAttributeList ->
-- On MODULE reduce production extendedAttributeList ->
-- On INTERFACE reduce production extendedAttributeList ->
-- On INCLUDE reduce production extendedAttributeList ->
-- On ID reduce production extendedAttributeList ->
-- On EXCEPTION reduce production extendedAttributeList ->
-- On EOF reduce production ilist(extAttrDefList(definition)) ->
-- On ENUM reduce production extendedAttributeList ->
-- On DICTIONARY reduce production extendedAttributeList ->
-- On CONST reduce production extendedAttributeList ->
-- On CALLBACK reduce production extendedAttributeList ->

State 1267:
## Known stack suffix:
## extAttrDefList(definition) ilist(extAttrDefList(definition))
## LR(1) items:
ilist(extAttrDefList(definition)) -> extAttrDefList(definition) ilist(extAttrDefList(definition)) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ilist(extAttrDefList(definition)) -> extAttrDefList(definition) ilist(extAttrDefList(definition))

State 1268:
## Known stack suffix:
## definitions
## LR(1) items:
idlFile -> definitions . EOF [ # ]
## Transitions:
-- On EOF shift to state 1269
## Reductions:

State 1269:
## Known stack suffix:
## definitions EOF
## LR(1) items:
idlFile -> definitions EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production idlFile -> definitions EOF

