State 0:
## Known stack suffix:
##
## LR(1) items:
request' -> . request [ # ]
## Transitions:
-- On TAG shift to state 1
-- On EOF shift to state 2
-- On DONE shift to state 3
-- On tag_ shift to state 4
-- On request shift to state 378
-- On command shift to state 379
-- On c_done shift to state 380
## Reductions:

State 1:
## Known stack suffix:
## TAG
## LR(1) items:
tag_ -> TAG . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production tag_ -> TAG

State 2:
## Known stack suffix:
## EOF
## LR(1) items:
request -> EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production request -> EOF

State 3:
## Known stack suffix:
## DONE
## LR(1) items:
c_done -> DONE . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production c_done -> DONE

State 4:
## Known stack suffix:
## tag_
## LR(1) items:
command -> tag_ . SP commands CRLF [ # ]
## Transitions:
-- On SP shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## tag_ SP
## LR(1) items:
command -> tag_ SP . commands CRLF [ # ]
## Transitions:
-- On UNSUBSCRIBE shift to state 6
-- On UID shift to state 13
-- On SUBSCRIBE shift to state 214
-- On STORE shift to state 217
-- On STATUS shift to state 225
-- On STARTTLS shift to state 243
-- On SELECT shift to state 244
-- On SEARCH shift to state 252
-- On RENAME shift to state 256
-- On NOOP shift to state 261
-- On LSUB shift to state 262
-- On LOGOUT shift to state 267
-- On LOGIN shift to state 268
-- On LIST shift to state 276
-- On LAPPEND shift to state 281
-- On IDLE shift to state 290
-- On ID shift to state 291
-- On FETCH shift to state 301
-- On EXPUNGE shift to state 307
-- On EXAMINE shift to state 308
-- On ENABLE shift to state 312
-- On DELETE shift to state 315
-- On CREATE shift to state 318
-- On COPY shift to state 321
-- On CLOSE shift to state 326
-- On CHECK shift to state 327
-- On CAPABILITY shift to state 328
-- On AUTHENTICATE shift to state 329
-- On APPEND shift to state 339
-- On login shift to state 342
-- On id shift to state 343
-- On commands shift to state 344
-- On command_select shift to state 346
-- On command_notauth shift to state 347
-- On command_auth shift to state 348
-- On command_any shift to state 349
-- On c_unsubscribe shift to state 350
-- On c_subscribe shift to state 351
-- On c_store shift to state 352
-- On c_status shift to state 353
-- On c_select shift to state 354
-- On c_search shift to state 355
-- On c_rename shift to state 356
-- On c_lsub shift to state 357
-- On c_list shift to state 358
-- On c_lappend shift to state 359
-- On c_idle shift to state 360
-- On c_fetch shift to state 361
-- On c_examine shift to state 362
-- On c_delete shift to state 363
-- On c_create shift to state 364
-- On c_copy shift to state 365
-- On c_append shift to state 366
-- On authenticate shift to state 367
-- On append_cmd shift to state 368
## Reductions:

State 6:
## Known stack suffix:
## UNSUBSCRIBE
## LR(1) items:
c_unsubscribe -> UNSUBSCRIBE . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## UNSUBSCRIBE SP
## LR(1) items:
c_unsubscribe -> UNSUBSCRIBE SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 12
## Reductions:

State 8:
## Known stack suffix:
## QUOTED_STRING
## LR(1) items:
quoted -> QUOTED_STRING . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production quoted -> QUOTED_STRING

State 9:
## Known stack suffix:
## INBOX
## LR(1) items:
mailbox -> INBOX . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production mailbox -> INBOX

State 10:
## Known stack suffix:
## ATOM_CHARS
## LR(1) items:
mailbox -> ATOM_CHARS . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production mailbox -> ATOM_CHARS

State 11:
## Known stack suffix:
## quoted
## LR(1) items:
mailbox -> quoted . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production mailbox -> quoted

State 12:
## Known stack suffix:
## UNSUBSCRIBE SP mailbox
## LR(1) items:
c_unsubscribe -> UNSUBSCRIBE SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_unsubscribe -> UNSUBSCRIBE SP mailbox

State 13:
## Known stack suffix:
## UID
## LR(1) items:
c_copy -> UID . SP COPY SP ATOM_CHARS SP mailbox [ CRLF ]
c_fetch -> UID . SP FETCH SP ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
c_search -> UID . SP SEARCH SP charset_sp search_keys [ CRLF ]
c_store -> UID . SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## UID SP
## LR(1) items:
c_copy -> UID SP . COPY SP ATOM_CHARS SP mailbox [ CRLF ]
c_fetch -> UID SP . FETCH SP ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
c_search -> UID SP . SEARCH SP charset_sp search_keys [ CRLF ]
c_store -> UID SP . STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On STORE shift to state 15
-- On SEARCH shift to state 52
-- On FETCH shift to state 171
-- On COPY shift to state 209
## Reductions:

State 15:
## Known stack suffix:
## UID SP STORE
## LR(1) items:
c_store -> UID SP STORE . SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## UID SP STORE SP
## LR(1) items:
c_store -> UID SP STORE SP . ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS . SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS SP
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS SP . unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On LP shift to state 19
-- On unchangedsince_sp shift to state 25
## Reductions:
-- On FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS
--   reduce production unchangedsince_sp ->

State 19:
## Known stack suffix:
## LP
## LR(1) items:
unchangedsince_sp -> LP . UNCHANGEDSINCE SP ATOM_CHARS RP SP [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
-- On UNCHANGEDSINCE shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## LP UNCHANGEDSINCE
## LR(1) items:
unchangedsince_sp -> LP UNCHANGEDSINCE . SP ATOM_CHARS RP SP [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
-- On SP shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## LP UNCHANGEDSINCE SP
## LR(1) items:
unchangedsince_sp -> LP UNCHANGEDSINCE SP . ATOM_CHARS RP SP [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
-- On ATOM_CHARS shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## LP UNCHANGEDSINCE SP ATOM_CHARS
## LR(1) items:
unchangedsince_sp -> LP UNCHANGEDSINCE SP ATOM_CHARS . RP SP [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
-- On RP shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## LP UNCHANGEDSINCE SP ATOM_CHARS RP
## LR(1) items:
unchangedsince_sp -> LP UNCHANGEDSINCE SP ATOM_CHARS RP . SP [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
-- On SP shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## LP UNCHANGEDSINCE SP ATOM_CHARS RP SP
## LR(1) items:
unchangedsince_sp -> LP UNCHANGEDSINCE SP ATOM_CHARS RP SP . [ FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS ]
## Transitions:
## Reductions:
-- On FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS
--   reduce production unchangedsince_sp -> LP UNCHANGEDSINCE SP ATOM_CHARS RP SP

State 25:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS SP unchangedsince_sp
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS SP unchangedsince_sp . s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On FLAGSSILENTPL shift to state 26
-- On FLAGSSILENTMIN shift to state 27
-- On FLAGSSILENT shift to state 28
-- On FLAGSPL shift to state 29
-- On FLAGSMIN shift to state 30
-- On FLAGS shift to state 31
-- On s_flags shift to state 32
## Reductions:

State 26:
## Known stack suffix:
## FLAGSSILENTPL
## LR(1) items:
s_flags -> FLAGSSILENTPL . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGSSILENTPL

State 27:
## Known stack suffix:
## FLAGSSILENTMIN
## LR(1) items:
s_flags -> FLAGSSILENTMIN . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGSSILENTMIN

State 28:
## Known stack suffix:
## FLAGSSILENT
## LR(1) items:
s_flags -> FLAGSSILENT . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGSSILENT

State 29:
## Known stack suffix:
## FLAGSPL
## LR(1) items:
s_flags -> FLAGSPL . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGSPL

State 30:
## Known stack suffix:
## FLAGSMIN
## LR(1) items:
s_flags -> FLAGSMIN . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGSMIN

State 31:
## Known stack suffix:
## FLAGS
## LR(1) items:
s_flags -> FLAGS . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production s_flags -> FLAGS

State 32:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags . SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP . s_flags_value [ CRLF ]
## Transitions:
-- On LP shift to state 34
-- On FLSEEN shift to state 35
-- On FLFLAGGED shift to state 36
-- On FLEXTENSION shift to state 37
-- On FLDRAFT shift to state 38
-- On FLDELETED shift to state 39
-- On FLANSWERED shift to state 40
-- On ATOM_CHARS shift to state 41
-- On separated_nonempty_list(SP,flag) shift to state 42
-- On s_flags_value shift to state 49
-- On loption(separated_nonempty_list(SP,flag)) shift to state 43
-- On flag_sp_list shift to state 50
-- On flag_list shift to state 51
-- On flag shift to state 46
## Reductions:
-- On CRLF
--   reduce production loption(separated_nonempty_list(SP,flag)) ->

State 34:
## Known stack suffix:
## LP
## LR(1) items:
flag_list -> LP . flag_sp_list RP [ SP CRLF ]
## Transitions:
-- On FLSEEN shift to state 35
-- On FLFLAGGED shift to state 36
-- On FLEXTENSION shift to state 37
-- On FLDRAFT shift to state 38
-- On FLDELETED shift to state 39
-- On FLANSWERED shift to state 40
-- On ATOM_CHARS shift to state 41
-- On separated_nonempty_list(SP,flag) shift to state 42
-- On loption(separated_nonempty_list(SP,flag)) shift to state 43
-- On flag_sp_list shift to state 44
-- On flag shift to state 46
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,flag)) ->

State 35:
## Known stack suffix:
## FLSEEN
## LR(1) items:
flag -> FLSEEN . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLSEEN

State 36:
## Known stack suffix:
## FLFLAGGED
## LR(1) items:
flag -> FLFLAGGED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLFLAGGED

State 37:
## Known stack suffix:
## FLEXTENSION
## LR(1) items:
flag -> FLEXTENSION . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLEXTENSION

State 38:
## Known stack suffix:
## FLDRAFT
## LR(1) items:
flag -> FLDRAFT . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLDRAFT

State 39:
## Known stack suffix:
## FLDELETED
## LR(1) items:
flag -> FLDELETED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLDELETED

State 40:
## Known stack suffix:
## FLANSWERED
## LR(1) items:
flag -> FLANSWERED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> FLANSWERED

State 41:
## Known stack suffix:
## ATOM_CHARS
## LR(1) items:
flag -> ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production flag -> ATOM_CHARS

State 42:
## Known stack suffix:
## separated_nonempty_list(SP,flag)
## LR(1) items:
loption(separated_nonempty_list(SP,flag)) -> separated_nonempty_list(SP,flag) . [ RP CRLF ]
## Transitions:
## Reductions:
-- On RP CRLF
--   reduce production loption(separated_nonempty_list(SP,flag)) -> separated_nonempty_list(SP,flag)

State 43:
## Known stack suffix:
## loption(separated_nonempty_list(SP,flag))
## LR(1) items:
flag_sp_list -> loption(separated_nonempty_list(SP,flag)) . [ RP CRLF ]
## Transitions:
## Reductions:
-- On RP CRLF
--   reduce production flag_sp_list -> loption(separated_nonempty_list(SP,flag))

State 44:
## Known stack suffix:
## LP flag_sp_list
## LR(1) items:
flag_list -> LP flag_sp_list . RP [ SP CRLF ]
## Transitions:
-- On RP shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## LP flag_sp_list RP
## LR(1) items:
flag_list -> LP flag_sp_list RP . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production flag_list -> LP flag_sp_list RP

State 46:
## Known stack suffix:
## flag
## LR(1) items:
separated_nonempty_list(SP,flag) -> flag . [ RP CRLF ]
separated_nonempty_list(SP,flag) -> flag . SP separated_nonempty_list(SP,flag) [ RP CRLF ]
## Transitions:
-- On SP shift to state 47
## Reductions:
-- On RP CRLF
--   reduce production separated_nonempty_list(SP,flag) -> flag

State 47:
## Known stack suffix:
## flag SP
## LR(1) items:
separated_nonempty_list(SP,flag) -> flag SP . separated_nonempty_list(SP,flag) [ RP CRLF ]
## Transitions:
-- On FLSEEN shift to state 35
-- On FLFLAGGED shift to state 36
-- On FLEXTENSION shift to state 37
-- On FLDRAFT shift to state 38
-- On FLDELETED shift to state 39
-- On FLANSWERED shift to state 40
-- On ATOM_CHARS shift to state 41
-- On separated_nonempty_list(SP,flag) shift to state 48
-- On flag shift to state 46
## Reductions:

State 48:
## Known stack suffix:
## flag SP separated_nonempty_list(SP,flag)
## LR(1) items:
separated_nonempty_list(SP,flag) -> flag SP separated_nonempty_list(SP,flag) . [ RP CRLF ]
## Transitions:
## Reductions:
-- On RP CRLF
--   reduce production separated_nonempty_list(SP,flag) -> flag SP separated_nonempty_list(SP,flag)

State 49:
## Known stack suffix:
## UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value
## LR(1) items:
c_store -> UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_store -> UID SP STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value

State 50:
## Known stack suffix:
## flag_sp_list
## LR(1) items:
s_flags_value -> flag_sp_list . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production s_flags_value -> flag_sp_list

State 51:
## Known stack suffix:
## flag_list
## LR(1) items:
s_flags_value -> flag_list . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production s_flags_value -> flag_list

State 52:
## Known stack suffix:
## UID SP SEARCH
## LR(1) items:
c_search -> UID SP SEARCH . SP charset_sp search_keys [ CRLF ]
## Transitions:
-- On SP shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## UID SP SEARCH SP
## LR(1) items:
c_search -> UID SP SEARCH SP . charset_sp search_keys [ CRLF ]
## Transitions:
-- On CHARSET shift to state 54
-- On charset_sp shift to state 57
-- On charset shift to state 169
## Reductions:
-- On UNSEEN UNKEYWORD UNFLAGGED UNDRAFT UNDELETED UNANSWERED UID TO TEXT SUBJECT SMALLER SINCE SENTSINCE SENTON SENTBEFORE SEEN RECENT OR ON OLD NOT NEW MODSEQ LP LARGER KEYWORD HEADER FROM FLAGGED DRAFT DELETED CRLF CC BODY BEFORE BCC ATOM_CHARS ANSWERED ALL
--   reduce production charset_sp ->

State 54:
## Known stack suffix:
## CHARSET
## LR(1) items:
charset -> CHARSET . SP ATOM_CHARS [ SP ]
## Transitions:
-- On SP shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## CHARSET SP
## LR(1) items:
charset -> CHARSET SP . ATOM_CHARS [ SP ]
## Transitions:
-- On ATOM_CHARS shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## CHARSET SP ATOM_CHARS
## LR(1) items:
charset -> CHARSET SP ATOM_CHARS . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production charset -> CHARSET SP ATOM_CHARS

State 57:
## Known stack suffix:
## UID SP SEARCH SP charset_sp
## LR(1) items:
c_search -> UID SP SEARCH SP charset_sp . search_keys [ CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On separated_nonempty_list(SP,op_search_keys) shift to state 153
-- On search_keys shift to state 167
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 156
-- On op_search_key shift to state 159
-- On modseq shift to state 160
-- On loption(separated_nonempty_list(SP,op_search_keys)) shift to state 168
## Reductions:
-- On CRLF
--   reduce production loption(separated_nonempty_list(SP,op_search_keys)) ->

State 58:
## Known stack suffix:
## UNSEEN
## LR(1) items:
search_key -> UNSEEN . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNSEEN

State 59:
## Known stack suffix:
## UNKEYWORD
## LR(1) items:
search_key -> UNKEYWORD . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## UNKEYWORD SP
## LR(1) items:
search_key -> UNKEYWORD SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## UNKEYWORD SP ATOM_CHARS
## LR(1) items:
search_key -> UNKEYWORD SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNKEYWORD SP ATOM_CHARS

State 62:
## Known stack suffix:
## UNFLAGGED
## LR(1) items:
search_key -> UNFLAGGED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNFLAGGED

State 63:
## Known stack suffix:
## UNDRAFT
## LR(1) items:
search_key -> UNDRAFT . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNDRAFT

State 64:
## Known stack suffix:
## UNDELETED
## LR(1) items:
search_key -> UNDELETED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNDELETED

State 65:
## Known stack suffix:
## UNANSWERED
## LR(1) items:
search_key -> UNANSWERED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UNANSWERED

State 66:
## Known stack suffix:
## UID
## LR(1) items:
search_key -> UID . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## UID SP
## LR(1) items:
search_key -> UID SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## UID SP ATOM_CHARS
## LR(1) items:
search_key -> UID SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> UID SP ATOM_CHARS

State 69:
## Known stack suffix:
## TO
## LR(1) items:
search_key -> TO . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## TO SP
## LR(1) items:
search_key -> TO SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## TO SP ATOM_CHARS
## LR(1) items:
search_key -> TO SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> TO SP ATOM_CHARS

State 72:
## Known stack suffix:
## TEXT
## LR(1) items:
search_key -> TEXT . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## TEXT SP
## LR(1) items:
search_key -> TEXT SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## TEXT SP ATOM_CHARS
## LR(1) items:
search_key -> TEXT SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> TEXT SP ATOM_CHARS

State 75:
## Known stack suffix:
## SUBJECT
## LR(1) items:
search_key -> SUBJECT . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## SUBJECT SP
## LR(1) items:
search_key -> SUBJECT SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## SUBJECT SP ATOM_CHARS
## LR(1) items:
search_key -> SUBJECT SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SUBJECT SP ATOM_CHARS

State 78:
## Known stack suffix:
## SMALLER
## LR(1) items:
search_key -> SMALLER . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## SMALLER SP
## LR(1) items:
search_key -> SMALLER SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## SMALLER SP ATOM_CHARS
## LR(1) items:
search_key -> SMALLER SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SMALLER SP ATOM_CHARS

State 81:
## Known stack suffix:
## SINCE
## LR(1) items:
search_key -> SINCE . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## SINCE SP
## LR(1) items:
search_key -> SINCE SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 84
-- On quoted shift to state 85
## Reductions:

State 83:
## Known stack suffix:
## ATOM_CHARS
## LR(1) items:
s_date -> ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production s_date -> ATOM_CHARS

State 84:
## Known stack suffix:
## SINCE SP s_date
## LR(1) items:
search_key -> SINCE SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SINCE SP s_date

State 85:
## Known stack suffix:
## quoted
## LR(1) items:
s_date -> quoted . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production s_date -> quoted

State 86:
## Known stack suffix:
## SENTSINCE
## LR(1) items:
search_key -> SENTSINCE . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## SENTSINCE SP
## LR(1) items:
search_key -> SENTSINCE SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 88
-- On quoted shift to state 85
## Reductions:

State 88:
## Known stack suffix:
## SENTSINCE SP s_date
## LR(1) items:
search_key -> SENTSINCE SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SENTSINCE SP s_date

State 89:
## Known stack suffix:
## SENTON
## LR(1) items:
search_key -> SENTON . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## SENTON SP
## LR(1) items:
search_key -> SENTON SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 91
-- On quoted shift to state 85
## Reductions:

State 91:
## Known stack suffix:
## SENTON SP s_date
## LR(1) items:
search_key -> SENTON SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SENTON SP s_date

State 92:
## Known stack suffix:
## SENTBEFORE
## LR(1) items:
search_key -> SENTBEFORE . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## SENTBEFORE SP
## LR(1) items:
search_key -> SENTBEFORE SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 94
-- On quoted shift to state 85
## Reductions:

State 94:
## Known stack suffix:
## SENTBEFORE SP s_date
## LR(1) items:
search_key -> SENTBEFORE SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SENTBEFORE SP s_date

State 95:
## Known stack suffix:
## SEEN
## LR(1) items:
search_key -> SEEN . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> SEEN

State 96:
## Known stack suffix:
## RECENT
## LR(1) items:
search_key -> RECENT . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> RECENT

State 97:
## Known stack suffix:
## OR
## LR(1) items:
op_search_keys -> OR . SP op_search_keys SP op_search_keys [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## OR SP
## LR(1) items:
op_search_keys -> OR SP . op_search_keys SP op_search_keys [ SP RP CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 164
-- On op_search_key shift to state 159
-- On modseq shift to state 160
## Reductions:

State 99:
## Known stack suffix:
## ON
## LR(1) items:
search_key -> ON . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## ON SP
## LR(1) items:
search_key -> ON SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 101
-- On quoted shift to state 85
## Reductions:

State 101:
## Known stack suffix:
## ON SP s_date
## LR(1) items:
search_key -> ON SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> ON SP s_date

State 102:
## Known stack suffix:
## OLD
## LR(1) items:
search_key -> OLD . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> OLD

State 103:
## Known stack suffix:
## NOT
## LR(1) items:
op_search_keys -> NOT . SP op_search_keys [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## NOT SP
## LR(1) items:
op_search_keys -> NOT SP . op_search_keys [ SP RP CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 163
-- On op_search_key shift to state 159
-- On modseq shift to state 160
## Reductions:

State 105:
## Known stack suffix:
## NEW
## LR(1) items:
search_key -> NEW . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> NEW

State 106:
## Known stack suffix:
## MODSEQ
## LR(1) items:
modseq -> MODSEQ . SP ATOM_CHARS [ SP RP CRLF ]
modseq -> MODSEQ . SP astring SP modseq_entry_type SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## MODSEQ SP
## LR(1) items:
modseq -> MODSEQ SP . ATOM_CHARS [ SP RP CRLF ]
modseq -> MODSEQ SP . astring SP modseq_entry_type SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 108
-- On quoted shift to state 109
-- On astring shift to state 110
## Reductions:

State 108:
## Known stack suffix:
## MODSEQ SP ATOM_CHARS
## LR(1) items:
astring -> ATOM_CHARS . [ SP ]
modseq -> MODSEQ SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP
--   reduce production astring -> ATOM_CHARS
-- On SP RP CRLF
--   reduce production modseq -> MODSEQ SP ATOM_CHARS
** Conflict on SP

State 109:
## Known stack suffix:
## quoted
## LR(1) items:
astring -> quoted . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production astring -> quoted

State 110:
## Known stack suffix:
## MODSEQ SP astring
## LR(1) items:
modseq -> MODSEQ SP astring . SP modseq_entry_type SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## MODSEQ SP astring SP
## LR(1) items:
modseq -> MODSEQ SP astring SP . modseq_entry_type SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SHARED shift to state 112
-- On PRIV shift to state 113
-- On ALL shift to state 114
-- On modseq_entry_type shift to state 115
## Reductions:

State 112:
## Known stack suffix:
## SHARED
## LR(1) items:
modseq_entry_type -> SHARED . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production modseq_entry_type -> SHARED

State 113:
## Known stack suffix:
## PRIV
## LR(1) items:
modseq_entry_type -> PRIV . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production modseq_entry_type -> PRIV

State 114:
## Known stack suffix:
## ALL
## LR(1) items:
modseq_entry_type -> ALL . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production modseq_entry_type -> ALL

State 115:
## Known stack suffix:
## MODSEQ SP astring SP modseq_entry_type
## LR(1) items:
modseq -> MODSEQ SP astring SP modseq_entry_type . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## MODSEQ SP astring SP modseq_entry_type SP
## LR(1) items:
modseq -> MODSEQ SP astring SP modseq_entry_type SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## MODSEQ SP astring SP modseq_entry_type SP ATOM_CHARS
## LR(1) items:
modseq -> MODSEQ SP astring SP modseq_entry_type SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production modseq -> MODSEQ SP astring SP modseq_entry_type SP ATOM_CHARS

State 118:
## Known stack suffix:
## LP
## LR(1) items:
op_search_keys -> LP . loption(separated_nonempty_list(SP,op_search_keys)) RP [ SP RP CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On separated_nonempty_list(SP,op_search_keys) shift to state 153
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 156
-- On op_search_key shift to state 159
-- On modseq shift to state 160
-- On loption(separated_nonempty_list(SP,op_search_keys)) shift to state 161
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,op_search_keys)) ->

State 119:
## Known stack suffix:
## LARGER
## LR(1) items:
search_key -> LARGER . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## LARGER SP
## LR(1) items:
search_key -> LARGER SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## LARGER SP ATOM_CHARS
## LR(1) items:
search_key -> LARGER SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> LARGER SP ATOM_CHARS

State 122:
## Known stack suffix:
## KEYWORD
## LR(1) items:
search_key -> KEYWORD . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## KEYWORD ATOM_CHARS
## LR(1) items:
search_key -> KEYWORD ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> KEYWORD ATOM_CHARS

State 124:
## Known stack suffix:
## HEADER
## LR(1) items:
s_header -> HEADER . SP SUBJECT SP ATOM_CHARS [ SP RP CRLF ]
s_header -> HEADER . SP ATOM_CHARS SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## HEADER SP
## LR(1) items:
s_header -> HEADER SP . SUBJECT SP ATOM_CHARS [ SP RP CRLF ]
s_header -> HEADER SP . ATOM_CHARS SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SUBJECT shift to state 126
-- On ATOM_CHARS shift to state 129
## Reductions:

State 126:
## Known stack suffix:
## HEADER SP SUBJECT
## LR(1) items:
s_header -> HEADER SP SUBJECT . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## HEADER SP SUBJECT SP
## LR(1) items:
s_header -> HEADER SP SUBJECT SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 128
## Reductions:

State 128:
## Known stack suffix:
## HEADER SP SUBJECT SP ATOM_CHARS
## LR(1) items:
s_header -> HEADER SP SUBJECT SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production s_header -> HEADER SP SUBJECT SP ATOM_CHARS

State 129:
## Known stack suffix:
## HEADER SP ATOM_CHARS
## LR(1) items:
s_header -> HEADER SP ATOM_CHARS . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## HEADER SP ATOM_CHARS SP
## LR(1) items:
s_header -> HEADER SP ATOM_CHARS SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 131
## Reductions:

State 131:
## Known stack suffix:
## HEADER SP ATOM_CHARS SP ATOM_CHARS
## LR(1) items:
s_header -> HEADER SP ATOM_CHARS SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production s_header -> HEADER SP ATOM_CHARS SP ATOM_CHARS

State 132:
## Known stack suffix:
## FROM
## LR(1) items:
search_key -> FROM . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## FROM SP
## LR(1) items:
search_key -> FROM SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## FROM SP ATOM_CHARS
## LR(1) items:
search_key -> FROM SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> FROM SP ATOM_CHARS

State 135:
## Known stack suffix:
## FLAGGED
## LR(1) items:
search_key -> FLAGGED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> FLAGGED

State 136:
## Known stack suffix:
## DRAFT
## LR(1) items:
search_key -> DRAFT . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> DRAFT

State 137:
## Known stack suffix:
## DELETED
## LR(1) items:
search_key -> DELETED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> DELETED

State 138:
## Known stack suffix:
## CC
## LR(1) items:
search_key -> CC . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## CC SP
## LR(1) items:
search_key -> CC SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## CC SP ATOM_CHARS
## LR(1) items:
search_key -> CC SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> CC SP ATOM_CHARS

State 141:
## Known stack suffix:
## BODY
## LR(1) items:
search_key -> BODY . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## BODY SP
## LR(1) items:
search_key -> BODY SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## BODY SP ATOM_CHARS
## LR(1) items:
search_key -> BODY SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> BODY SP ATOM_CHARS

State 144:
## Known stack suffix:
## BEFORE
## LR(1) items:
search_key -> BEFORE . SP s_date [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## BEFORE SP
## LR(1) items:
search_key -> BEFORE SP . s_date [ SP RP CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 83
-- On s_date shift to state 146
-- On quoted shift to state 85
## Reductions:

State 146:
## Known stack suffix:
## BEFORE SP s_date
## LR(1) items:
search_key -> BEFORE SP s_date . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> BEFORE SP s_date

State 147:
## Known stack suffix:
## BCC
## LR(1) items:
search_key -> BCC . SP ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## BCC SP
## LR(1) items:
search_key -> BCC SP . ATOM_CHARS [ SP RP CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## BCC SP ATOM_CHARS
## LR(1) items:
search_key -> BCC SP ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> BCC SP ATOM_CHARS

State 150:
## Known stack suffix:
## ATOM_CHARS
## LR(1) items:
search_key -> ATOM_CHARS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> ATOM_CHARS

State 151:
## Known stack suffix:
## ANSWERED
## LR(1) items:
search_key -> ANSWERED . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> ANSWERED

State 152:
## Known stack suffix:
## ALL
## LR(1) items:
search_key -> ALL . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> ALL

State 153:
## Known stack suffix:
## separated_nonempty_list(SP,op_search_keys)
## LR(1) items:
loption(separated_nonempty_list(SP,op_search_keys)) -> separated_nonempty_list(SP,op_search_keys) . [ RP CRLF ]
## Transitions:
## Reductions:
-- On RP CRLF
--   reduce production loption(separated_nonempty_list(SP,op_search_keys)) -> separated_nonempty_list(SP,op_search_keys)

State 154:
## Known stack suffix:
## search_key
## LR(1) items:
op_search_key -> search_key . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production op_search_key -> search_key

State 155:
## Known stack suffix:
## s_header
## LR(1) items:
search_key -> s_header . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> s_header

State 156:
## Known stack suffix:
## op_search_keys
## LR(1) items:
separated_nonempty_list(SP,op_search_keys) -> op_search_keys . [ RP CRLF ]
separated_nonempty_list(SP,op_search_keys) -> op_search_keys . SP separated_nonempty_list(SP,op_search_keys) [ RP CRLF ]
## Transitions:
-- On SP shift to state 157
## Reductions:
-- On RP CRLF
--   reduce production separated_nonempty_list(SP,op_search_keys) -> op_search_keys

State 157:
## Known stack suffix:
## op_search_keys SP
## LR(1) items:
separated_nonempty_list(SP,op_search_keys) -> op_search_keys SP . separated_nonempty_list(SP,op_search_keys) [ RP CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On separated_nonempty_list(SP,op_search_keys) shift to state 158
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 156
-- On op_search_key shift to state 159
-- On modseq shift to state 160
## Reductions:

State 158:
## Known stack suffix:
## op_search_keys SP separated_nonempty_list(SP,op_search_keys)
## LR(1) items:
separated_nonempty_list(SP,op_search_keys) -> op_search_keys SP separated_nonempty_list(SP,op_search_keys) . [ RP CRLF ]
## Transitions:
## Reductions:
-- On RP CRLF
--   reduce production separated_nonempty_list(SP,op_search_keys) -> op_search_keys SP separated_nonempty_list(SP,op_search_keys)

State 159:
## Known stack suffix:
## op_search_key
## LR(1) items:
op_search_keys -> op_search_key . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production op_search_keys -> op_search_key

State 160:
## Known stack suffix:
## modseq
## LR(1) items:
search_key -> modseq . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production search_key -> modseq

State 161:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,op_search_keys))
## LR(1) items:
op_search_keys -> LP loption(separated_nonempty_list(SP,op_search_keys)) . RP [ SP RP CRLF ]
## Transitions:
-- On RP shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,op_search_keys)) RP
## LR(1) items:
op_search_keys -> LP loption(separated_nonempty_list(SP,op_search_keys)) RP . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production op_search_keys -> LP loption(separated_nonempty_list(SP,op_search_keys)) RP

State 163:
## Known stack suffix:
## NOT SP op_search_keys
## LR(1) items:
op_search_keys -> NOT SP op_search_keys . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production op_search_keys -> NOT SP op_search_keys

State 164:
## Known stack suffix:
## OR SP op_search_keys
## LR(1) items:
op_search_keys -> OR SP op_search_keys . SP op_search_keys [ SP RP CRLF ]
## Transitions:
-- On SP shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## OR SP op_search_keys SP
## LR(1) items:
op_search_keys -> OR SP op_search_keys SP . op_search_keys [ SP RP CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 166
-- On op_search_key shift to state 159
-- On modseq shift to state 160
## Reductions:

State 166:
## Known stack suffix:
## OR SP op_search_keys SP op_search_keys
## LR(1) items:
op_search_keys -> OR SP op_search_keys SP op_search_keys . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production op_search_keys -> OR SP op_search_keys SP op_search_keys

State 167:
## Known stack suffix:
## UID SP SEARCH SP charset_sp search_keys
## LR(1) items:
c_search -> UID SP SEARCH SP charset_sp search_keys . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_search -> UID SP SEARCH SP charset_sp search_keys

State 168:
## Known stack suffix:
## loption(separated_nonempty_list(SP,op_search_keys))
## LR(1) items:
search_keys -> loption(separated_nonempty_list(SP,op_search_keys)) . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production search_keys -> loption(separated_nonempty_list(SP,op_search_keys))

State 169:
## Known stack suffix:
## charset
## LR(1) items:
charset_sp -> charset . SP [ UNSEEN UNKEYWORD UNFLAGGED UNDRAFT UNDELETED UNANSWERED UID TO TEXT SUBJECT SMALLER SINCE SENTSINCE SENTON SENTBEFORE SEEN RECENT OR ON OLD NOT NEW MODSEQ LP LARGER KEYWORD HEADER FROM FLAGGED DRAFT DELETED CRLF CC BODY BEFORE BCC ATOM_CHARS ANSWERED ALL ]
## Transitions:
-- On SP shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## charset SP
## LR(1) items:
charset_sp -> charset SP . [ UNSEEN UNKEYWORD UNFLAGGED UNDRAFT UNDELETED UNANSWERED UID TO TEXT SUBJECT SMALLER SINCE SENTSINCE SENTON SENTBEFORE SEEN RECENT OR ON OLD NOT NEW MODSEQ LP LARGER KEYWORD HEADER FROM FLAGGED DRAFT DELETED CRLF CC BODY BEFORE BCC ATOM_CHARS ANSWERED ALL ]
## Transitions:
## Reductions:
-- On UNSEEN UNKEYWORD UNFLAGGED UNDRAFT UNDELETED UNANSWERED UID TO TEXT SUBJECT SMALLER SINCE SENTSINCE SENTON SENTBEFORE SEEN RECENT OR ON OLD NOT NEW MODSEQ LP LARGER KEYWORD HEADER FROM FLAGGED DRAFT DELETED CRLF CC BODY BEFORE BCC ATOM_CHARS ANSWERED ALL
--   reduce production charset_sp -> charset SP

State 171:
## Known stack suffix:
## UID SP FETCH
## LR(1) items:
c_fetch -> UID SP FETCH . SP ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## UID SP FETCH SP
## LR(1) items:
c_fetch -> UID SP FETCH SP . ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## UID SP FETCH SP ATOM_CHARS
## LR(1) items:
c_fetch -> UID SP FETCH SP ATOM_CHARS . SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## UID SP FETCH SP ATOM_CHARS SP
## LR(1) items:
c_fetch -> UID SP FETCH SP ATOM_CHARS SP . fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On UID shift to state 175
-- On RFC822TEXT shift to state 176
-- On RFC822SIZE shift to state 177
-- On RFC822HEADER shift to state 178
-- On RFC822 shift to state 179
-- On MODSEQ shift to state 180
-- On LP shift to state 181
-- On INTERNALDATE shift to state 182
-- On FULL shift to state 195
-- On FLAGS shift to state 183
-- On FAST shift to state 196
-- On ENVELOPE shift to state 184
-- On BODYSTRUCTURE shift to state 185
-- On BODYPEEK shift to state 186
-- On BODYFETCH shift to state 187
-- On BODY shift to state 188
-- On ALL shift to state 197
-- On fetch_macro shift to state 198
-- On fetch_att_list shift to state 199
-- On fetch_att shift to state 200
-- On fetch_args shift to state 201
## Reductions:

State 175:
## Known stack suffix:
## UID
## LR(1) items:
fetch_att -> UID . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> UID

State 176:
## Known stack suffix:
## RFC822TEXT
## LR(1) items:
fetch_att -> RFC822TEXT . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> RFC822TEXT

State 177:
## Known stack suffix:
## RFC822SIZE
## LR(1) items:
fetch_att -> RFC822SIZE . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> RFC822SIZE

State 178:
## Known stack suffix:
## RFC822HEADER
## LR(1) items:
fetch_att -> RFC822HEADER . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> RFC822HEADER

State 179:
## Known stack suffix:
## RFC822
## LR(1) items:
fetch_att -> RFC822 . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> RFC822

State 180:
## Known stack suffix:
## MODSEQ
## LR(1) items:
fetch_att -> MODSEQ . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> MODSEQ

State 181:
## Known stack suffix:
## LP
## LR(1) items:
fetch_att_list -> LP . loption(separated_nonempty_list(SP,fetch_att)) RP [ SP CRLF ]
## Transitions:
-- On UID shift to state 175
-- On RFC822TEXT shift to state 176
-- On RFC822SIZE shift to state 177
-- On RFC822HEADER shift to state 178
-- On RFC822 shift to state 179
-- On MODSEQ shift to state 180
-- On INTERNALDATE shift to state 182
-- On FLAGS shift to state 183
-- On ENVELOPE shift to state 184
-- On BODYSTRUCTURE shift to state 185
-- On BODYPEEK shift to state 186
-- On BODYFETCH shift to state 187
-- On BODY shift to state 188
-- On separated_nonempty_list(SP,fetch_att) shift to state 189
-- On loption(separated_nonempty_list(SP,fetch_att)) shift to state 190
-- On fetch_att shift to state 192
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,fetch_att)) ->

State 182:
## Known stack suffix:
## INTERNALDATE
## LR(1) items:
fetch_att -> INTERNALDATE . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> INTERNALDATE

State 183:
## Known stack suffix:
## FLAGS
## LR(1) items:
fetch_att -> FLAGS . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> FLAGS

State 184:
## Known stack suffix:
## ENVELOPE
## LR(1) items:
fetch_att -> ENVELOPE . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> ENVELOPE

State 185:
## Known stack suffix:
## BODYSTRUCTURE
## LR(1) items:
fetch_att -> BODYSTRUCTURE . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> BODYSTRUCTURE

State 186:
## Known stack suffix:
## BODYPEEK
## LR(1) items:
fetch_att -> BODYPEEK . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> BODYPEEK

State 187:
## Known stack suffix:
## BODYFETCH
## LR(1) items:
fetch_att -> BODYFETCH . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> BODYFETCH

State 188:
## Known stack suffix:
## BODY
## LR(1) items:
fetch_att -> BODY . [ SP RP CRLF ]
## Transitions:
## Reductions:
-- On SP RP CRLF
--   reduce production fetch_att -> BODY

State 189:
## Known stack suffix:
## separated_nonempty_list(SP,fetch_att)
## LR(1) items:
loption(separated_nonempty_list(SP,fetch_att)) -> separated_nonempty_list(SP,fetch_att) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,fetch_att)) -> separated_nonempty_list(SP,fetch_att)

State 190:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,fetch_att))
## LR(1) items:
fetch_att_list -> LP loption(separated_nonempty_list(SP,fetch_att)) . RP [ SP CRLF ]
## Transitions:
-- On RP shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,fetch_att)) RP
## LR(1) items:
fetch_att_list -> LP loption(separated_nonempty_list(SP,fetch_att)) RP . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_att_list -> LP loption(separated_nonempty_list(SP,fetch_att)) RP

State 192:
## Known stack suffix:
## fetch_att
## LR(1) items:
separated_nonempty_list(SP,fetch_att) -> fetch_att . [ RP ]
separated_nonempty_list(SP,fetch_att) -> fetch_att . SP separated_nonempty_list(SP,fetch_att) [ RP ]
## Transitions:
-- On SP shift to state 193
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,fetch_att) -> fetch_att

State 193:
## Known stack suffix:
## fetch_att SP
## LR(1) items:
separated_nonempty_list(SP,fetch_att) -> fetch_att SP . separated_nonempty_list(SP,fetch_att) [ RP ]
## Transitions:
-- On UID shift to state 175
-- On RFC822TEXT shift to state 176
-- On RFC822SIZE shift to state 177
-- On RFC822HEADER shift to state 178
-- On RFC822 shift to state 179
-- On MODSEQ shift to state 180
-- On INTERNALDATE shift to state 182
-- On FLAGS shift to state 183
-- On ENVELOPE shift to state 184
-- On BODYSTRUCTURE shift to state 185
-- On BODYPEEK shift to state 186
-- On BODYFETCH shift to state 187
-- On BODY shift to state 188
-- On separated_nonempty_list(SP,fetch_att) shift to state 194
-- On fetch_att shift to state 192
## Reductions:

State 194:
## Known stack suffix:
## fetch_att SP separated_nonempty_list(SP,fetch_att)
## LR(1) items:
separated_nonempty_list(SP,fetch_att) -> fetch_att SP separated_nonempty_list(SP,fetch_att) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,fetch_att) -> fetch_att SP separated_nonempty_list(SP,fetch_att)

State 195:
## Known stack suffix:
## FULL
## LR(1) items:
fetch_macro -> FULL . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_macro -> FULL

State 196:
## Known stack suffix:
## FAST
## LR(1) items:
fetch_macro -> FAST . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_macro -> FAST

State 197:
## Known stack suffix:
## ALL
## LR(1) items:
fetch_macro -> ALL . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_macro -> ALL

State 198:
## Known stack suffix:
## fetch_macro
## LR(1) items:
fetch_args -> fetch_macro . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_args -> fetch_macro

State 199:
## Known stack suffix:
## fetch_att_list
## LR(1) items:
fetch_args -> fetch_att_list . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_args -> fetch_att_list

State 200:
## Known stack suffix:
## fetch_att
## LR(1) items:
fetch_att_list -> fetch_att . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production fetch_att_list -> fetch_att

State 201:
## Known stack suffix:
## UID SP FETCH SP ATOM_CHARS SP fetch_args
## LR(1) items:
c_fetch -> UID SP FETCH SP ATOM_CHARS SP fetch_args . changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 202
-- On changedsince_sp shift to state 208
## Reductions:
-- On CRLF
--   reduce production changedsince_sp ->

State 202:
## Known stack suffix:
## SP
## LR(1) items:
changedsince_sp -> SP . LP CHANGEDSINCE SP ATOM_CHARS RP [ CRLF ]
## Transitions:
-- On LP shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## SP LP
## LR(1) items:
changedsince_sp -> SP LP . CHANGEDSINCE SP ATOM_CHARS RP [ CRLF ]
## Transitions:
-- On CHANGEDSINCE shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## SP LP CHANGEDSINCE
## LR(1) items:
changedsince_sp -> SP LP CHANGEDSINCE . SP ATOM_CHARS RP [ CRLF ]
## Transitions:
-- On SP shift to state 205
## Reductions:

State 205:
## Known stack suffix:
## SP LP CHANGEDSINCE SP
## LR(1) items:
changedsince_sp -> SP LP CHANGEDSINCE SP . ATOM_CHARS RP [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## SP LP CHANGEDSINCE SP ATOM_CHARS
## LR(1) items:
changedsince_sp -> SP LP CHANGEDSINCE SP ATOM_CHARS . RP [ CRLF ]
## Transitions:
-- On RP shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## SP LP CHANGEDSINCE SP ATOM_CHARS RP
## LR(1) items:
changedsince_sp -> SP LP CHANGEDSINCE SP ATOM_CHARS RP . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production changedsince_sp -> SP LP CHANGEDSINCE SP ATOM_CHARS RP

State 208:
## Known stack suffix:
## UID SP FETCH SP ATOM_CHARS SP fetch_args changedsince_sp
## LR(1) items:
c_fetch -> UID SP FETCH SP ATOM_CHARS SP fetch_args changedsince_sp . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_fetch -> UID SP FETCH SP ATOM_CHARS SP fetch_args changedsince_sp

State 209:
## Known stack suffix:
## UID SP COPY
## LR(1) items:
c_copy -> UID SP COPY . SP ATOM_CHARS SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## UID SP COPY SP
## LR(1) items:
c_copy -> UID SP COPY SP . ATOM_CHARS SP mailbox [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## UID SP COPY SP ATOM_CHARS
## LR(1) items:
c_copy -> UID SP COPY SP ATOM_CHARS . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 212
## Reductions:

State 212:
## Known stack suffix:
## UID SP COPY SP ATOM_CHARS SP
## LR(1) items:
c_copy -> UID SP COPY SP ATOM_CHARS SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## UID SP COPY SP ATOM_CHARS SP mailbox
## LR(1) items:
c_copy -> UID SP COPY SP ATOM_CHARS SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_copy -> UID SP COPY SP ATOM_CHARS SP mailbox

State 214:
## Known stack suffix:
## SUBSCRIBE
## LR(1) items:
c_subscribe -> SUBSCRIBE . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## SUBSCRIBE SP
## LR(1) items:
c_subscribe -> SUBSCRIBE SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## SUBSCRIBE SP mailbox
## LR(1) items:
c_subscribe -> SUBSCRIBE SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_subscribe -> SUBSCRIBE SP mailbox

State 217:
## Known stack suffix:
## STORE
## LR(1) items:
c_store -> STORE . SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 218
## Reductions:

State 218:
## Known stack suffix:
## STORE SP
## LR(1) items:
c_store -> STORE SP . ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## STORE SP ATOM_CHARS
## LR(1) items:
c_store -> STORE SP ATOM_CHARS . SP unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## STORE SP ATOM_CHARS SP
## LR(1) items:
c_store -> STORE SP ATOM_CHARS SP . unchangedsince_sp s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On LP shift to state 19
-- On unchangedsince_sp shift to state 221
## Reductions:
-- On FLAGSSILENTPL FLAGSSILENTMIN FLAGSSILENT FLAGSPL FLAGSMIN FLAGS
--   reduce production unchangedsince_sp ->

State 221:
## Known stack suffix:
## STORE SP ATOM_CHARS SP unchangedsince_sp
## LR(1) items:
c_store -> STORE SP ATOM_CHARS SP unchangedsince_sp . s_flags SP s_flags_value [ CRLF ]
## Transitions:
-- On FLAGSSILENTPL shift to state 26
-- On FLAGSSILENTMIN shift to state 27
-- On FLAGSSILENT shift to state 28
-- On FLAGSPL shift to state 29
-- On FLAGSMIN shift to state 30
-- On FLAGS shift to state 31
-- On s_flags shift to state 222
## Reductions:

State 222:
## Known stack suffix:
## STORE SP ATOM_CHARS SP unchangedsince_sp s_flags
## LR(1) items:
c_store -> STORE SP ATOM_CHARS SP unchangedsince_sp s_flags . SP s_flags_value [ CRLF ]
## Transitions:
-- On SP shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP
## LR(1) items:
c_store -> STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP . s_flags_value [ CRLF ]
## Transitions:
-- On LP shift to state 34
-- On FLSEEN shift to state 35
-- On FLFLAGGED shift to state 36
-- On FLEXTENSION shift to state 37
-- On FLDRAFT shift to state 38
-- On FLDELETED shift to state 39
-- On FLANSWERED shift to state 40
-- On ATOM_CHARS shift to state 41
-- On separated_nonempty_list(SP,flag) shift to state 42
-- On s_flags_value shift to state 224
-- On loption(separated_nonempty_list(SP,flag)) shift to state 43
-- On flag_sp_list shift to state 50
-- On flag_list shift to state 51
-- On flag shift to state 46
## Reductions:
-- On CRLF
--   reduce production loption(separated_nonempty_list(SP,flag)) ->

State 224:
## Known stack suffix:
## STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value
## LR(1) items:
c_store -> STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_store -> STORE SP ATOM_CHARS SP unchangedsince_sp s_flags SP s_flags_value

State 225:
## Known stack suffix:
## STATUS
## LR(1) items:
c_status -> STATUS . SP mailbox SP status_list [ CRLF ]
## Transitions:
-- On SP shift to state 226
## Reductions:

State 226:
## Known stack suffix:
## STATUS SP
## LR(1) items:
c_status -> STATUS SP . mailbox SP status_list [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## STATUS SP mailbox
## LR(1) items:
c_status -> STATUS SP mailbox . SP status_list [ CRLF ]
## Transitions:
-- On SP shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## STATUS SP mailbox SP
## LR(1) items:
c_status -> STATUS SP mailbox SP . status_list [ CRLF ]
## Transitions:
-- On LP shift to state 229
-- On status_list shift to state 242
## Reductions:

State 229:
## Known stack suffix:
## LP
## LR(1) items:
status_list -> LP . loption(separated_nonempty_list(SP,status_att)) RP [ CRLF ]
## Transitions:
-- On UNSEEN shift to state 230
-- On UIDVALIDITY shift to state 231
-- On UIDNEXT shift to state 232
-- On RECENT shift to state 233
-- On MESSAGES shift to state 234
-- On HIGHESTMODSEQ shift to state 235
-- On status_att shift to state 236
-- On separated_nonempty_list(SP,status_att) shift to state 239
-- On loption(separated_nonempty_list(SP,status_att)) shift to state 240
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,status_att)) ->

State 230:
## Known stack suffix:
## UNSEEN
## LR(1) items:
status_att -> UNSEEN . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> UNSEEN

State 231:
## Known stack suffix:
## UIDVALIDITY
## LR(1) items:
status_att -> UIDVALIDITY . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> UIDVALIDITY

State 232:
## Known stack suffix:
## UIDNEXT
## LR(1) items:
status_att -> UIDNEXT . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> UIDNEXT

State 233:
## Known stack suffix:
## RECENT
## LR(1) items:
status_att -> RECENT . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> RECENT

State 234:
## Known stack suffix:
## MESSAGES
## LR(1) items:
status_att -> MESSAGES . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> MESSAGES

State 235:
## Known stack suffix:
## HIGHESTMODSEQ
## LR(1) items:
status_att -> HIGHESTMODSEQ . [ SP RP ]
## Transitions:
## Reductions:
-- On SP RP
--   reduce production status_att -> HIGHESTMODSEQ

State 236:
## Known stack suffix:
## status_att
## LR(1) items:
separated_nonempty_list(SP,status_att) -> status_att . [ RP ]
separated_nonempty_list(SP,status_att) -> status_att . SP separated_nonempty_list(SP,status_att) [ RP ]
## Transitions:
-- On SP shift to state 237
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,status_att) -> status_att

State 237:
## Known stack suffix:
## status_att SP
## LR(1) items:
separated_nonempty_list(SP,status_att) -> status_att SP . separated_nonempty_list(SP,status_att) [ RP ]
## Transitions:
-- On UNSEEN shift to state 230
-- On UIDVALIDITY shift to state 231
-- On UIDNEXT shift to state 232
-- On RECENT shift to state 233
-- On MESSAGES shift to state 234
-- On HIGHESTMODSEQ shift to state 235
-- On status_att shift to state 236
-- On separated_nonempty_list(SP,status_att) shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## status_att SP separated_nonempty_list(SP,status_att)
## LR(1) items:
separated_nonempty_list(SP,status_att) -> status_att SP separated_nonempty_list(SP,status_att) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,status_att) -> status_att SP separated_nonempty_list(SP,status_att)

State 239:
## Known stack suffix:
## separated_nonempty_list(SP,status_att)
## LR(1) items:
loption(separated_nonempty_list(SP,status_att)) -> separated_nonempty_list(SP,status_att) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,status_att)) -> separated_nonempty_list(SP,status_att)

State 240:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,status_att))
## LR(1) items:
status_list -> LP loption(separated_nonempty_list(SP,status_att)) . RP [ CRLF ]
## Transitions:
-- On RP shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## LP loption(separated_nonempty_list(SP,status_att)) RP
## LR(1) items:
status_list -> LP loption(separated_nonempty_list(SP,status_att)) RP . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production status_list -> LP loption(separated_nonempty_list(SP,status_att)) RP

State 242:
## Known stack suffix:
## STATUS SP mailbox SP status_list
## LR(1) items:
c_status -> STATUS SP mailbox SP status_list . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_status -> STATUS SP mailbox SP status_list

State 243:
## Known stack suffix:
## STARTTLS
## LR(1) items:
command_notauth -> STARTTLS . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_notauth -> STARTTLS

State 244:
## Known stack suffix:
## SELECT
## LR(1) items:
c_select -> SELECT . SP mailbox e_condstore [ CRLF ]
## Transitions:
-- On SP shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## SELECT SP
## LR(1) items:
c_select -> SELECT SP . mailbox e_condstore [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## SELECT SP mailbox
## LR(1) items:
c_select -> SELECT SP mailbox . e_condstore [ CRLF ]
## Transitions:
-- On SP shift to state 247
-- On e_condstore shift to state 251
## Reductions:
-- On CRLF
--   reduce production e_condstore ->

State 247:
## Known stack suffix:
## SP
## LR(1) items:
e_condstore -> SP . LP CONDSTORE RP [ CRLF ]
## Transitions:
-- On LP shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## SP LP
## LR(1) items:
e_condstore -> SP LP . CONDSTORE RP [ CRLF ]
## Transitions:
-- On CONDSTORE shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## SP LP CONDSTORE
## LR(1) items:
e_condstore -> SP LP CONDSTORE . RP [ CRLF ]
## Transitions:
-- On RP shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## SP LP CONDSTORE RP
## LR(1) items:
e_condstore -> SP LP CONDSTORE RP . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production e_condstore -> SP LP CONDSTORE RP

State 251:
## Known stack suffix:
## SELECT SP mailbox e_condstore
## LR(1) items:
c_select -> SELECT SP mailbox e_condstore . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_select -> SELECT SP mailbox e_condstore

State 252:
## Known stack suffix:
## SEARCH
## LR(1) items:
c_search -> SEARCH . SP charset_sp search_keys [ CRLF ]
## Transitions:
-- On SP shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## SEARCH SP
## LR(1) items:
c_search -> SEARCH SP . charset_sp search_keys [ CRLF ]
## Transitions:
-- On CHARSET shift to state 54
-- On charset_sp shift to state 254
-- On charset shift to state 169
## Reductions:
-- On UNSEEN UNKEYWORD UNFLAGGED UNDRAFT UNDELETED UNANSWERED UID TO TEXT SUBJECT SMALLER SINCE SENTSINCE SENTON SENTBEFORE SEEN RECENT OR ON OLD NOT NEW MODSEQ LP LARGER KEYWORD HEADER FROM FLAGGED DRAFT DELETED CRLF CC BODY BEFORE BCC ATOM_CHARS ANSWERED ALL
--   reduce production charset_sp ->

State 254:
## Known stack suffix:
## SEARCH SP charset_sp
## LR(1) items:
c_search -> SEARCH SP charset_sp . search_keys [ CRLF ]
## Transitions:
-- On UNSEEN shift to state 58
-- On UNKEYWORD shift to state 59
-- On UNFLAGGED shift to state 62
-- On UNDRAFT shift to state 63
-- On UNDELETED shift to state 64
-- On UNANSWERED shift to state 65
-- On UID shift to state 66
-- On TO shift to state 69
-- On TEXT shift to state 72
-- On SUBJECT shift to state 75
-- On SMALLER shift to state 78
-- On SINCE shift to state 81
-- On SENTSINCE shift to state 86
-- On SENTON shift to state 89
-- On SENTBEFORE shift to state 92
-- On SEEN shift to state 95
-- On RECENT shift to state 96
-- On OR shift to state 97
-- On ON shift to state 99
-- On OLD shift to state 102
-- On NOT shift to state 103
-- On NEW shift to state 105
-- On MODSEQ shift to state 106
-- On LP shift to state 118
-- On LARGER shift to state 119
-- On KEYWORD shift to state 122
-- On HEADER shift to state 124
-- On FROM shift to state 132
-- On FLAGGED shift to state 135
-- On DRAFT shift to state 136
-- On DELETED shift to state 137
-- On CC shift to state 138
-- On BODY shift to state 141
-- On BEFORE shift to state 144
-- On BCC shift to state 147
-- On ATOM_CHARS shift to state 150
-- On ANSWERED shift to state 151
-- On ALL shift to state 152
-- On separated_nonempty_list(SP,op_search_keys) shift to state 153
-- On search_keys shift to state 255
-- On search_key shift to state 154
-- On s_header shift to state 155
-- On op_search_keys shift to state 156
-- On op_search_key shift to state 159
-- On modseq shift to state 160
-- On loption(separated_nonempty_list(SP,op_search_keys)) shift to state 168
## Reductions:
-- On CRLF
--   reduce production loption(separated_nonempty_list(SP,op_search_keys)) ->

State 255:
## Known stack suffix:
## SEARCH SP charset_sp search_keys
## LR(1) items:
c_search -> SEARCH SP charset_sp search_keys . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_search -> SEARCH SP charset_sp search_keys

State 256:
## Known stack suffix:
## RENAME
## LR(1) items:
c_rename -> RENAME . SP mailbox SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## RENAME SP
## LR(1) items:
c_rename -> RENAME SP . mailbox SP mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## RENAME SP mailbox
## LR(1) items:
c_rename -> RENAME SP mailbox . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## RENAME SP mailbox SP
## LR(1) items:
c_rename -> RENAME SP mailbox SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## RENAME SP mailbox SP mailbox
## LR(1) items:
c_rename -> RENAME SP mailbox SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_rename -> RENAME SP mailbox SP mailbox

State 261:
## Known stack suffix:
## NOOP
## LR(1) items:
command_any -> NOOP . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_any -> NOOP

State 262:
## Known stack suffix:
## LSUB
## LR(1) items:
c_lsub -> LSUB . SP mailbox SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## LSUB SP
## LR(1) items:
c_lsub -> LSUB SP . mailbox SP mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## LSUB SP mailbox
## LR(1) items:
c_lsub -> LSUB SP mailbox . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## LSUB SP mailbox SP
## LR(1) items:
c_lsub -> LSUB SP mailbox SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## LSUB SP mailbox SP mailbox
## LR(1) items:
c_lsub -> LSUB SP mailbox SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_lsub -> LSUB SP mailbox SP mailbox

State 267:
## Known stack suffix:
## LOGOUT
## LR(1) items:
command_any -> LOGOUT . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_any -> LOGOUT

State 268:
## Known stack suffix:
## LOGIN
## LR(1) items:
login -> LOGIN . SP user SP password [ CRLF ]
## Transitions:
-- On SP shift to state 269
## Reductions:

State 269:
## Known stack suffix:
## LOGIN SP
## LR(1) items:
login -> LOGIN SP . user SP password [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 270
-- On user shift to state 271
-- On quoted shift to state 109
-- On astring shift to state 275
## Reductions:

State 270:
## Known stack suffix:
## ATOM_CHARS
## LR(1) items:
astring -> ATOM_CHARS . [ SP CRLF ]
## Transitions:
## Reductions:
-- On SP CRLF
--   reduce production astring -> ATOM_CHARS

State 271:
## Known stack suffix:
## LOGIN SP user
## LR(1) items:
login -> LOGIN SP user . SP password [ CRLF ]
## Transitions:
-- On SP shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## LOGIN SP user SP
## LR(1) items:
login -> LOGIN SP user SP . password [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 270
-- On quoted shift to state 109
-- On password shift to state 273
-- On astring shift to state 274
## Reductions:

State 273:
## Known stack suffix:
## LOGIN SP user SP password
## LR(1) items:
login -> LOGIN SP user SP password . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production login -> LOGIN SP user SP password

State 274:
## Known stack suffix:
## astring
## LR(1) items:
password -> astring . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production password -> astring

State 275:
## Known stack suffix:
## astring
## LR(1) items:
user -> astring . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production user -> astring

State 276:
## Known stack suffix:
## LIST
## LR(1) items:
c_list -> LIST . SP mailbox SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 277
## Reductions:

State 277:
## Known stack suffix:
## LIST SP
## LR(1) items:
c_list -> LIST SP . mailbox SP mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## LIST SP mailbox
## LR(1) items:
c_list -> LIST SP mailbox . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## LIST SP mailbox SP
## LR(1) items:
c_list -> LIST SP mailbox SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## LIST SP mailbox SP mailbox
## LR(1) items:
c_list -> LIST SP mailbox SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_list -> LIST SP mailbox SP mailbox

State 281:
## Known stack suffix:
## LAPPEND
## LR(1) items:
c_lappend -> LAPPEND . SP user SP mailbox SP literal [ CRLF ]
## Transitions:
-- On SP shift to state 282
## Reductions:

State 282:
## Known stack suffix:
## LAPPEND SP
## LR(1) items:
c_lappend -> LAPPEND SP . user SP mailbox SP literal [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 270
-- On user shift to state 283
-- On quoted shift to state 109
-- On astring shift to state 275
## Reductions:

State 283:
## Known stack suffix:
## LAPPEND SP user
## LR(1) items:
c_lappend -> LAPPEND SP user . SP mailbox SP literal [ CRLF ]
## Transitions:
-- On SP shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## LAPPEND SP user SP
## LR(1) items:
c_lappend -> LAPPEND SP user SP . mailbox SP literal [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## LAPPEND SP user SP mailbox
## LR(1) items:
c_lappend -> LAPPEND SP user SP mailbox . SP literal [ CRLF ]
## Transitions:
-- On SP shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## LAPPEND SP user SP mailbox SP
## LR(1) items:
c_lappend -> LAPPEND SP user SP mailbox SP . literal [ CRLF ]
## Transitions:
-- On LITERALPL shift to state 287
-- On LITERAL shift to state 288
-- On literal shift to state 289
## Reductions:

State 287:
## Known stack suffix:
## LITERALPL
## LR(1) items:
literal -> LITERALPL . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production literal -> LITERALPL

State 288:
## Known stack suffix:
## LITERAL
## LR(1) items:
literal -> LITERAL . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production literal -> LITERAL

State 289:
## Known stack suffix:
## LAPPEND SP user SP mailbox SP literal
## LR(1) items:
c_lappend -> LAPPEND SP user SP mailbox SP literal . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_lappend -> LAPPEND SP user SP mailbox SP literal

State 290:
## Known stack suffix:
## IDLE
## LR(1) items:
c_idle -> IDLE . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_idle -> IDLE

State 291:
## Known stack suffix:
## ID
## LR(1) items:
id -> ID . SP LP list_of_quoted_string RP [ CRLF ]
## Transitions:
-- On SP shift to state 292
## Reductions:

State 292:
## Known stack suffix:
## ID SP
## LR(1) items:
id -> ID SP . LP list_of_quoted_string RP [ CRLF ]
## Transitions:
-- On LP shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## ID SP LP
## LR(1) items:
id -> ID SP LP . list_of_quoted_string RP [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On separated_nonempty_list(SP,quoted) shift to state 294
-- On quoted shift to state 295
-- On loption(separated_nonempty_list(SP,quoted)) shift to state 298
-- On list_of_quoted_string shift to state 299
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,quoted)) ->

State 294:
## Known stack suffix:
## separated_nonempty_list(SP,quoted)
## LR(1) items:
loption(separated_nonempty_list(SP,quoted)) -> separated_nonempty_list(SP,quoted) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production loption(separated_nonempty_list(SP,quoted)) -> separated_nonempty_list(SP,quoted)

State 295:
## Known stack suffix:
## quoted
## LR(1) items:
separated_nonempty_list(SP,quoted) -> quoted . [ RP ]
separated_nonempty_list(SP,quoted) -> quoted . SP separated_nonempty_list(SP,quoted) [ RP ]
## Transitions:
-- On SP shift to state 296
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,quoted) -> quoted

State 296:
## Known stack suffix:
## quoted SP
## LR(1) items:
separated_nonempty_list(SP,quoted) -> quoted SP . separated_nonempty_list(SP,quoted) [ RP ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On separated_nonempty_list(SP,quoted) shift to state 297
-- On quoted shift to state 295
## Reductions:

State 297:
## Known stack suffix:
## quoted SP separated_nonempty_list(SP,quoted)
## LR(1) items:
separated_nonempty_list(SP,quoted) -> quoted SP separated_nonempty_list(SP,quoted) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production separated_nonempty_list(SP,quoted) -> quoted SP separated_nonempty_list(SP,quoted)

State 298:
## Known stack suffix:
## loption(separated_nonempty_list(SP,quoted))
## LR(1) items:
list_of_quoted_string -> loption(separated_nonempty_list(SP,quoted)) . [ RP ]
## Transitions:
## Reductions:
-- On RP
--   reduce production list_of_quoted_string -> loption(separated_nonempty_list(SP,quoted))

State 299:
## Known stack suffix:
## ID SP LP list_of_quoted_string
## LR(1) items:
id -> ID SP LP list_of_quoted_string . RP [ CRLF ]
## Transitions:
-- On RP shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## ID SP LP list_of_quoted_string RP
## LR(1) items:
id -> ID SP LP list_of_quoted_string RP . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production id -> ID SP LP list_of_quoted_string RP

State 301:
## Known stack suffix:
## FETCH
## LR(1) items:
c_fetch -> FETCH . SP ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 302
## Reductions:

State 302:
## Known stack suffix:
## FETCH SP
## LR(1) items:
c_fetch -> FETCH SP . ATOM_CHARS SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## FETCH SP ATOM_CHARS
## LR(1) items:
c_fetch -> FETCH SP ATOM_CHARS . SP fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 304
## Reductions:

State 304:
## Known stack suffix:
## FETCH SP ATOM_CHARS SP
## LR(1) items:
c_fetch -> FETCH SP ATOM_CHARS SP . fetch_args changedsince_sp [ CRLF ]
## Transitions:
-- On UID shift to state 175
-- On RFC822TEXT shift to state 176
-- On RFC822SIZE shift to state 177
-- On RFC822HEADER shift to state 178
-- On RFC822 shift to state 179
-- On MODSEQ shift to state 180
-- On LP shift to state 181
-- On INTERNALDATE shift to state 182
-- On FULL shift to state 195
-- On FLAGS shift to state 183
-- On FAST shift to state 196
-- On ENVELOPE shift to state 184
-- On BODYSTRUCTURE shift to state 185
-- On BODYPEEK shift to state 186
-- On BODYFETCH shift to state 187
-- On BODY shift to state 188
-- On ALL shift to state 197
-- On fetch_macro shift to state 198
-- On fetch_att_list shift to state 199
-- On fetch_att shift to state 200
-- On fetch_args shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## FETCH SP ATOM_CHARS SP fetch_args
## LR(1) items:
c_fetch -> FETCH SP ATOM_CHARS SP fetch_args . changedsince_sp [ CRLF ]
## Transitions:
-- On SP shift to state 202
-- On changedsince_sp shift to state 306
## Reductions:
-- On CRLF
--   reduce production changedsince_sp ->

State 306:
## Known stack suffix:
## FETCH SP ATOM_CHARS SP fetch_args changedsince_sp
## LR(1) items:
c_fetch -> FETCH SP ATOM_CHARS SP fetch_args changedsince_sp . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_fetch -> FETCH SP ATOM_CHARS SP fetch_args changedsince_sp

State 307:
## Known stack suffix:
## EXPUNGE
## LR(1) items:
command_select -> EXPUNGE . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> EXPUNGE

State 308:
## Known stack suffix:
## EXAMINE
## LR(1) items:
c_examine -> EXAMINE . SP mailbox e_condstore [ CRLF ]
## Transitions:
-- On SP shift to state 309
## Reductions:

State 309:
## Known stack suffix:
## EXAMINE SP
## LR(1) items:
c_examine -> EXAMINE SP . mailbox e_condstore [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 310
## Reductions:

State 310:
## Known stack suffix:
## EXAMINE SP mailbox
## LR(1) items:
c_examine -> EXAMINE SP mailbox . e_condstore [ CRLF ]
## Transitions:
-- On SP shift to state 247
-- On e_condstore shift to state 311
## Reductions:
-- On CRLF
--   reduce production e_condstore ->

State 311:
## Known stack suffix:
## EXAMINE SP mailbox e_condstore
## LR(1) items:
c_examine -> EXAMINE SP mailbox e_condstore . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_examine -> EXAMINE SP mailbox e_condstore

State 312:
## Known stack suffix:
## ENABLE
## LR(1) items:
command_any -> ENABLE . SP astring [ CRLF ]
## Transitions:
-- On SP shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## ENABLE SP
## LR(1) items:
command_any -> ENABLE SP . astring [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On ATOM_CHARS shift to state 270
-- On quoted shift to state 109
-- On astring shift to state 314
## Reductions:

State 314:
## Known stack suffix:
## ENABLE SP astring
## LR(1) items:
command_any -> ENABLE SP astring . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_any -> ENABLE SP astring

State 315:
## Known stack suffix:
## DELETE
## LR(1) items:
c_delete -> DELETE . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 316
## Reductions:

State 316:
## Known stack suffix:
## DELETE SP
## LR(1) items:
c_delete -> DELETE SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 317
## Reductions:

State 317:
## Known stack suffix:
## DELETE SP mailbox
## LR(1) items:
c_delete -> DELETE SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_delete -> DELETE SP mailbox

State 318:
## Known stack suffix:
## CREATE
## LR(1) items:
c_create -> CREATE . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 319
## Reductions:

State 319:
## Known stack suffix:
## CREATE SP
## LR(1) items:
c_create -> CREATE SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 320
## Reductions:

State 320:
## Known stack suffix:
## CREATE SP mailbox
## LR(1) items:
c_create -> CREATE SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_create -> CREATE SP mailbox

State 321:
## Known stack suffix:
## COPY
## LR(1) items:
c_copy -> COPY . SP ATOM_CHARS SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 322
## Reductions:

State 322:
## Known stack suffix:
## COPY SP
## LR(1) items:
c_copy -> COPY SP . ATOM_CHARS SP mailbox [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 323
## Reductions:

State 323:
## Known stack suffix:
## COPY SP ATOM_CHARS
## LR(1) items:
c_copy -> COPY SP ATOM_CHARS . SP mailbox [ CRLF ]
## Transitions:
-- On SP shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## COPY SP ATOM_CHARS SP
## LR(1) items:
c_copy -> COPY SP ATOM_CHARS SP . mailbox [ CRLF ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## COPY SP ATOM_CHARS SP mailbox
## LR(1) items:
c_copy -> COPY SP ATOM_CHARS SP mailbox . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_copy -> COPY SP ATOM_CHARS SP mailbox

State 326:
## Known stack suffix:
## CLOSE
## LR(1) items:
command_select -> CLOSE . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> CLOSE

State 327:
## Known stack suffix:
## CHECK
## LR(1) items:
command_select -> CHECK . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> CHECK

State 328:
## Known stack suffix:
## CAPABILITY
## LR(1) items:
command_any -> CAPABILITY . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_any -> CAPABILITY

State 329:
## Known stack suffix:
## AUTHENTICATE
## LR(1) items:
authenticate -> AUTHENTICATE . SP auth_type SP ATOM_CHARS [ CRLF ]
## Transitions:
-- On SP shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## AUTHENTICATE SP
## LR(1) items:
authenticate -> AUTHENTICATE SP . auth_type SP ATOM_CHARS [ CRLF ]
## Transitions:
-- On SKEY shift to state 331
-- On PLAIN shift to state 332
-- On KERBEROS_V4 shift to state 333
-- On GSSAPI shift to state 334
-- On EXTERNAL shift to state 335
-- On auth_type shift to state 336
## Reductions:

State 331:
## Known stack suffix:
## SKEY
## LR(1) items:
auth_type -> SKEY . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production auth_type -> SKEY

State 332:
## Known stack suffix:
## PLAIN
## LR(1) items:
auth_type -> PLAIN . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production auth_type -> PLAIN

State 333:
## Known stack suffix:
## KERBEROS_V4
## LR(1) items:
auth_type -> KERBEROS_V4 . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production auth_type -> KERBEROS_V4

State 334:
## Known stack suffix:
## GSSAPI
## LR(1) items:
auth_type -> GSSAPI . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production auth_type -> GSSAPI

State 335:
## Known stack suffix:
## EXTERNAL
## LR(1) items:
auth_type -> EXTERNAL . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production auth_type -> EXTERNAL

State 336:
## Known stack suffix:
## AUTHENTICATE SP auth_type
## LR(1) items:
authenticate -> AUTHENTICATE SP auth_type . SP ATOM_CHARS [ CRLF ]
## Transitions:
-- On SP shift to state 337
## Reductions:

State 337:
## Known stack suffix:
## AUTHENTICATE SP auth_type SP
## LR(1) items:
authenticate -> AUTHENTICATE SP auth_type SP . ATOM_CHARS [ CRLF ]
## Transitions:
-- On ATOM_CHARS shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## AUTHENTICATE SP auth_type SP ATOM_CHARS
## LR(1) items:
authenticate -> AUTHENTICATE SP auth_type SP ATOM_CHARS . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production authenticate -> AUTHENTICATE SP auth_type SP ATOM_CHARS

State 339:
## Known stack suffix:
## APPEND
## LR(1) items:
append_cmd -> APPEND . SP mailbox [ SP ]
## Transitions:
-- On SP shift to state 340
## Reductions:

State 340:
## Known stack suffix:
## APPEND SP
## LR(1) items:
append_cmd -> APPEND SP . mailbox [ SP ]
## Transitions:
-- On QUOTED_STRING shift to state 8
-- On INBOX shift to state 9
-- On ATOM_CHARS shift to state 10
-- On quoted shift to state 11
-- On mailbox shift to state 341
## Reductions:

State 341:
## Known stack suffix:
## APPEND SP mailbox
## LR(1) items:
append_cmd -> APPEND SP mailbox . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production append_cmd -> APPEND SP mailbox

State 342:
## Known stack suffix:
## login
## LR(1) items:
command_notauth -> login . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_notauth -> login

State 343:
## Known stack suffix:
## id
## LR(1) items:
command_any -> id . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_any -> id

State 344:
## Known stack suffix:
## tag_ SP commands
## LR(1) items:
command -> tag_ SP commands . CRLF [ # ]
## Transitions:
-- On CRLF shift to state 345
## Reductions:

State 345:
## Known stack suffix:
## tag_ SP commands CRLF
## LR(1) items:
command -> tag_ SP commands CRLF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> tag_ SP commands CRLF

State 346:
## Known stack suffix:
## command_select
## LR(1) items:
commands -> command_select . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production commands -> command_select

State 347:
## Known stack suffix:
## command_notauth
## LR(1) items:
commands -> command_notauth . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production commands -> command_notauth

State 348:
## Known stack suffix:
## command_auth
## LR(1) items:
commands -> command_auth . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production commands -> command_auth

State 349:
## Known stack suffix:
## command_any
## LR(1) items:
commands -> command_any . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production commands -> command_any

State 350:
## Known stack suffix:
## c_unsubscribe
## LR(1) items:
command_auth -> c_unsubscribe . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_unsubscribe

State 351:
## Known stack suffix:
## c_subscribe
## LR(1) items:
command_auth -> c_subscribe . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_subscribe

State 352:
## Known stack suffix:
## c_store
## LR(1) items:
command_select -> c_store . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> c_store

State 353:
## Known stack suffix:
## c_status
## LR(1) items:
command_auth -> c_status . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_status

State 354:
## Known stack suffix:
## c_select
## LR(1) items:
command_auth -> c_select . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_select

State 355:
## Known stack suffix:
## c_search
## LR(1) items:
command_select -> c_search . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> c_search

State 356:
## Known stack suffix:
## c_rename
## LR(1) items:
command_auth -> c_rename . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_rename

State 357:
## Known stack suffix:
## c_lsub
## LR(1) items:
command_auth -> c_lsub . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_lsub

State 358:
## Known stack suffix:
## c_list
## LR(1) items:
command_auth -> c_list . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_list

State 359:
## Known stack suffix:
## c_lappend
## LR(1) items:
command_notauth -> c_lappend . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_notauth -> c_lappend

State 360:
## Known stack suffix:
## c_idle
## LR(1) items:
command_auth -> c_idle . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_idle

State 361:
## Known stack suffix:
## c_fetch
## LR(1) items:
command_select -> c_fetch . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> c_fetch

State 362:
## Known stack suffix:
## c_examine
## LR(1) items:
command_auth -> c_examine . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_examine

State 363:
## Known stack suffix:
## c_delete
## LR(1) items:
command_auth -> c_delete . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_delete

State 364:
## Known stack suffix:
## c_create
## LR(1) items:
command_auth -> c_create . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_create

State 365:
## Known stack suffix:
## c_copy
## LR(1) items:
command_select -> c_copy . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_select -> c_copy

State 366:
## Known stack suffix:
## c_append
## LR(1) items:
command_auth -> c_append . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_auth -> c_append

State 367:
## Known stack suffix:
## authenticate
## LR(1) items:
command_notauth -> authenticate . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production command_notauth -> authenticate

State 368:
## Known stack suffix:
## append_cmd
## LR(1) items:
c_append -> append_cmd . SP flag_list_sp date_sp literal [ CRLF ]
## Transitions:
-- On SP shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## append_cmd SP
## LR(1) items:
c_append -> append_cmd SP . flag_list_sp date_sp literal [ CRLF ]
## Transitions:
-- On LP shift to state 34
-- On flag_list_sp shift to state 370
-- On flag_list shift to state 376
## Reductions:
-- On LITERALPL LITERAL DATE
--   reduce production flag_list_sp ->

State 370:
## Known stack suffix:
## append_cmd SP flag_list_sp
## LR(1) items:
c_append -> append_cmd SP flag_list_sp . date_sp literal [ CRLF ]
## Transitions:
-- On DATE shift to state 371
-- On date_sp shift to state 372
-- On date shift to state 374
## Reductions:
-- On LITERALPL LITERAL
--   reduce production date_sp ->

State 371:
## Known stack suffix:
## DATE
## LR(1) items:
date -> DATE . [ SP ]
## Transitions:
## Reductions:
-- On SP
--   reduce production date -> DATE

State 372:
## Known stack suffix:
## append_cmd SP flag_list_sp date_sp
## LR(1) items:
c_append -> append_cmd SP flag_list_sp date_sp . literal [ CRLF ]
## Transitions:
-- On LITERALPL shift to state 287
-- On LITERAL shift to state 288
-- On literal shift to state 373
## Reductions:

State 373:
## Known stack suffix:
## append_cmd SP flag_list_sp date_sp literal
## LR(1) items:
c_append -> append_cmd SP flag_list_sp date_sp literal . [ CRLF ]
## Transitions:
## Reductions:
-- On CRLF
--   reduce production c_append -> append_cmd SP flag_list_sp date_sp literal

State 374:
## Known stack suffix:
## date
## LR(1) items:
date_sp -> date . SP [ LITERALPL LITERAL ]
## Transitions:
-- On SP shift to state 375
## Reductions:

State 375:
## Known stack suffix:
## date SP
## LR(1) items:
date_sp -> date SP . [ LITERALPL LITERAL ]
## Transitions:
## Reductions:
-- On LITERALPL LITERAL
--   reduce production date_sp -> date SP

State 376:
## Known stack suffix:
## flag_list
## LR(1) items:
flag_list_sp -> flag_list . SP [ LITERALPL LITERAL DATE ]
## Transitions:
-- On SP shift to state 377
## Reductions:

State 377:
## Known stack suffix:
## flag_list SP
## LR(1) items:
flag_list_sp -> flag_list SP . [ LITERALPL LITERAL DATE ]
## Transitions:
## Reductions:
-- On LITERALPL LITERAL DATE
--   reduce production flag_list_sp -> flag_list SP

State 378:
## Known stack suffix:
## request
## LR(1) items:
request' -> request . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept request

State 379:
## Known stack suffix:
## command
## LR(1) items:
request -> command . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production request -> command

State 380:
## Known stack suffix:
## c_done
## LR(1) items:
command -> c_done . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production command -> c_done

