State 0:
## Known stack suffix:
##
## LR(1) items:
a' -> . a [ # ]
## Transitions:
-- On T shift to state 1
-- On d shift to state 2
-- On a shift to state 9
## Reductions:

State 1:
## Known stack suffix:
## T
## LR(1) items:
d -> T . [ T ]
## Transitions:
## Reductions:
-- On T reduce production d -> T

State 2:
## Known stack suffix:
## d
## LR(1) items:
a -> d . T T T d T T [ # ]
## Transitions:
-- On T shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## d T
## LR(1) items:
a -> d T . T T d T T [ # ]
## Transitions:
-- On T shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## d T T
## LR(1) items:
a -> d T T . T d T T [ # ]
## Transitions:
-- On T shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## d T T T
## LR(1) items:
a -> d T T T . d T T [ # ]
## Transitions:
-- On T shift to state 1
-- On d shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## d T T T d
## LR(1) items:
a -> d T T T d . T T [ # ]
## Transitions:
-- On T shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## d T T T d T
## LR(1) items:
a -> d T T T d T . T [ # ]
## Transitions:
-- On T shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## d T T T d T T
## LR(1) items:
a -> d T T T d T T . [ # ]
## Transitions:
## Reductions:
-- On # reduce production a -> d T T T d T T

State 9:
## Known stack suffix:
## a
## LR(1) items:
a' -> a . [ # ]
## Transitions:
## Reductions:
-- On # accept a

