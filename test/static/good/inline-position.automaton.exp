State 0:
## Known stack suffix:
##
## LR(1) items:
prog' -> . prog [ # ]
## Transitions:
-- On prog shift to state 1
-- On a1 shift to state 2
## Reductions:
-- On A reduce production a1 ->

State 1:
## Known stack suffix:
## prog
## LR(1) items:
prog' -> prog . [ # ]
## Transitions:
## Reductions:
-- On # accept prog

State 2:
## Known stack suffix:
## a1
## LR(1) items:
prog -> a1 . a2 a3 a4 a5 a6 a7 a8 [ # ]
## Transitions:
-- On A shift to state 3
-- On a2 shift to state 5
## Reductions:

State 3:
## Known stack suffix:
## A
## LR(1) items:
a2 -> A . B [ A ]
## Transitions:
-- On B shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## A B
## LR(1) items:
a2 -> A B . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a2 -> A B

State 5:
## Known stack suffix:
## a1 a2
## LR(1) items:
prog -> a1 a2 . a3 a4 a5 a6 a7 a8 [ # ]
## Transitions:
-- On A shift to state 6
-- On a3 shift to state 8
## Reductions:

State 6:
## Known stack suffix:
## A
## LR(1) items:
a3 -> A . B [ A ]
## Transitions:
-- On B shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## A B
## LR(1) items:
a3 -> A B . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a3 -> A B

State 8:
## Known stack suffix:
## a1 a2 a3
## LR(1) items:
prog -> a1 a2 a3 . a4 a5 a6 a7 a8 [ # ]
## Transitions:
-- On A shift to state 9
-- On a4 shift to state 13
## Reductions:

State 9:
## Known stack suffix:
## A
## LR(1) items:
a4 -> A . A B B [ A ]
## Transitions:
-- On A shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## A A
## LR(1) items:
a4 -> A A . B B [ A ]
## Transitions:
-- On B shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## A A B
## LR(1) items:
a4 -> A A B . B [ A ]
## Transitions:
-- On B shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## A A B B
## LR(1) items:
a4 -> A A B B . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a4 -> A A B B

State 13:
## Known stack suffix:
## a1 a2 a3 a4
## LR(1) items:
prog -> a1 a2 a3 a4 . a5 a6 a7 a8 [ # ]
## Transitions:
-- On A shift to state 14
-- On a5 shift to state 16
## Reductions:

State 14:
## Known stack suffix:
## A
## LR(1) items:
a5 -> A . C [ A ]
## Transitions:
-- On C shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## A C
## LR(1) items:
a5 -> A C . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a5 -> A C

State 16:
## Known stack suffix:
## a1 a2 a3 a4 a5
## LR(1) items:
prog -> a1 a2 a3 a4 a5 . a6 a7 a8 [ # ]
## Transitions:
-- On A shift to state 17
-- On a6 shift to state 19
## Reductions:

State 17:
## Known stack suffix:
## A
## LR(1) items:
a6 -> A . B [ A ]
## Transitions:
-- On B shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## A B
## LR(1) items:
a6 -> A B . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a6 -> A B

State 19:
## Known stack suffix:
## a1 a2 a3 a4 a5 a6
## LR(1) items:
prog -> a1 a2 a3 a4 a5 a6 . a7 a8 [ # ]
## Transitions:
-- On A shift to state 20
-- On a7 shift to state 22
## Reductions:

State 20:
## Known stack suffix:
## A
## LR(1) items:
a7 -> A . B [ A ]
## Transitions:
-- On B shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## A B
## LR(1) items:
a7 -> A B . [ A ]
## Transitions:
## Reductions:
-- On A reduce production a7 -> A B

State 22:
## Known stack suffix:
## a1 a2 a3 a4 a5 a6 a7
## LR(1) items:
prog -> a1 a2 a3 a4 a5 a6 a7 . a8 [ # ]
## Transitions:
-- On A shift to state 23
-- On a8 shift to state 25
## Reductions:

State 23:
## Known stack suffix:
## A
## LR(1) items:
a8 -> A . B [ # ]
## Transitions:
-- On B shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## A B
## LR(1) items:
a8 -> A B . [ # ]
## Transitions:
## Reductions:
-- On # reduce production a8 -> A B

State 25:
## Known stack suffix:
## a1 a2 a3 a4 a5 a6 a7 a8
## LR(1) items:
prog -> a1 a2 a3 a4 a5 a6 a7 a8 . [ # ]
## Transitions:
## Reductions:
-- On # reduce production prog -> a1 a2 a3 a4 a5 a6 a7 a8

