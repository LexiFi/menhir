State 0:
prog' -> . prog [ # ]
-- On prog shift to state 1
-- On a1 shift to state 2
-- On A reduce production a1 ->

State 1:
prog' -> prog . [ # ]
-- On # accept prog

State 2:
prog -> a1 . a2 a3 a4 a5 a6 a7 a8 [ # ]
-- On A shift to state 3
-- On a2 shift to state 5

State 3:
a2 -> A . B [ A ]
-- On B shift to state 4

State 4:
a2 -> A B . [ A ]
-- On A reduce production a2 -> A B

State 5:
prog -> a1 a2 . a3 a4 a5 a6 a7 a8 [ # ]
-- On A shift to state 6
-- On a3 shift to state 8

State 6:
a3 -> A . B [ A ]
-- On B shift to state 7

State 7:
a3 -> A B . [ A ]
-- On A reduce production a3 -> A B

State 8:
prog -> a1 a2 a3 . a4 a5 a6 a7 a8 [ # ]
-- On A shift to state 9
-- On a4 shift to state 13

State 9:
a4 -> A . A B B [ A ]
-- On A shift to state 10

State 10:
a4 -> A A . B B [ A ]
-- On B shift to state 11

State 11:
a4 -> A A B . B [ A ]
-- On B shift to state 12

State 12:
a4 -> A A B B . [ A ]
-- On A reduce production a4 -> A A B B

State 13:
prog -> a1 a2 a3 a4 . a5 a6 a7 a8 [ # ]
-- On A shift to state 14
-- On a5 shift to state 16

State 14:
a5 -> A . C [ A ]
-- On C shift to state 15

State 15:
a5 -> A C . [ A ]
-- On A reduce production a5 -> A C

State 16:
prog -> a1 a2 a3 a4 a5 . a6 a7 a8 [ # ]
-- On A shift to state 17
-- On a6 shift to state 19

State 17:
a6 -> A . B [ A ]
-- On B shift to state 18

State 18:
a6 -> A B . [ A ]
-- On A reduce production a6 -> A B

State 19:
prog -> a1 a2 a3 a4 a5 a6 . a7 a8 [ # ]
-- On A shift to state 20
-- On a7 shift to state 22

State 20:
a7 -> A . B [ A ]
-- On B shift to state 21

State 21:
a7 -> A B . [ A ]
-- On A reduce production a7 -> A B

State 22:
prog -> a1 a2 a3 a4 a5 a6 a7 . a8 [ # ]
-- On A shift to state 23
-- On a8 shift to state 25

State 23:
a8 -> A . B [ # ]
-- On B shift to state 24

State 24:
a8 -> A B . [ # ]
-- On # reduce production a8 -> A B

State 25:
prog -> a1 a2 a3 a4 a5 a6 a7 a8 . [ # ]
-- On # reduce production prog -> a1 a2 a3 a4 a5 a6 a7 a8

