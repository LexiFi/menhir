State 0:
a' -> . a [ # ]
-- On T shift to state 1
-- On c shift to state 2
-- On a shift to state 5

State 1:
c -> T . [ T ]
-- On T reduce production c -> T 

State 2:
a -> c . c [ # ]
-- On T shift to state 3
-- On c shift to state 4

State 3:
c -> T . [ # ]
-- On # reduce production c -> T 

State 4:
a -> c c . [ # ]
-- On # reduce production a -> c c 

State 5:
a' -> a . [ # ]
-- On # accept a

