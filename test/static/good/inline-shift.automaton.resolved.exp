State 0:
## Known stack suffix:
##
## LR(1) items:
a' -> . a [ # ]
## Transitions:
-- On T shift to state 1
-- On a shift to state 7
## Reductions:

State 1:
## Known stack suffix:
## T
## LR(1) items:
a -> T . T c c [ # ]
## Transitions:
-- On T shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## T T
## LR(1) items:
a -> T T . c c [ # ]
## Transitions:
-- On T shift to state 3
-- On c shift to state 4
## Reductions:

State 3:
## Known stack suffix:
## T
## LR(1) items:
c -> T . [ T ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production c -> T

State 4:
## Known stack suffix:
## T T c
## LR(1) items:
a -> T T c . c [ # ]
## Transitions:
-- On T shift to state 5
-- On c shift to state 6
## Reductions:

State 5:
## Known stack suffix:
## T
## LR(1) items:
c -> T . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production c -> T

State 6:
## Known stack suffix:
## T T c c
## LR(1) items:
a -> T T c c . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production a -> T T c c

State 7:
## Known stack suffix:
## a
## LR(1) items:
a' -> a . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept a

