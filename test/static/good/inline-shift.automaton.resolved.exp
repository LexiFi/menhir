State 0:
a' -> . a [ # ]
-- On T shift to state 1
-- On a shift to state 7

State 1:
a -> T . T c c [ # ]
-- On T shift to state 2

State 2:
a -> T T . c c [ # ]
-- On T shift to state 3
-- On c shift to state 4

State 3:
c -> T . [ T ]
-- On T reduce production c -> T

State 4:
a -> T T c . c [ # ]
-- On T shift to state 5
-- On c shift to state 6

State 5:
c -> T . [ # ]
-- On # reduce production c -> T

State 6:
a -> T T c c . [ # ]
-- On # reduce production a -> T T c c

State 7:
a' -> a . [ # ]
-- On # accept a

