Grammar has 2 nonterminal symbols, among which 1 start symbols.
Grammar has 4 terminal symbols.
Grammar has 4 productions.
nullable(prog) = false
nullable(exp) = false
first(prog) = INT
first(exp) = INT
minimal(prog) = (* 2 *) INT EOF
minimal(exp) = (* 1 *) INT
follow(prog) = #
follow(exp) = TIMES PLUS EOF
Built an LR(0) automaton with 9 states.
The grammar is not SLR(1) -- 2 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 9 states.
4 shift/reduce conflicts were silently solved.
4 out of 9 states have a default reduction.
3 out of 9 states are represented.
0 out of 9 symbols keep track of their start position.
0 out of 9 symbols keep track of their end position.
3 out of 5 productions exploit shiftreduce optimization.
20 functions before inlining, 5 functions after inlining.
