Grammar has 6 nonterminal symbols, among which 1 start symbols.
Grammar has 9 terminal symbols.
Grammar has 11 productions.
nullable(term) = false
nullable(separated_nonempty_list(AND,recursive_clause)) = false
nullable(recursive_clause) = false
nullable(infix_term_) = false
nullable(infix_term) = false
nullable(commandline) = false
first(term) = NUMERAL LET
first(separated_nonempty_list(AND,recursive_clause)) = NAME
first(recursive_clause) = NAME
first(infix_term_) = NUMERAL
first(infix_term) = NUMERAL
first(commandline) = NUMERAL LET
minimal(term) = (* 1 *) NUMERAL
minimal(separated_nonempty_list(AND,recursive_clause)) = (* 3 *) NAME EQUAL NUMERAL
minimal(recursive_clause) = (* 3 *) NAME EQUAL NUMERAL
minimal(infix_term_) = (* 1 *) NUMERAL
minimal(infix_term) = (* 1 *) NUMERAL
minimal(commandline) = (* 2 *) NUMERAL EOF
follow(term) = IN EOF AND
follow(separated_nonempty_list(AND,recursive_clause)) = IN
follow(recursive_clause) = IN AND
follow(infix_term_) = IN EOF AND
follow(infix_term) = INFIXOP0 IN EOF AND
follow(commandline) = #
Built an LR(0) automaton with 32 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 33 states.
10 out of 33 states have a default reduction.
9 out of 33 states are represented.
0 out of 18 symbols keep track of their start position.
0 out of 18 symbols keep track of their end position.
4 out of 12 productions exploit shiftreduce optimization.
0 out of 33 states can peek at an error.
89 functions before inlining, 17 functions after inlining.
