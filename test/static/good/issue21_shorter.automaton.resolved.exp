State 0:
commandline' -> . commandline [ # ]
-- On REC shift to state 1
-- On NAME shift to state 2
-- On LET shift to state 13
-- On term shift to state 18
-- On name shift to state 8
-- On commandline shift to state 20

State 1:
term -> REC . term IN term [ IN EOF ]
-- On REC shift to state 1
-- On NAME shift to state 2
-- On LET shift to state 3
-- On term shift to state 10
-- On name shift to state 8

State 2:
name -> NAME . [ PLUS ]
term -> NAME . [ IN EOF ]
-- On PLUS reduce production name -> NAME
-- On IN reduce production term -> NAME
-- On EOF reduce production term -> NAME

State 3:
term -> LET . name IN term [ IN EOF ]
-- On NAME shift to state 4
-- On name shift to state 5

State 4:
name -> NAME . [ IN ]
-- On IN reduce production name -> NAME

State 5:
term -> LET name . IN term [ IN EOF ]
-- On IN shift to state 6

State 6:
term -> LET name IN . term [ IN EOF ]
-- On REC shift to state 1
-- On NAME shift to state 2
-- On LET shift to state 3
-- On term shift to state 7
-- On name shift to state 8

State 7:
term -> LET name IN term . [ IN EOF ]
-- On IN reduce production term -> LET name IN term
-- On EOF reduce production term -> LET name IN term

State 8:
term -> name . PLUS [ IN EOF ]
-- On PLUS shift to state 9

State 9:
term -> name PLUS . [ IN EOF ]
-- On IN reduce production term -> name PLUS
-- On EOF reduce production term -> name PLUS

State 10:
term -> REC term . IN term [ IN EOF ]
-- On IN shift to state 11

State 11:
term -> REC term IN . term [ IN EOF ]
-- On REC shift to state 1
-- On NAME shift to state 2
-- On LET shift to state 3
-- On term shift to state 12
-- On name shift to state 8

State 12:
term -> REC term IN term . [ IN EOF ]
-- On IN reduce production term -> REC term IN term
-- On EOF reduce production term -> REC term IN term

State 13:
commandline -> LET . term EOF [ # ]
term -> LET . name IN term [ EOF ]
-- On REC shift to state 1
-- On NAME shift to state 14
-- On LET shift to state 3
-- On term shift to state 15
-- On name shift to state 17

State 14:
name -> NAME . [ PLUS IN ]
term -> NAME . [ EOF ]
-- On PLUS reduce production name -> NAME
-- On IN reduce production name -> NAME
-- On EOF reduce production term -> NAME

State 15:
commandline -> LET term . EOF [ # ]
-- On EOF shift to state 16

State 16:
commandline -> LET term EOF . [ # ]
-- On # reduce production commandline -> LET term EOF

State 17:
term -> name . PLUS [ EOF ]
term -> LET name . IN term [ EOF ]
-- On PLUS shift to state 9
-- On IN shift to state 6

State 18:
commandline -> term . EOF [ # ]
-- On EOF shift to state 19

State 19:
commandline -> term EOF . [ # ]
-- On # reduce production commandline -> term EOF

State 20:
commandline' -> commandline . [ # ]
-- On # accept commandline

