Grammar has 3 nonterminal symbols, among which 1 start symbols.
Grammar has 6 terminal symbols.
Grammar has 7 productions.
nullable(term) = false
nullable(name) = false
nullable(commandline) = false
first(term) = REC NAME LET
first(name) = NAME
first(commandline) = REC NAME LET
minimal(term) = (* 1 *) NAME
minimal(name) = (* 1 *) NAME
minimal(commandline) = (* 2 *) NAME EOF
follow(term) = IN EOF
follow(name) = PLUS IN
follow(commandline) = #
Built an LR(0) automaton with 20 states.
The grammar is not SLR(1) -- 1 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 21 states.
7 out of 21 states have a default reduction.
6 out of 21 states are represented.
0 out of 12 symbols keep track of their start position.
0 out of 12 symbols keep track of their end position.
4 out of 8 productions exploit shiftreduce optimization.
36 functions before inlining, 11 functions after inlining.
