State 0:
## Known stack suffix:
##
## LR(1) items:
jas_file' -> . jas_file [ # ]
## Transitions:
-- On SEP shift to state 1
-- On sep shift to state 2
-- On jas_file shift to state 384
## Reductions:
-- On DSOURCE DINTERFACE DCLASS DBYTECODE
--   reduce production sep ->

State 1:
## Known stack suffix:
## SEP
## LR(1) items:
sep -> SEP . [ DSOURCE DINTERFACE DCLASS DBYTECODE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production sep -> SEP

State 2:
## Known stack suffix:
## sep
## LR(1) items:
jas_file -> sep . jasmin_header inners fields methods [ # ]
## Transitions:
-- On DBYTECODE shift to state 3
-- On jasmin_header shift to state 6
-- On bytecode_spec shift to state 321
## Reductions:
-- On DSOURCE DINTERFACE DCLASS
--   reduce production bytecode_spec ->

State 3:
## Known stack suffix:
## DBYTECODE
## LR(1) items:
bytecode_spec -> DBYTECODE . Num SEP [ DSOURCE DINTERFACE DCLASS ]
## Transitions:
-- On Num shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## DBYTECODE Num
## LR(1) items:
bytecode_spec -> DBYTECODE Num . SEP [ DSOURCE DINTERFACE DCLASS ]
## Transitions:
-- On SEP shift to state 5
## Reductions:

State 5:
## Known stack suffix:
## DBYTECODE Num SEP
## LR(1) items:
bytecode_spec -> DBYTECODE Num SEP . [ DSOURCE DINTERFACE DCLASS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bytecode_spec -> DBYTECODE Num SEP

State 6:
## Known stack suffix:
## sep jasmin_header
## LR(1) items:
jas_file -> sep jasmin_header . inners fields methods [ # ]
## Transitions:
-- On DINNER shift to state 7
-- On inners shift to state 47
-- On inner_spec shift to state 318
-- On inner_list shift to state 319
## Reductions:
-- On DMETHOD DFIELD
--   reduce production inners ->

State 7:
## Known stack suffix:
## DINNER
## LR(1) items:
inner_spec -> DINNER . CLASS access inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
inner_spec -> DINNER . INTERFACE access inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On INTERFACE shift to state 8
-- On CLASS shift to state 41
## Reductions:

State 8:
## Known stack suffix:
## DINNER INTERFACE
## LR(1) items:
inner_spec -> DINNER INTERFACE . access inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 30
## Reductions:
-- On Word SEP OUTER INNER
--   reduce production access_list ->

State 9:
## Known stack suffix:
## VOLATILE
## LR(1) items:
access_item -> VOLATILE . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> VOLATILE

State 10:
## Known stack suffix:
## VARARGS
## LR(1) items:
access_item -> VARARGS . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> VARARGS

State 11:
## Known stack suffix:
## TRANSIENT
## LR(1) items:
access_item -> TRANSIENT . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> TRANSIENT

State 12:
## Known stack suffix:
## SYNTHETIC
## LR(1) items:
access_item -> SYNTHETIC . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> SYNTHETIC

State 13:
## Known stack suffix:
## SYNCHRONIZED
## LR(1) items:
access_item -> SYNCHRONIZED . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> SYNCHRONIZED

State 14:
## Known stack suffix:
## STRICT
## LR(1) items:
access_item -> STRICT . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> STRICT

State 15:
## Known stack suffix:
## STATIC
## LR(1) items:
access_item -> STATIC . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> STATIC

State 16:
## Known stack suffix:
## PUBLIC
## LR(1) items:
access_item -> PUBLIC . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> PUBLIC

State 17:
## Known stack suffix:
## PROTECTED
## LR(1) items:
access_item -> PROTECTED . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> PROTECTED

State 18:
## Known stack suffix:
## PRIVATE
## LR(1) items:
access_item -> PRIVATE . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> PRIVATE

State 19:
## Known stack suffix:
## NATIVE
## LR(1) items:
access_item -> NATIVE . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> NATIVE

State 20:
## Known stack suffix:
## INTERFACE
## LR(1) items:
access_item -> INTERFACE . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> INTERFACE

State 21:
## Known stack suffix:
## FINAL
## LR(1) items:
access_item -> FINAL . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> FINAL

State 22:
## Known stack suffix:
## ENUM
## LR(1) items:
access_item -> ENUM . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> ENUM

State 23:
## Known stack suffix:
## BRIDGE
## LR(1) items:
access_item -> BRIDGE . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> BRIDGE

State 24:
## Known stack suffix:
## ANNOTATION
## LR(1) items:
access_item -> ANNOTATION . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> ANNOTATION

State 25:
## Known stack suffix:
## ABSTRACT
## LR(1) items:
access_item -> ABSTRACT . [ Word VOLATILE VARARGS TRANSIENT SYNTHETIC SYNCHRONIZED STRICT STATIC SEP PUBLIC PROTECTED PRIVATE OUTER NATIVE INTERFACE INNER FINAL ENUM BRIDGE ANNOTATION ABSTRACT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_item -> ABSTRACT

State 26:
## Known stack suffix:
## access_list
## LR(1) items:
access -> access_list . [ Word SEP OUTER INNER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access -> access_list

State 27:
## Known stack suffix:
## access_items
## LR(1) items:
access_list -> access_items . [ Word SEP OUTER INNER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_list -> access_items

State 28:
## Known stack suffix:
## access_item
## LR(1) items:
access_items -> access_item . access_items [ Word SEP OUTER INNER ]
access_items -> access_item . [ Word SEP OUTER INNER ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_items shift to state 29
-- On access_item shift to state 28
## Reductions:
-- On Word SEP OUTER INNER
--   reduce production access_items -> access_item

State 29:
## Known stack suffix:
## access_item access_items
## LR(1) items:
access_items -> access_item access_items . [ Word SEP OUTER INNER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_items -> access_item access_items

State 30:
## Known stack suffix:
## DINNER INTERFACE access
## LR(1) items:
inner_spec -> DINNER INTERFACE access . inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On Word shift to state 31
-- On inner_name shift to state 32
## Reductions:
-- On SEP OUTER INNER
--   reduce production inner_name ->

State 31:
## Known stack suffix:
## Word
## LR(1) items:
inner_name -> Word . [ SEP OUTER INNER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_name -> Word

State 32:
## Known stack suffix:
## DINNER INTERFACE access inner_name
## LR(1) items:
inner_spec -> DINNER INTERFACE access inner_name . inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On INNER shift to state 33
-- On inner_inner shift to state 36
## Reductions:
-- On SEP OUTER
--   reduce production inner_inner ->

State 33:
## Known stack suffix:
## INNER
## LR(1) items:
inner_inner -> INNER . classname [ SEP OUTER ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 35
## Reductions:

State 34:
## Known stack suffix:
## Word
## LR(1) items:
classname -> Word . [ SEP OUTER FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production classname -> Word

State 35:
## Known stack suffix:
## INNER classname
## LR(1) items:
inner_inner -> INNER classname . [ SEP OUTER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_inner -> INNER classname

State 36:
## Known stack suffix:
## DINNER INTERFACE access inner_name inner_inner
## LR(1) items:
inner_spec -> DINNER INTERFACE access inner_name inner_inner . inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On OUTER shift to state 37
-- On inner_outer shift to state 39
## Reductions:
-- On SEP
--   reduce production inner_outer ->

State 37:
## Known stack suffix:
## OUTER
## LR(1) items:
inner_outer -> OUTER . classname [ SEP ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## OUTER classname
## LR(1) items:
inner_outer -> OUTER classname . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_outer -> OUTER classname

State 39:
## Known stack suffix:
## DINNER INTERFACE access inner_name inner_inner inner_outer
## LR(1) items:
inner_spec -> DINNER INTERFACE access inner_name inner_inner inner_outer . SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On SEP shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## DINNER INTERFACE access inner_name inner_inner inner_outer SEP
## LR(1) items:
inner_spec -> DINNER INTERFACE access inner_name inner_inner inner_outer SEP . [ DMETHOD DINNER DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_spec -> DINNER INTERFACE access inner_name inner_inner inner_outer SEP

State 41:
## Known stack suffix:
## DINNER CLASS
## LR(1) items:
inner_spec -> DINNER CLASS . access inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 42
## Reductions:
-- On Word SEP OUTER INNER
--   reduce production access_list ->

State 42:
## Known stack suffix:
## DINNER CLASS access
## LR(1) items:
inner_spec -> DINNER CLASS access . inner_name inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On Word shift to state 31
-- On inner_name shift to state 43
## Reductions:
-- On SEP OUTER INNER
--   reduce production inner_name ->

State 43:
## Known stack suffix:
## DINNER CLASS access inner_name
## LR(1) items:
inner_spec -> DINNER CLASS access inner_name . inner_inner inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On INNER shift to state 33
-- On inner_inner shift to state 44
## Reductions:
-- On SEP OUTER
--   reduce production inner_inner ->

State 44:
## Known stack suffix:
## DINNER CLASS access inner_name inner_inner
## LR(1) items:
inner_spec -> DINNER CLASS access inner_name inner_inner . inner_outer SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On OUTER shift to state 37
-- On inner_outer shift to state 45
## Reductions:
-- On SEP
--   reduce production inner_outer ->

State 45:
## Known stack suffix:
## DINNER CLASS access inner_name inner_inner inner_outer
## LR(1) items:
inner_spec -> DINNER CLASS access inner_name inner_inner inner_outer . SEP [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On SEP shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## DINNER CLASS access inner_name inner_inner inner_outer SEP
## LR(1) items:
inner_spec -> DINNER CLASS access inner_name inner_inner inner_outer SEP . [ DMETHOD DINNER DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_spec -> DINNER CLASS access inner_name inner_inner inner_outer SEP

State 47:
## Known stack suffix:
## sep jasmin_header inners
## LR(1) items:
jas_file -> sep jasmin_header inners . fields methods [ # ]
## Transitions:
-- On DFIELD shift to state 48
-- On fields shift to state 122
-- On field_spec shift to state 315
-- On field_list shift to state 317
## Reductions:
-- On DMETHOD
--   reduce production fields ->

State 48:
## Known stack suffix:
## DFIELD
## LR(1) items:
field_spec -> DFIELD . access Word Word SIGNATURE Str optional_default SEP [ DMETHOD DFIELD # ]
field_spec -> DFIELD . access Word Word optional_default SEP [ DMETHOD DFIELD # ]
field_spec -> DFIELD . field_start field_exts endfield [ DMETHOD DFIELD # ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On field_start shift to state 49
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 111
## Reductions:
-- On Word
--   reduce production access_list ->

State 49:
## Known stack suffix:
## DFIELD field_start
## LR(1) items:
field_spec -> DFIELD field_start . field_exts endfield [ DMETHOD DFIELD # ]
## Transitions:
-- On DSIGNATURE shift to state 50
-- On DDEPRECATED shift to state 54
-- On DATTRIBUTE shift to state 57
-- On DANNOTATION shift to state 62
-- On field_exts shift to state 103
-- On field_ext_list shift to state 108
-- On field_ext_expr shift to state 110
## Reductions:
-- On DEND
--   reduce production field_exts ->

State 50:
## Known stack suffix:
## DSIGNATURE
## LR(1) items:
field_ext_expr -> DSIGNATURE . signature_expr SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Str shift to state 51
-- On signature_expr shift to state 52
## Reductions:

State 51:
## Known stack suffix:
## Str
## LR(1) items:
signature_expr -> Str . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_expr -> Str

State 52:
## Known stack suffix:
## DSIGNATURE signature_expr
## LR(1) items:
field_ext_expr -> DSIGNATURE signature_expr . SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## DSIGNATURE signature_expr SEP
## LR(1) items:
field_ext_expr -> DSIGNATURE signature_expr SEP . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_expr -> DSIGNATURE signature_expr SEP

State 54:
## Known stack suffix:
## DDEPRECATED
## LR(1) items:
field_ext_expr -> DDEPRECATED . deprecated_expr SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On deprecated_expr shift to state 55
## Default reduction:
-- After reading the next token, reduce production deprecated_expr ->

State 55:
## Known stack suffix:
## DDEPRECATED deprecated_expr
## LR(1) items:
field_ext_expr -> DDEPRECATED deprecated_expr . SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## DDEPRECATED deprecated_expr SEP
## LR(1) items:
field_ext_expr -> DDEPRECATED deprecated_expr SEP . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_expr -> DDEPRECATED deprecated_expr SEP

State 57:
## Known stack suffix:
## DATTRIBUTE
## LR(1) items:
field_ext_expr -> DATTRIBUTE . generic_expr SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Word shift to state 58
-- On generic_expr shift to state 60
## Reductions:

State 58:
## Known stack suffix:
## Word
## LR(1) items:
generic_expr -> Word . Str [ SEP ]
## Transitions:
-- On Str shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## Word Str
## LR(1) items:
generic_expr -> Word Str . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_expr -> Word Str

State 60:
## Known stack suffix:
## DATTRIBUTE generic_expr
## LR(1) items:
field_ext_expr -> DATTRIBUTE generic_expr . SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## DATTRIBUTE generic_expr SEP
## LR(1) items:
field_ext_expr -> DATTRIBUTE generic_expr SEP . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_expr -> DATTRIBUTE generic_expr SEP

State 62:
## Known stack suffix:
## DANNOTATION
## LR(1) items:
field_ext_expr -> DANNOTATION . ann_clf_expr ann_arglist endannotationsep [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On VISIBLE shift to state 63
-- On INVISIBLE shift to state 66
-- On ann_clf_expr shift to state 69
## Reductions:

State 63:
## Known stack suffix:
## VISIBLE
## LR(1) items:
ann_clf_expr -> VISIBLE . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## VISIBLE classname
## LR(1) items:
ann_clf_expr -> VISIBLE classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## VISIBLE classname SEP
## LR(1) items:
ann_clf_expr -> VISIBLE classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_clf_expr -> VISIBLE classname SEP

State 66:
## Known stack suffix:
## INVISIBLE
## LR(1) items:
ann_clf_expr -> INVISIBLE . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## INVISIBLE classname
## LR(1) items:
ann_clf_expr -> INVISIBLE classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## INVISIBLE classname SEP
## LR(1) items:
ann_clf_expr -> INVISIBLE classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_clf_expr -> INVISIBLE classname SEP

State 69:
## Known stack suffix:
## DANNOTATION ann_clf_expr
## LR(1) items:
field_ext_expr -> DANNOTATION ann_clf_expr . ann_arglist endannotationsep [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Word shift to state 70
-- On ann_arglist shift to state 73
-- On ann_arg_spec shift to state 79
-- On ann_arg_list shift to state 80
-- On ann_arg_expr shift to state 82
## Reductions:
-- On DEND
--   reduce production ann_arglist ->

State 70:
## Known stack suffix:
## Word
## LR(1) items:
ann_arg_expr -> Word . Word [ EQ ]
ann_arg_expr -> Word . Word Word [ EQ ]
## Transitions:
-- On Word shift to state 71
## Reductions:

State 71:
## Known stack suffix:
## Word Word
## LR(1) items:
ann_arg_expr -> Word Word . [ EQ ]
ann_arg_expr -> Word Word . Word [ EQ ]
## Transitions:
-- On Word shift to state 72
## Reductions:
-- On EQ
--   reduce production ann_arg_expr -> Word Word

State 72:
## Known stack suffix:
## Word Word Word
## LR(1) items:
ann_arg_expr -> Word Word Word . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_arg_expr -> Word Word Word

State 73:
## Known stack suffix:
## DANNOTATION ann_clf_expr ann_arglist
## LR(1) items:
field_ext_expr -> DANNOTATION ann_clf_expr ann_arglist . endannotationsep [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On DEND shift to state 74
-- On endannotationsep shift to state 76
-- On endannotation shift to state 77
## Reductions:

State 74:
## Known stack suffix:
## DEND
## LR(1) items:
endannotation -> DEND . ANNOTATION [ SEP ]
## Transitions:
-- On ANNOTATION shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## DEND ANNOTATION
## LR(1) items:
endannotation -> DEND ANNOTATION . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production endannotation -> DEND ANNOTATION

State 76:
## Known stack suffix:
## DANNOTATION ann_clf_expr ann_arglist endannotationsep
## LR(1) items:
field_ext_expr -> DANNOTATION ann_clf_expr ann_arglist endannotationsep . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_expr -> DANNOTATION ann_clf_expr ann_arglist endannotationsep

State 77:
## Known stack suffix:
## endannotation
## LR(1) items:
endannotationsep -> endannotation . SEP [ Word DSIGNATURE DMETHOD DINNER DFIELD DEND DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## endannotation SEP
## LR(1) items:
endannotationsep -> endannotation SEP . [ Word DSIGNATURE DMETHOD DINNER DFIELD DEND DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production endannotationsep -> endannotation SEP

State 79:
## Known stack suffix:
## ann_arg_spec
## LR(1) items:
ann_arg_list -> ann_arg_spec . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_arg_list -> ann_arg_spec

State 80:
## Known stack suffix:
## ann_arg_list
## LR(1) items:
ann_arg_list -> ann_arg_list . ann_arg_spec [ Word DEND ]
ann_arglist -> ann_arg_list . [ DEND ]
## Transitions:
-- On Word shift to state 70
-- On ann_arg_spec shift to state 81
-- On ann_arg_expr shift to state 82
## Reductions:
-- On DEND
--   reduce production ann_arglist -> ann_arg_list

State 81:
## Known stack suffix:
## ann_arg_list ann_arg_spec
## LR(1) items:
ann_arg_list -> ann_arg_list ann_arg_spec . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_arg_list -> ann_arg_list ann_arg_spec

State 82:
## Known stack suffix:
## ann_arg_expr
## LR(1) items:
ann_arg_spec -> ann_arg_expr . EQ ann_value_list [ Word DEND ]
## Transitions:
-- On EQ shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## ann_arg_expr EQ
## LR(1) items:
ann_arg_spec -> ann_arg_expr EQ . ann_value_list [ Word DEND ]
## Transitions:
-- On Word shift to state 84
-- On Str shift to state 85
-- On Num shift to state 86
-- On Int shift to state 87
-- On DANNOTATION shift to state 88
-- On item shift to state 93
-- On any_item shift to state 94
-- On ann_value_list shift to state 95
-- On ann_value_items shift to state 96
-- On ann_value shift to state 99
-- On ann_ann_value shift to state 100
-- On ann_ann_list shift to state 101
## Reductions:

State 84:
## Known stack suffix:
## Word
## LR(1) items:
any_item -> Word . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_item -> Word

State 85:
## Known stack suffix:
## Str
## LR(1) items:
item -> Str . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production item -> Str

State 86:
## Known stack suffix:
## Num
## LR(1) items:
item -> Num . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production item -> Num

State 87:
## Known stack suffix:
## Int
## LR(1) items:
item -> Int . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production item -> Int

State 88:
## Known stack suffix:
## DANNOTATION
## LR(1) items:
ann_ann_value -> DANNOTATION . ann_nest ann_arglist endannotationsep [ Word DEND DANNOTATION ]
## Transitions:
-- On SEP shift to state 89
-- On ann_nest shift to state 90
## Reductions:

State 89:
## Known stack suffix:
## SEP
## LR(1) items:
ann_nest -> SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_nest -> SEP

State 90:
## Known stack suffix:
## DANNOTATION ann_nest
## LR(1) items:
ann_ann_value -> DANNOTATION ann_nest . ann_arglist endannotationsep [ Word DEND DANNOTATION ]
## Transitions:
-- On Word shift to state 70
-- On ann_arglist shift to state 91
-- On ann_arg_spec shift to state 79
-- On ann_arg_list shift to state 80
-- On ann_arg_expr shift to state 82
## Reductions:
-- On DEND
--   reduce production ann_arglist ->

State 91:
## Known stack suffix:
## DANNOTATION ann_nest ann_arglist
## LR(1) items:
ann_ann_value -> DANNOTATION ann_nest ann_arglist . endannotationsep [ Word DEND DANNOTATION ]
## Transitions:
-- On DEND shift to state 74
-- On endannotationsep shift to state 92
-- On endannotation shift to state 77
## Reductions:

State 92:
## Known stack suffix:
## DANNOTATION ann_nest ann_arglist endannotationsep
## LR(1) items:
ann_ann_value -> DANNOTATION ann_nest ann_arglist endannotationsep . [ Word DEND DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_ann_value -> DANNOTATION ann_nest ann_arglist endannotationsep

State 93:
## Known stack suffix:
## item
## LR(1) items:
any_item -> item . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production any_item -> item

State 94:
## Known stack suffix:
## any_item
## LR(1) items:
ann_value -> any_item . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_value -> any_item

State 95:
## Known stack suffix:
## ann_arg_expr EQ ann_value_list
## LR(1) items:
ann_arg_spec -> ann_arg_expr EQ ann_value_list . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_arg_spec -> ann_arg_expr EQ ann_value_list

State 96:
## Known stack suffix:
## ann_value_items
## LR(1) items:
ann_value_items -> ann_value_items . ann_value [ Word Str SEP Num Int ]
ann_value_list -> ann_value_items . SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 84
-- On Str shift to state 85
-- On SEP shift to state 97
-- On Num shift to state 86
-- On Int shift to state 87
-- On item shift to state 93
-- On any_item shift to state 94
-- On ann_value shift to state 98
## Reductions:

State 97:
## Known stack suffix:
## ann_value_items SEP
## LR(1) items:
ann_value_list -> ann_value_items SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_value_list -> ann_value_items SEP

State 98:
## Known stack suffix:
## ann_value_items ann_value
## LR(1) items:
ann_value_items -> ann_value_items ann_value . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_value_items -> ann_value_items ann_value

State 99:
## Known stack suffix:
## ann_value
## LR(1) items:
ann_value_items -> ann_value . [ Word Str SEP Num Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_value_items -> ann_value

State 100:
## Known stack suffix:
## ann_ann_value
## LR(1) items:
ann_ann_list -> ann_ann_value . [ Word DEND DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_ann_list -> ann_ann_value

State 101:
## Known stack suffix:
## ann_ann_list
## LR(1) items:
ann_ann_list -> ann_ann_list . ann_ann_value [ Word DEND DANNOTATION ]
ann_value_list -> ann_ann_list . [ Word DEND ]
## Transitions:
-- On DANNOTATION shift to state 88
-- On ann_ann_value shift to state 102
## Reductions:
-- On Word DEND
--   reduce production ann_value_list -> ann_ann_list

State 102:
## Known stack suffix:
## ann_ann_list ann_ann_value
## LR(1) items:
ann_ann_list -> ann_ann_list ann_ann_value . [ Word DEND DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_ann_list -> ann_ann_list ann_ann_value

State 103:
## Known stack suffix:
## DFIELD field_start field_exts
## LR(1) items:
field_spec -> DFIELD field_start field_exts . endfield [ DMETHOD DFIELD # ]
## Transitions:
-- On DEND shift to state 104
-- On endfield shift to state 107
## Reductions:

State 104:
## Known stack suffix:
## DEND
## LR(1) items:
endfield -> DEND . FIELD SEP [ DMETHOD DFIELD # ]
## Transitions:
-- On FIELD shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## DEND FIELD
## LR(1) items:
endfield -> DEND FIELD . SEP [ DMETHOD DFIELD # ]
## Transitions:
-- On SEP shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## DEND FIELD SEP
## LR(1) items:
endfield -> DEND FIELD SEP . [ DMETHOD DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production endfield -> DEND FIELD SEP

State 107:
## Known stack suffix:
## DFIELD field_start field_exts endfield
## LR(1) items:
field_spec -> DFIELD field_start field_exts endfield . [ DMETHOD DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_spec -> DFIELD field_start field_exts endfield

State 108:
## Known stack suffix:
## field_ext_list
## LR(1) items:
field_ext_list -> field_ext_list . field_ext_expr [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
field_exts -> field_ext_list . [ DEND ]
## Transitions:
-- On DSIGNATURE shift to state 50
-- On DDEPRECATED shift to state 54
-- On DATTRIBUTE shift to state 57
-- On DANNOTATION shift to state 62
-- On field_ext_expr shift to state 109
## Reductions:
-- On DEND
--   reduce production field_exts -> field_ext_list

State 109:
## Known stack suffix:
## field_ext_list field_ext_expr
## LR(1) items:
field_ext_list -> field_ext_list field_ext_expr . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_list -> field_ext_list field_ext_expr

State 110:
## Known stack suffix:
## field_ext_expr
## LR(1) items:
field_ext_list -> field_ext_expr . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_ext_list -> field_ext_expr

State 111:
## Known stack suffix:
## DFIELD access
## LR(1) items:
field_spec -> DFIELD access . Word Word SIGNATURE Str optional_default SEP [ DMETHOD DFIELD # ]
field_spec -> DFIELD access . Word Word optional_default SEP [ DMETHOD DFIELD # ]
field_start -> access . Word Word optional_default SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Word shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## DFIELD access Word
## LR(1) items:
field_spec -> DFIELD access Word . Word SIGNATURE Str optional_default SEP [ DMETHOD DFIELD # ]
field_spec -> DFIELD access Word . Word optional_default SEP [ DMETHOD DFIELD # ]
field_start -> access Word . Word optional_default SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Word shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## DFIELD access Word Word
## LR(1) items:
field_spec -> DFIELD access Word Word . SIGNATURE Str optional_default SEP [ DMETHOD DFIELD # ]
field_spec -> DFIELD access Word Word . optional_default SEP [ DMETHOD DFIELD # ]
field_start -> access Word Word . optional_default SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SIGNATURE shift to state 114
-- On EQ shift to state 116
-- On optional_default shift to state 120
## Reductions:
-- On SEP
--   reduce production optional_default ->

State 114:
## Known stack suffix:
## DFIELD access Word Word SIGNATURE
## LR(1) items:
field_spec -> DFIELD access Word Word SIGNATURE . Str optional_default SEP [ DMETHOD DFIELD # ]
## Transitions:
-- On Str shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## DFIELD access Word Word SIGNATURE Str
## LR(1) items:
field_spec -> DFIELD access Word Word SIGNATURE Str . optional_default SEP [ DMETHOD DFIELD # ]
## Transitions:
-- On EQ shift to state 116
-- On optional_default shift to state 118
## Reductions:
-- On SEP
--   reduce production optional_default ->

State 116:
## Known stack suffix:
## EQ
## LR(1) items:
optional_default -> EQ . item [ SEP ]
## Transitions:
-- On Str shift to state 85
-- On Num shift to state 86
-- On Int shift to state 87
-- On item shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## EQ item
## LR(1) items:
optional_default -> EQ item . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional_default -> EQ item

State 118:
## Known stack suffix:
## DFIELD access Word Word SIGNATURE Str optional_default
## LR(1) items:
field_spec -> DFIELD access Word Word SIGNATURE Str optional_default . SEP [ DMETHOD DFIELD # ]
## Transitions:
-- On SEP shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## DFIELD access Word Word SIGNATURE Str optional_default SEP
## LR(1) items:
field_spec -> DFIELD access Word Word SIGNATURE Str optional_default SEP . [ DMETHOD DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_spec -> DFIELD access Word Word SIGNATURE Str optional_default SEP

State 120:
## Known stack suffix:
## DFIELD access Word Word optional_default
## LR(1) items:
field_spec -> DFIELD access Word Word optional_default . SEP [ DMETHOD DFIELD # ]
field_start -> access Word Word optional_default . SEP [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## DFIELD access Word Word optional_default SEP
## LR(1) items:
field_spec -> DFIELD access Word Word optional_default SEP . [ DMETHOD DFIELD # ]
field_start -> access Word Word optional_default SEP . [ DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION ]
## Transitions:
## Reductions:
-- On DMETHOD DFIELD
--   reduce production field_spec -> DFIELD access Word Word optional_default SEP
-- On DSIGNATURE DEND DDEPRECATED DATTRIBUTE DANNOTATION
--   reduce production field_start -> access Word Word optional_default SEP

State 122:
## Known stack suffix:
## sep jasmin_header inners fields
## LR(1) items:
jas_file -> sep jasmin_header inners fields . methods [ # ]
## Transitions:
-- On DMETHOD shift to state 123
-- On methods shift to state 127
-- On method_spec shift to state 128
-- On method_list shift to state 129
-- On defmethod shift to state 131
## Reductions:

State 123:
## Known stack suffix:
## DMETHOD
## LR(1) items:
defmethod -> DMETHOD . access Word SEP [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 124
## Reductions:
-- On Word
--   reduce production access_list ->

State 124:
## Known stack suffix:
## DMETHOD access
## LR(1) items:
defmethod -> DMETHOD access . Word SEP [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
-- On Word shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## DMETHOD access Word
## LR(1) items:
defmethod -> DMETHOD access Word . SEP [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## DMETHOD access Word SEP
## LR(1) items:
defmethod -> DMETHOD access Word SEP . [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defmethod -> DMETHOD access Word SEP

State 127:
## Known stack suffix:
## sep jasmin_header inners fields methods
## LR(1) items:
jas_file -> sep jasmin_header inners fields methods . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production jas_file -> sep jasmin_header inners fields methods

State 128:
## Known stack suffix:
## method_spec
## LR(1) items:
method_list -> method_spec . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_list -> method_spec

State 129:
## Known stack suffix:
## method_list
## LR(1) items:
method_list -> method_list . method_spec [ DMETHOD # ]
methods -> method_list . [ # ]
## Transitions:
-- On DMETHOD shift to state 123
-- On method_spec shift to state 130
-- On defmethod shift to state 131
## Reductions:

State 130:
## Known stack suffix:
## method_list method_spec
## LR(1) items:
method_list -> method_list method_spec . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_list -> method_list method_spec

State 131:
## Known stack suffix:
## defmethod
## LR(1) items:
method_spec -> defmethod . statements endmethod [ DMETHOD # ]
method_spec -> defmethod . endmethod [ DMETHOD # ]
## Transitions:
-- On error shift to state 132
-- On Word shift to state 133
-- On TABLESWITCH shift to state 135
-- On LOOKUPSWITCH shift to state 154
-- On Int shift to state 172
-- On Insn shift to state 174
-- On DVAR shift to state 186
-- On DTHROWS shift to state 202
-- On DSTACK shift to state 205
-- On DSIGNATURE shift to state 239
-- On DSET shift to state 241
-- On DLINE shift to state 245
-- On DLIMIT shift to state 248
-- On DEND shift to state 256
-- On DDEPRECATED shift to state 259
-- On DCATCH shift to state 261
-- On DATTRIBUTE shift to state 275
-- On DANNOTATION shift to state 277
-- On stmnt shift to state 305
-- On statements shift to state 307
-- On statement shift to state 313
-- On simple_instruction shift to state 183
-- On label shift to state 309
-- On instruction shift to state 310
-- On endmethod shift to state 314
-- On directive shift to state 312
-- On complex_instruction shift to state 185
## Reductions:
-- On SEP
--   reduce production stmnt ->

State 132:
## Known stack suffix:
## error
## LR(1) items:
stmnt -> error . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmnt -> error

State 133:
## Known stack suffix:
## Word
## LR(1) items:
label -> Word . COLON [ SEP ]
## Transitions:
-- On COLON shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## Word COLON
## LR(1) items:
label -> Word COLON . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> Word COLON

State 135:
## Known stack suffix:
## TABLESWITCH
## LR(1) items:
complex_instruction -> TABLESWITCH . table [ SEP ]
## Transitions:
-- On Int shift to state 136
-- On table_args shift to state 140
-- On table shift to state 153
## Reductions:

State 136:
## Known stack suffix:
## Int
## LR(1) items:
table_args -> Int . SEP [ Word Int ]
table_args -> Int . Int SEP [ Word Int ]
## Transitions:
-- On SEP shift to state 137
-- On Int shift to state 138
## Reductions:

State 137:
## Known stack suffix:
## Int SEP
## LR(1) items:
table_args -> Int SEP . [ Word Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_args -> Int SEP

State 138:
## Known stack suffix:
## Int Int
## LR(1) items:
table_args -> Int Int . SEP [ Word Int ]
## Transitions:
-- On SEP shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## Int Int SEP
## LR(1) items:
table_args -> Int Int SEP . [ Word Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_args -> Int Int SEP

State 140:
## Known stack suffix:
## table_args
## LR(1) items:
table -> table_args . table_list table_default [ SEP ]
## Transitions:
-- On Word shift to state 141
-- On Int shift to state 143
-- On table_list shift to state 145
-- On table_entry shift to state 151
## Reductions:

State 141:
## Known stack suffix:
## Word
## LR(1) items:
table_entry -> Word . SEP [ Word Int DEFAULT ]
## Transitions:
-- On SEP shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## Word SEP
## LR(1) items:
table_entry -> Word SEP . [ Word Int DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_entry -> Word SEP

State 143:
## Known stack suffix:
## Int
## LR(1) items:
table_entry -> Int . SEP [ Word Int DEFAULT ]
## Transitions:
-- On SEP shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## Int SEP
## LR(1) items:
table_entry -> Int SEP . [ Word Int DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_entry -> Int SEP

State 145:
## Known stack suffix:
## table_args table_list
## LR(1) items:
table -> table_args table_list . table_default [ SEP ]
## Transitions:
-- On DEFAULT shift to state 146
-- On table_default shift to state 150
## Reductions:

State 146:
## Known stack suffix:
## DEFAULT
## LR(1) items:
table_default -> DEFAULT . COLON Word [ SEP ]
table_default -> DEFAULT . COLON Int [ SEP ]
## Transitions:
-- On COLON shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
table_default -> DEFAULT COLON . Word [ SEP ]
table_default -> DEFAULT COLON . Int [ SEP ]
## Transitions:
-- On Word shift to state 148
-- On Int shift to state 149
## Reductions:

State 148:
## Known stack suffix:
## DEFAULT COLON Word
## LR(1) items:
table_default -> DEFAULT COLON Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_default -> DEFAULT COLON Word

State 149:
## Known stack suffix:
## DEFAULT COLON Int
## LR(1) items:
table_default -> DEFAULT COLON Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_default -> DEFAULT COLON Int

State 150:
## Known stack suffix:
## table_args table_list table_default
## LR(1) items:
table -> table_args table_list table_default . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table -> table_args table_list table_default

State 151:
## Known stack suffix:
## table_entry
## LR(1) items:
table_list -> table_entry . table_list [ DEFAULT ]
table_list -> table_entry . [ DEFAULT ]
## Transitions:
-- On Word shift to state 141
-- On Int shift to state 143
-- On table_list shift to state 152
-- On table_entry shift to state 151
## Reductions:
-- On DEFAULT
--   reduce production table_list -> table_entry

State 152:
## Known stack suffix:
## table_entry table_list
## LR(1) items:
table_list -> table_entry table_list . [ DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production table_list -> table_entry table_list

State 153:
## Known stack suffix:
## TABLESWITCH table
## LR(1) items:
complex_instruction -> TABLESWITCH table . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production complex_instruction -> TABLESWITCH table

State 154:
## Known stack suffix:
## LOOKUPSWITCH
## LR(1) items:
complex_instruction -> LOOKUPSWITCH . lookup [ SEP ]
## Transitions:
-- On SEP shift to state 155
-- On lookup_args shift to state 156
-- On lookup shift to state 171
## Reductions:

State 155:
## Known stack suffix:
## SEP
## LR(1) items:
lookup_args -> SEP . [ Int ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_args -> SEP

State 156:
## Known stack suffix:
## lookup_args
## LR(1) items:
lookup -> lookup_args . lookup_list lookup_default [ SEP ]
## Transitions:
-- On Int shift to state 157
-- On lookup_list shift to state 163
-- On lookup_entry shift to state 169
## Reductions:

State 157:
## Known stack suffix:
## Int
## LR(1) items:
lookup_entry -> Int . COLON Word SEP [ Int DEFAULT ]
lookup_entry -> Int . COLON Int SEP [ Int DEFAULT ]
## Transitions:
-- On COLON shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## Int COLON
## LR(1) items:
lookup_entry -> Int COLON . Word SEP [ Int DEFAULT ]
lookup_entry -> Int COLON . Int SEP [ Int DEFAULT ]
## Transitions:
-- On Word shift to state 159
-- On Int shift to state 161
## Reductions:

State 159:
## Known stack suffix:
## Int COLON Word
## LR(1) items:
lookup_entry -> Int COLON Word . SEP [ Int DEFAULT ]
## Transitions:
-- On SEP shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## Int COLON Word SEP
## LR(1) items:
lookup_entry -> Int COLON Word SEP . [ Int DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_entry -> Int COLON Word SEP

State 161:
## Known stack suffix:
## Int COLON Int
## LR(1) items:
lookup_entry -> Int COLON Int . SEP [ Int DEFAULT ]
## Transitions:
-- On SEP shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## Int COLON Int SEP
## LR(1) items:
lookup_entry -> Int COLON Int SEP . [ Int DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_entry -> Int COLON Int SEP

State 163:
## Known stack suffix:
## lookup_args lookup_list
## LR(1) items:
lookup -> lookup_args lookup_list . lookup_default [ SEP ]
## Transitions:
-- On DEFAULT shift to state 164
-- On lookup_default shift to state 168
## Reductions:

State 164:
## Known stack suffix:
## DEFAULT
## LR(1) items:
lookup_default -> DEFAULT . COLON Word [ SEP ]
lookup_default -> DEFAULT . COLON Int [ SEP ]
## Transitions:
-- On COLON shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
lookup_default -> DEFAULT COLON . Word [ SEP ]
lookup_default -> DEFAULT COLON . Int [ SEP ]
## Transitions:
-- On Word shift to state 166
-- On Int shift to state 167
## Reductions:

State 166:
## Known stack suffix:
## DEFAULT COLON Word
## LR(1) items:
lookup_default -> DEFAULT COLON Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_default -> DEFAULT COLON Word

State 167:
## Known stack suffix:
## DEFAULT COLON Int
## LR(1) items:
lookup_default -> DEFAULT COLON Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_default -> DEFAULT COLON Int

State 168:
## Known stack suffix:
## lookup_args lookup_list lookup_default
## LR(1) items:
lookup -> lookup_args lookup_list lookup_default . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup -> lookup_args lookup_list lookup_default

State 169:
## Known stack suffix:
## lookup_entry
## LR(1) items:
lookup_list -> lookup_entry . lookup_list [ DEFAULT ]
lookup_list -> lookup_entry . [ DEFAULT ]
## Transitions:
-- On Int shift to state 157
-- On lookup_list shift to state 170
-- On lookup_entry shift to state 169
## Reductions:
-- On DEFAULT
--   reduce production lookup_list -> lookup_entry

State 170:
## Known stack suffix:
## lookup_entry lookup_list
## LR(1) items:
lookup_list -> lookup_entry lookup_list . [ DEFAULT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lookup_list -> lookup_entry lookup_list

State 171:
## Known stack suffix:
## LOOKUPSWITCH lookup
## LR(1) items:
complex_instruction -> LOOKUPSWITCH lookup . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production complex_instruction -> LOOKUPSWITCH lookup

State 172:
## Known stack suffix:
## Int
## LR(1) items:
label -> Int . COLON instruction [ SEP ]
## Transitions:
-- On COLON shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## Int COLON
## LR(1) items:
label -> Int COLON . instruction [ SEP ]
## Transitions:
-- On TABLESWITCH shift to state 135
-- On LOOKUPSWITCH shift to state 154
-- On Insn shift to state 174
-- On simple_instruction shift to state 183
-- On instruction shift to state 184
-- On complex_instruction shift to state 185
## Reductions:

State 174:
## Known stack suffix:
## Insn
## LR(1) items:
simple_instruction -> Insn . [ SEP ]
simple_instruction -> Insn . Int Int [ SEP ]
simple_instruction -> Insn . Int [ SEP ]
simple_instruction -> Insn . Num [ SEP ]
simple_instruction -> Insn . Word [ SEP ]
simple_instruction -> Insn . Word Int [ SEP ]
simple_instruction -> Insn . Word Word [ SEP ]
simple_instruction -> Insn . Str [ SEP ]
simple_instruction -> Insn . Relative [ SEP ]
## Transitions:
-- On Word shift to state 175
-- On Str shift to state 178
-- On Relative shift to state 179
-- On Num shift to state 180
-- On Int shift to state 181
## Reductions:
-- On SEP
--   reduce production simple_instruction -> Insn

State 175:
## Known stack suffix:
## Insn Word
## LR(1) items:
simple_instruction -> Insn Word . [ SEP ]
simple_instruction -> Insn Word . Int [ SEP ]
simple_instruction -> Insn Word . Word [ SEP ]
## Transitions:
-- On Word shift to state 176
-- On Int shift to state 177
## Reductions:
-- On SEP
--   reduce production simple_instruction -> Insn Word

State 176:
## Known stack suffix:
## Insn Word Word
## LR(1) items:
simple_instruction -> Insn Word Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Word Word

State 177:
## Known stack suffix:
## Insn Word Int
## LR(1) items:
simple_instruction -> Insn Word Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Word Int

State 178:
## Known stack suffix:
## Insn Str
## LR(1) items:
simple_instruction -> Insn Str . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Str

State 179:
## Known stack suffix:
## Insn Relative
## LR(1) items:
simple_instruction -> Insn Relative . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Relative

State 180:
## Known stack suffix:
## Insn Num
## LR(1) items:
simple_instruction -> Insn Num . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Num

State 181:
## Known stack suffix:
## Insn Int
## LR(1) items:
simple_instruction -> Insn Int . Int [ SEP ]
simple_instruction -> Insn Int . [ SEP ]
## Transitions:
-- On Int shift to state 182
## Reductions:
-- On SEP
--   reduce production simple_instruction -> Insn Int

State 182:
## Known stack suffix:
## Insn Int Int
## LR(1) items:
simple_instruction -> Insn Int Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_instruction -> Insn Int Int

State 183:
## Known stack suffix:
## simple_instruction
## LR(1) items:
instruction -> simple_instruction . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> simple_instruction

State 184:
## Known stack suffix:
## Int COLON instruction
## LR(1) items:
label -> Int COLON instruction . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production label -> Int COLON instruction

State 185:
## Known stack suffix:
## complex_instruction
## LR(1) items:
instruction -> complex_instruction . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production instruction -> complex_instruction

State 186:
## Known stack suffix:
## DVAR
## LR(1) items:
directive -> DVAR . var_expr [ SEP ]
## Transitions:
-- On Int shift to state 187
-- On var_expr shift to state 201
## Reductions:

State 187:
## Known stack suffix:
## Int
## LR(1) items:
var_expr -> Int . IS Word Word optional_signature FROM Word TO Word [ SEP ]
var_expr -> Int . IS Word Word optional_signature [ SEP ]
var_expr -> Int . IS Word Word optional_signature FROM Int TO Int [ SEP ]
## Transitions:
-- On IS shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## Int IS
## LR(1) items:
var_expr -> Int IS . Word Word optional_signature FROM Word TO Word [ SEP ]
var_expr -> Int IS . Word Word optional_signature [ SEP ]
var_expr -> Int IS . Word Word optional_signature FROM Int TO Int [ SEP ]
## Transitions:
-- On Word shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## Int IS Word
## LR(1) items:
var_expr -> Int IS Word . Word optional_signature FROM Word TO Word [ SEP ]
var_expr -> Int IS Word . Word optional_signature [ SEP ]
var_expr -> Int IS Word . Word optional_signature FROM Int TO Int [ SEP ]
## Transitions:
-- On Word shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## Int IS Word Word
## LR(1) items:
var_expr -> Int IS Word Word . optional_signature FROM Word TO Word [ SEP ]
var_expr -> Int IS Word Word . optional_signature [ SEP ]
var_expr -> Int IS Word Word . optional_signature FROM Int TO Int [ SEP ]
## Transitions:
-- On SIGNATURE shift to state 191
-- On optional_signature shift to state 193
## Reductions:
-- On SEP FROM
--   reduce production optional_signature ->

State 191:
## Known stack suffix:
## SIGNATURE
## LR(1) items:
optional_signature -> SIGNATURE . Str [ SEP FROM ]
## Transitions:
-- On Str shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## SIGNATURE Str
## LR(1) items:
optional_signature -> SIGNATURE Str . [ SEP FROM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional_signature -> SIGNATURE Str

State 193:
## Known stack suffix:
## Int IS Word Word optional_signature
## LR(1) items:
var_expr -> Int IS Word Word optional_signature . FROM Word TO Word [ SEP ]
var_expr -> Int IS Word Word optional_signature . [ SEP ]
var_expr -> Int IS Word Word optional_signature . FROM Int TO Int [ SEP ]
## Transitions:
-- On FROM shift to state 194
## Reductions:
-- On SEP
--   reduce production var_expr -> Int IS Word Word optional_signature

State 194:
## Known stack suffix:
## Int IS Word Word optional_signature FROM
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM . Word TO Word [ SEP ]
var_expr -> Int IS Word Word optional_signature FROM . Int TO Int [ SEP ]
## Transitions:
-- On Word shift to state 195
-- On Int shift to state 198
## Reductions:

State 195:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Word
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Word . TO Word [ SEP ]
## Transitions:
-- On TO shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Word TO
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Word TO . Word [ SEP ]
## Transitions:
-- On Word shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Word TO Word
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Word TO Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_expr -> Int IS Word Word optional_signature FROM Word TO Word

State 198:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Int
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Int . TO Int [ SEP ]
## Transitions:
-- On TO shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Int TO
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Int TO . Int [ SEP ]
## Transitions:
-- On Int shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## Int IS Word Word optional_signature FROM Int TO Int
## LR(1) items:
var_expr -> Int IS Word Word optional_signature FROM Int TO Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production var_expr -> Int IS Word Word optional_signature FROM Int TO Int

State 201:
## Known stack suffix:
## DVAR var_expr
## LR(1) items:
directive -> DVAR var_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DVAR var_expr

State 202:
## Known stack suffix:
## DTHROWS
## LR(1) items:
directive -> DTHROWS . throws_expr [ SEP ]
## Transitions:
-- On Word shift to state 34
-- On throws_expr shift to state 203
-- On classname shift to state 204
## Reductions:

State 203:
## Known stack suffix:
## DTHROWS throws_expr
## LR(1) items:
directive -> DTHROWS throws_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DTHROWS throws_expr

State 204:
## Known stack suffix:
## classname
## LR(1) items:
throws_expr -> classname . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production throws_expr -> classname

State 205:
## Known stack suffix:
## DSTACK
## LR(1) items:
directive -> DSTACK . stackmap [ SEP ]
## Transitions:
-- On USE shift to state 206
-- On SEP shift to state 234
-- On stackmap shift to state 235
-- On defstack shift to state 236
## Reductions:

State 206:
## Known stack suffix:
## USE
## LR(1) items:
stackmap -> USE . defstack_same stack_map_frame_desc endstack [ SEP ]
## Transitions:
-- On Int shift to state 207
-- On defstack_same_expr shift to state 208
-- On defstack_same shift to state 211
## Reductions:
-- On LOCALS
--   reduce production defstack_same_expr ->

State 207:
## Known stack suffix:
## Int
## LR(1) items:
defstack_same_expr -> Int . [ LOCALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defstack_same_expr -> Int

State 208:
## Known stack suffix:
## defstack_same_expr
## LR(1) items:
defstack_same -> defstack_same_expr . LOCALS SEP [ STACK OFFSET LOCALS DEND ]
## Transitions:
-- On LOCALS shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## defstack_same_expr LOCALS
## LR(1) items:
defstack_same -> defstack_same_expr LOCALS . SEP [ STACK OFFSET LOCALS DEND ]
## Transitions:
-- On SEP shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## defstack_same_expr LOCALS SEP
## LR(1) items:
defstack_same -> defstack_same_expr LOCALS SEP . [ STACK OFFSET LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defstack_same -> defstack_same_expr LOCALS SEP

State 211:
## Known stack suffix:
## USE defstack_same
## LR(1) items:
stackmap -> USE defstack_same . stack_map_frame_desc endstack [ SEP ]
## Transitions:
-- On OFFSET shift to state 212
-- On stack_offset_def shift to state 217
-- On stack_map_frame_desc shift to state 230
## Reductions:
-- On STACK LOCALS DEND
--   reduce production stack_offset_def ->

State 212:
## Known stack suffix:
## OFFSET
## LR(1) items:
stack_offset_def -> OFFSET . Int SEP [ STACK LOCALS DEND ]
stack_offset_def -> OFFSET . Word SEP [ STACK LOCALS DEND ]
## Transitions:
-- On Word shift to state 213
-- On Int shift to state 215
## Reductions:

State 213:
## Known stack suffix:
## OFFSET Word
## LR(1) items:
stack_offset_def -> OFFSET Word . SEP [ STACK LOCALS DEND ]
## Transitions:
-- On SEP shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## OFFSET Word SEP
## LR(1) items:
stack_offset_def -> OFFSET Word SEP . [ STACK LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_offset_def -> OFFSET Word SEP

State 215:
## Known stack suffix:
## OFFSET Int
## LR(1) items:
stack_offset_def -> OFFSET Int . SEP [ STACK LOCALS DEND ]
## Transitions:
-- On SEP shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## OFFSET Int SEP
## LR(1) items:
stack_offset_def -> OFFSET Int SEP . [ STACK LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_offset_def -> OFFSET Int SEP

State 217:
## Known stack suffix:
## stack_offset_def
## LR(1) items:
stack_map_frame_desc -> stack_offset_def . stack_items [ DEND ]
## Transitions:
-- On stack_items shift to state 218
## Default reduction:
-- After reading the next token, reduce production stack_items ->

State 218:
## Known stack suffix:
## stack_offset_def stack_items
## LR(1) items:
stack_items -> stack_items . stack_item [ STACK LOCALS DEND ]
stack_map_frame_desc -> stack_offset_def stack_items . [ DEND ]
## Transitions:
-- On STACK shift to state 219
-- On LOCALS shift to state 223
-- On stack_item_expr shift to state 227
-- On stack_item shift to state 229
## Reductions:
-- On DEND
--   reduce production stack_map_frame_desc -> stack_offset_def stack_items

State 219:
## Known stack suffix:
## STACK
## LR(1) items:
stack_item_expr -> STACK . Word [ SEP ]
stack_item_expr -> STACK . Word Word [ SEP ]
stack_item_expr -> STACK . Word Int [ SEP ]
## Transitions:
-- On Word shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## STACK Word
## LR(1) items:
stack_item_expr -> STACK Word . [ SEP ]
stack_item_expr -> STACK Word . Word [ SEP ]
stack_item_expr -> STACK Word . Int [ SEP ]
## Transitions:
-- On Word shift to state 221
-- On Int shift to state 222
## Reductions:
-- On SEP
--   reduce production stack_item_expr -> STACK Word

State 221:
## Known stack suffix:
## STACK Word Word
## LR(1) items:
stack_item_expr -> STACK Word Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_item_expr -> STACK Word Word

State 222:
## Known stack suffix:
## STACK Word Int
## LR(1) items:
stack_item_expr -> STACK Word Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_item_expr -> STACK Word Int

State 223:
## Known stack suffix:
## LOCALS
## LR(1) items:
stack_item_expr -> LOCALS . Word [ SEP ]
stack_item_expr -> LOCALS . Word Word [ SEP ]
stack_item_expr -> LOCALS . Word Int [ SEP ]
## Transitions:
-- On Word shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## LOCALS Word
## LR(1) items:
stack_item_expr -> LOCALS Word . [ SEP ]
stack_item_expr -> LOCALS Word . Word [ SEP ]
stack_item_expr -> LOCALS Word . Int [ SEP ]
## Transitions:
-- On Word shift to state 225
-- On Int shift to state 226
## Reductions:
-- On SEP
--   reduce production stack_item_expr -> LOCALS Word

State 225:
## Known stack suffix:
## LOCALS Word Word
## LR(1) items:
stack_item_expr -> LOCALS Word Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_item_expr -> LOCALS Word Word

State 226:
## Known stack suffix:
## LOCALS Word Int
## LR(1) items:
stack_item_expr -> LOCALS Word Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_item_expr -> LOCALS Word Int

State 227:
## Known stack suffix:
## stack_item_expr
## LR(1) items:
stack_item -> stack_item_expr . SEP [ STACK LOCALS DEND ]
## Transitions:
-- On SEP shift to state 228
## Reductions:

State 228:
## Known stack suffix:
## stack_item_expr SEP
## LR(1) items:
stack_item -> stack_item_expr SEP . [ STACK LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_item -> stack_item_expr SEP

State 229:
## Known stack suffix:
## stack_items stack_item
## LR(1) items:
stack_items -> stack_items stack_item . [ STACK LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stack_items -> stack_items stack_item

State 230:
## Known stack suffix:
## USE defstack_same stack_map_frame_desc
## LR(1) items:
stackmap -> USE defstack_same stack_map_frame_desc . endstack [ SEP ]
## Transitions:
-- On DEND shift to state 231
-- On endstack shift to state 233
## Reductions:

State 231:
## Known stack suffix:
## DEND
## LR(1) items:
endstack -> DEND . STACK [ SEP ]
## Transitions:
-- On STACK shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## DEND STACK
## LR(1) items:
endstack -> DEND STACK . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production endstack -> DEND STACK

State 233:
## Known stack suffix:
## USE defstack_same stack_map_frame_desc endstack
## LR(1) items:
stackmap -> USE defstack_same stack_map_frame_desc endstack . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stackmap -> USE defstack_same stack_map_frame_desc endstack

State 234:
## Known stack suffix:
## SEP
## LR(1) items:
defstack -> SEP . [ STACK OFFSET LOCALS DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production defstack -> SEP

State 235:
## Known stack suffix:
## DSTACK stackmap
## LR(1) items:
directive -> DSTACK stackmap . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DSTACK stackmap

State 236:
## Known stack suffix:
## defstack
## LR(1) items:
stackmap -> defstack . stack_map_frame_desc endstack [ SEP ]
## Transitions:
-- On OFFSET shift to state 212
-- On stack_offset_def shift to state 217
-- On stack_map_frame_desc shift to state 237
## Reductions:
-- On STACK LOCALS DEND
--   reduce production stack_offset_def ->

State 237:
## Known stack suffix:
## defstack stack_map_frame_desc
## LR(1) items:
stackmap -> defstack stack_map_frame_desc . endstack [ SEP ]
## Transitions:
-- On DEND shift to state 231
-- On endstack shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## defstack stack_map_frame_desc endstack
## LR(1) items:
stackmap -> defstack stack_map_frame_desc endstack . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stackmap -> defstack stack_map_frame_desc endstack

State 239:
## Known stack suffix:
## DSIGNATURE
## LR(1) items:
directive -> DSIGNATURE . signature_expr [ SEP ]
## Transitions:
-- On Str shift to state 51
-- On signature_expr shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## DSIGNATURE signature_expr
## LR(1) items:
directive -> DSIGNATURE signature_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DSIGNATURE signature_expr

State 241:
## Known stack suffix:
## DSET
## LR(1) items:
directive -> DSET . set_expr [ SEP ]
## Transitions:
-- On Word shift to state 242
-- On set_expr shift to state 244
## Reductions:

State 242:
## Known stack suffix:
## Word
## LR(1) items:
set_expr -> Word . any_item [ SEP ]
## Transitions:
-- On Word shift to state 84
-- On Str shift to state 85
-- On Num shift to state 86
-- On Int shift to state 87
-- On item shift to state 93
-- On any_item shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## Word any_item
## LR(1) items:
set_expr -> Word any_item . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_expr -> Word any_item

State 244:
## Known stack suffix:
## DSET set_expr
## LR(1) items:
directive -> DSET set_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DSET set_expr

State 245:
## Known stack suffix:
## DLINE
## LR(1) items:
directive -> DLINE . line_expr [ SEP ]
## Transitions:
-- On Int shift to state 246
-- On line_expr shift to state 247
## Reductions:

State 246:
## Known stack suffix:
## Int
## LR(1) items:
line_expr -> Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production line_expr -> Int

State 247:
## Known stack suffix:
## DLINE line_expr
## LR(1) items:
directive -> DLINE line_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DLINE line_expr

State 248:
## Known stack suffix:
## DLIMIT
## LR(1) items:
directive -> DLIMIT . limit_expr [ SEP ]
## Transitions:
-- On Word shift to state 249
-- On STACK shift to state 251
-- On LOCALS shift to state 253
-- On limit_expr shift to state 255
## Reductions:

State 249:
## Known stack suffix:
## Word
## LR(1) items:
limit_expr -> Word . Int [ SEP ]
## Transitions:
-- On Int shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## Word Int
## LR(1) items:
limit_expr -> Word Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_expr -> Word Int

State 251:
## Known stack suffix:
## STACK
## LR(1) items:
limit_expr -> STACK . Int [ SEP ]
## Transitions:
-- On Int shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## STACK Int
## LR(1) items:
limit_expr -> STACK Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_expr -> STACK Int

State 253:
## Known stack suffix:
## LOCALS
## LR(1) items:
limit_expr -> LOCALS . Int [ SEP ]
## Transitions:
-- On Int shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## LOCALS Int
## LR(1) items:
limit_expr -> LOCALS Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production limit_expr -> LOCALS Int

State 255:
## Known stack suffix:
## DLIMIT limit_expr
## LR(1) items:
directive -> DLIMIT limit_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DLIMIT limit_expr

State 256:
## Known stack suffix:
## DEND
## LR(1) items:
endmethod -> DEND . METHOD SEP [ DMETHOD # ]
## Transitions:
-- On METHOD shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## DEND METHOD
## LR(1) items:
endmethod -> DEND METHOD . SEP [ DMETHOD # ]
## Transitions:
-- On SEP shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## DEND METHOD SEP
## LR(1) items:
endmethod -> DEND METHOD SEP . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production endmethod -> DEND METHOD SEP

State 259:
## Known stack suffix:
## DDEPRECATED
## LR(1) items:
directive -> DDEPRECATED . deprecated_expr [ SEP ]
## Transitions:
-- On deprecated_expr shift to state 260
## Default reduction:
-- After reading the next token, reduce production deprecated_expr ->

State 260:
## Known stack suffix:
## DDEPRECATED deprecated_expr
## LR(1) items:
directive -> DDEPRECATED deprecated_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DDEPRECATED deprecated_expr

State 261:
## Known stack suffix:
## DCATCH
## LR(1) items:
directive -> DCATCH . catch_expr [ SEP ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 262
-- On catch_expr shift to state 274
## Reductions:

State 262:
## Known stack suffix:
## classname
## LR(1) items:
catch_expr -> classname . FROM Word TO Word USING Word [ SEP ]
catch_expr -> classname . FROM Int TO Int USING Int [ SEP ]
## Transitions:
-- On FROM shift to state 263
## Reductions:

State 263:
## Known stack suffix:
## classname FROM
## LR(1) items:
catch_expr -> classname FROM . Word TO Word USING Word [ SEP ]
catch_expr -> classname FROM . Int TO Int USING Int [ SEP ]
## Transitions:
-- On Word shift to state 264
-- On Int shift to state 269
## Reductions:

State 264:
## Known stack suffix:
## classname FROM Word
## LR(1) items:
catch_expr -> classname FROM Word . TO Word USING Word [ SEP ]
## Transitions:
-- On TO shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## classname FROM Word TO
## LR(1) items:
catch_expr -> classname FROM Word TO . Word USING Word [ SEP ]
## Transitions:
-- On Word shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## classname FROM Word TO Word
## LR(1) items:
catch_expr -> classname FROM Word TO Word . USING Word [ SEP ]
## Transitions:
-- On USING shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## classname FROM Word TO Word USING
## LR(1) items:
catch_expr -> classname FROM Word TO Word USING . Word [ SEP ]
## Transitions:
-- On Word shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## classname FROM Word TO Word USING Word
## LR(1) items:
catch_expr -> classname FROM Word TO Word USING Word . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production catch_expr -> classname FROM Word TO Word USING Word

State 269:
## Known stack suffix:
## classname FROM Int
## LR(1) items:
catch_expr -> classname FROM Int . TO Int USING Int [ SEP ]
## Transitions:
-- On TO shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## classname FROM Int TO
## LR(1) items:
catch_expr -> classname FROM Int TO . Int USING Int [ SEP ]
## Transitions:
-- On Int shift to state 271
## Reductions:

State 271:
## Known stack suffix:
## classname FROM Int TO Int
## LR(1) items:
catch_expr -> classname FROM Int TO Int . USING Int [ SEP ]
## Transitions:
-- On USING shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## classname FROM Int TO Int USING
## LR(1) items:
catch_expr -> classname FROM Int TO Int USING . Int [ SEP ]
## Transitions:
-- On Int shift to state 273
## Reductions:

State 273:
## Known stack suffix:
## classname FROM Int TO Int USING Int
## LR(1) items:
catch_expr -> classname FROM Int TO Int USING Int . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production catch_expr -> classname FROM Int TO Int USING Int

State 274:
## Known stack suffix:
## DCATCH catch_expr
## LR(1) items:
directive -> DCATCH catch_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DCATCH catch_expr

State 275:
## Known stack suffix:
## DATTRIBUTE
## LR(1) items:
directive -> DATTRIBUTE . generic_expr [ SEP ]
## Transitions:
-- On Word shift to state 58
-- On generic_expr shift to state 276
## Reductions:

State 276:
## Known stack suffix:
## DATTRIBUTE generic_expr
## LR(1) items:
directive -> DATTRIBUTE generic_expr . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DATTRIBUTE generic_expr

State 277:
## Known stack suffix:
## DANNOTATION
## LR(1) items:
directive -> DANNOTATION . ann_met_expr ann_arglist endannotation [ SEP ]
directive -> DANNOTATION . ann_def_spec ann_def_val endannotation [ SEP ]
## Transitions:
-- On VISIBLEPARAM shift to state 278
-- On VISIBLE shift to state 282
-- On INVISIBLEPARAM shift to state 285
-- On INVISIBLE shift to state 289
-- On DEFAULT shift to state 292
-- On ann_met_expr shift to state 294
-- On ann_def_spec shift to state 297
## Reductions:

State 278:
## Known stack suffix:
## VISIBLEPARAM
## LR(1) items:
ann_met_expr -> VISIBLEPARAM . Int classname SEP [ Word DEND ]
## Transitions:
-- On Int shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## VISIBLEPARAM Int
## LR(1) items:
ann_met_expr -> VISIBLEPARAM Int . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## VISIBLEPARAM Int classname
## LR(1) items:
ann_met_expr -> VISIBLEPARAM Int classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## VISIBLEPARAM Int classname SEP
## LR(1) items:
ann_met_expr -> VISIBLEPARAM Int classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_met_expr -> VISIBLEPARAM Int classname SEP

State 282:
## Known stack suffix:
## VISIBLE
## LR(1) items:
ann_met_expr -> VISIBLE . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 283
## Reductions:

State 283:
## Known stack suffix:
## VISIBLE classname
## LR(1) items:
ann_met_expr -> VISIBLE classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 284
## Reductions:

State 284:
## Known stack suffix:
## VISIBLE classname SEP
## LR(1) items:
ann_met_expr -> VISIBLE classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_met_expr -> VISIBLE classname SEP

State 285:
## Known stack suffix:
## INVISIBLEPARAM
## LR(1) items:
ann_met_expr -> INVISIBLEPARAM . Int classname SEP [ Word DEND ]
## Transitions:
-- On Int shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## INVISIBLEPARAM Int
## LR(1) items:
ann_met_expr -> INVISIBLEPARAM Int . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 287
## Reductions:

State 287:
## Known stack suffix:
## INVISIBLEPARAM Int classname
## LR(1) items:
ann_met_expr -> INVISIBLEPARAM Int classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 288
## Reductions:

State 288:
## Known stack suffix:
## INVISIBLEPARAM Int classname SEP
## LR(1) items:
ann_met_expr -> INVISIBLEPARAM Int classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_met_expr -> INVISIBLEPARAM Int classname SEP

State 289:
## Known stack suffix:
## INVISIBLE
## LR(1) items:
ann_met_expr -> INVISIBLE . classname SEP [ Word DEND ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 290
## Reductions:

State 290:
## Known stack suffix:
## INVISIBLE classname
## LR(1) items:
ann_met_expr -> INVISIBLE classname . SEP [ Word DEND ]
## Transitions:
-- On SEP shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## INVISIBLE classname SEP
## LR(1) items:
ann_met_expr -> INVISIBLE classname SEP . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_met_expr -> INVISIBLE classname SEP

State 292:
## Known stack suffix:
## DEFAULT
## LR(1) items:
ann_def_spec -> DEFAULT . SEP [ Word ]
## Transitions:
-- On SEP shift to state 293
## Reductions:

State 293:
## Known stack suffix:
## DEFAULT SEP
## LR(1) items:
ann_def_spec -> DEFAULT SEP . [ Word ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_def_spec -> DEFAULT SEP

State 294:
## Known stack suffix:
## DANNOTATION ann_met_expr
## LR(1) items:
directive -> DANNOTATION ann_met_expr . ann_arglist endannotation [ SEP ]
## Transitions:
-- On Word shift to state 70
-- On ann_arglist shift to state 295
-- On ann_arg_spec shift to state 79
-- On ann_arg_list shift to state 80
-- On ann_arg_expr shift to state 82
## Reductions:
-- On DEND
--   reduce production ann_arglist ->

State 295:
## Known stack suffix:
## DANNOTATION ann_met_expr ann_arglist
## LR(1) items:
directive -> DANNOTATION ann_met_expr ann_arglist . endannotation [ SEP ]
## Transitions:
-- On DEND shift to state 74
-- On endannotation shift to state 296
## Reductions:

State 296:
## Known stack suffix:
## DANNOTATION ann_met_expr ann_arglist endannotation
## LR(1) items:
directive -> DANNOTATION ann_met_expr ann_arglist endannotation . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DANNOTATION ann_met_expr ann_arglist endannotation

State 297:
## Known stack suffix:
## DANNOTATION ann_def_spec
## LR(1) items:
directive -> DANNOTATION ann_def_spec . ann_def_val endannotation [ SEP ]
## Transitions:
-- On Word shift to state 298
-- On ann_def_val shift to state 300
-- On ann_def_expr shift to state 302
## Reductions:

State 298:
## Known stack suffix:
## Word
## LR(1) items:
ann_def_expr -> Word . [ EQ ]
ann_def_expr -> Word . Word [ EQ ]
## Transitions:
-- On Word shift to state 299
## Reductions:
-- On EQ
--   reduce production ann_def_expr -> Word

State 299:
## Known stack suffix:
## Word Word
## LR(1) items:
ann_def_expr -> Word Word . [ EQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_def_expr -> Word Word

State 300:
## Known stack suffix:
## DANNOTATION ann_def_spec ann_def_val
## LR(1) items:
directive -> DANNOTATION ann_def_spec ann_def_val . endannotation [ SEP ]
## Transitions:
-- On DEND shift to state 74
-- On endannotation shift to state 301
## Reductions:

State 301:
## Known stack suffix:
## DANNOTATION ann_def_spec ann_def_val endannotation
## LR(1) items:
directive -> DANNOTATION ann_def_spec ann_def_val endannotation . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production directive -> DANNOTATION ann_def_spec ann_def_val endannotation

State 302:
## Known stack suffix:
## ann_def_expr
## LR(1) items:
ann_def_val -> ann_def_expr . EQ ann_value_list [ DEND ]
## Transitions:
-- On EQ shift to state 303
## Reductions:

State 303:
## Known stack suffix:
## ann_def_expr EQ
## LR(1) items:
ann_def_val -> ann_def_expr EQ . ann_value_list [ DEND ]
## Transitions:
-- On Word shift to state 84
-- On Str shift to state 85
-- On Num shift to state 86
-- On Int shift to state 87
-- On DANNOTATION shift to state 88
-- On item shift to state 93
-- On any_item shift to state 94
-- On ann_value_list shift to state 304
-- On ann_value_items shift to state 96
-- On ann_value shift to state 99
-- On ann_ann_value shift to state 100
-- On ann_ann_list shift to state 101
## Reductions:

State 304:
## Known stack suffix:
## ann_def_expr EQ ann_value_list
## LR(1) items:
ann_def_val -> ann_def_expr EQ ann_value_list . [ DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_def_val -> ann_def_expr EQ ann_value_list

State 305:
## Known stack suffix:
## stmnt
## LR(1) items:
statement -> stmnt . SEP [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
-- On SEP shift to state 306
## Reductions:

State 306:
## Known stack suffix:
## stmnt SEP
## LR(1) items:
statement -> stmnt SEP . [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> stmnt SEP

State 307:
## Known stack suffix:
## defmethod statements
## LR(1) items:
method_spec -> defmethod statements . endmethod [ DMETHOD # ]
statements -> statements . statement [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
-- On error shift to state 132
-- On Word shift to state 133
-- On TABLESWITCH shift to state 135
-- On LOOKUPSWITCH shift to state 154
-- On Int shift to state 172
-- On Insn shift to state 174
-- On DVAR shift to state 186
-- On DTHROWS shift to state 202
-- On DSTACK shift to state 205
-- On DSIGNATURE shift to state 239
-- On DSET shift to state 241
-- On DLINE shift to state 245
-- On DLIMIT shift to state 248
-- On DEND shift to state 256
-- On DDEPRECATED shift to state 259
-- On DCATCH shift to state 261
-- On DATTRIBUTE shift to state 275
-- On DANNOTATION shift to state 277
-- On stmnt shift to state 305
-- On statement shift to state 308
-- On simple_instruction shift to state 183
-- On label shift to state 309
-- On instruction shift to state 310
-- On endmethod shift to state 311
-- On directive shift to state 312
-- On complex_instruction shift to state 185
## Reductions:
-- On SEP
--   reduce production stmnt ->

State 308:
## Known stack suffix:
## statements statement
## LR(1) items:
statements -> statements statement . [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> statements statement

State 309:
## Known stack suffix:
## label
## LR(1) items:
stmnt -> label . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmnt -> label

State 310:
## Known stack suffix:
## instruction
## LR(1) items:
stmnt -> instruction . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmnt -> instruction

State 311:
## Known stack suffix:
## defmethod statements endmethod
## LR(1) items:
method_spec -> defmethod statements endmethod . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_spec -> defmethod statements endmethod

State 312:
## Known stack suffix:
## directive
## LR(1) items:
stmnt -> directive . [ SEP ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production stmnt -> directive

State 313:
## Known stack suffix:
## statement
## LR(1) items:
statements -> statement . [ error Word TABLESWITCH SEP LOOKUPSWITCH Int Insn DVAR DTHROWS DSTACK DSIGNATURE DSET DLINE DLIMIT DEND DDEPRECATED DCATCH DATTRIBUTE DANNOTATION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> statement

State 314:
## Known stack suffix:
## defmethod endmethod
## LR(1) items:
method_spec -> defmethod endmethod . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_spec -> defmethod endmethod

State 315:
## Known stack suffix:
## field_spec
## LR(1) items:
field_list -> field_spec . field_list [ DMETHOD # ]
field_list -> field_spec . [ DMETHOD # ]
## Transitions:
-- On DFIELD shift to state 48
-- On field_spec shift to state 315
-- On field_list shift to state 316
## Reductions:
-- On DMETHOD
--   reduce production field_list -> field_spec

State 316:
## Known stack suffix:
## field_spec field_list
## LR(1) items:
field_list -> field_spec field_list . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_list -> field_spec field_list

State 317:
## Known stack suffix:
## field_list
## LR(1) items:
fields -> field_list . [ DMETHOD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fields -> field_list

State 318:
## Known stack suffix:
## inner_spec
## LR(1) items:
inner_list -> inner_spec . [ DMETHOD DINNER DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_list -> inner_spec

State 319:
## Known stack suffix:
## inner_list
## LR(1) items:
inner_list -> inner_list . inner_spec [ DMETHOD DINNER DFIELD # ]
inners -> inner_list . [ DMETHOD DFIELD # ]
## Transitions:
-- On DINNER shift to state 7
-- On inner_spec shift to state 320
## Reductions:
-- On DMETHOD DFIELD
--   reduce production inners -> inner_list

State 320:
## Known stack suffix:
## inner_list inner_spec
## LR(1) items:
inner_list -> inner_list inner_spec . [ DMETHOD DINNER DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_list -> inner_list inner_spec

State 321:
## Known stack suffix:
## bytecode_spec
## LR(1) items:
jasmin_header -> bytecode_spec . source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DSOURCE shift to state 322
-- On source_spec shift to state 327
## Reductions:
-- On DINTERFACE DCLASS
--   reduce production source_spec ->

State 322:
## Known stack suffix:
## DSOURCE
## LR(1) items:
source_spec -> DSOURCE . Str SEP [ DINTERFACE DCLASS ]
source_spec -> DSOURCE . Word SEP [ DINTERFACE DCLASS ]
## Transitions:
-- On Word shift to state 323
-- On Str shift to state 325
## Reductions:

State 323:
## Known stack suffix:
## DSOURCE Word
## LR(1) items:
source_spec -> DSOURCE Word . SEP [ DINTERFACE DCLASS ]
## Transitions:
-- On SEP shift to state 324
## Reductions:

State 324:
## Known stack suffix:
## DSOURCE Word SEP
## LR(1) items:
source_spec -> DSOURCE Word SEP . [ DINTERFACE DCLASS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production source_spec -> DSOURCE Word SEP

State 325:
## Known stack suffix:
## DSOURCE Str
## LR(1) items:
source_spec -> DSOURCE Str . SEP [ DINTERFACE DCLASS ]
## Transitions:
-- On SEP shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## DSOURCE Str SEP
## LR(1) items:
source_spec -> DSOURCE Str SEP . [ DINTERFACE DCLASS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production source_spec -> DSOURCE Str SEP

State 327:
## Known stack suffix:
## bytecode_spec source_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec . class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DINTERFACE shift to state 328
-- On DCLASS shift to state 332
-- On class_spec shift to state 336
## Reductions:

State 328:
## Known stack suffix:
## DINTERFACE
## LR(1) items:
class_spec -> DINTERFACE . access classname SEP [ DSUPER ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 329
## Reductions:
-- On Word
--   reduce production access_list ->

State 329:
## Known stack suffix:
## DINTERFACE access
## LR(1) items:
class_spec -> DINTERFACE access . classname SEP [ DSUPER ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 330
## Reductions:

State 330:
## Known stack suffix:
## DINTERFACE access classname
## LR(1) items:
class_spec -> DINTERFACE access classname . SEP [ DSUPER ]
## Transitions:
-- On SEP shift to state 331
## Reductions:

State 331:
## Known stack suffix:
## DINTERFACE access classname SEP
## LR(1) items:
class_spec -> DINTERFACE access classname SEP . [ DSUPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_spec -> DINTERFACE access classname SEP

State 332:
## Known stack suffix:
## DCLASS
## LR(1) items:
class_spec -> DCLASS . access classname SEP [ DSUPER ]
## Transitions:
-- On VOLATILE shift to state 9
-- On VARARGS shift to state 10
-- On TRANSIENT shift to state 11
-- On SYNTHETIC shift to state 12
-- On SYNCHRONIZED shift to state 13
-- On STRICT shift to state 14
-- On STATIC shift to state 15
-- On PUBLIC shift to state 16
-- On PROTECTED shift to state 17
-- On PRIVATE shift to state 18
-- On NATIVE shift to state 19
-- On INTERFACE shift to state 20
-- On FINAL shift to state 21
-- On ENUM shift to state 22
-- On BRIDGE shift to state 23
-- On ANNOTATION shift to state 24
-- On ABSTRACT shift to state 25
-- On access_list shift to state 26
-- On access_items shift to state 27
-- On access_item shift to state 28
-- On access shift to state 333
## Reductions:
-- On Word
--   reduce production access_list ->

State 333:
## Known stack suffix:
## DCLASS access
## LR(1) items:
class_spec -> DCLASS access . classname SEP [ DSUPER ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 334
## Reductions:

State 334:
## Known stack suffix:
## DCLASS access classname
## LR(1) items:
class_spec -> DCLASS access classname . SEP [ DSUPER ]
## Transitions:
-- On SEP shift to state 335
## Reductions:

State 335:
## Known stack suffix:
## DCLASS access classname SEP
## LR(1) items:
class_spec -> DCLASS access classname SEP . [ DSUPER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_spec -> DCLASS access classname SEP

State 336:
## Known stack suffix:
## bytecode_spec source_spec class_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec . super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DSUPER shift to state 337
-- On super_spec shift to state 340
## Reductions:

State 337:
## Known stack suffix:
## DSUPER
## LR(1) items:
super_spec -> DSUPER . classname SEP [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 338
## Reductions:

State 338:
## Known stack suffix:
## DSUPER classname
## LR(1) items:
super_spec -> DSUPER classname . SEP [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 339
## Reductions:

State 339:
## Known stack suffix:
## DSUPER classname SEP
## LR(1) items:
super_spec -> DSUPER classname SEP . [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production super_spec -> DSUPER classname SEP

State 340:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec . implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DIMPLEMENTS shift to state 341
-- On implements_spec shift to state 344
-- On implements_list shift to state 346
-- On implements shift to state 347
## Reductions:
-- On DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION
--   reduce production implements ->

State 341:
## Known stack suffix:
## DIMPLEMENTS
## LR(1) items:
implements_spec -> DIMPLEMENTS . classname SEP [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On Word shift to state 34
-- On classname shift to state 342
## Reductions:

State 342:
## Known stack suffix:
## DIMPLEMENTS classname
## LR(1) items:
implements_spec -> DIMPLEMENTS classname . SEP [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## DIMPLEMENTS classname SEP
## LR(1) items:
implements_spec -> DIMPLEMENTS classname SEP . [ DSIGNATURE DMETHOD DINNER DIMPLEMENTS DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implements_spec -> DIMPLEMENTS classname SEP

State 344:
## Known stack suffix:
## implements_spec
## LR(1) items:
implements_list -> implements_spec . implements_list [ DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
implements_list -> implements_spec . [ DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On DIMPLEMENTS shift to state 341
-- On implements_spec shift to state 344
-- On implements_list shift to state 345
## Reductions:
-- On DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION
--   reduce production implements_list -> implements_spec

State 345:
## Known stack suffix:
## implements_spec implements_list
## LR(1) items:
implements_list -> implements_spec implements_list . [ DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implements_list -> implements_spec implements_list

State 346:
## Known stack suffix:
## implements_list
## LR(1) items:
implements -> implements_list . [ DSIGNATURE DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implements -> implements_list

State 347:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements . signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DSIGNATURE shift to state 348
-- On signature_spec shift to state 351
## Reductions:
-- On DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION
--   reduce production signature_spec ->

State 348:
## Known stack suffix:
## DSIGNATURE
## LR(1) items:
signature_spec -> DSIGNATURE . signature_expr SEP [ DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On Str shift to state 51
-- On signature_expr shift to state 349
## Reductions:

State 349:
## Known stack suffix:
## DSIGNATURE signature_expr
## LR(1) items:
signature_spec -> DSIGNATURE signature_expr . SEP [ DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## DSIGNATURE signature_expr SEP
## LR(1) items:
signature_spec -> DSIGNATURE signature_expr SEP . [ DMETHOD DINNER DFIELD DENCLOSING DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production signature_spec -> DSIGNATURE signature_expr SEP

State 351:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec . enclosing_spec deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DENCLOSING shift to state 352
-- On enclosing_spec shift to state 356
## Reductions:
-- On DMETHOD DINNER DFIELD DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION
--   reduce production enclosing_spec ->

State 352:
## Known stack suffix:
## DENCLOSING
## LR(1) items:
enclosing_spec -> DENCLOSING . METHOD Word SEP [ DMETHOD DINNER DFIELD DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On METHOD shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## DENCLOSING METHOD
## LR(1) items:
enclosing_spec -> DENCLOSING METHOD . Word SEP [ DMETHOD DINNER DFIELD DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On Word shift to state 354
## Reductions:

State 354:
## Known stack suffix:
## DENCLOSING METHOD Word
## LR(1) items:
enclosing_spec -> DENCLOSING METHOD Word . SEP [ DMETHOD DINNER DFIELD DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 355
## Reductions:

State 355:
## Known stack suffix:
## DENCLOSING METHOD Word SEP
## LR(1) items:
enclosing_spec -> DENCLOSING METHOD Word SEP . [ DMETHOD DINNER DFIELD DDEPRECATED DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enclosing_spec -> DENCLOSING METHOD Word SEP

State 356:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec . deprecated_spec annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DDEPRECATED shift to state 357
-- On deprecated_spec shift to state 360
## Reductions:
-- On DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION
--   reduce production deprecated_spec ->

State 357:
## Known stack suffix:
## DDEPRECATED
## LR(1) items:
deprecated_spec -> DDEPRECATED . deprecated_expr SEP [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On deprecated_expr shift to state 358
## Default reduction:
-- After reading the next token, reduce production deprecated_expr ->

State 358:
## Known stack suffix:
## DDEPRECATED deprecated_expr
## LR(1) items:
deprecated_spec -> DDEPRECATED deprecated_expr . SEP [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On SEP shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## DDEPRECATED deprecated_expr SEP
## LR(1) items:
deprecated_spec -> DDEPRECATED deprecated_expr SEP . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production deprecated_spec -> DDEPRECATED deprecated_expr SEP

State 360:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec . annotations generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DANNOTATION shift to state 361
-- On annotations shift to state 363
-- On ann_cls_spec shift to state 378
-- On ann_cls_list shift to state 379
-- On ann_cls_expr shift to state 381
## Reductions:
-- On DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE
--   reduce production annotations ->

State 361:
## Known stack suffix:
## DANNOTATION
## LR(1) items:
ann_cls_expr -> DANNOTATION . ann_clf_expr [ Word DEND ]
## Transitions:
-- On VISIBLE shift to state 63
-- On INVISIBLE shift to state 66
-- On ann_clf_expr shift to state 362
## Reductions:

State 362:
## Known stack suffix:
## DANNOTATION ann_clf_expr
## LR(1) items:
ann_cls_expr -> DANNOTATION ann_clf_expr . [ Word DEND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_cls_expr -> DANNOTATION ann_clf_expr

State 363:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations . generic_attributes debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DATTRIBUTE shift to state 364
-- On generic_spec shift to state 367
-- On generic_list shift to state 368
-- On generic_attributes shift to state 370
## Reductions:
-- On DMETHOD DINNER DFIELD DDEBUG
--   reduce production generic_attributes ->

State 364:
## Known stack suffix:
## DATTRIBUTE
## LR(1) items:
generic_spec -> DATTRIBUTE . generic_expr SEP [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
-- On Word shift to state 58
-- On generic_expr shift to state 365
## Reductions:

State 365:
## Known stack suffix:
## DATTRIBUTE generic_expr
## LR(1) items:
generic_spec -> DATTRIBUTE generic_expr . SEP [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
-- On SEP shift to state 366
## Reductions:

State 366:
## Known stack suffix:
## DATTRIBUTE generic_expr SEP
## LR(1) items:
generic_spec -> DATTRIBUTE generic_expr SEP . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_spec -> DATTRIBUTE generic_expr SEP

State 367:
## Known stack suffix:
## generic_spec
## LR(1) items:
generic_list -> generic_spec . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_list -> generic_spec

State 368:
## Known stack suffix:
## generic_list
## LR(1) items:
generic_attributes -> generic_list . [ DMETHOD DINNER DFIELD DDEBUG # ]
generic_list -> generic_list . generic_spec [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
-- On DATTRIBUTE shift to state 364
-- On generic_spec shift to state 369
## Reductions:
-- On DMETHOD DINNER DFIELD DDEBUG
--   reduce production generic_attributes -> generic_list

State 369:
## Known stack suffix:
## generic_list generic_spec
## LR(1) items:
generic_list -> generic_list generic_spec . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generic_list -> generic_list generic_spec

State 370:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes . debug_extension [ DMETHOD DINNER DFIELD # ]
## Transitions:
-- On DDEBUG shift to state 371
-- On debug_spec shift to state 374
-- On debug_list shift to state 375
-- On debug_extension shift to state 377
## Reductions:
-- On DMETHOD DINNER DFIELD
--   reduce production debug_extension ->

State 371:
## Known stack suffix:
## DDEBUG
## LR(1) items:
debug_spec -> DDEBUG . Str SEP [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
-- On Str shift to state 372
## Reductions:

State 372:
## Known stack suffix:
## DDEBUG Str
## LR(1) items:
debug_spec -> DDEBUG Str . SEP [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
-- On SEP shift to state 373
## Reductions:

State 373:
## Known stack suffix:
## DDEBUG Str SEP
## LR(1) items:
debug_spec -> DDEBUG Str SEP . [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production debug_spec -> DDEBUG Str SEP

State 374:
## Known stack suffix:
## debug_spec
## LR(1) items:
debug_list -> debug_spec . [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production debug_list -> debug_spec

State 375:
## Known stack suffix:
## debug_list
## LR(1) items:
debug_extension -> debug_list . [ DMETHOD DINNER DFIELD # ]
debug_list -> debug_list . debug_spec [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
-- On DDEBUG shift to state 371
-- On debug_spec shift to state 376
## Reductions:
-- On DMETHOD DINNER DFIELD
--   reduce production debug_extension -> debug_list

State 376:
## Known stack suffix:
## debug_list debug_spec
## LR(1) items:
debug_list -> debug_list debug_spec . [ DMETHOD DINNER DFIELD DDEBUG # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production debug_list -> debug_list debug_spec

State 377:
## Known stack suffix:
## bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension
## LR(1) items:
jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension . [ DMETHOD DINNER DFIELD # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jasmin_header -> bytecode_spec source_spec class_spec super_spec implements signature_spec enclosing_spec deprecated_spec annotations generic_attributes debug_extension

State 378:
## Known stack suffix:
## ann_cls_spec
## LR(1) items:
ann_cls_list -> ann_cls_spec . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_cls_list -> ann_cls_spec

State 379:
## Known stack suffix:
## ann_cls_list
## LR(1) items:
ann_cls_list -> ann_cls_list . ann_cls_spec [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
annotations -> ann_cls_list . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE # ]
## Transitions:
-- On DANNOTATION shift to state 361
-- On ann_cls_spec shift to state 380
-- On ann_cls_expr shift to state 381
## Reductions:
-- On DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE
--   reduce production annotations -> ann_cls_list

State 380:
## Known stack suffix:
## ann_cls_list ann_cls_spec
## LR(1) items:
ann_cls_list -> ann_cls_list ann_cls_spec . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_cls_list -> ann_cls_list ann_cls_spec

State 381:
## Known stack suffix:
## ann_cls_expr
## LR(1) items:
ann_cls_spec -> ann_cls_expr . ann_arglist endannotationsep [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On Word shift to state 70
-- On ann_arglist shift to state 382
-- On ann_arg_spec shift to state 79
-- On ann_arg_list shift to state 80
-- On ann_arg_expr shift to state 82
## Reductions:
-- On DEND
--   reduce production ann_arglist ->

State 382:
## Known stack suffix:
## ann_cls_expr ann_arglist
## LR(1) items:
ann_cls_spec -> ann_cls_expr ann_arglist . endannotationsep [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
-- On DEND shift to state 74
-- On endannotationsep shift to state 383
-- On endannotation shift to state 77
## Reductions:

State 383:
## Known stack suffix:
## ann_cls_expr ann_arglist endannotationsep
## LR(1) items:
ann_cls_spec -> ann_cls_expr ann_arglist endannotationsep . [ DMETHOD DINNER DFIELD DDEBUG DATTRIBUTE DANNOTATION # ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ann_cls_spec -> ann_cls_expr ann_arglist endannotationsep

State 384:
## Known stack suffix:
## jas_file
## LR(1) items:
jas_file' -> jas_file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept jas_file

