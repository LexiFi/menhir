
** Conflict (shift/reduce) in state 274.
** Tokens involved: VLINE TIMES POWER PLUS OR NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET IS IN GT_EQ GT EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

FOR expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
(?)

** In state 274, looking ahead at VLINE, reducing production
** expr -> expr IN expr
** is permitted because of the following sub-derivation:

FOR expr IN expr stmts ENDFOR 
    expr VLINE expr // lookahead token appears
    expr IN expr . 

** In state 274, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

FOR expr IN expr stmts ENDFOR 
            expr . VLINE expr 

** Conflict (shift/reduce) in state 271.
** Tokens involved: LPAREN IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

FOR ident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
FOR expr IN expr stmts ENDFOR 
    (?)

** In state 271, looking ahead at LPAREN, reducing production
** expr -> ident
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
ident . 

** In state 271, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

ident . LPAREN expr_list RPAREN 

** Conflict (shift/reduce) in state 262.
** Tokens involved: MINUS LPAREN LBRACKET
** The following explanations concentrate on token MINUS.
** This state is reached from input after reading:

expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 262, looking ahead at MINUS, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr . MINUS expr 

** In state 262, looking ahead at MINUS, reducing production
** stmt -> expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with MINUS
expr . 

** Conflict (shift/reduce) in state 227.
** Tokens involved: error TRUE STRING NULL NOT MINUS LPAREN LBRACKET LBRACE INT IDENT FLOAT FALSE
** The following explanations concentrate on token error.
** This state is reached from input after reading:

WITH expr COMMA

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
(?)

** In state 227, looking ahead at error, reducing production
** expr_list ->
** is permitted because of the following sub-derivation:

WITH expr_list stmts ENDWITH // lookahead token appears because stmts can begin with error
     expr COMMA expr_list // lookahead token is inherited
                . 

** In state 227, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

WITH expr_list stmts ENDWITH 
     expr COMMA . error 

** Conflict (shift/reduce) in state 226.
** Tokens involved: MINUS LPAREN LBRACKET
** The following explanations concentrate on token MINUS.
** This state is reached from input after reading:

WITH expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
(?)

** In state 226, looking ahead at MINUS, shifting is permitted
** because of the following sub-derivation:

WITH expr_list stmts ENDWITH 
     expr 
     expr . MINUS expr 

** In state 226, looking ahead at MINUS, reducing production
** expr_list -> expr
** is permitted because of the following sub-derivation:

WITH expr_list stmts ENDWITH // lookahead token appears because stmts can begin with MINUS
     expr . 

** Conflict (shift/reduce) in state 224.
** Tokens involved: TRUE STRING NULL NOT MINUS LPAREN LBRACKET LBRACE INT IDENT FLOAT FALSE
** The following explanations concentrate on token TRUE.
** This state is reached from input after reading:

FROM STRING IMPORT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 224, looking ahead at TRUE, shifting is permitted
** because of the following sub-derivation:

stmt 
FROM STRING IMPORT expr_list 
                   expr 
                   . TRUE 

** In state 224, looking ahead at TRUE, reducing production
** expr_list ->
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with TRUE
FROM STRING IMPORT expr_list // lookahead token is inherited
                   . 

** Conflict (reduce/reduce) in state 220.
** Token involved: ENDIF
** This state is reached from input after reading:

IF if_chain ELSE error

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
IF if_chain else_part ENDIF // lookahead token appears
            (?)

** In state 220, looking ahead at ENDIF, reducing production
** else_part -> ELSE error
** is permitted because of the following sub-derivation:

ELSE error . 

** In state 220, looking ahead at ENDIF, reducing production
** stmt -> error
** is permitted because of the following sub-derivation:

ELSE stmts // lookahead token is inherited
     stmt // lookahead token is inherited
     error . 

** Conflict (shift/reduce) in state 203.
** Tokens involved: WITH MINUS LPAREN LBRACKET
** The following explanations concentrate on token WITH.
** This state is reached from input after reading:

INCLUDE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 203, looking ahead at WITH, reducing production
** context_part ->
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with WITH
INCLUDE expr context_part // lookahead token is inherited
             . 

** In state 203, looking ahead at WITH, shifting is permitted
** because of the following sub-derivation:

stmt 
INCLUDE expr context_part 
             . WITH CONTEXT 

** Conflict (shift/reduce) in state 194.
** Tokens involved: MINUS LPAREN LBRACKET
** The following explanations concentrate on token MINUS.
** This state is reached from input after reading:

RAWINCLUDE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 194, looking ahead at MINUS, shifting is permitted
** because of the following sub-derivation:

stmt 
RAWINCLUDE expr 
           expr . MINUS expr 

** In state 194, looking ahead at MINUS, reducing production
** stmt -> RAWINCLUDE expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with MINUS
RAWINCLUDE expr . 

** Conflict (shift/reduce) in state 187.
** Tokens involved: LPAREN LBRACKET
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

SET ident_list EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 187, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
SET ident_list EQ expr 
                  expr . LPAREN expr_list RPAREN 

** In state 187, looking ahead at LPAREN, reducing production
** stmt -> SET ident_list EQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
SET ident_list EQ expr . 

** Conflict (shift/reduce) in state 181.
** Token involved: error
** This state is reached from input after reading:

TEXT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 181, looking ahead at error, reducing production
** stmt -> TEXT
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with error
TEXT . 

** In state 181, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

stmt 
TEXT . error 

** Conflict (shift/reduce) in state 179.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

NOT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 179, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
NOT expr 
    expr . LPAREN expr_list RPAREN 

** In state 179, looking ahead at LPAREN, reducing production
** expr -> NOT expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
NOT expr . 

** Conflict (shift/reduce) in state 178.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 178, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
MINUS expr 
      expr . LPAREN expr_list RPAREN 

** In state 178, looking ahead at LPAREN, reducing production
** expr -> MINUS expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
MINUS expr . 

** Conflict (shift/reduce) in state 175.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN NOT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 175, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

NOT expr 
    expr . LPAREN expr_list RPAREN 

** In state 175, looking ahead at LPAREN, reducing production
** expr -> NOT expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
NOT expr . 

** Conflict (shift/reduce) in state 174.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 174, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

MINUS expr 
      expr . LPAREN expr_list RPAREN 

** In state 174, looking ahead at LPAREN, reducing production
** expr -> MINUS expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
MINUS expr . 

** Conflict (shift/reduce) in state 157.
** Tokens involved: VLINE TIMES POWER PLUS OR NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET IS IN GT_EQ GT EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

expr IS expr expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
(?)

** In state 157, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
             expr . VLINE expr 

** In state 157, looking ahead at VLINE, reducing production
** expr -> expr IS expr expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr expr . 

** Conflict (shift/reduce) in state 156.
** Token involved: RBRACKET
** This state is reached from input after reading:

IF expr LBRACKET STRING

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
IF if_chain else_part ENDIF 
   (?)

** In state 156, looking ahead at RBRACKET, reducing production
** expr -> STRING
** is permitted because of the following sub-derivation:

expr stmts 
     stmt 
     expr 
     LBRACKET expr_list RBRACKET // lookahead token appears
              expr // lookahead token is inherited
              STRING . 

** In state 156, looking ahead at RBRACKET, shifting is permitted
** because of the following sub-derivation:

expr stmts 
expr LBRACKET STRING . RBRACKET 

** Conflict (shift/reduce) in state 153.
** Token involved: RPAREN
** This state is reached from input after reading:

LPAREN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
(?)

** In state 153, looking ahead at RPAREN, shifting is permitted
** because of the following sub-derivation:

LPAREN expr . RPAREN 

** In state 153, looking ahead at RPAREN, reducing production
** expr_list -> expr
** is permitted because of the following sub-derivation:

LPAREN expr_list RPAREN // lookahead token appears
       expr . 

** Conflict (reduce/reduce) in state 152.
** Tokens involved: error WITHOUT WITH VLINE TRUE TIMES TEXT STRING SET RAWINCLUDE POWER PLUS OR NULL NOT NEQ MOD MINUS MACRO LT_EQ LT LPAREN LBRACKET LBRACE IS INT INCLUDE IN IMPORT IF IDENT GT_EQ GT FROM FOR FLOAT FILTER FALSE EXTENDS EQ_EQ EOF ENDWITH ENDMACRO ENDIF ENDFOR ENDFILTER ENDCALL ENDBLOCK ENDAUTOESCAPE ELSEIF ELSE DOT DIV COMMA COLON CALL BLOCK AUTOESCAPE AND
** The following explanations concentrate on token error.
** This state is reached from input after reading:

IF expr LPAREN expr_list RPAREN

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
IF if_chain else_part ENDIF 
   (?)

** In state 152, looking ahead at error, reducing production
** expr -> expr LPAREN expr_list RPAREN
** is permitted because of the following sub-derivation:

expr stmts // lookahead token appears because stmts can begin with error
expr LPAREN expr_list RPAREN . 

** In state 152, looking ahead at error, reducing production
** expr -> LPAREN expr_list RPAREN
** is permitted because of the following sub-derivation:

expr stmts 
     stmt stmts // lookahead token appears because stmts can begin with error
     expr // lookahead token is inherited
     LPAREN expr_list RPAREN . 

** Conflict (shift/reduce/reduce) in state 149.
** Tokens involved: error WITHOUT WITH VLINE TRUE TIMES TEXT STRING SET RAWINCLUDE POWER PLUS OR NULL NOT NEQ MOD MINUS MACRO LT_EQ LT LPAREN LBRACKET LBRACE IS INT INCLUDE IN IMPORT IF IDENT GT_EQ GT FROM FOR FLOAT FILTER FALSE EXTENDS EQ_EQ EOF ENDWITH ENDMACRO ENDIF ENDFOR ENDFILTER ENDCALL ENDBLOCK ENDAUTOESCAPE ELSEIF ELSE DIV COMMA COLON CALL BLOCK AUTOESCAPE AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

IF expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
IF if_chain else_part ENDIF 
   (?)

** In state 149, looking ahead at VLINE, reducing production
** expr -> MINUS expr
** is permitted because of the following sub-derivation:

expr stmts 
     stmt 
     expr 
     expr VLINE expr // lookahead token appears
     MINUS expr . 

** In state 149, looking ahead at VLINE, reducing production
** expr -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr stmts 
expr VLINE expr // lookahead token appears
expr MINUS expr . 

** In state 149, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr stmts 
expr MINUS expr 
           expr . VLINE expr 

** Conflict (shift/reduce) in state 147.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr AND expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 147, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr AND expr 
         expr . LPAREN expr_list RPAREN 

** In state 147, looking ahead at LPAREN, reducing production
** expr -> expr AND expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr AND expr . 

** Conflict (shift/reduce) in state 145.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr EQ_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 145, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr EQ_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 145, looking ahead at LPAREN, reducing production
** expr -> expr EQ_EQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr EQ_EQ expr . 

** Conflict (shift/reduce) in state 143.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr GT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 143, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr GT expr 
        expr . LPAREN expr_list RPAREN 

** In state 143, looking ahead at LPAREN, reducing production
** expr -> expr GT expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr GT expr . 

** Conflict (shift/reduce) in state 141.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr GT_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 141, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr GT_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 141, looking ahead at LPAREN, reducing production
** expr -> expr GT_EQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr GT_EQ expr . 

** Conflict (shift/reduce) in state 139.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr LT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 139, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr LT expr 
        expr . LPAREN expr_list RPAREN 

** In state 139, looking ahead at LPAREN, reducing production
** expr -> expr LT expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr LT expr . 

** Conflict (shift/reduce) in state 137.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr LT_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 137, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr LT_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 137, looking ahead at LPAREN, reducing production
** expr -> expr LT_EQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr LT_EQ expr . 

** Conflict (shift/reduce) in state 135.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 135, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr MINUS expr 
           expr . LPAREN expr_list RPAREN 

** In state 135, looking ahead at LPAREN, reducing production
** expr -> expr MINUS expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr MINUS expr . 

** Conflict (shift/reduce) in state 133.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr NEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 133, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr NEQ expr 
         expr . LPAREN expr_list RPAREN 

** In state 133, looking ahead at LPAREN, reducing production
** expr -> expr NEQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr NEQ expr . 

** Conflict (shift/reduce) in state 131.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr OR expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 131, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr OR expr 
        expr . LPAREN expr_list RPAREN 

** In state 131, looking ahead at LPAREN, reducing production
** expr -> expr OR expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr OR expr . 

** Conflict (shift/reduce) in state 129.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr DIV expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 129, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr DIV expr 
         expr . LPAREN expr_list RPAREN 

** In state 129, looking ahead at LPAREN, reducing production
** expr -> expr DIV expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr DIV expr . 

** Conflict (shift/reduce) in state 125.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr MOD expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 125, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr MOD expr 
         expr . LPAREN expr_list RPAREN 

** In state 125, looking ahead at LPAREN, reducing production
** expr -> expr MOD expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr MOD expr . 

** Conflict (shift/reduce) in state 123.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 123, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr PLUS expr 
          expr . LPAREN expr_list RPAREN 

** In state 123, looking ahead at LPAREN, reducing production
** expr -> expr PLUS expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr PLUS expr . 

** Conflict (shift/reduce) in state 121.
** Tokens involved: VLINE TIMES POWER PLUS OR NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET IS IN GT_EQ GT EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
(?)

** In state 121, looking ahead at VLINE, reducing production
** expr -> expr IN expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IN expr . 

** In state 121, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IN expr 
        expr . VLINE expr 

** Conflict (shift/reduce) in state 119.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 119, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr TIMES expr 
           expr . LPAREN expr_list RPAREN 

** In state 119, looking ahead at LPAREN, reducing production
** expr -> expr TIMES expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr TIMES expr . 

** Conflict (shift/reduce) in state 117.
** Tokens involved: VLINE TRUE TIMES STRING POWER PLUS OR NULL NOT NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET LBRACE IS INT IN IDENT GT_EQ GT FLOAT FALSE EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

expr IS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
(?)

** In state 117, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
        expr . VLINE expr 

** In state 117, looking ahead at VLINE, reducing production
** expr -> expr IS expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr . 

** Conflict (shift/reduce) in state 109.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr POWER expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 109, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr POWER expr 
           expr . LPAREN expr_list RPAREN 

** In state 109, looking ahead at LPAREN, reducing production
** expr -> expr POWER expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr POWER expr . 

** Conflict (shift/reduce) in state 107.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

expr VLINE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 107, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
expr VLINE expr 
           expr . LPAREN expr_list RPAREN 

** In state 107, looking ahead at LPAREN, reducing production
** expr -> expr VLINE expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
expr VLINE expr . 

** Conflict (shift/reduce) in state 105.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

ident EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 105, looking ahead at LPAREN, reducing production
** expr -> ident EQ expr
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
ident EQ expr . 

** In state 105, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
ident EQ expr 
         expr . LPAREN expr_list RPAREN 

** Conflict (shift/reduce) in state 100.
** Token involved: LPAREN
** This state is reached from input after reading:

ident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 100, looking ahead at LPAREN, reducing production
** expr -> ident
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with LPAREN
expr // lookahead token is inherited
ident . 

** In state 100, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
ident . LPAREN expr_list RPAREN 

** Conflict (shift/reduce) in state 96.
** Token involved: error
** This state is reached from input after reading:

IDENT

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
(?)

** In state 96, looking ahead at error, reducing production
** ident -> IDENT
** is permitted because of the following sub-derivation:

stmt stmts // lookahead token appears because stmts can begin with error
expr // lookahead token is inherited
ident // lookahead token is inherited
IDENT . 

** In state 96, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

stmt 
expr 
ident 
IDENT . error 

** Conflict (shift/reduce) in state 89.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN ident EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 89, looking ahead at LPAREN, reducing production
** expr -> ident EQ expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
ident EQ expr . 

** In state 89, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

ident EQ expr 
         expr . LPAREN expr_list RPAREN 

** Conflict (shift/reduce) in state 87.
** Tokens involved: VLINE TIMES POWER PLUS OR NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET IS IN GT_EQ GT EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

LPAREN expr IS expr expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 87, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
             expr . VLINE expr 

** In state 87, looking ahead at VLINE, reducing production
** expr -> expr IS expr expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr expr . 

** Conflict (shift/reduce) in state 84.
** Token involved: RBRACKET
** This state is reached from input after reading:

LPAREN expr IS expr LBRACKET STRING

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 84, looking ahead at RBRACKET, reducing production
** expr -> STRING
** is permitted because of the following sub-derivation:

expr IS expr expr 
             LBRACKET expr_list RBRACKET // lookahead token appears
                      expr // lookahead token is inherited
                      STRING . 

** In state 84, looking ahead at RBRACKET, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
        expr LBRACKET STRING . RBRACKET 

** Conflict (shift/reduce) in state 78.
** Token involved: RPAREN
** This state is reached from input after reading:

LPAREN LPAREN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 78, looking ahead at RPAREN, shifting is permitted
** because of the following sub-derivation:

LPAREN expr . RPAREN 

** In state 78, looking ahead at RPAREN, reducing production
** expr_list -> expr
** is permitted because of the following sub-derivation:

LPAREN expr_list RPAREN // lookahead token appears
       expr . 

** Conflict (reduce/reduce) in state 77.
** Tokens involved: VLINE TRUE TIMES STRING RPAREN RBRACKET RBRACE POWER PLUS OR NULL NOT NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET LBRACE IS INT IN IDENT GT_EQ GT FLOAT FALSE EQ_EQ DOT DIV COMMA AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

LPAREN expr IS expr LPAREN expr_list RPAREN

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       expr VLINE expr // lookahead token appears
       (?)

** In state 77, looking ahead at VLINE, reducing production
** expr -> expr LPAREN expr_list RPAREN
** is permitted because of the following sub-derivation:

expr IS expr // lookahead token is inherited
        expr LPAREN expr_list RPAREN . 

** In state 77, looking ahead at VLINE, reducing production
** expr -> LPAREN expr_list RPAREN
** is permitted because of the following sub-derivation:

expr IS expr expr // lookahead token is inherited
             LPAREN expr_list RPAREN . 

** Conflict (shift/reduce/reduce) in state 74.
** Tokens involved: VLINE TRUE TIMES STRING RPAREN RBRACKET RBRACE POWER PLUS OR NULL NOT NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET LBRACE IS INT IN IDENT GT_EQ GT FLOAT FALSE EQ_EQ DIV COMMA AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

LPAREN expr IS expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 74, looking ahead at VLINE, reducing production
** expr -> MINUS expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr expr // lookahead token is inherited
             MINUS expr . 

** In state 74, looking ahead at VLINE, reducing production
** expr -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr // lookahead token is inherited
        expr MINUS expr . 

** In state 74, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
             MINUS expr 
                   expr . VLINE expr 

** Conflict (shift/reduce) in state 72.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr AND expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 72, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr AND expr 
         expr . LPAREN expr_list RPAREN 

** In state 72, looking ahead at LPAREN, reducing production
** expr -> expr AND expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr AND expr . 

** Conflict (shift/reduce) in state 70.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr EQ_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 70, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr EQ_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 70, looking ahead at LPAREN, reducing production
** expr -> expr EQ_EQ expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr EQ_EQ expr . 

** Conflict (shift/reduce) in state 68.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr GT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 68, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr GT expr 
        expr . LPAREN expr_list RPAREN 

** In state 68, looking ahead at LPAREN, reducing production
** expr -> expr GT expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr GT expr . 

** Conflict (shift/reduce) in state 66.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr GT_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 66, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr GT_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 66, looking ahead at LPAREN, reducing production
** expr -> expr GT_EQ expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr GT_EQ expr . 

** Conflict (shift/reduce) in state 64.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr LT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 64, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr LT expr 
        expr . LPAREN expr_list RPAREN 

** In state 64, looking ahead at LPAREN, reducing production
** expr -> expr LT expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr LT expr . 

** Conflict (shift/reduce) in state 62.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr LT_EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 62, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr LT_EQ expr 
           expr . LPAREN expr_list RPAREN 

** In state 62, looking ahead at LPAREN, reducing production
** expr -> expr LT_EQ expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr LT_EQ expr . 

** Conflict (shift/reduce) in state 60.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 60, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr MINUS expr 
           expr . LPAREN expr_list RPAREN 

** In state 60, looking ahead at LPAREN, reducing production
** expr -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr MINUS expr . 

** Conflict (shift/reduce) in state 58.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr NEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 58, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr NEQ expr 
         expr . LPAREN expr_list RPAREN 

** In state 58, looking ahead at LPAREN, reducing production
** expr -> expr NEQ expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr NEQ expr . 

** Conflict (shift/reduce) in state 56.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr OR expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 56, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr OR expr 
        expr . LPAREN expr_list RPAREN 

** In state 56, looking ahead at LPAREN, reducing production
** expr -> expr OR expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr OR expr . 

** Conflict (shift/reduce) in state 54.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr DIV expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 54, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr DIV expr 
         expr . LPAREN expr_list RPAREN 

** In state 54, looking ahead at LPAREN, reducing production
** expr -> expr DIV expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr DIV expr . 

** Conflict (shift/reduce) in state 50.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr MOD expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 50, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr MOD expr 
         expr . LPAREN expr_list RPAREN 

** In state 50, looking ahead at LPAREN, reducing production
** expr -> expr MOD expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr MOD expr . 

** Conflict (shift/reduce) in state 48.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 48, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr PLUS expr 
          expr . LPAREN expr_list RPAREN 

** In state 48, looking ahead at LPAREN, reducing production
** expr -> expr PLUS expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr PLUS expr . 

** Conflict (shift/reduce) in state 46.
** Tokens involved: VLINE TIMES POWER PLUS OR NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET IS IN GT_EQ GT EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

LPAREN expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 46, looking ahead at VLINE, reducing production
** expr -> expr IN expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IN expr . 

** In state 46, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IN expr 
        expr . VLINE expr 

** Conflict (shift/reduce) in state 44.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 44, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr TIMES expr 
           expr . LPAREN expr_list RPAREN 

** In state 44, looking ahead at LPAREN, reducing production
** expr -> expr TIMES expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr TIMES expr . 

** Conflict (shift/reduce) in state 42.
** Tokens involved: VLINE TRUE TIMES STRING POWER PLUS OR NULL NOT NEQ MOD MINUS LT_EQ LT LPAREN LBRACKET LBRACE IS INT IN IDENT GT_EQ GT FLOAT FALSE EQ_EQ DOT DIV AND
** The following explanations concentrate on token VLINE.
** This state is reached from input after reading:

LPAREN expr IS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 42, looking ahead at VLINE, shifting is permitted
** because of the following sub-derivation:

expr IS expr expr 
        expr . VLINE expr 

** In state 42, looking ahead at VLINE, reducing production
** expr -> expr IS expr
** is permitted because of the following sub-derivation:

expr VLINE expr // lookahead token appears
expr IS expr . 

** Conflict (shift/reduce) in state 34.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr POWER expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 34, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr POWER expr 
           expr . LPAREN expr_list RPAREN 

** In state 34, looking ahead at LPAREN, reducing production
** expr -> expr POWER expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr POWER expr . 

** Conflict (shift/reduce) in state 32.
** Tokens involved: LPAREN LBRACKET IS IN
** The following explanations concentrate on token LPAREN.
** This state is reached from input after reading:

LPAREN expr VLINE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 32, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr VLINE expr 
           expr . LPAREN expr_list RPAREN 

** In state 32, looking ahead at LPAREN, reducing production
** expr -> expr VLINE expr
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
expr VLINE expr . 

** Conflict (shift/reduce) in state 26.
** Token involved: LPAREN
** This state is reached from input after reading:

LPAREN ident

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
expr 
LPAREN expr RPAREN 
       (?)

** In state 26, looking ahead at LPAREN, reducing production
** expr -> ident
** is permitted because of the following sub-derivation:

expr LPAREN expr_list RPAREN // lookahead token appears
ident . 

** In state 26, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

ident . LPAREN expr_list RPAREN 

** Conflict (shift/reduce) in state 2.
** Tokens involved: error TRUE STRING NULL NOT MINUS LPAREN LBRACKET LBRACE INT IDENT FLOAT FALSE
** The following explanations concentrate on token error.
** This state is reached from input after reading:

WITH

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

input 
stmts EOF 
stmt 
(?)

** In state 2, looking ahead at error, reducing production
** expr_list ->
** is permitted because of the following sub-derivation:

WITH expr_list stmts ENDWITH // lookahead token appears because stmts can begin with error
     . 

** In state 2, looking ahead at error, shifting is permitted
** because of the following sub-derivation:

WITH . error 
