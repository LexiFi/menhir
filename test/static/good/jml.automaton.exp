State 0:
jml_specification_eof' -> . jml_specification_eof [ # ]
-- On STATIC shift to state 1
-- On SPEC_PUBLIC shift to state 2
-- On REPRESENTS shift to state 3
-- On PURE shift to state 206
-- On PUBLIC shift to state 207
-- On PROTECTED shift to state 208
-- On PRIVATE shift to state 209
-- On MODEL shift to state 210
-- On LOOP_INVARIANT shift to state 211
-- On FORALL shift to state 260
-- On FINAL shift to state 263
-- On ASSERT shift to state 264
-- On AND shift to state 266
-- On ALSO shift to state 343
-- On spec_var_decls shift to state 344
-- On spec_case_seq shift to state 403
-- On spec_case shift to state 370
-- On privacy shift to state 404
-- On non_extending_specification shift to state 407
-- On modifiers shift to state 408
-- On modifier shift to state 412
-- On method_specification shift to state 417
-- On loop_annotation shift to state 418
-- On jml_specification_eof shift to state 419
-- On jml_specification shift to state 420
-- On jml_declarations shift to state 422
-- On jml_declaration shift to state 423
-- On generic_spec_case shift to state 400
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On extending_specification shift to state 426
-- On behavior_spec shift to state 401
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On SHORT reduce production modifiers -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On NORMAL_BEHAVIOR reduce production privacy -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LONG reduce production modifiers -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On INVARIANT reduce production privacy -> 
-- On INT reduce production modifiers -> 
-- On ID reduce production modifiers -> 
-- On FLOAT reduce production modifiers -> 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> 
-- On EOF reduce production jml_declarations -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DOUBLE reduce production modifiers -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On CHAR reduce production modifiers -> 
-- On BYTE reduce production modifiers -> 
-- On BOOLEAN reduce production modifiers -> 
-- On BEHAVIOR reduce production privacy -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 1:
modifier -> STATIC . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> STATIC 
-- On SHORT reduce production modifier -> STATIC 
-- On PUBLIC reduce production modifier -> STATIC 
-- On PROTECTED reduce production modifier -> STATIC 
-- On PRIVATE reduce production modifier -> STATIC 
-- On MODEL reduce production modifier -> STATIC 
-- On LONG reduce production modifier -> STATIC 
-- On INT reduce production modifier -> STATIC 
-- On ID reduce production modifier -> STATIC 
-- On FLOAT reduce production modifier -> STATIC 
-- On FINAL reduce production modifier -> STATIC 
-- On DOUBLE reduce production modifier -> STATIC 
-- On CHAR reduce production modifier -> STATIC 
-- On BYTE reduce production modifier -> STATIC 
-- On BOOLEAN reduce production modifier -> STATIC 

State 2:
jml_specification -> SPEC_PUBLIC . [ EOF ]
-- On EOF reduce production jml_specification -> SPEC_PUBLIC 

State 3:
jml_declaration -> REPRESENTS . ident LEFTARROW expr SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On ID shift to state 4
-- On ident shift to state 5

State 4:
ident -> ID . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTPAR LEFTBRACKET LEFTARROW INSTANCEOF IF ID EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production ident -> ID 
-- On VERTICALBAR reduce production ident -> ID 
-- On STAR reduce production ident -> ID 
-- On SLASH reduce production ident -> ID 
-- On SHIFT reduce production ident -> ID 
-- On SEMICOLON reduce production ident -> ID 
-- On RIGHTPAR reduce production ident -> ID 
-- On RIGHTBRACKET reduce production ident -> ID 
-- On QUESTIONMARK reduce production ident -> ID 
-- On PLUS reduce production ident -> ID 
-- On PERCENT reduce production ident -> ID 
-- On MINUS reduce production ident -> ID 
-- On LTEQEQGT reduce production ident -> ID 
-- On LTEQEQ reduce production ident -> ID 
-- On LTEQBANGEQGT reduce production ident -> ID 
-- On LEFTPAR reduce production ident -> ID 
-- On LEFTBRACKET reduce production ident -> ID 
-- On LEFTARROW reduce production ident -> ID 
-- On INSTANCEOF reduce production ident -> ID 
-- On IF reduce production ident -> ID 
-- On ID reduce production ident -> ID 
-- On EQOP reduce production ident -> ID 
-- On EQEQGT reduce production ident -> ID 
-- On DOTDOT reduce production ident -> ID 
-- On DOT reduce production ident -> ID 
-- On COMP reduce production ident -> ID 
-- On COMMA reduce production ident -> ID 
-- On COLON reduce production ident -> ID 
-- On CARET reduce production ident -> ID 
-- On AMPERSANDAMPERSAND reduce production ident -> ID 
-- On AMPERSAND reduce production ident -> ID 

State 5:
jml_declaration -> REPRESENTS ident . LEFTARROW expr SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On LEFTARROW shift to state 6

State 6:
jml_declaration -> REPRESENTS ident LEFTARROW . expr SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 204
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 7:
primary_no_new_array -> TRUE . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> TRUE 
-- On VERTICALBAR reduce production primary_no_new_array -> TRUE 
-- On STAR reduce production primary_no_new_array -> TRUE 
-- On SLASH reduce production primary_no_new_array -> TRUE 
-- On SHIFT reduce production primary_no_new_array -> TRUE 
-- On SEMICOLON reduce production primary_no_new_array -> TRUE 
-- On RIGHTPAR reduce production primary_no_new_array -> TRUE 
-- On RIGHTBRACKET reduce production primary_no_new_array -> TRUE 
-- On QUESTIONMARK reduce production primary_no_new_array -> TRUE 
-- On PLUS reduce production primary_no_new_array -> TRUE 
-- On PERCENT reduce production primary_no_new_array -> TRUE 
-- On MINUS reduce production primary_no_new_array -> TRUE 
-- On LTEQEQGT reduce production primary_no_new_array -> TRUE 
-- On LTEQEQ reduce production primary_no_new_array -> TRUE 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> TRUE 
-- On LEFTBRACKET reduce production primary_no_new_array -> TRUE 
-- On INSTANCEOF reduce production primary_no_new_array -> TRUE 
-- On IF reduce production primary_no_new_array -> TRUE 
-- On EQOP reduce production primary_no_new_array -> TRUE 
-- On EQEQGT reduce production primary_no_new_array -> TRUE 
-- On DOTDOT reduce production primary_no_new_array -> TRUE 
-- On DOT reduce production primary_no_new_array -> TRUE 
-- On COMP reduce production primary_no_new_array -> TRUE 
-- On COMMA reduce production primary_no_new_array -> TRUE 
-- On COLON reduce production primary_no_new_array -> TRUE 
-- On CARET reduce production primary_no_new_array -> TRUE 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> TRUE 
-- On AMPERSAND reduce production primary_no_new_array -> TRUE 

State 8:
expr_no_name -> TILDA . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 203
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 9:
primary_no_new_array -> THIS . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> THIS 
-- On VERTICALBAR reduce production primary_no_new_array -> THIS 
-- On STAR reduce production primary_no_new_array -> THIS 
-- On SLASH reduce production primary_no_new_array -> THIS 
-- On SHIFT reduce production primary_no_new_array -> THIS 
-- On SEMICOLON reduce production primary_no_new_array -> THIS 
-- On RIGHTPAR reduce production primary_no_new_array -> THIS 
-- On RIGHTBRACKET reduce production primary_no_new_array -> THIS 
-- On QUESTIONMARK reduce production primary_no_new_array -> THIS 
-- On PLUS reduce production primary_no_new_array -> THIS 
-- On PERCENT reduce production primary_no_new_array -> THIS 
-- On MINUS reduce production primary_no_new_array -> THIS 
-- On LTEQEQGT reduce production primary_no_new_array -> THIS 
-- On LTEQEQ reduce production primary_no_new_array -> THIS 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> THIS 
-- On LEFTBRACKET reduce production primary_no_new_array -> THIS 
-- On INSTANCEOF reduce production primary_no_new_array -> THIS 
-- On IF reduce production primary_no_new_array -> THIS 
-- On EQOP reduce production primary_no_new_array -> THIS 
-- On EQEQGT reduce production primary_no_new_array -> THIS 
-- On DOTDOT reduce production primary_no_new_array -> THIS 
-- On DOT reduce production primary_no_new_array -> THIS 
-- On COMP reduce production primary_no_new_array -> THIS 
-- On COMMA reduce production primary_no_new_array -> THIS 
-- On COLON reduce production primary_no_new_array -> THIS 
-- On CARET reduce production primary_no_new_array -> THIS 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> THIS 
-- On AMPERSAND reduce production primary_no_new_array -> THIS 

State 10:
field_access -> SUPER . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On DOT shift to state 11

State 11:
field_access -> SUPER DOT . ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On ID shift to state 4
-- On ident shift to state 12

State 12:
field_access -> SUPER DOT ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production field_access -> SUPER DOT ident 
-- On VERTICALBAR reduce production field_access -> SUPER DOT ident 
-- On STAR reduce production field_access -> SUPER DOT ident 
-- On SLASH reduce production field_access -> SUPER DOT ident 
-- On SHIFT reduce production field_access -> SUPER DOT ident 
-- On SEMICOLON reduce production field_access -> SUPER DOT ident 
-- On RIGHTPAR reduce production field_access -> SUPER DOT ident 
-- On RIGHTBRACKET reduce production field_access -> SUPER DOT ident 
-- On QUESTIONMARK reduce production field_access -> SUPER DOT ident 
-- On PLUS reduce production field_access -> SUPER DOT ident 
-- On PERCENT reduce production field_access -> SUPER DOT ident 
-- On MINUS reduce production field_access -> SUPER DOT ident 
-- On LTEQEQGT reduce production field_access -> SUPER DOT ident 
-- On LTEQEQ reduce production field_access -> SUPER DOT ident 
-- On LTEQBANGEQGT reduce production field_access -> SUPER DOT ident 
-- On LEFTBRACKET reduce production field_access -> SUPER DOT ident 
-- On INSTANCEOF reduce production field_access -> SUPER DOT ident 
-- On IF reduce production field_access -> SUPER DOT ident 
-- On EQOP reduce production field_access -> SUPER DOT ident 
-- On EQEQGT reduce production field_access -> SUPER DOT ident 
-- On DOTDOT reduce production field_access -> SUPER DOT ident 
-- On DOT reduce production field_access -> SUPER DOT ident 
-- On COMP reduce production field_access -> SUPER DOT ident 
-- On COMMA reduce production field_access -> SUPER DOT ident 
-- On COLON reduce production field_access -> SUPER DOT ident 
-- On CARET reduce production field_access -> SUPER DOT ident 
-- On AMPERSANDAMPERSAND reduce production field_access -> SUPER DOT ident 
-- On AMPERSAND reduce production field_access -> SUPER DOT ident 

State 13:
primary_no_new_array -> STRING . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> STRING 
-- On VERTICALBAR reduce production primary_no_new_array -> STRING 
-- On STAR reduce production primary_no_new_array -> STRING 
-- On SLASH reduce production primary_no_new_array -> STRING 
-- On SHIFT reduce production primary_no_new_array -> STRING 
-- On SEMICOLON reduce production primary_no_new_array -> STRING 
-- On RIGHTPAR reduce production primary_no_new_array -> STRING 
-- On RIGHTBRACKET reduce production primary_no_new_array -> STRING 
-- On QUESTIONMARK reduce production primary_no_new_array -> STRING 
-- On PLUS reduce production primary_no_new_array -> STRING 
-- On PERCENT reduce production primary_no_new_array -> STRING 
-- On MINUS reduce production primary_no_new_array -> STRING 
-- On LTEQEQGT reduce production primary_no_new_array -> STRING 
-- On LTEQEQ reduce production primary_no_new_array -> STRING 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> STRING 
-- On LEFTBRACKET reduce production primary_no_new_array -> STRING 
-- On INSTANCEOF reduce production primary_no_new_array -> STRING 
-- On IF reduce production primary_no_new_array -> STRING 
-- On EQOP reduce production primary_no_new_array -> STRING 
-- On EQEQGT reduce production primary_no_new_array -> STRING 
-- On DOTDOT reduce production primary_no_new_array -> STRING 
-- On DOT reduce production primary_no_new_array -> STRING 
-- On COMP reduce production primary_no_new_array -> STRING 
-- On COMMA reduce production primary_no_new_array -> STRING 
-- On COLON reduce production primary_no_new_array -> STRING 
-- On CARET reduce production primary_no_new_array -> STRING 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> STRING 
-- On AMPERSAND reduce production primary_no_new_array -> STRING 

State 14:
primary_no_new_array -> REAL . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> REAL 
-- On VERTICALBAR reduce production primary_no_new_array -> REAL 
-- On STAR reduce production primary_no_new_array -> REAL 
-- On SLASH reduce production primary_no_new_array -> REAL 
-- On SHIFT reduce production primary_no_new_array -> REAL 
-- On SEMICOLON reduce production primary_no_new_array -> REAL 
-- On RIGHTPAR reduce production primary_no_new_array -> REAL 
-- On RIGHTBRACKET reduce production primary_no_new_array -> REAL 
-- On QUESTIONMARK reduce production primary_no_new_array -> REAL 
-- On PLUS reduce production primary_no_new_array -> REAL 
-- On PERCENT reduce production primary_no_new_array -> REAL 
-- On MINUS reduce production primary_no_new_array -> REAL 
-- On LTEQEQGT reduce production primary_no_new_array -> REAL 
-- On LTEQEQ reduce production primary_no_new_array -> REAL 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> REAL 
-- On LEFTBRACKET reduce production primary_no_new_array -> REAL 
-- On INSTANCEOF reduce production primary_no_new_array -> REAL 
-- On IF reduce production primary_no_new_array -> REAL 
-- On EQOP reduce production primary_no_new_array -> REAL 
-- On EQEQGT reduce production primary_no_new_array -> REAL 
-- On DOTDOT reduce production primary_no_new_array -> REAL 
-- On DOT reduce production primary_no_new_array -> REAL 
-- On COMP reduce production primary_no_new_array -> REAL 
-- On COMMA reduce production primary_no_new_array -> REAL 
-- On COLON reduce production primary_no_new_array -> REAL 
-- On CARET reduce production primary_no_new_array -> REAL 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> REAL 
-- On AMPERSAND reduce production primary_no_new_array -> REAL 

State 15:
expr_no_name -> PLUS . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 202
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 16:
primary_no_new_array -> NULL . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> NULL 
-- On VERTICALBAR reduce production primary_no_new_array -> NULL 
-- On STAR reduce production primary_no_new_array -> NULL 
-- On SLASH reduce production primary_no_new_array -> NULL 
-- On SHIFT reduce production primary_no_new_array -> NULL 
-- On SEMICOLON reduce production primary_no_new_array -> NULL 
-- On RIGHTPAR reduce production primary_no_new_array -> NULL 
-- On RIGHTBRACKET reduce production primary_no_new_array -> NULL 
-- On QUESTIONMARK reduce production primary_no_new_array -> NULL 
-- On PLUS reduce production primary_no_new_array -> NULL 
-- On PERCENT reduce production primary_no_new_array -> NULL 
-- On MINUS reduce production primary_no_new_array -> NULL 
-- On LTEQEQGT reduce production primary_no_new_array -> NULL 
-- On LTEQEQ reduce production primary_no_new_array -> NULL 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> NULL 
-- On LEFTBRACKET reduce production primary_no_new_array -> NULL 
-- On INSTANCEOF reduce production primary_no_new_array -> NULL 
-- On IF reduce production primary_no_new_array -> NULL 
-- On EQOP reduce production primary_no_new_array -> NULL 
-- On EQEQGT reduce production primary_no_new_array -> NULL 
-- On DOTDOT reduce production primary_no_new_array -> NULL 
-- On DOT reduce production primary_no_new_array -> NULL 
-- On COMP reduce production primary_no_new_array -> NULL 
-- On COMMA reduce production primary_no_new_array -> NULL 
-- On COLON reduce production primary_no_new_array -> NULL 
-- On CARET reduce production primary_no_new_array -> NULL 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> NULL 
-- On AMPERSAND reduce production primary_no_new_array -> NULL 

State 17:
array_creation_expression -> NEW . base_type array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
array_creation_expression -> NEW . name array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> NEW . name LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On name shift to state 26
-- On ident shift to state 45
-- On base_type shift to state 200

State 18:
base_type -> SHORT . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> SHORT 
-- On VERTICALBAR reduce production base_type -> SHORT 
-- On STAR reduce production base_type -> SHORT 
-- On SLASH reduce production base_type -> SHORT 
-- On SHIFT reduce production base_type -> SHORT 
-- On SEMICOLON reduce production base_type -> SHORT 
-- On RIGHTPAR reduce production base_type -> SHORT 
-- On RIGHTBRACKET reduce production base_type -> SHORT 
-- On QUESTIONMARK reduce production base_type -> SHORT 
-- On PLUS reduce production base_type -> SHORT 
-- On PERCENT reduce production base_type -> SHORT 
-- On MINUS reduce production base_type -> SHORT 
-- On LTEQEQGT reduce production base_type -> SHORT 
-- On LTEQEQ reduce production base_type -> SHORT 
-- On LTEQBANGEQGT reduce production base_type -> SHORT 
-- On LEFTBRACKET reduce production base_type -> SHORT 
-- On INSTANCEOF reduce production base_type -> SHORT 
-- On IF reduce production base_type -> SHORT 
-- On ID reduce production base_type -> SHORT 
-- On EQOP reduce production base_type -> SHORT 
-- On EQEQGT reduce production base_type -> SHORT 
-- On DOTDOT reduce production base_type -> SHORT 
-- On COMP reduce production base_type -> SHORT 
-- On COMMA reduce production base_type -> SHORT 
-- On COLON reduce production base_type -> SHORT 
-- On CARET reduce production base_type -> SHORT 
-- On AMPERSANDAMPERSAND reduce production base_type -> SHORT 
-- On AMPERSAND reduce production base_type -> SHORT 

State 19:
base_type -> LONG . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> LONG 
-- On VERTICALBAR reduce production base_type -> LONG 
-- On STAR reduce production base_type -> LONG 
-- On SLASH reduce production base_type -> LONG 
-- On SHIFT reduce production base_type -> LONG 
-- On SEMICOLON reduce production base_type -> LONG 
-- On RIGHTPAR reduce production base_type -> LONG 
-- On RIGHTBRACKET reduce production base_type -> LONG 
-- On QUESTIONMARK reduce production base_type -> LONG 
-- On PLUS reduce production base_type -> LONG 
-- On PERCENT reduce production base_type -> LONG 
-- On MINUS reduce production base_type -> LONG 
-- On LTEQEQGT reduce production base_type -> LONG 
-- On LTEQEQ reduce production base_type -> LONG 
-- On LTEQBANGEQGT reduce production base_type -> LONG 
-- On LEFTBRACKET reduce production base_type -> LONG 
-- On INSTANCEOF reduce production base_type -> LONG 
-- On IF reduce production base_type -> LONG 
-- On ID reduce production base_type -> LONG 
-- On EQOP reduce production base_type -> LONG 
-- On EQEQGT reduce production base_type -> LONG 
-- On DOTDOT reduce production base_type -> LONG 
-- On COMP reduce production base_type -> LONG 
-- On COMMA reduce production base_type -> LONG 
-- On COLON reduce production base_type -> LONG 
-- On CARET reduce production base_type -> LONG 
-- On AMPERSANDAMPERSAND reduce production base_type -> LONG 
-- On AMPERSAND reduce production base_type -> LONG 

State 20:
base_type -> INT . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> INT 
-- On VERTICALBAR reduce production base_type -> INT 
-- On STAR reduce production base_type -> INT 
-- On SLASH reduce production base_type -> INT 
-- On SHIFT reduce production base_type -> INT 
-- On SEMICOLON reduce production base_type -> INT 
-- On RIGHTPAR reduce production base_type -> INT 
-- On RIGHTBRACKET reduce production base_type -> INT 
-- On QUESTIONMARK reduce production base_type -> INT 
-- On PLUS reduce production base_type -> INT 
-- On PERCENT reduce production base_type -> INT 
-- On MINUS reduce production base_type -> INT 
-- On LTEQEQGT reduce production base_type -> INT 
-- On LTEQEQ reduce production base_type -> INT 
-- On LTEQBANGEQGT reduce production base_type -> INT 
-- On LEFTBRACKET reduce production base_type -> INT 
-- On INSTANCEOF reduce production base_type -> INT 
-- On IF reduce production base_type -> INT 
-- On ID reduce production base_type -> INT 
-- On EQOP reduce production base_type -> INT 
-- On EQEQGT reduce production base_type -> INT 
-- On DOTDOT reduce production base_type -> INT 
-- On COMP reduce production base_type -> INT 
-- On COMMA reduce production base_type -> INT 
-- On COLON reduce production base_type -> INT 
-- On CARET reduce production base_type -> INT 
-- On AMPERSANDAMPERSAND reduce production base_type -> INT 
-- On AMPERSAND reduce production base_type -> INT 

State 21:
base_type -> FLOAT . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> FLOAT 
-- On VERTICALBAR reduce production base_type -> FLOAT 
-- On STAR reduce production base_type -> FLOAT 
-- On SLASH reduce production base_type -> FLOAT 
-- On SHIFT reduce production base_type -> FLOAT 
-- On SEMICOLON reduce production base_type -> FLOAT 
-- On RIGHTPAR reduce production base_type -> FLOAT 
-- On RIGHTBRACKET reduce production base_type -> FLOAT 
-- On QUESTIONMARK reduce production base_type -> FLOAT 
-- On PLUS reduce production base_type -> FLOAT 
-- On PERCENT reduce production base_type -> FLOAT 
-- On MINUS reduce production base_type -> FLOAT 
-- On LTEQEQGT reduce production base_type -> FLOAT 
-- On LTEQEQ reduce production base_type -> FLOAT 
-- On LTEQBANGEQGT reduce production base_type -> FLOAT 
-- On LEFTBRACKET reduce production base_type -> FLOAT 
-- On INSTANCEOF reduce production base_type -> FLOAT 
-- On IF reduce production base_type -> FLOAT 
-- On ID reduce production base_type -> FLOAT 
-- On EQOP reduce production base_type -> FLOAT 
-- On EQEQGT reduce production base_type -> FLOAT 
-- On DOTDOT reduce production base_type -> FLOAT 
-- On COMP reduce production base_type -> FLOAT 
-- On COMMA reduce production base_type -> FLOAT 
-- On COLON reduce production base_type -> FLOAT 
-- On CARET reduce production base_type -> FLOAT 
-- On AMPERSANDAMPERSAND reduce production base_type -> FLOAT 
-- On AMPERSAND reduce production base_type -> FLOAT 

State 22:
base_type -> DOUBLE . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> DOUBLE 
-- On VERTICALBAR reduce production base_type -> DOUBLE 
-- On STAR reduce production base_type -> DOUBLE 
-- On SLASH reduce production base_type -> DOUBLE 
-- On SHIFT reduce production base_type -> DOUBLE 
-- On SEMICOLON reduce production base_type -> DOUBLE 
-- On RIGHTPAR reduce production base_type -> DOUBLE 
-- On RIGHTBRACKET reduce production base_type -> DOUBLE 
-- On QUESTIONMARK reduce production base_type -> DOUBLE 
-- On PLUS reduce production base_type -> DOUBLE 
-- On PERCENT reduce production base_type -> DOUBLE 
-- On MINUS reduce production base_type -> DOUBLE 
-- On LTEQEQGT reduce production base_type -> DOUBLE 
-- On LTEQEQ reduce production base_type -> DOUBLE 
-- On LTEQBANGEQGT reduce production base_type -> DOUBLE 
-- On LEFTBRACKET reduce production base_type -> DOUBLE 
-- On INSTANCEOF reduce production base_type -> DOUBLE 
-- On IF reduce production base_type -> DOUBLE 
-- On ID reduce production base_type -> DOUBLE 
-- On EQOP reduce production base_type -> DOUBLE 
-- On EQEQGT reduce production base_type -> DOUBLE 
-- On DOTDOT reduce production base_type -> DOUBLE 
-- On COMP reduce production base_type -> DOUBLE 
-- On COMMA reduce production base_type -> DOUBLE 
-- On COLON reduce production base_type -> DOUBLE 
-- On CARET reduce production base_type -> DOUBLE 
-- On AMPERSANDAMPERSAND reduce production base_type -> DOUBLE 
-- On AMPERSAND reduce production base_type -> DOUBLE 

State 23:
base_type -> CHAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> CHAR 
-- On VERTICALBAR reduce production base_type -> CHAR 
-- On STAR reduce production base_type -> CHAR 
-- On SLASH reduce production base_type -> CHAR 
-- On SHIFT reduce production base_type -> CHAR 
-- On SEMICOLON reduce production base_type -> CHAR 
-- On RIGHTPAR reduce production base_type -> CHAR 
-- On RIGHTBRACKET reduce production base_type -> CHAR 
-- On QUESTIONMARK reduce production base_type -> CHAR 
-- On PLUS reduce production base_type -> CHAR 
-- On PERCENT reduce production base_type -> CHAR 
-- On MINUS reduce production base_type -> CHAR 
-- On LTEQEQGT reduce production base_type -> CHAR 
-- On LTEQEQ reduce production base_type -> CHAR 
-- On LTEQBANGEQGT reduce production base_type -> CHAR 
-- On LEFTBRACKET reduce production base_type -> CHAR 
-- On INSTANCEOF reduce production base_type -> CHAR 
-- On IF reduce production base_type -> CHAR 
-- On ID reduce production base_type -> CHAR 
-- On EQOP reduce production base_type -> CHAR 
-- On EQEQGT reduce production base_type -> CHAR 
-- On DOTDOT reduce production base_type -> CHAR 
-- On COMP reduce production base_type -> CHAR 
-- On COMMA reduce production base_type -> CHAR 
-- On COLON reduce production base_type -> CHAR 
-- On CARET reduce production base_type -> CHAR 
-- On AMPERSANDAMPERSAND reduce production base_type -> CHAR 
-- On AMPERSAND reduce production base_type -> CHAR 

State 24:
base_type -> BYTE . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> BYTE 
-- On VERTICALBAR reduce production base_type -> BYTE 
-- On STAR reduce production base_type -> BYTE 
-- On SLASH reduce production base_type -> BYTE 
-- On SHIFT reduce production base_type -> BYTE 
-- On SEMICOLON reduce production base_type -> BYTE 
-- On RIGHTPAR reduce production base_type -> BYTE 
-- On RIGHTBRACKET reduce production base_type -> BYTE 
-- On QUESTIONMARK reduce production base_type -> BYTE 
-- On PLUS reduce production base_type -> BYTE 
-- On PERCENT reduce production base_type -> BYTE 
-- On MINUS reduce production base_type -> BYTE 
-- On LTEQEQGT reduce production base_type -> BYTE 
-- On LTEQEQ reduce production base_type -> BYTE 
-- On LTEQBANGEQGT reduce production base_type -> BYTE 
-- On LEFTBRACKET reduce production base_type -> BYTE 
-- On INSTANCEOF reduce production base_type -> BYTE 
-- On IF reduce production base_type -> BYTE 
-- On ID reduce production base_type -> BYTE 
-- On EQOP reduce production base_type -> BYTE 
-- On EQEQGT reduce production base_type -> BYTE 
-- On DOTDOT reduce production base_type -> BYTE 
-- On COMP reduce production base_type -> BYTE 
-- On COMMA reduce production base_type -> BYTE 
-- On COLON reduce production base_type -> BYTE 
-- On CARET reduce production base_type -> BYTE 
-- On AMPERSANDAMPERSAND reduce production base_type -> BYTE 
-- On AMPERSAND reduce production base_type -> BYTE 

State 25:
base_type -> BOOLEAN . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production base_type -> BOOLEAN 
-- On VERTICALBAR reduce production base_type -> BOOLEAN 
-- On STAR reduce production base_type -> BOOLEAN 
-- On SLASH reduce production base_type -> BOOLEAN 
-- On SHIFT reduce production base_type -> BOOLEAN 
-- On SEMICOLON reduce production base_type -> BOOLEAN 
-- On RIGHTPAR reduce production base_type -> BOOLEAN 
-- On RIGHTBRACKET reduce production base_type -> BOOLEAN 
-- On QUESTIONMARK reduce production base_type -> BOOLEAN 
-- On PLUS reduce production base_type -> BOOLEAN 
-- On PERCENT reduce production base_type -> BOOLEAN 
-- On MINUS reduce production base_type -> BOOLEAN 
-- On LTEQEQGT reduce production base_type -> BOOLEAN 
-- On LTEQEQ reduce production base_type -> BOOLEAN 
-- On LTEQBANGEQGT reduce production base_type -> BOOLEAN 
-- On LEFTBRACKET reduce production base_type -> BOOLEAN 
-- On INSTANCEOF reduce production base_type -> BOOLEAN 
-- On IF reduce production base_type -> BOOLEAN 
-- On ID reduce production base_type -> BOOLEAN 
-- On EQOP reduce production base_type -> BOOLEAN 
-- On EQEQGT reduce production base_type -> BOOLEAN 
-- On DOTDOT reduce production base_type -> BOOLEAN 
-- On COMP reduce production base_type -> BOOLEAN 
-- On COMMA reduce production base_type -> BOOLEAN 
-- On COLON reduce production base_type -> BOOLEAN 
-- On CARET reduce production base_type -> BOOLEAN 
-- On AMPERSANDAMPERSAND reduce production base_type -> BOOLEAN 
-- On AMPERSAND reduce production base_type -> BOOLEAN 

State 26:
array_creation_expression -> NEW name . array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ LEFTPAR LEFTBRACKET DOT ]
primary_no_new_array -> NEW name . LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 27
-- On LEFTBRACKET shift to state 190
-- On DOT shift to state 43
-- On array_dims shift to state 199

State 27:
primary_no_new_array -> NEW name LEFTPAR . argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr_comma_list shift to state 73
-- On expr shift to state 74
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82
-- On argument_list shift to state 188
-- On RIGHTPAR reduce production argument_list -> 

State 28:
expr_no_name -> MINUS . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 187
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 29:
expr_no_name -> LEFTPAR . base_type RIGHTPAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> LEFTPAR . array_type_expr RIGHTPAR primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> LEFTPAR . name RIGHTPAR primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
parenthesized_name -> LEFTPAR . name RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSFORALL variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . expr_no_name RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On SHORT shift to state 18
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LONG shift to state 19
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On FALSE shift to state 31
-- On DOUBLE shift to state 22
-- On CHARACTER shift to state 32
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BSFORALL shift to state 145
-- On BSEXISTS shift to state 161
-- On BOOLEAN shift to state 25
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 169
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 174
-- On expr shift to state 176
-- On base_type shift to state 181
-- On array_type_expr shift to state 184
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 30:
primary_no_new_array -> INTEGER . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> INTEGER 
-- On VERTICALBAR reduce production primary_no_new_array -> INTEGER 
-- On STAR reduce production primary_no_new_array -> INTEGER 
-- On SLASH reduce production primary_no_new_array -> INTEGER 
-- On SHIFT reduce production primary_no_new_array -> INTEGER 
-- On SEMICOLON reduce production primary_no_new_array -> INTEGER 
-- On RIGHTPAR reduce production primary_no_new_array -> INTEGER 
-- On RIGHTBRACKET reduce production primary_no_new_array -> INTEGER 
-- On QUESTIONMARK reduce production primary_no_new_array -> INTEGER 
-- On PLUS reduce production primary_no_new_array -> INTEGER 
-- On PERCENT reduce production primary_no_new_array -> INTEGER 
-- On MINUS reduce production primary_no_new_array -> INTEGER 
-- On LTEQEQGT reduce production primary_no_new_array -> INTEGER 
-- On LTEQEQ reduce production primary_no_new_array -> INTEGER 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> INTEGER 
-- On LEFTBRACKET reduce production primary_no_new_array -> INTEGER 
-- On INSTANCEOF reduce production primary_no_new_array -> INTEGER 
-- On IF reduce production primary_no_new_array -> INTEGER 
-- On EQOP reduce production primary_no_new_array -> INTEGER 
-- On EQEQGT reduce production primary_no_new_array -> INTEGER 
-- On DOTDOT reduce production primary_no_new_array -> INTEGER 
-- On DOT reduce production primary_no_new_array -> INTEGER 
-- On COMP reduce production primary_no_new_array -> INTEGER 
-- On COMMA reduce production primary_no_new_array -> INTEGER 
-- On COLON reduce production primary_no_new_array -> INTEGER 
-- On CARET reduce production primary_no_new_array -> INTEGER 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> INTEGER 
-- On AMPERSAND reduce production primary_no_new_array -> INTEGER 

State 31:
primary_no_new_array -> FALSE . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> FALSE 
-- On VERTICALBAR reduce production primary_no_new_array -> FALSE 
-- On STAR reduce production primary_no_new_array -> FALSE 
-- On SLASH reduce production primary_no_new_array -> FALSE 
-- On SHIFT reduce production primary_no_new_array -> FALSE 
-- On SEMICOLON reduce production primary_no_new_array -> FALSE 
-- On RIGHTPAR reduce production primary_no_new_array -> FALSE 
-- On RIGHTBRACKET reduce production primary_no_new_array -> FALSE 
-- On QUESTIONMARK reduce production primary_no_new_array -> FALSE 
-- On PLUS reduce production primary_no_new_array -> FALSE 
-- On PERCENT reduce production primary_no_new_array -> FALSE 
-- On MINUS reduce production primary_no_new_array -> FALSE 
-- On LTEQEQGT reduce production primary_no_new_array -> FALSE 
-- On LTEQEQ reduce production primary_no_new_array -> FALSE 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> FALSE 
-- On LEFTBRACKET reduce production primary_no_new_array -> FALSE 
-- On INSTANCEOF reduce production primary_no_new_array -> FALSE 
-- On IF reduce production primary_no_new_array -> FALSE 
-- On EQOP reduce production primary_no_new_array -> FALSE 
-- On EQEQGT reduce production primary_no_new_array -> FALSE 
-- On DOTDOT reduce production primary_no_new_array -> FALSE 
-- On DOT reduce production primary_no_new_array -> FALSE 
-- On COMP reduce production primary_no_new_array -> FALSE 
-- On COMMA reduce production primary_no_new_array -> FALSE 
-- On COLON reduce production primary_no_new_array -> FALSE 
-- On CARET reduce production primary_no_new_array -> FALSE 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> FALSE 
-- On AMPERSAND reduce production primary_no_new_array -> FALSE 

State 32:
primary_no_new_array -> CHARACTER . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> CHARACTER 
-- On VERTICALBAR reduce production primary_no_new_array -> CHARACTER 
-- On STAR reduce production primary_no_new_array -> CHARACTER 
-- On SLASH reduce production primary_no_new_array -> CHARACTER 
-- On SHIFT reduce production primary_no_new_array -> CHARACTER 
-- On SEMICOLON reduce production primary_no_new_array -> CHARACTER 
-- On RIGHTPAR reduce production primary_no_new_array -> CHARACTER 
-- On RIGHTBRACKET reduce production primary_no_new_array -> CHARACTER 
-- On QUESTIONMARK reduce production primary_no_new_array -> CHARACTER 
-- On PLUS reduce production primary_no_new_array -> CHARACTER 
-- On PERCENT reduce production primary_no_new_array -> CHARACTER 
-- On MINUS reduce production primary_no_new_array -> CHARACTER 
-- On LTEQEQGT reduce production primary_no_new_array -> CHARACTER 
-- On LTEQEQ reduce production primary_no_new_array -> CHARACTER 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> CHARACTER 
-- On LEFTBRACKET reduce production primary_no_new_array -> CHARACTER 
-- On INSTANCEOF reduce production primary_no_new_array -> CHARACTER 
-- On IF reduce production primary_no_new_array -> CHARACTER 
-- On EQOP reduce production primary_no_new_array -> CHARACTER 
-- On EQEQGT reduce production primary_no_new_array -> CHARACTER 
-- On DOTDOT reduce production primary_no_new_array -> CHARACTER 
-- On DOT reduce production primary_no_new_array -> CHARACTER 
-- On COMP reduce production primary_no_new_array -> CHARACTER 
-- On COMMA reduce production primary_no_new_array -> CHARACTER 
-- On COLON reduce production primary_no_new_array -> CHARACTER 
-- On CARET reduce production primary_no_new_array -> CHARACTER 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> CHARACTER 
-- On AMPERSAND reduce production primary_no_new_array -> CHARACTER 

State 33:
primary_no_new_array -> BSTYPEOF . LEFTPAR expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 34

State 34:
primary_no_new_array -> BSTYPEOF LEFTPAR . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 143
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 35:
primary_no_new_array -> BSTYPE . LEFTPAR type_expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 36

State 36:
primary_no_new_array -> BSTYPE LEFTPAR . type_expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 38
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 37:
type_expr -> type_expr_no_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production type_expr -> type_expr_no_name 
-- On VERTICALBAR reduce production type_expr -> type_expr_no_name 
-- On STAR reduce production type_expr -> type_expr_no_name 
-- On SLASH reduce production type_expr -> type_expr_no_name 
-- On SHIFT reduce production type_expr -> type_expr_no_name 
-- On SEMICOLON reduce production type_expr -> type_expr_no_name 
-- On RIGHTPAR reduce production type_expr -> type_expr_no_name 
-- On RIGHTBRACKET reduce production type_expr -> type_expr_no_name 
-- On QUESTIONMARK reduce production type_expr -> type_expr_no_name 
-- On PLUS reduce production type_expr -> type_expr_no_name 
-- On PERCENT reduce production type_expr -> type_expr_no_name 
-- On MINUS reduce production type_expr -> type_expr_no_name 
-- On LTEQEQGT reduce production type_expr -> type_expr_no_name 
-- On LTEQEQ reduce production type_expr -> type_expr_no_name 
-- On LTEQBANGEQGT reduce production type_expr -> type_expr_no_name 
-- On INSTANCEOF reduce production type_expr -> type_expr_no_name 
-- On IF reduce production type_expr -> type_expr_no_name 
-- On ID reduce production type_expr -> type_expr_no_name 
-- On EQOP reduce production type_expr -> type_expr_no_name 
-- On EQEQGT reduce production type_expr -> type_expr_no_name 
-- On DOTDOT reduce production type_expr -> type_expr_no_name 
-- On COMP reduce production type_expr -> type_expr_no_name 
-- On COMMA reduce production type_expr -> type_expr_no_name 
-- On COLON reduce production type_expr -> type_expr_no_name 
-- On CARET reduce production type_expr -> type_expr_no_name 
-- On AMPERSANDAMPERSAND reduce production type_expr -> type_expr_no_name 
-- On AMPERSAND reduce production type_expr -> type_expr_no_name 

State 38:
primary_no_new_array -> BSTYPE LEFTPAR type_expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 39

State 39:
primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> BSTYPE LEFTPAR type_expr RIGHTPAR 

State 40:
array_type_expr -> name . LEFTBRACKET RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
type_expr -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 41
-- On DOT shift to state 43
-- On VERTICALBARVERTICALBAR reduce production type_expr -> name 
-- On VERTICALBAR reduce production type_expr -> name 
-- On STAR reduce production type_expr -> name 
-- On SLASH reduce production type_expr -> name 
-- On SHIFT reduce production type_expr -> name 
-- On SEMICOLON reduce production type_expr -> name 
-- On RIGHTPAR reduce production type_expr -> name 
-- On RIGHTBRACKET reduce production type_expr -> name 
-- On QUESTIONMARK reduce production type_expr -> name 
-- On PLUS reduce production type_expr -> name 
-- On PERCENT reduce production type_expr -> name 
-- On MINUS reduce production type_expr -> name 
-- On LTEQEQGT reduce production type_expr -> name 
-- On LTEQEQ reduce production type_expr -> name 
-- On LTEQBANGEQGT reduce production type_expr -> name 
-- On INSTANCEOF reduce production type_expr -> name 
-- On IF reduce production type_expr -> name 
-- On ID reduce production type_expr -> name 
-- On EQOP reduce production type_expr -> name 
-- On EQEQGT reduce production type_expr -> name 
-- On DOTDOT reduce production type_expr -> name 
-- On COMP reduce production type_expr -> name 
-- On COMMA reduce production type_expr -> name 
-- On COLON reduce production type_expr -> name 
-- On CARET reduce production type_expr -> name 
-- On AMPERSANDAMPERSAND reduce production type_expr -> name 
-- On AMPERSAND reduce production type_expr -> name 

State 41:
array_type_expr -> name LEFTBRACKET . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTBRACKET shift to state 42

State 42:
array_type_expr -> name LEFTBRACKET RIGHTBRACKET . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On VERTICALBAR reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On STAR reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On SLASH reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On SHIFT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On SEMICOLON reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On RIGHTPAR reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On RIGHTBRACKET reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On QUESTIONMARK reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On PLUS reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On PERCENT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On MINUS reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQGT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQ reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On LTEQBANGEQGT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On LEFTBRACKET reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On INSTANCEOF reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On IF reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On ID reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On EQOP reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On EQEQGT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On DOTDOT reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On COMP reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On COMMA reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On COLON reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On CARET reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On AMPERSANDAMPERSAND reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 
-- On AMPERSAND reduce production array_type_expr -> name LEFTBRACKET RIGHTBRACKET 

State 43:
name -> name DOT . ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTPAR LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On ID shift to state 4
-- On ident shift to state 44

State 44:
name -> name DOT ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTPAR LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production name -> name DOT ident 
-- On VERTICALBAR reduce production name -> name DOT ident 
-- On STAR reduce production name -> name DOT ident 
-- On SLASH reduce production name -> name DOT ident 
-- On SHIFT reduce production name -> name DOT ident 
-- On SEMICOLON reduce production name -> name DOT ident 
-- On RIGHTPAR reduce production name -> name DOT ident 
-- On RIGHTBRACKET reduce production name -> name DOT ident 
-- On QUESTIONMARK reduce production name -> name DOT ident 
-- On PLUS reduce production name -> name DOT ident 
-- On PERCENT reduce production name -> name DOT ident 
-- On MINUS reduce production name -> name DOT ident 
-- On LTEQEQGT reduce production name -> name DOT ident 
-- On LTEQEQ reduce production name -> name DOT ident 
-- On LTEQBANGEQGT reduce production name -> name DOT ident 
-- On LEFTPAR reduce production name -> name DOT ident 
-- On LEFTBRACKET reduce production name -> name DOT ident 
-- On INSTANCEOF reduce production name -> name DOT ident 
-- On IF reduce production name -> name DOT ident 
-- On ID reduce production name -> name DOT ident 
-- On EQOP reduce production name -> name DOT ident 
-- On EQEQGT reduce production name -> name DOT ident 
-- On DOTDOT reduce production name -> name DOT ident 
-- On DOT reduce production name -> name DOT ident 
-- On COMP reduce production name -> name DOT ident 
-- On COMMA reduce production name -> name DOT ident 
-- On COLON reduce production name -> name DOT ident 
-- On CARET reduce production name -> name DOT ident 
-- On AMPERSANDAMPERSAND reduce production name -> name DOT ident 
-- On AMPERSAND reduce production name -> name DOT ident 

State 45:
name -> ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTPAR LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production name -> ident 
-- On VERTICALBAR reduce production name -> ident 
-- On STAR reduce production name -> ident 
-- On SLASH reduce production name -> ident 
-- On SHIFT reduce production name -> ident 
-- On SEMICOLON reduce production name -> ident 
-- On RIGHTPAR reduce production name -> ident 
-- On RIGHTBRACKET reduce production name -> ident 
-- On QUESTIONMARK reduce production name -> ident 
-- On PLUS reduce production name -> ident 
-- On PERCENT reduce production name -> ident 
-- On MINUS reduce production name -> ident 
-- On LTEQEQGT reduce production name -> ident 
-- On LTEQEQ reduce production name -> ident 
-- On LTEQBANGEQGT reduce production name -> ident 
-- On LEFTPAR reduce production name -> ident 
-- On LEFTBRACKET reduce production name -> ident 
-- On INSTANCEOF reduce production name -> ident 
-- On IF reduce production name -> ident 
-- On ID reduce production name -> ident 
-- On EQOP reduce production name -> ident 
-- On EQEQGT reduce production name -> ident 
-- On DOTDOT reduce production name -> ident 
-- On DOT reduce production name -> ident 
-- On COMP reduce production name -> ident 
-- On COMMA reduce production name -> ident 
-- On COLON reduce production name -> ident 
-- On CARET reduce production name -> ident 
-- On AMPERSANDAMPERSAND reduce production name -> ident 
-- On AMPERSAND reduce production name -> ident 

State 46:
array_type_expr -> base_type . LEFTBRACKET RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
type_expr_no_name -> base_type . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 47
-- On VERTICALBARVERTICALBAR reduce production type_expr_no_name -> base_type 
-- On VERTICALBAR reduce production type_expr_no_name -> base_type 
-- On STAR reduce production type_expr_no_name -> base_type 
-- On SLASH reduce production type_expr_no_name -> base_type 
-- On SHIFT reduce production type_expr_no_name -> base_type 
-- On SEMICOLON reduce production type_expr_no_name -> base_type 
-- On RIGHTPAR reduce production type_expr_no_name -> base_type 
-- On RIGHTBRACKET reduce production type_expr_no_name -> base_type 
-- On QUESTIONMARK reduce production type_expr_no_name -> base_type 
-- On PLUS reduce production type_expr_no_name -> base_type 
-- On PERCENT reduce production type_expr_no_name -> base_type 
-- On MINUS reduce production type_expr_no_name -> base_type 
-- On LTEQEQGT reduce production type_expr_no_name -> base_type 
-- On LTEQEQ reduce production type_expr_no_name -> base_type 
-- On LTEQBANGEQGT reduce production type_expr_no_name -> base_type 
-- On INSTANCEOF reduce production type_expr_no_name -> base_type 
-- On IF reduce production type_expr_no_name -> base_type 
-- On ID reduce production type_expr_no_name -> base_type 
-- On EQOP reduce production type_expr_no_name -> base_type 
-- On EQEQGT reduce production type_expr_no_name -> base_type 
-- On DOTDOT reduce production type_expr_no_name -> base_type 
-- On COMP reduce production type_expr_no_name -> base_type 
-- On COMMA reduce production type_expr_no_name -> base_type 
-- On COLON reduce production type_expr_no_name -> base_type 
-- On CARET reduce production type_expr_no_name -> base_type 
-- On AMPERSANDAMPERSAND reduce production type_expr_no_name -> base_type 
-- On AMPERSAND reduce production type_expr_no_name -> base_type 

State 47:
array_type_expr -> base_type LEFTBRACKET . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTBRACKET shift to state 48

State 48:
array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On VERTICALBAR reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On STAR reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On SLASH reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On SHIFT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On SEMICOLON reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On RIGHTPAR reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On RIGHTBRACKET reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On QUESTIONMARK reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On PLUS reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On PERCENT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On MINUS reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQGT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQ reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On LTEQBANGEQGT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On LEFTBRACKET reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On INSTANCEOF reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On IF reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On ID reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On EQOP reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On EQEQGT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On DOTDOT reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On COMP reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On COMMA reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On COLON reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On CARET reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On AMPERSANDAMPERSAND reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 
-- On AMPERSAND reduce production array_type_expr -> base_type LEFTBRACKET RIGHTBRACKET 

State 49:
array_type_expr -> array_type_expr . LEFTBRACKET RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
type_expr_no_name -> array_type_expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 50
-- On VERTICALBARVERTICALBAR reduce production type_expr_no_name -> array_type_expr 
-- On VERTICALBAR reduce production type_expr_no_name -> array_type_expr 
-- On STAR reduce production type_expr_no_name -> array_type_expr 
-- On SLASH reduce production type_expr_no_name -> array_type_expr 
-- On SHIFT reduce production type_expr_no_name -> array_type_expr 
-- On SEMICOLON reduce production type_expr_no_name -> array_type_expr 
-- On RIGHTPAR reduce production type_expr_no_name -> array_type_expr 
-- On RIGHTBRACKET reduce production type_expr_no_name -> array_type_expr 
-- On QUESTIONMARK reduce production type_expr_no_name -> array_type_expr 
-- On PLUS reduce production type_expr_no_name -> array_type_expr 
-- On PERCENT reduce production type_expr_no_name -> array_type_expr 
-- On MINUS reduce production type_expr_no_name -> array_type_expr 
-- On LTEQEQGT reduce production type_expr_no_name -> array_type_expr 
-- On LTEQEQ reduce production type_expr_no_name -> array_type_expr 
-- On LTEQBANGEQGT reduce production type_expr_no_name -> array_type_expr 
-- On INSTANCEOF reduce production type_expr_no_name -> array_type_expr 
-- On IF reduce production type_expr_no_name -> array_type_expr 
-- On ID reduce production type_expr_no_name -> array_type_expr 
-- On EQOP reduce production type_expr_no_name -> array_type_expr 
-- On EQEQGT reduce production type_expr_no_name -> array_type_expr 
-- On DOTDOT reduce production type_expr_no_name -> array_type_expr 
-- On COMP reduce production type_expr_no_name -> array_type_expr 
-- On COMMA reduce production type_expr_no_name -> array_type_expr 
-- On COLON reduce production type_expr_no_name -> array_type_expr 
-- On CARET reduce production type_expr_no_name -> array_type_expr 
-- On AMPERSANDAMPERSAND reduce production type_expr_no_name -> array_type_expr 
-- On AMPERSAND reduce production type_expr_no_name -> array_type_expr 

State 50:
array_type_expr -> array_type_expr LEFTBRACKET . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTBRACKET shift to state 51

State 51:
array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF ID EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On VERTICALBAR reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On STAR reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On SLASH reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On SHIFT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On SEMICOLON reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On RIGHTPAR reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On RIGHTBRACKET reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On QUESTIONMARK reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On PLUS reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On PERCENT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On MINUS reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQGT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On LTEQEQ reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On LTEQBANGEQGT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On LEFTBRACKET reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On INSTANCEOF reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On IF reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On ID reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On EQOP reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On EQEQGT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On DOTDOT reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On COMP reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On COMMA reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On COLON reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On CARET reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On AMPERSANDAMPERSAND reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 
-- On AMPERSAND reduce production array_type_expr -> array_type_expr LEFTBRACKET RIGHTBRACKET 

State 52:
primary_no_new_array -> BSRESULT . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSRESULT 
-- On VERTICALBAR reduce production primary_no_new_array -> BSRESULT 
-- On STAR reduce production primary_no_new_array -> BSRESULT 
-- On SLASH reduce production primary_no_new_array -> BSRESULT 
-- On SHIFT reduce production primary_no_new_array -> BSRESULT 
-- On SEMICOLON reduce production primary_no_new_array -> BSRESULT 
-- On RIGHTPAR reduce production primary_no_new_array -> BSRESULT 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSRESULT 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSRESULT 
-- On PLUS reduce production primary_no_new_array -> BSRESULT 
-- On PERCENT reduce production primary_no_new_array -> BSRESULT 
-- On MINUS reduce production primary_no_new_array -> BSRESULT 
-- On LTEQEQGT reduce production primary_no_new_array -> BSRESULT 
-- On LTEQEQ reduce production primary_no_new_array -> BSRESULT 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSRESULT 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSRESULT 
-- On INSTANCEOF reduce production primary_no_new_array -> BSRESULT 
-- On IF reduce production primary_no_new_array -> BSRESULT 
-- On EQOP reduce production primary_no_new_array -> BSRESULT 
-- On EQEQGT reduce production primary_no_new_array -> BSRESULT 
-- On DOTDOT reduce production primary_no_new_array -> BSRESULT 
-- On DOT reduce production primary_no_new_array -> BSRESULT 
-- On COMP reduce production primary_no_new_array -> BSRESULT 
-- On COMMA reduce production primary_no_new_array -> BSRESULT 
-- On COLON reduce production primary_no_new_array -> BSRESULT 
-- On CARET reduce production primary_no_new_array -> BSRESULT 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSRESULT 
-- On AMPERSAND reduce production primary_no_new_array -> BSRESULT 

State 53:
primary_no_new_array -> BSOLD . LEFTPAR expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 54

State 54:
primary_no_new_array -> BSOLD LEFTPAR . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 141
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 55:
primary_no_new_array -> BSFRESH . LEFTPAR expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 56

State 56:
primary_no_new_array -> BSFRESH LEFTPAR . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 139
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 57:
primary_no_new_array -> BSFPI . LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 58

State 58:
primary_no_new_array -> BSFPI LEFTPAR . expr COMMA REAL COMMA REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 133
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 59:
expr_no_name -> BANG . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 132
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 60:
array_access -> primary_no_new_array . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_expr -> primary_no_new_array . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 61
-- On VERTICALBARVERTICALBAR reduce production primary_expr -> primary_no_new_array 
-- On VERTICALBAR reduce production primary_expr -> primary_no_new_array 
-- On STAR reduce production primary_expr -> primary_no_new_array 
-- On SLASH reduce production primary_expr -> primary_no_new_array 
-- On SHIFT reduce production primary_expr -> primary_no_new_array 
-- On SEMICOLON reduce production primary_expr -> primary_no_new_array 
-- On RIGHTPAR reduce production primary_expr -> primary_no_new_array 
-- On RIGHTBRACKET reduce production primary_expr -> primary_no_new_array 
-- On QUESTIONMARK reduce production primary_expr -> primary_no_new_array 
-- On PLUS reduce production primary_expr -> primary_no_new_array 
-- On PERCENT reduce production primary_expr -> primary_no_new_array 
-- On MINUS reduce production primary_expr -> primary_no_new_array 
-- On LTEQEQGT reduce production primary_expr -> primary_no_new_array 
-- On LTEQEQ reduce production primary_expr -> primary_no_new_array 
-- On LTEQBANGEQGT reduce production primary_expr -> primary_no_new_array 
-- On INSTANCEOF reduce production primary_expr -> primary_no_new_array 
-- On IF reduce production primary_expr -> primary_no_new_array 
-- On EQOP reduce production primary_expr -> primary_no_new_array 
-- On EQEQGT reduce production primary_expr -> primary_no_new_array 
-- On DOTDOT reduce production primary_expr -> primary_no_new_array 
-- On DOT reduce production primary_expr -> primary_no_new_array 
-- On COMP reduce production primary_expr -> primary_no_new_array 
-- On COMMA reduce production primary_expr -> primary_no_new_array 
-- On COLON reduce production primary_expr -> primary_no_new_array 
-- On CARET reduce production primary_expr -> primary_no_new_array 
-- On AMPERSANDAMPERSAND reduce production primary_expr -> primary_no_new_array 
-- On AMPERSAND reduce production primary_expr -> primary_no_new_array 

State 61:
array_access -> primary_no_new_array LEFTBRACKET . expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 130
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 62:
expr_no_name -> primary_expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
field_access -> primary_expr . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> primary_expr . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On DOT shift to state 63
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> primary_expr 
-- On VERTICALBAR reduce production expr_no_name -> primary_expr 
-- On STAR reduce production expr_no_name -> primary_expr 
-- On SLASH reduce production expr_no_name -> primary_expr 
-- On SHIFT reduce production expr_no_name -> primary_expr 
-- On SEMICOLON reduce production expr_no_name -> primary_expr 
-- On RIGHTPAR reduce production expr_no_name -> primary_expr 
-- On RIGHTBRACKET reduce production expr_no_name -> primary_expr 
-- On QUESTIONMARK reduce production expr_no_name -> primary_expr 
-- On PLUS reduce production expr_no_name -> primary_expr 
-- On PERCENT reduce production expr_no_name -> primary_expr 
-- On MINUS reduce production expr_no_name -> primary_expr 
-- On LTEQEQGT reduce production expr_no_name -> primary_expr 
-- On LTEQEQ reduce production expr_no_name -> primary_expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> primary_expr 
-- On INSTANCEOF reduce production expr_no_name -> primary_expr 
-- On IF reduce production expr_no_name -> primary_expr 
-- On EQOP reduce production expr_no_name -> primary_expr 
-- On EQEQGT reduce production expr_no_name -> primary_expr 
-- On DOTDOT reduce production expr_no_name -> primary_expr 
-- On COMP reduce production expr_no_name -> primary_expr 
-- On COMMA reduce production expr_no_name -> primary_expr 
-- On COLON reduce production expr_no_name -> primary_expr 
-- On CARET reduce production expr_no_name -> primary_expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> primary_expr 
-- On AMPERSAND reduce production expr_no_name -> primary_expr 

State 63:
field_access -> primary_expr DOT . ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> primary_expr DOT . ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On ID shift to state 4
-- On ident shift to state 64

State 64:
field_access -> primary_expr DOT ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> primary_expr DOT ident . LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 65
-- On VERTICALBARVERTICALBAR reduce production field_access -> primary_expr DOT ident 
-- On VERTICALBAR reduce production field_access -> primary_expr DOT ident 
-- On STAR reduce production field_access -> primary_expr DOT ident 
-- On SLASH reduce production field_access -> primary_expr DOT ident 
-- On SHIFT reduce production field_access -> primary_expr DOT ident 
-- On SEMICOLON reduce production field_access -> primary_expr DOT ident 
-- On RIGHTPAR reduce production field_access -> primary_expr DOT ident 
-- On RIGHTBRACKET reduce production field_access -> primary_expr DOT ident 
-- On QUESTIONMARK reduce production field_access -> primary_expr DOT ident 
-- On PLUS reduce production field_access -> primary_expr DOT ident 
-- On PERCENT reduce production field_access -> primary_expr DOT ident 
-- On MINUS reduce production field_access -> primary_expr DOT ident 
-- On LTEQEQGT reduce production field_access -> primary_expr DOT ident 
-- On LTEQEQ reduce production field_access -> primary_expr DOT ident 
-- On LTEQBANGEQGT reduce production field_access -> primary_expr DOT ident 
-- On LEFTBRACKET reduce production field_access -> primary_expr DOT ident 
-- On INSTANCEOF reduce production field_access -> primary_expr DOT ident 
-- On IF reduce production field_access -> primary_expr DOT ident 
-- On EQOP reduce production field_access -> primary_expr DOT ident 
-- On EQEQGT reduce production field_access -> primary_expr DOT ident 
-- On DOTDOT reduce production field_access -> primary_expr DOT ident 
-- On DOT reduce production field_access -> primary_expr DOT ident 
-- On COMP reduce production field_access -> primary_expr DOT ident 
-- On COMMA reduce production field_access -> primary_expr DOT ident 
-- On COLON reduce production field_access -> primary_expr DOT ident 
-- On CARET reduce production field_access -> primary_expr DOT ident 
-- On AMPERSANDAMPERSAND reduce production field_access -> primary_expr DOT ident 
-- On AMPERSAND reduce production field_access -> primary_expr DOT ident 

State 65:
primary_no_new_array -> primary_expr DOT ident LEFTPAR . argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr_comma_list shift to state 73
-- On expr shift to state 74
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82
-- On argument_list shift to state 128
-- On RIGHTPAR reduce production argument_list -> 

State 66:
primary_no_new_array -> parenthesized_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> parenthesized_name 
-- On VERTICALBAR reduce production primary_no_new_array -> parenthesized_name 
-- On STAR reduce production primary_no_new_array -> parenthesized_name 
-- On SLASH reduce production primary_no_new_array -> parenthesized_name 
-- On SHIFT reduce production primary_no_new_array -> parenthesized_name 
-- On SEMICOLON reduce production primary_no_new_array -> parenthesized_name 
-- On RIGHTPAR reduce production primary_no_new_array -> parenthesized_name 
-- On RIGHTBRACKET reduce production primary_no_new_array -> parenthesized_name 
-- On QUESTIONMARK reduce production primary_no_new_array -> parenthesized_name 
-- On PLUS reduce production primary_no_new_array -> parenthesized_name 
-- On PERCENT reduce production primary_no_new_array -> parenthesized_name 
-- On MINUS reduce production primary_no_new_array -> parenthesized_name 
-- On LTEQEQGT reduce production primary_no_new_array -> parenthesized_name 
-- On LTEQEQ reduce production primary_no_new_array -> parenthesized_name 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> parenthesized_name 
-- On LEFTBRACKET reduce production primary_no_new_array -> parenthesized_name 
-- On INSTANCEOF reduce production primary_no_new_array -> parenthesized_name 
-- On IF reduce production primary_no_new_array -> parenthesized_name 
-- On EQOP reduce production primary_no_new_array -> parenthesized_name 
-- On EQEQGT reduce production primary_no_new_array -> parenthesized_name 
-- On DOTDOT reduce production primary_no_new_array -> parenthesized_name 
-- On DOT reduce production primary_no_new_array -> parenthesized_name 
-- On COMP reduce production primary_no_new_array -> parenthesized_name 
-- On COMMA reduce production primary_no_new_array -> parenthesized_name 
-- On COLON reduce production primary_no_new_array -> parenthesized_name 
-- On CARET reduce production primary_no_new_array -> parenthesized_name 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> parenthesized_name 
-- On AMPERSAND reduce production primary_no_new_array -> parenthesized_name 

State 67:
array_access -> name . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 68
-- On DOT shift to state 123
-- On VERTICALBARVERTICALBAR reduce production expr -> name 
-- On VERTICALBAR reduce production expr -> name 
-- On STAR reduce production expr -> name 
-- On SLASH reduce production expr -> name 
-- On SHIFT reduce production expr -> name 
-- On SEMICOLON reduce production expr -> name 
-- On RIGHTPAR reduce production expr -> name 
-- On RIGHTBRACKET reduce production expr -> name 
-- On QUESTIONMARK reduce production expr -> name 
-- On PLUS reduce production expr -> name 
-- On PERCENT reduce production expr -> name 
-- On MINUS reduce production expr -> name 
-- On LTEQEQGT reduce production expr -> name 
-- On LTEQEQ reduce production expr -> name 
-- On LTEQBANGEQGT reduce production expr -> name 
-- On INSTANCEOF reduce production expr -> name 
-- On IF reduce production expr -> name 
-- On EQOP reduce production expr -> name 
-- On EQEQGT reduce production expr -> name 
-- On DOTDOT reduce production expr -> name 
-- On COMP reduce production expr -> name 
-- On COMMA reduce production expr -> name 
-- On COLON reduce production expr -> name 
-- On CARET reduce production expr -> name 
-- On AMPERSANDAMPERSAND reduce production expr -> name 
-- On AMPERSAND reduce production expr -> name 

State 68:
array_access -> name LEFTBRACKET . expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 121
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 69:
name -> ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> ident . LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 70
-- On VERTICALBARVERTICALBAR reduce production name -> ident 
-- On VERTICALBAR reduce production name -> ident 
-- On STAR reduce production name -> ident 
-- On SLASH reduce production name -> ident 
-- On SHIFT reduce production name -> ident 
-- On SEMICOLON reduce production name -> ident 
-- On RIGHTPAR reduce production name -> ident 
-- On RIGHTBRACKET reduce production name -> ident 
-- On QUESTIONMARK reduce production name -> ident 
-- On PLUS reduce production name -> ident 
-- On PERCENT reduce production name -> ident 
-- On MINUS reduce production name -> ident 
-- On LTEQEQGT reduce production name -> ident 
-- On LTEQEQ reduce production name -> ident 
-- On LTEQBANGEQGT reduce production name -> ident 
-- On LEFTBRACKET reduce production name -> ident 
-- On INSTANCEOF reduce production name -> ident 
-- On IF reduce production name -> ident 
-- On EQOP reduce production name -> ident 
-- On EQEQGT reduce production name -> ident 
-- On DOTDOT reduce production name -> ident 
-- On DOT reduce production name -> ident 
-- On COMP reduce production name -> ident 
-- On COMMA reduce production name -> ident 
-- On COLON reduce production name -> ident 
-- On CARET reduce production name -> ident 
-- On AMPERSANDAMPERSAND reduce production name -> ident 
-- On AMPERSAND reduce production name -> ident 

State 70:
primary_no_new_array -> ident LEFTPAR . argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr_comma_list shift to state 73
-- On expr shift to state 74
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82
-- On argument_list shift to state 119
-- On RIGHTPAR reduce production argument_list -> 

State 71:
primary_no_new_array -> field_access . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> field_access 
-- On VERTICALBAR reduce production primary_no_new_array -> field_access 
-- On STAR reduce production primary_no_new_array -> field_access 
-- On SLASH reduce production primary_no_new_array -> field_access 
-- On SHIFT reduce production primary_no_new_array -> field_access 
-- On SEMICOLON reduce production primary_no_new_array -> field_access 
-- On RIGHTPAR reduce production primary_no_new_array -> field_access 
-- On RIGHTBRACKET reduce production primary_no_new_array -> field_access 
-- On QUESTIONMARK reduce production primary_no_new_array -> field_access 
-- On PLUS reduce production primary_no_new_array -> field_access 
-- On PERCENT reduce production primary_no_new_array -> field_access 
-- On MINUS reduce production primary_no_new_array -> field_access 
-- On LTEQEQGT reduce production primary_no_new_array -> field_access 
-- On LTEQEQ reduce production primary_no_new_array -> field_access 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> field_access 
-- On LEFTBRACKET reduce production primary_no_new_array -> field_access 
-- On INSTANCEOF reduce production primary_no_new_array -> field_access 
-- On IF reduce production primary_no_new_array -> field_access 
-- On EQOP reduce production primary_no_new_array -> field_access 
-- On EQEQGT reduce production primary_no_new_array -> field_access 
-- On DOTDOT reduce production primary_no_new_array -> field_access 
-- On DOT reduce production primary_no_new_array -> field_access 
-- On COMP reduce production primary_no_new_array -> field_access 
-- On COMMA reduce production primary_no_new_array -> field_access 
-- On COLON reduce production primary_no_new_array -> field_access 
-- On CARET reduce production primary_no_new_array -> field_access 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> field_access 
-- On AMPERSAND reduce production primary_no_new_array -> field_access 

State 72:
expr -> expr_no_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr -> expr_no_name 
-- On VERTICALBAR reduce production expr -> expr_no_name 
-- On STAR reduce production expr -> expr_no_name 
-- On SLASH reduce production expr -> expr_no_name 
-- On SHIFT reduce production expr -> expr_no_name 
-- On SEMICOLON reduce production expr -> expr_no_name 
-- On RIGHTPAR reduce production expr -> expr_no_name 
-- On RIGHTBRACKET reduce production expr -> expr_no_name 
-- On QUESTIONMARK reduce production expr -> expr_no_name 
-- On PLUS reduce production expr -> expr_no_name 
-- On PERCENT reduce production expr -> expr_no_name 
-- On MINUS reduce production expr -> expr_no_name 
-- On LTEQEQGT reduce production expr -> expr_no_name 
-- On LTEQEQ reduce production expr -> expr_no_name 
-- On LTEQBANGEQGT reduce production expr -> expr_no_name 
-- On INSTANCEOF reduce production expr -> expr_no_name 
-- On IF reduce production expr -> expr_no_name 
-- On EQOP reduce production expr -> expr_no_name 
-- On EQEQGT reduce production expr -> expr_no_name 
-- On DOTDOT reduce production expr -> expr_no_name 
-- On COMP reduce production expr -> expr_no_name 
-- On COMMA reduce production expr -> expr_no_name 
-- On COLON reduce production expr -> expr_no_name 
-- On CARET reduce production expr -> expr_no_name 
-- On AMPERSANDAMPERSAND reduce production expr -> expr_no_name 
-- On AMPERSAND reduce production expr -> expr_no_name 

State 73:
argument_list -> expr_comma_list . [ RIGHTPAR ]
-- On RIGHTPAR reduce production argument_list -> expr_comma_list 

State 74:
expr_comma_list -> expr . [ RIGHTPAR ]
expr_comma_list -> expr . COMMA expr_comma_list [ RIGHTPAR ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On COMMA shift to state 117
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On RIGHTPAR reduce production expr_comma_list -> expr 

State 75:
expr_no_name -> expr VERTICALBARVERTICALBAR . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 76
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 76:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr VERTICALBARVERTICALBAR expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On SEMICOLON reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On RIGHTPAR reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On LTEQEQGT reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On LTEQEQ reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On IF reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On EQEQGT reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On DOTDOT reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On COMMA reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 
-- On COLON reduce production expr_no_name -> expr VERTICALBARVERTICALBAR expr 

State 77:
expr_no_name -> expr VERTICALBAR . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 78
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 78:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr VERTICALBAR expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSAND shift to state 101
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr VERTICALBAR expr 
-- On VERTICALBAR reduce production expr_no_name -> expr VERTICALBAR expr 
-- On SEMICOLON reduce production expr_no_name -> expr VERTICALBAR expr 
-- On RIGHTPAR reduce production expr_no_name -> expr VERTICALBAR expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr VERTICALBAR expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr VERTICALBAR expr 
-- On LTEQEQGT reduce production expr_no_name -> expr VERTICALBAR expr 
-- On LTEQEQ reduce production expr_no_name -> expr VERTICALBAR expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr VERTICALBAR expr 
-- On IF reduce production expr_no_name -> expr VERTICALBAR expr 
-- On EQEQGT reduce production expr_no_name -> expr VERTICALBAR expr 
-- On DOTDOT reduce production expr_no_name -> expr VERTICALBAR expr 
-- On COMMA reduce production expr_no_name -> expr VERTICALBAR expr 
-- On COLON reduce production expr_no_name -> expr VERTICALBAR expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr VERTICALBAR expr 

State 79:
expr_no_name -> expr STAR . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 80
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 80:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr STAR expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr STAR expr 
-- On VERTICALBAR reduce production expr_no_name -> expr STAR expr 
-- On STAR reduce production expr_no_name -> expr STAR expr 
-- On SLASH reduce production expr_no_name -> expr STAR expr 
-- On SHIFT reduce production expr_no_name -> expr STAR expr 
-- On SEMICOLON reduce production expr_no_name -> expr STAR expr 
-- On RIGHTPAR reduce production expr_no_name -> expr STAR expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr STAR expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr STAR expr 
-- On PLUS reduce production expr_no_name -> expr STAR expr 
-- On PERCENT reduce production expr_no_name -> expr STAR expr 
-- On MINUS reduce production expr_no_name -> expr STAR expr 
-- On LTEQEQGT reduce production expr_no_name -> expr STAR expr 
-- On LTEQEQ reduce production expr_no_name -> expr STAR expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr STAR expr 
-- On INSTANCEOF reduce production expr_no_name -> expr STAR expr 
-- On IF reduce production expr_no_name -> expr STAR expr 
-- On EQOP reduce production expr_no_name -> expr STAR expr 
-- On EQEQGT reduce production expr_no_name -> expr STAR expr 
-- On DOTDOT reduce production expr_no_name -> expr STAR expr 
-- On COMP reduce production expr_no_name -> expr STAR expr 
-- On COMMA reduce production expr_no_name -> expr STAR expr 
-- On COLON reduce production expr_no_name -> expr STAR expr 
-- On CARET reduce production expr_no_name -> expr STAR expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr STAR expr 
-- On AMPERSAND reduce production expr_no_name -> expr STAR expr 

State 81:
primary_expr -> array_creation_expression . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_expr -> array_creation_expression 
-- On VERTICALBAR reduce production primary_expr -> array_creation_expression 
-- On STAR reduce production primary_expr -> array_creation_expression 
-- On SLASH reduce production primary_expr -> array_creation_expression 
-- On SHIFT reduce production primary_expr -> array_creation_expression 
-- On SEMICOLON reduce production primary_expr -> array_creation_expression 
-- On RIGHTPAR reduce production primary_expr -> array_creation_expression 
-- On RIGHTBRACKET reduce production primary_expr -> array_creation_expression 
-- On QUESTIONMARK reduce production primary_expr -> array_creation_expression 
-- On PLUS reduce production primary_expr -> array_creation_expression 
-- On PERCENT reduce production primary_expr -> array_creation_expression 
-- On MINUS reduce production primary_expr -> array_creation_expression 
-- On LTEQEQGT reduce production primary_expr -> array_creation_expression 
-- On LTEQEQ reduce production primary_expr -> array_creation_expression 
-- On LTEQBANGEQGT reduce production primary_expr -> array_creation_expression 
-- On INSTANCEOF reduce production primary_expr -> array_creation_expression 
-- On IF reduce production primary_expr -> array_creation_expression 
-- On EQOP reduce production primary_expr -> array_creation_expression 
-- On EQEQGT reduce production primary_expr -> array_creation_expression 
-- On DOTDOT reduce production primary_expr -> array_creation_expression 
-- On DOT reduce production primary_expr -> array_creation_expression 
-- On COMP reduce production primary_expr -> array_creation_expression 
-- On COMMA reduce production primary_expr -> array_creation_expression 
-- On COLON reduce production primary_expr -> array_creation_expression 
-- On CARET reduce production primary_expr -> array_creation_expression 
-- On AMPERSANDAMPERSAND reduce production primary_expr -> array_creation_expression 
-- On AMPERSAND reduce production primary_expr -> array_creation_expression 

State 82:
primary_no_new_array -> array_access . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> array_access 
-- On VERTICALBAR reduce production primary_no_new_array -> array_access 
-- On STAR reduce production primary_no_new_array -> array_access 
-- On SLASH reduce production primary_no_new_array -> array_access 
-- On SHIFT reduce production primary_no_new_array -> array_access 
-- On SEMICOLON reduce production primary_no_new_array -> array_access 
-- On RIGHTPAR reduce production primary_no_new_array -> array_access 
-- On RIGHTBRACKET reduce production primary_no_new_array -> array_access 
-- On QUESTIONMARK reduce production primary_no_new_array -> array_access 
-- On PLUS reduce production primary_no_new_array -> array_access 
-- On PERCENT reduce production primary_no_new_array -> array_access 
-- On MINUS reduce production primary_no_new_array -> array_access 
-- On LTEQEQGT reduce production primary_no_new_array -> array_access 
-- On LTEQEQ reduce production primary_no_new_array -> array_access 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> array_access 
-- On LEFTBRACKET reduce production primary_no_new_array -> array_access 
-- On INSTANCEOF reduce production primary_no_new_array -> array_access 
-- On IF reduce production primary_no_new_array -> array_access 
-- On EQOP reduce production primary_no_new_array -> array_access 
-- On EQEQGT reduce production primary_no_new_array -> array_access 
-- On DOTDOT reduce production primary_no_new_array -> array_access 
-- On DOT reduce production primary_no_new_array -> array_access 
-- On COMP reduce production primary_no_new_array -> array_access 
-- On COMMA reduce production primary_no_new_array -> array_access 
-- On COLON reduce production primary_no_new_array -> array_access 
-- On CARET reduce production primary_no_new_array -> array_access 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> array_access 
-- On AMPERSAND reduce production primary_no_new_array -> array_access 

State 83:
expr_no_name -> expr SLASH . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 84
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 84:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr SLASH expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr SLASH expr 
-- On VERTICALBAR reduce production expr_no_name -> expr SLASH expr 
-- On STAR reduce production expr_no_name -> expr SLASH expr 
-- On SLASH reduce production expr_no_name -> expr SLASH expr 
-- On SHIFT reduce production expr_no_name -> expr SLASH expr 
-- On SEMICOLON reduce production expr_no_name -> expr SLASH expr 
-- On RIGHTPAR reduce production expr_no_name -> expr SLASH expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr SLASH expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr SLASH expr 
-- On PLUS reduce production expr_no_name -> expr SLASH expr 
-- On PERCENT reduce production expr_no_name -> expr SLASH expr 
-- On MINUS reduce production expr_no_name -> expr SLASH expr 
-- On LTEQEQGT reduce production expr_no_name -> expr SLASH expr 
-- On LTEQEQ reduce production expr_no_name -> expr SLASH expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr SLASH expr 
-- On INSTANCEOF reduce production expr_no_name -> expr SLASH expr 
-- On IF reduce production expr_no_name -> expr SLASH expr 
-- On EQOP reduce production expr_no_name -> expr SLASH expr 
-- On EQEQGT reduce production expr_no_name -> expr SLASH expr 
-- On DOTDOT reduce production expr_no_name -> expr SLASH expr 
-- On COMP reduce production expr_no_name -> expr SLASH expr 
-- On COMMA reduce production expr_no_name -> expr SLASH expr 
-- On COLON reduce production expr_no_name -> expr SLASH expr 
-- On CARET reduce production expr_no_name -> expr SLASH expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr SLASH expr 
-- On AMPERSAND reduce production expr_no_name -> expr SLASH expr 

State 85:
expr_no_name -> expr SHIFT . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 86
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 86:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr SHIFT expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr SHIFT expr 
-- On VERTICALBAR reduce production expr_no_name -> expr SHIFT expr 
-- On SHIFT reduce production expr_no_name -> expr SHIFT expr 
-- On SEMICOLON reduce production expr_no_name -> expr SHIFT expr 
-- On RIGHTPAR reduce production expr_no_name -> expr SHIFT expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr SHIFT expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr SHIFT expr 
-- On LTEQEQGT reduce production expr_no_name -> expr SHIFT expr 
-- On LTEQEQ reduce production expr_no_name -> expr SHIFT expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr SHIFT expr 
-- On INSTANCEOF reduce production expr_no_name -> expr SHIFT expr 
-- On IF reduce production expr_no_name -> expr SHIFT expr 
-- On EQOP reduce production expr_no_name -> expr SHIFT expr 
-- On EQEQGT reduce production expr_no_name -> expr SHIFT expr 
-- On DOTDOT reduce production expr_no_name -> expr SHIFT expr 
-- On COMP reduce production expr_no_name -> expr SHIFT expr 
-- On COMMA reduce production expr_no_name -> expr SHIFT expr 
-- On COLON reduce production expr_no_name -> expr SHIFT expr 
-- On CARET reduce production expr_no_name -> expr SHIFT expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr SHIFT expr 
-- On AMPERSAND reduce production expr_no_name -> expr SHIFT expr 

State 87:
expr_no_name -> expr PLUS . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 88
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 88:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr PLUS expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On PERCENT shift to state 89
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr PLUS expr 
-- On VERTICALBAR reduce production expr_no_name -> expr PLUS expr 
-- On SHIFT reduce production expr_no_name -> expr PLUS expr 
-- On SEMICOLON reduce production expr_no_name -> expr PLUS expr 
-- On RIGHTPAR reduce production expr_no_name -> expr PLUS expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr PLUS expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr PLUS expr 
-- On PLUS reduce production expr_no_name -> expr PLUS expr 
-- On MINUS reduce production expr_no_name -> expr PLUS expr 
-- On LTEQEQGT reduce production expr_no_name -> expr PLUS expr 
-- On LTEQEQ reduce production expr_no_name -> expr PLUS expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr PLUS expr 
-- On INSTANCEOF reduce production expr_no_name -> expr PLUS expr 
-- On IF reduce production expr_no_name -> expr PLUS expr 
-- On EQOP reduce production expr_no_name -> expr PLUS expr 
-- On EQEQGT reduce production expr_no_name -> expr PLUS expr 
-- On DOTDOT reduce production expr_no_name -> expr PLUS expr 
-- On COMP reduce production expr_no_name -> expr PLUS expr 
-- On COMMA reduce production expr_no_name -> expr PLUS expr 
-- On COLON reduce production expr_no_name -> expr PLUS expr 
-- On CARET reduce production expr_no_name -> expr PLUS expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr PLUS expr 
-- On AMPERSAND reduce production expr_no_name -> expr PLUS expr 

State 89:
expr_no_name -> expr PERCENT . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 90
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 90:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr PERCENT expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr PERCENT expr 
-- On VERTICALBAR reduce production expr_no_name -> expr PERCENT expr 
-- On STAR reduce production expr_no_name -> expr PERCENT expr 
-- On SLASH reduce production expr_no_name -> expr PERCENT expr 
-- On SHIFT reduce production expr_no_name -> expr PERCENT expr 
-- On SEMICOLON reduce production expr_no_name -> expr PERCENT expr 
-- On RIGHTPAR reduce production expr_no_name -> expr PERCENT expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr PERCENT expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr PERCENT expr 
-- On PLUS reduce production expr_no_name -> expr PERCENT expr 
-- On PERCENT reduce production expr_no_name -> expr PERCENT expr 
-- On MINUS reduce production expr_no_name -> expr PERCENT expr 
-- On LTEQEQGT reduce production expr_no_name -> expr PERCENT expr 
-- On LTEQEQ reduce production expr_no_name -> expr PERCENT expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr PERCENT expr 
-- On INSTANCEOF reduce production expr_no_name -> expr PERCENT expr 
-- On IF reduce production expr_no_name -> expr PERCENT expr 
-- On EQOP reduce production expr_no_name -> expr PERCENT expr 
-- On EQEQGT reduce production expr_no_name -> expr PERCENT expr 
-- On DOTDOT reduce production expr_no_name -> expr PERCENT expr 
-- On COMP reduce production expr_no_name -> expr PERCENT expr 
-- On COMMA reduce production expr_no_name -> expr PERCENT expr 
-- On COLON reduce production expr_no_name -> expr PERCENT expr 
-- On CARET reduce production expr_no_name -> expr PERCENT expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr PERCENT expr 
-- On AMPERSAND reduce production expr_no_name -> expr PERCENT expr 

State 91:
expr_no_name -> expr MINUS . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 92
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 92:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr MINUS expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On PERCENT shift to state 89
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr MINUS expr 
-- On VERTICALBAR reduce production expr_no_name -> expr MINUS expr 
-- On SHIFT reduce production expr_no_name -> expr MINUS expr 
-- On SEMICOLON reduce production expr_no_name -> expr MINUS expr 
-- On RIGHTPAR reduce production expr_no_name -> expr MINUS expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr MINUS expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr MINUS expr 
-- On PLUS reduce production expr_no_name -> expr MINUS expr 
-- On MINUS reduce production expr_no_name -> expr MINUS expr 
-- On LTEQEQGT reduce production expr_no_name -> expr MINUS expr 
-- On LTEQEQ reduce production expr_no_name -> expr MINUS expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr MINUS expr 
-- On INSTANCEOF reduce production expr_no_name -> expr MINUS expr 
-- On IF reduce production expr_no_name -> expr MINUS expr 
-- On EQOP reduce production expr_no_name -> expr MINUS expr 
-- On EQEQGT reduce production expr_no_name -> expr MINUS expr 
-- On DOTDOT reduce production expr_no_name -> expr MINUS expr 
-- On COMP reduce production expr_no_name -> expr MINUS expr 
-- On COMMA reduce production expr_no_name -> expr MINUS expr 
-- On COLON reduce production expr_no_name -> expr MINUS expr 
-- On CARET reduce production expr_no_name -> expr MINUS expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr MINUS expr 
-- On AMPERSAND reduce production expr_no_name -> expr MINUS expr 

State 93:
expr_no_name -> expr INSTANCEOF . type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 94
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 94:
expr_no_name -> expr INSTANCEOF type_expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On VERTICALBAR reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On STAR reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On SLASH reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On SHIFT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On SEMICOLON reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On RIGHTPAR reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On PLUS reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On PERCENT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On MINUS reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On LTEQEQGT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On LTEQEQ reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On INSTANCEOF reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On IF reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On EQOP reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On EQEQGT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On DOTDOT reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On COMP reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On COMMA reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On COLON reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On CARET reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr INSTANCEOF type_expr 
-- On AMPERSAND reduce production expr_no_name -> expr INSTANCEOF type_expr 

State 95:
expr_no_name -> expr EQOP . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 96
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 96:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr EQOP expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On COMP shift to state 97
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr EQOP expr 
-- On VERTICALBAR reduce production expr_no_name -> expr EQOP expr 
-- On SEMICOLON reduce production expr_no_name -> expr EQOP expr 
-- On RIGHTPAR reduce production expr_no_name -> expr EQOP expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr EQOP expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr EQOP expr 
-- On LTEQEQGT reduce production expr_no_name -> expr EQOP expr 
-- On LTEQEQ reduce production expr_no_name -> expr EQOP expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr EQOP expr 
-- On IF reduce production expr_no_name -> expr EQOP expr 
-- On EQOP reduce production expr_no_name -> expr EQOP expr 
-- On EQEQGT reduce production expr_no_name -> expr EQOP expr 
-- On DOTDOT reduce production expr_no_name -> expr EQOP expr 
-- On COMMA reduce production expr_no_name -> expr EQOP expr 
-- On COLON reduce production expr_no_name -> expr EQOP expr 
-- On CARET reduce production expr_no_name -> expr EQOP expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr EQOP expr 
-- On AMPERSAND reduce production expr_no_name -> expr EQOP expr 

State 97:
expr_no_name -> expr COMP . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 98
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 98:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr COMP expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr COMP expr 
-- On VERTICALBAR reduce production expr_no_name -> expr COMP expr 
-- On SEMICOLON reduce production expr_no_name -> expr COMP expr 
-- On RIGHTPAR reduce production expr_no_name -> expr COMP expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr COMP expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr COMP expr 
-- On LTEQEQGT reduce production expr_no_name -> expr COMP expr 
-- On LTEQEQ reduce production expr_no_name -> expr COMP expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr COMP expr 
-- On INSTANCEOF reduce production expr_no_name -> expr COMP expr 
-- On IF reduce production expr_no_name -> expr COMP expr 
-- On EQOP reduce production expr_no_name -> expr COMP expr 
-- On EQEQGT reduce production expr_no_name -> expr COMP expr 
-- On DOTDOT reduce production expr_no_name -> expr COMP expr 
-- On COMP reduce production expr_no_name -> expr COMP expr 
-- On COMMA reduce production expr_no_name -> expr COMP expr 
-- On COLON reduce production expr_no_name -> expr COMP expr 
-- On CARET reduce production expr_no_name -> expr COMP expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr COMP expr 
-- On AMPERSAND reduce production expr_no_name -> expr COMP expr 

State 99:
expr_no_name -> expr CARET . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 100
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 100:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr CARET expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On COMP shift to state 97
-- On AMPERSAND shift to state 101
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr CARET expr 
-- On VERTICALBAR reduce production expr_no_name -> expr CARET expr 
-- On SEMICOLON reduce production expr_no_name -> expr CARET expr 
-- On RIGHTPAR reduce production expr_no_name -> expr CARET expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr CARET expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr CARET expr 
-- On LTEQEQGT reduce production expr_no_name -> expr CARET expr 
-- On LTEQEQ reduce production expr_no_name -> expr CARET expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr CARET expr 
-- On IF reduce production expr_no_name -> expr CARET expr 
-- On EQEQGT reduce production expr_no_name -> expr CARET expr 
-- On DOTDOT reduce production expr_no_name -> expr CARET expr 
-- On COMMA reduce production expr_no_name -> expr CARET expr 
-- On COLON reduce production expr_no_name -> expr CARET expr 
-- On CARET reduce production expr_no_name -> expr CARET expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr CARET expr 

State 101:
expr_no_name -> expr AMPERSAND . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 102
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 102:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr AMPERSAND expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On COMP shift to state 97
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr AMPERSAND expr 
-- On VERTICALBAR reduce production expr_no_name -> expr AMPERSAND expr 
-- On SEMICOLON reduce production expr_no_name -> expr AMPERSAND expr 
-- On RIGHTPAR reduce production expr_no_name -> expr AMPERSAND expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr AMPERSAND expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr AMPERSAND expr 
-- On LTEQEQGT reduce production expr_no_name -> expr AMPERSAND expr 
-- On LTEQEQ reduce production expr_no_name -> expr AMPERSAND expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr AMPERSAND expr 
-- On IF reduce production expr_no_name -> expr AMPERSAND expr 
-- On EQEQGT reduce production expr_no_name -> expr AMPERSAND expr 
-- On DOTDOT reduce production expr_no_name -> expr AMPERSAND expr 
-- On COMMA reduce production expr_no_name -> expr AMPERSAND expr 
-- On COLON reduce production expr_no_name -> expr AMPERSAND expr 
-- On CARET reduce production expr_no_name -> expr AMPERSAND expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr AMPERSAND expr 
-- On AMPERSAND reduce production expr_no_name -> expr AMPERSAND expr 

State 103:
expr_no_name -> expr AMPERSANDAMPERSAND . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 104
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 104:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr AMPERSANDAMPERSAND expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSAND shift to state 101
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On SEMICOLON reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On RIGHTPAR reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On LTEQEQGT reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On LTEQEQ reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On IF reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On EQEQGT reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On DOTDOT reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On COMMA reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On COLON reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> expr AMPERSANDAMPERSAND expr 

State 105:
expr_no_name -> expr QUESTIONMARK . expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 106
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 106:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr QUESTIONMARK expr . COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On COLON shift to state 115
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 107:
expr_no_name -> expr LTEQEQGT . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 108
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 108:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr LTEQEQGT expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production expr_no_name -> expr LTEQEQGT expr 
-- On RIGHTPAR reduce production expr_no_name -> expr LTEQEQGT expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr LTEQEQGT expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr LTEQEQGT expr 
-- On IF reduce production expr_no_name -> expr LTEQEQGT expr 
-- On DOTDOT reduce production expr_no_name -> expr LTEQEQGT expr 
-- On COMMA reduce production expr_no_name -> expr LTEQEQGT expr 
-- On COLON reduce production expr_no_name -> expr LTEQEQGT expr 

State 109:
expr_no_name -> expr LTEQEQ . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 110
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 110:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr LTEQEQ expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQ shift to state 109
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production expr_no_name -> expr LTEQEQ expr 
-- On RIGHTPAR reduce production expr_no_name -> expr LTEQEQ expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr LTEQEQ expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr LTEQEQ expr 
-- On LTEQEQGT reduce production expr_no_name -> expr LTEQEQ expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr LTEQEQ expr 
-- On IF reduce production expr_no_name -> expr LTEQEQ expr 
-- On DOTDOT reduce production expr_no_name -> expr LTEQEQ expr 
-- On COMMA reduce production expr_no_name -> expr LTEQEQ expr 
-- On COLON reduce production expr_no_name -> expr LTEQEQ expr 

State 111:
expr_no_name -> expr EQEQGT . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 112
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 112:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr EQEQGT expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQ shift to state 109
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production expr_no_name -> expr EQEQGT expr 
-- On RIGHTPAR reduce production expr_no_name -> expr EQEQGT expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr EQEQGT expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr EQEQGT expr 
-- On LTEQEQGT reduce production expr_no_name -> expr EQEQGT expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> expr EQEQGT expr 
-- On IF reduce production expr_no_name -> expr EQEQGT expr 
-- On DOTDOT reduce production expr_no_name -> expr EQEQGT expr 
-- On COMMA reduce production expr_no_name -> expr EQEQGT expr 
-- On COLON reduce production expr_no_name -> expr EQEQGT expr 

State 113:
expr_no_name -> expr LTEQBANGEQGT . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 114
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 114:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr LTEQBANGEQGT expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On RIGHTPAR reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On QUESTIONMARK reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On IF reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On DOTDOT reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On COMMA reduce production expr_no_name -> expr LTEQBANGEQGT expr 
-- On COLON reduce production expr_no_name -> expr LTEQBANGEQGT expr 

State 115:
expr_no_name -> expr QUESTIONMARK expr COLON . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 116
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 116:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr QUESTIONMARK expr COLON expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On RIGHTPAR reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On RIGHTBRACKET reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On IF reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On DOTDOT reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On COMMA reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 
-- On COLON reduce production expr_no_name -> expr QUESTIONMARK expr COLON expr 

State 117:
expr_comma_list -> expr COMMA . expr_comma_list [ RIGHTPAR ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr_comma_list shift to state 118
-- On expr shift to state 74
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 118:
expr_comma_list -> expr COMMA expr_comma_list . [ RIGHTPAR ]
-- On RIGHTPAR reduce production expr_comma_list -> expr COMMA expr_comma_list 

State 119:
primary_no_new_array -> ident LEFTPAR argument_list . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 120

State 120:
primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On IF reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> ident LEFTPAR argument_list RIGHTPAR 

State 121:
array_access -> name LEFTBRACKET expr . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 122
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 122:
array_access -> name LEFTBRACKET expr RIGHTBRACKET . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On VERTICALBAR reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On STAR reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On SLASH reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On SHIFT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On SEMICOLON reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On RIGHTPAR reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On RIGHTBRACKET reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On QUESTIONMARK reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On PLUS reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On PERCENT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On MINUS reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQEQGT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQEQ reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQBANGEQGT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On LEFTBRACKET reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On INSTANCEOF reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On IF reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On EQOP reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On EQEQGT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On DOTDOT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On DOT reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On COMP reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On COMMA reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On COLON reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On CARET reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On AMPERSANDAMPERSAND reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 
-- On AMPERSAND reduce production array_access -> name LEFTBRACKET expr RIGHTBRACKET 

State 123:
name -> name DOT . ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name DOT . ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On ID shift to state 4
-- On ident shift to state 124

State 124:
name -> name DOT ident . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name DOT ident . LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTPAR shift to state 125
-- On VERTICALBARVERTICALBAR reduce production name -> name DOT ident 
-- On VERTICALBAR reduce production name -> name DOT ident 
-- On STAR reduce production name -> name DOT ident 
-- On SLASH reduce production name -> name DOT ident 
-- On SHIFT reduce production name -> name DOT ident 
-- On SEMICOLON reduce production name -> name DOT ident 
-- On RIGHTPAR reduce production name -> name DOT ident 
-- On RIGHTBRACKET reduce production name -> name DOT ident 
-- On QUESTIONMARK reduce production name -> name DOT ident 
-- On PLUS reduce production name -> name DOT ident 
-- On PERCENT reduce production name -> name DOT ident 
-- On MINUS reduce production name -> name DOT ident 
-- On LTEQEQGT reduce production name -> name DOT ident 
-- On LTEQEQ reduce production name -> name DOT ident 
-- On LTEQBANGEQGT reduce production name -> name DOT ident 
-- On LEFTBRACKET reduce production name -> name DOT ident 
-- On INSTANCEOF reduce production name -> name DOT ident 
-- On IF reduce production name -> name DOT ident 
-- On EQOP reduce production name -> name DOT ident 
-- On EQEQGT reduce production name -> name DOT ident 
-- On DOTDOT reduce production name -> name DOT ident 
-- On DOT reduce production name -> name DOT ident 
-- On COMP reduce production name -> name DOT ident 
-- On COMMA reduce production name -> name DOT ident 
-- On COLON reduce production name -> name DOT ident 
-- On CARET reduce production name -> name DOT ident 
-- On AMPERSANDAMPERSAND reduce production name -> name DOT ident 
-- On AMPERSAND reduce production name -> name DOT ident 

State 125:
primary_no_new_array -> name DOT ident LEFTPAR . argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr_comma_list shift to state 73
-- On expr shift to state 74
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82
-- On argument_list shift to state 126
-- On RIGHTPAR reduce production argument_list -> 

State 126:
primary_no_new_array -> name DOT ident LEFTPAR argument_list . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 127

State 127:
primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On IF reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> name DOT ident LEFTPAR argument_list RIGHTPAR 

State 128:
primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 129

State 129:
primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On IF reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> primary_expr DOT ident LEFTPAR argument_list RIGHTPAR 

State 130:
array_access -> primary_no_new_array LEFTBRACKET expr . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 131
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 131:
array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On VERTICALBAR reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On STAR reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On SLASH reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On SHIFT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On SEMICOLON reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On RIGHTPAR reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On RIGHTBRACKET reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On QUESTIONMARK reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On PLUS reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On PERCENT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On MINUS reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQEQGT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQEQ reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On LTEQBANGEQGT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On LEFTBRACKET reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On INSTANCEOF reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On IF reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On EQOP reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On EQEQGT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On DOTDOT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On DOT reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On COMP reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On COMMA reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On COLON reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On CARET reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On AMPERSANDAMPERSAND reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 
-- On AMPERSAND reduce production array_access -> primary_no_new_array LEFTBRACKET expr RIGHTBRACKET 

State 132:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> BANG expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> BANG expr 
-- On VERTICALBAR reduce production expr_no_name -> BANG expr 
-- On STAR reduce production expr_no_name -> BANG expr 
-- On SLASH reduce production expr_no_name -> BANG expr 
-- On SHIFT reduce production expr_no_name -> BANG expr 
-- On SEMICOLON reduce production expr_no_name -> BANG expr 
-- On RIGHTPAR reduce production expr_no_name -> BANG expr 
-- On RIGHTBRACKET reduce production expr_no_name -> BANG expr 
-- On QUESTIONMARK reduce production expr_no_name -> BANG expr 
-- On PLUS reduce production expr_no_name -> BANG expr 
-- On PERCENT reduce production expr_no_name -> BANG expr 
-- On MINUS reduce production expr_no_name -> BANG expr 
-- On LTEQEQGT reduce production expr_no_name -> BANG expr 
-- On LTEQEQ reduce production expr_no_name -> BANG expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> BANG expr 
-- On INSTANCEOF reduce production expr_no_name -> BANG expr 
-- On IF reduce production expr_no_name -> BANG expr 
-- On EQOP reduce production expr_no_name -> BANG expr 
-- On EQEQGT reduce production expr_no_name -> BANG expr 
-- On DOTDOT reduce production expr_no_name -> BANG expr 
-- On COMP reduce production expr_no_name -> BANG expr 
-- On COMMA reduce production expr_no_name -> BANG expr 
-- On COLON reduce production expr_no_name -> BANG expr 
-- On CARET reduce production expr_no_name -> BANG expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> BANG expr 
-- On AMPERSAND reduce production expr_no_name -> BANG expr 

State 133:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> BSFPI LEFTPAR expr . COMMA REAL COMMA REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On COMMA shift to state 134
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 134:
primary_no_new_array -> BSFPI LEFTPAR expr COMMA . REAL COMMA REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On REAL shift to state 135

State 135:
primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL . COMMA REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On COMMA shift to state 136

State 136:
primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA . REAL RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On REAL shift to state 137

State 137:
primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 138

State 138:
primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On IF reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> BSFPI LEFTPAR expr COMMA REAL COMMA REAL RIGHTPAR 

State 139:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> BSFRESH LEFTPAR expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 140
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 140:
primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> BSFRESH LEFTPAR expr RIGHTPAR 

State 141:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> BSOLD LEFTPAR expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 142
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 142:
primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> BSOLD LEFTPAR expr RIGHTPAR 

State 143:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> BSTYPEOF LEFTPAR expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 144
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 144:
primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> BSTYPEOF LEFTPAR expr RIGHTPAR 

State 145:
primary_no_new_array -> LEFTPAR BSFORALL . variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL . variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On variable_declaration shift to state 146
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 153
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 146:
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration . SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration . SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SEMICOLON shift to state 147

State 147:
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON . expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 148
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 148:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr . SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On SEMICOLON shift to state 149
-- On RIGHTPAR shift to state 152
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 149:
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 150
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 150:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 151
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 151:
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 

State 152:
primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> LEFTPAR BSFORALL variable_declaration SEMICOLON expr RIGHTPAR 

State 153:
variable_declaration -> type_expr . variable_declarators [ SEMICOLON ]
-- On ID shift to state 4
-- On variable_declarators shift to state 154
-- On variable_declarator_id shift to state 155
-- On ident shift to state 160

State 154:
variable_declaration -> type_expr variable_declarators . [ SEMICOLON ]
-- On SEMICOLON reduce production variable_declaration -> type_expr variable_declarators 

State 155:
variable_declarator_id -> variable_declarator_id . LEFTBRACKET RIGHTBRACKET [ SEMICOLON LEFTBRACKET COMMA ]
variable_declarators -> variable_declarator_id . [ SEMICOLON ]
variable_declarators -> variable_declarator_id . COMMA variable_declarators [ SEMICOLON ]
-- On LEFTBRACKET shift to state 156
-- On COMMA shift to state 158
-- On SEMICOLON reduce production variable_declarators -> variable_declarator_id 

State 156:
variable_declarator_id -> variable_declarator_id LEFTBRACKET . RIGHTBRACKET [ SEMICOLON LEFTBRACKET COMMA ]
-- On RIGHTBRACKET shift to state 157

State 157:
variable_declarator_id -> variable_declarator_id LEFTBRACKET RIGHTBRACKET . [ SEMICOLON LEFTBRACKET COMMA ]
-- On SEMICOLON reduce production variable_declarator_id -> variable_declarator_id LEFTBRACKET RIGHTBRACKET 
-- On LEFTBRACKET reduce production variable_declarator_id -> variable_declarator_id LEFTBRACKET RIGHTBRACKET 
-- On COMMA reduce production variable_declarator_id -> variable_declarator_id LEFTBRACKET RIGHTBRACKET 

State 158:
variable_declarators -> variable_declarator_id COMMA . variable_declarators [ SEMICOLON ]
-- On ID shift to state 4
-- On variable_declarators shift to state 159
-- On variable_declarator_id shift to state 155
-- On ident shift to state 160

State 159:
variable_declarators -> variable_declarator_id COMMA variable_declarators . [ SEMICOLON ]
-- On SEMICOLON reduce production variable_declarators -> variable_declarator_id COMMA variable_declarators 

State 160:
variable_declarator_id -> ident . [ SEMICOLON LEFTBRACKET COMMA ]
-- On SEMICOLON reduce production variable_declarator_id -> ident 
-- On LEFTBRACKET reduce production variable_declarator_id -> ident 
-- On COMMA reduce production variable_declarator_id -> ident 

State 161:
primary_no_new_array -> LEFTPAR BSEXISTS . variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS . variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On variable_declaration shift to state 162
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 153
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 162:
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration . SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration . SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On SEMICOLON shift to state 163

State 163:
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON . expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 164
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 164:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr . SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On SEMICOLON shift to state 165
-- On RIGHTPAR shift to state 168
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 165:
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON . expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 166
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 166:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 167
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 167:
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR 

State 168:
primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On IF reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> LEFTPAR BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR 

State 169:
array_access -> name . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
array_type_expr -> name . LEFTBRACKET RIGHTBRACKET [ RIGHTPAR LEFTBRACKET ]
expr -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> LEFTPAR name . RIGHTPAR primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
parenthesized_name -> LEFTPAR name . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 170
-- On LEFTBRACKET shift to state 180
-- On DOT shift to state 123
-- On VERTICALBARVERTICALBAR reduce production expr -> name 
-- On VERTICALBAR reduce production expr -> name 
-- On STAR reduce production expr -> name 
-- On SLASH reduce production expr -> name 
-- On SHIFT reduce production expr -> name 
-- On QUESTIONMARK reduce production expr -> name 
-- On PLUS reduce production expr -> name 
-- On PERCENT reduce production expr -> name 
-- On MINUS reduce production expr -> name 
-- On LTEQEQGT reduce production expr -> name 
-- On LTEQEQ reduce production expr -> name 
-- On LTEQBANGEQGT reduce production expr -> name 
-- On INSTANCEOF reduce production expr -> name 
-- On EQOP reduce production expr -> name 
-- On EQEQGT reduce production expr -> name 
-- On COMP reduce production expr -> name 
-- On CARET reduce production expr -> name 
-- On AMPERSANDAMPERSAND reduce production expr -> name 
-- On AMPERSAND reduce production expr -> name 

State 170:
expr_no_name -> LEFTPAR name RIGHTPAR . primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
parenthesized_name -> LEFTPAR name RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On LEFTPAR shift to state 171
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On primary_no_new_array shift to state 60
-- On primary_expr_or_name shift to state 177
-- On primary_expr shift to state 178
-- On parenthesized_name shift to state 66
-- On name shift to state 179
-- On ident shift to state 69
-- On field_access shift to state 71
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82
-- On VERTICALBARVERTICALBAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On VERTICALBAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On STAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SLASH reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SHIFT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SEMICOLON reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On RIGHTPAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On RIGHTBRACKET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On QUESTIONMARK reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On PLUS reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On PERCENT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On MINUS reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQEQ reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQBANGEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LEFTBRACKET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On INSTANCEOF reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On IF reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On EQOP reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On EQEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On DOTDOT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On DOT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COMP reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COMMA reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COLON reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On CARET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On AMPERSAND reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 

State 171:
parenthesized_name -> LEFTPAR . name RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSFORALL variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSFORALL variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSEXISTS variable_declaration SEMICOLON expr SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . BSEXISTS variable_declaration SEMICOLON expr RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR . expr_no_name RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BSFORALL shift to state 145
-- On BSEXISTS shift to state 161
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 172
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 174
-- On expr shift to state 176
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 172:
array_access -> name . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
parenthesized_name -> LEFTPAR name . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 173
-- On LEFTBRACKET shift to state 68
-- On DOT shift to state 123
-- On VERTICALBARVERTICALBAR reduce production expr -> name 
-- On VERTICALBAR reduce production expr -> name 
-- On STAR reduce production expr -> name 
-- On SLASH reduce production expr -> name 
-- On SHIFT reduce production expr -> name 
-- On QUESTIONMARK reduce production expr -> name 
-- On PLUS reduce production expr -> name 
-- On PERCENT reduce production expr -> name 
-- On MINUS reduce production expr -> name 
-- On LTEQEQGT reduce production expr -> name 
-- On LTEQEQ reduce production expr -> name 
-- On LTEQBANGEQGT reduce production expr -> name 
-- On INSTANCEOF reduce production expr -> name 
-- On EQOP reduce production expr -> name 
-- On EQEQGT reduce production expr -> name 
-- On COMP reduce production expr -> name 
-- On CARET reduce production expr -> name 
-- On AMPERSANDAMPERSAND reduce production expr -> name 
-- On AMPERSAND reduce production expr -> name 

State 173:
parenthesized_name -> LEFTPAR name RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On VERTICALBAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On STAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SLASH reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SHIFT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On SEMICOLON reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On RIGHTPAR reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On RIGHTBRACKET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On QUESTIONMARK reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On PLUS reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On PERCENT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On MINUS reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQEQ reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LTEQBANGEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On LEFTBRACKET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On INSTANCEOF reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On IF reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On EQOP reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On EQEQGT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On DOTDOT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On DOT reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COMP reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COMMA reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On COLON reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On CARET reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 
-- On AMPERSAND reduce production parenthesized_name -> LEFTPAR name RIGHTPAR 

State 174:
expr -> expr_no_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> LEFTPAR expr_no_name . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 175
-- On VERTICALBARVERTICALBAR reduce production expr -> expr_no_name 
-- On VERTICALBAR reduce production expr -> expr_no_name 
-- On STAR reduce production expr -> expr_no_name 
-- On SLASH reduce production expr -> expr_no_name 
-- On SHIFT reduce production expr -> expr_no_name 
-- On QUESTIONMARK reduce production expr -> expr_no_name 
-- On PLUS reduce production expr -> expr_no_name 
-- On PERCENT reduce production expr -> expr_no_name 
-- On MINUS reduce production expr -> expr_no_name 
-- On LTEQEQGT reduce production expr -> expr_no_name 
-- On LTEQEQ reduce production expr -> expr_no_name 
-- On LTEQBANGEQGT reduce production expr -> expr_no_name 
-- On INSTANCEOF reduce production expr -> expr_no_name 
-- On EQOP reduce production expr -> expr_no_name 
-- On EQEQGT reduce production expr -> expr_no_name 
-- On COMP reduce production expr -> expr_no_name 
-- On CARET reduce production expr -> expr_no_name 
-- On AMPERSANDAMPERSAND reduce production expr -> expr_no_name 
-- On AMPERSAND reduce production expr -> expr_no_name 

State 175:
primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On IF reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> LEFTPAR expr_no_name RIGHTPAR 

State 176:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 177:
expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On VERTICALBAR reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On STAR reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On SLASH reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On SHIFT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On SEMICOLON reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On RIGHTPAR reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On RIGHTBRACKET reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On QUESTIONMARK reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On PLUS reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On PERCENT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On MINUS reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On LTEQEQGT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On LTEQEQ reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On LTEQBANGEQGT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On INSTANCEOF reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On IF reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On EQOP reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On EQEQGT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On DOTDOT reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On COMP reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On COMMA reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On COLON reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On CARET reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 
-- On AMPERSAND reduce production expr_no_name -> LEFTPAR name RIGHTPAR primary_expr_or_name 

State 178:
field_access -> primary_expr . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_expr_or_name -> primary_expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> primary_expr . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On DOT shift to state 63
-- On VERTICALBARVERTICALBAR reduce production primary_expr_or_name -> primary_expr 
-- On VERTICALBAR reduce production primary_expr_or_name -> primary_expr 
-- On STAR reduce production primary_expr_or_name -> primary_expr 
-- On SLASH reduce production primary_expr_or_name -> primary_expr 
-- On SHIFT reduce production primary_expr_or_name -> primary_expr 
-- On SEMICOLON reduce production primary_expr_or_name -> primary_expr 
-- On RIGHTPAR reduce production primary_expr_or_name -> primary_expr 
-- On RIGHTBRACKET reduce production primary_expr_or_name -> primary_expr 
-- On QUESTIONMARK reduce production primary_expr_or_name -> primary_expr 
-- On PLUS reduce production primary_expr_or_name -> primary_expr 
-- On PERCENT reduce production primary_expr_or_name -> primary_expr 
-- On MINUS reduce production primary_expr_or_name -> primary_expr 
-- On LTEQEQGT reduce production primary_expr_or_name -> primary_expr 
-- On LTEQEQ reduce production primary_expr_or_name -> primary_expr 
-- On LTEQBANGEQGT reduce production primary_expr_or_name -> primary_expr 
-- On INSTANCEOF reduce production primary_expr_or_name -> primary_expr 
-- On IF reduce production primary_expr_or_name -> primary_expr 
-- On EQOP reduce production primary_expr_or_name -> primary_expr 
-- On EQEQGT reduce production primary_expr_or_name -> primary_expr 
-- On DOTDOT reduce production primary_expr_or_name -> primary_expr 
-- On COMP reduce production primary_expr_or_name -> primary_expr 
-- On COMMA reduce production primary_expr_or_name -> primary_expr 
-- On COLON reduce production primary_expr_or_name -> primary_expr 
-- On CARET reduce production primary_expr_or_name -> primary_expr 
-- On AMPERSANDAMPERSAND reduce production primary_expr_or_name -> primary_expr 
-- On AMPERSAND reduce production primary_expr_or_name -> primary_expr 

State 179:
array_access -> name . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_expr_or_name -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 68
-- On DOT shift to state 123
-- On VERTICALBARVERTICALBAR reduce production primary_expr_or_name -> name 
-- On VERTICALBAR reduce production primary_expr_or_name -> name 
-- On STAR reduce production primary_expr_or_name -> name 
-- On SLASH reduce production primary_expr_or_name -> name 
-- On SHIFT reduce production primary_expr_or_name -> name 
-- On SEMICOLON reduce production primary_expr_or_name -> name 
-- On RIGHTPAR reduce production primary_expr_or_name -> name 
-- On RIGHTBRACKET reduce production primary_expr_or_name -> name 
-- On QUESTIONMARK reduce production primary_expr_or_name -> name 
-- On PLUS reduce production primary_expr_or_name -> name 
-- On PERCENT reduce production primary_expr_or_name -> name 
-- On MINUS reduce production primary_expr_or_name -> name 
-- On LTEQEQGT reduce production primary_expr_or_name -> name 
-- On LTEQEQ reduce production primary_expr_or_name -> name 
-- On LTEQBANGEQGT reduce production primary_expr_or_name -> name 
-- On INSTANCEOF reduce production primary_expr_or_name -> name 
-- On IF reduce production primary_expr_or_name -> name 
-- On EQOP reduce production primary_expr_or_name -> name 
-- On EQEQGT reduce production primary_expr_or_name -> name 
-- On DOTDOT reduce production primary_expr_or_name -> name 
-- On COMP reduce production primary_expr_or_name -> name 
-- On COMMA reduce production primary_expr_or_name -> name 
-- On COLON reduce production primary_expr_or_name -> name 
-- On CARET reduce production primary_expr_or_name -> name 
-- On AMPERSANDAMPERSAND reduce production primary_expr_or_name -> name 
-- On AMPERSAND reduce production primary_expr_or_name -> name 

State 180:
array_access -> name LEFTBRACKET . expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF EQOP EQEQGT DOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
array_type_expr -> name LEFTBRACKET . RIGHTBRACKET [ RIGHTPAR LEFTBRACKET ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On RIGHTBRACKET shift to state 42
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 121
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 181:
array_type_expr -> base_type . LEFTBRACKET RIGHTBRACKET [ RIGHTPAR LEFTBRACKET ]
expr_no_name -> LEFTPAR base_type . RIGHTPAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 182
-- On LEFTBRACKET shift to state 47

State 182:
expr_no_name -> LEFTPAR base_type RIGHTPAR . expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 183
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 183:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> LEFTPAR base_type RIGHTPAR expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On VERTICALBAR reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On STAR reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On SLASH reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On SHIFT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On SEMICOLON reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On RIGHTPAR reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On RIGHTBRACKET reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On QUESTIONMARK reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On PLUS reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On PERCENT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On MINUS reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On LTEQEQGT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On LTEQEQ reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On INSTANCEOF reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On IF reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On EQOP reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On EQEQGT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On DOTDOT reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On COMP reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On COMMA reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On COLON reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On CARET reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 
-- On AMPERSAND reduce production expr_no_name -> LEFTPAR base_type RIGHTPAR expr 

State 184:
array_type_expr -> array_type_expr . LEFTBRACKET RIGHTBRACKET [ RIGHTPAR LEFTBRACKET ]
expr_no_name -> LEFTPAR array_type_expr . RIGHTPAR primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 185
-- On LEFTBRACKET shift to state 50

State 185:
expr_no_name -> LEFTPAR array_type_expr RIGHTPAR . primary_expr_or_name [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On LEFTPAR shift to state 171
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On primary_no_new_array shift to state 60
-- On primary_expr_or_name shift to state 186
-- On primary_expr shift to state 178
-- On parenthesized_name shift to state 66
-- On name shift to state 179
-- On ident shift to state 69
-- On field_access shift to state 71
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 186:
expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On VERTICALBAR reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On STAR reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On SLASH reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On SHIFT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On SEMICOLON reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On RIGHTPAR reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On RIGHTBRACKET reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On QUESTIONMARK reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On PLUS reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On PERCENT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On MINUS reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On LTEQEQGT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On LTEQEQ reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On LTEQBANGEQGT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On INSTANCEOF reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On IF reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On EQOP reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On EQEQGT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On DOTDOT reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On COMP reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On COMMA reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On COLON reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On CARET reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 
-- On AMPERSAND reduce production expr_no_name -> LEFTPAR array_type_expr RIGHTPAR primary_expr_or_name 

State 187:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> MINUS expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> MINUS expr 
-- On VERTICALBAR reduce production expr_no_name -> MINUS expr 
-- On STAR reduce production expr_no_name -> MINUS expr 
-- On SLASH reduce production expr_no_name -> MINUS expr 
-- On SHIFT reduce production expr_no_name -> MINUS expr 
-- On SEMICOLON reduce production expr_no_name -> MINUS expr 
-- On RIGHTPAR reduce production expr_no_name -> MINUS expr 
-- On RIGHTBRACKET reduce production expr_no_name -> MINUS expr 
-- On QUESTIONMARK reduce production expr_no_name -> MINUS expr 
-- On PLUS reduce production expr_no_name -> MINUS expr 
-- On PERCENT reduce production expr_no_name -> MINUS expr 
-- On MINUS reduce production expr_no_name -> MINUS expr 
-- On LTEQEQGT reduce production expr_no_name -> MINUS expr 
-- On LTEQEQ reduce production expr_no_name -> MINUS expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> MINUS expr 
-- On INSTANCEOF reduce production expr_no_name -> MINUS expr 
-- On IF reduce production expr_no_name -> MINUS expr 
-- On EQOP reduce production expr_no_name -> MINUS expr 
-- On EQEQGT reduce production expr_no_name -> MINUS expr 
-- On DOTDOT reduce production expr_no_name -> MINUS expr 
-- On COMP reduce production expr_no_name -> MINUS expr 
-- On COMMA reduce production expr_no_name -> MINUS expr 
-- On COLON reduce production expr_no_name -> MINUS expr 
-- On CARET reduce production expr_no_name -> MINUS expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> MINUS expr 
-- On AMPERSAND reduce production expr_no_name -> MINUS expr 

State 188:
primary_no_new_array -> NEW name LEFTPAR argument_list . RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTPAR shift to state 189

State 189:
primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On VERTICALBAR reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On STAR reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On SLASH reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On SHIFT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On SEMICOLON reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On RIGHTPAR reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On RIGHTBRACKET reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On QUESTIONMARK reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On PLUS reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On PERCENT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On MINUS reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQGT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On LTEQEQ reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On LTEQBANGEQGT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On LEFTBRACKET reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On INSTANCEOF reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On IF reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On EQOP reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On EQEQGT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On DOTDOT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On DOT reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On COMP reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On COMMA reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On COLON reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On CARET reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On AMPERSANDAMPERSAND reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 
-- On AMPERSAND reduce production primary_no_new_array -> NEW name LEFTPAR argument_list RIGHTPAR 

State 190:
array_dims -> LEFTBRACKET . expr RIGHTBRACKET implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
array_dims -> LEFTBRACKET . expr RIGHTBRACKET array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 191
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 191:
array_dims -> LEFTBRACKET expr . RIGHTBRACKET implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
array_dims -> LEFTBRACKET expr . RIGHTBRACKET array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 192
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 192:
array_dims -> LEFTBRACKET expr RIGHTBRACKET . implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
array_dims -> LEFTBRACKET expr RIGHTBRACKET . array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 193
-- On implicit_dims shift to state 197
-- On array_dims shift to state 198
-- On VERTICALBARVERTICALBAR reduce production implicit_dims -> 
-- On VERTICALBAR reduce production implicit_dims -> 
-- On STAR reduce production implicit_dims -> 
-- On SLASH reduce production implicit_dims -> 
-- On SHIFT reduce production implicit_dims -> 
-- On SEMICOLON reduce production implicit_dims -> 
-- On RIGHTPAR reduce production implicit_dims -> 
-- On RIGHTBRACKET reduce production implicit_dims -> 
-- On QUESTIONMARK reduce production implicit_dims -> 
-- On PLUS reduce production implicit_dims -> 
-- On PERCENT reduce production implicit_dims -> 
-- On MINUS reduce production implicit_dims -> 
-- On LTEQEQGT reduce production implicit_dims -> 
-- On LTEQEQ reduce production implicit_dims -> 
-- On LTEQBANGEQGT reduce production implicit_dims -> 
-- On INSTANCEOF reduce production implicit_dims -> 
-- On IF reduce production implicit_dims -> 
-- On EQOP reduce production implicit_dims -> 
-- On EQEQGT reduce production implicit_dims -> 
-- On DOTDOT reduce production implicit_dims -> 
-- On DOT reduce production implicit_dims -> 
-- On COMP reduce production implicit_dims -> 
-- On COMMA reduce production implicit_dims -> 
-- On COLON reduce production implicit_dims -> 
-- On CARET reduce production implicit_dims -> 
-- On AMPERSANDAMPERSAND reduce production implicit_dims -> 
-- On AMPERSAND reduce production implicit_dims -> 

State 193:
array_dims -> LEFTBRACKET . expr RIGHTBRACKET implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
array_dims -> LEFTBRACKET . expr RIGHTBRACKET array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
implicit_dims -> LEFTBRACKET . RIGHTBRACKET implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On RIGHTBRACKET shift to state 194
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 191
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 194:
implicit_dims -> LEFTBRACKET RIGHTBRACKET . implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 195
-- On implicit_dims shift to state 196
-- On VERTICALBARVERTICALBAR reduce production implicit_dims -> 
-- On VERTICALBAR reduce production implicit_dims -> 
-- On STAR reduce production implicit_dims -> 
-- On SLASH reduce production implicit_dims -> 
-- On SHIFT reduce production implicit_dims -> 
-- On SEMICOLON reduce production implicit_dims -> 
-- On RIGHTPAR reduce production implicit_dims -> 
-- On RIGHTBRACKET reduce production implicit_dims -> 
-- On QUESTIONMARK reduce production implicit_dims -> 
-- On PLUS reduce production implicit_dims -> 
-- On PERCENT reduce production implicit_dims -> 
-- On MINUS reduce production implicit_dims -> 
-- On LTEQEQGT reduce production implicit_dims -> 
-- On LTEQEQ reduce production implicit_dims -> 
-- On LTEQBANGEQGT reduce production implicit_dims -> 
-- On INSTANCEOF reduce production implicit_dims -> 
-- On IF reduce production implicit_dims -> 
-- On EQOP reduce production implicit_dims -> 
-- On EQEQGT reduce production implicit_dims -> 
-- On DOTDOT reduce production implicit_dims -> 
-- On DOT reduce production implicit_dims -> 
-- On COMP reduce production implicit_dims -> 
-- On COMMA reduce production implicit_dims -> 
-- On COLON reduce production implicit_dims -> 
-- On CARET reduce production implicit_dims -> 
-- On AMPERSANDAMPERSAND reduce production implicit_dims -> 
-- On AMPERSAND reduce production implicit_dims -> 

State 195:
implicit_dims -> LEFTBRACKET . RIGHTBRACKET implicit_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On RIGHTBRACKET shift to state 194

State 196:
implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On VERTICALBAR reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On STAR reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On SLASH reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On SHIFT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On SEMICOLON reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On RIGHTPAR reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On RIGHTBRACKET reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On QUESTIONMARK reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On PLUS reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On PERCENT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On MINUS reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On LTEQEQGT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On LTEQEQ reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On LTEQBANGEQGT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On INSTANCEOF reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On IF reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On EQOP reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On EQEQGT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On DOTDOT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On DOT reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On COMP reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On COMMA reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On COLON reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On CARET reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On AMPERSANDAMPERSAND reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 
-- On AMPERSAND reduce production implicit_dims -> LEFTBRACKET RIGHTBRACKET implicit_dims 

State 197:
array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On VERTICALBAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On STAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On SLASH reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On SHIFT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On SEMICOLON reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On RIGHTPAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On RIGHTBRACKET reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On QUESTIONMARK reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On PLUS reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On PERCENT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On MINUS reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On LTEQEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On LTEQEQ reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On LTEQBANGEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On INSTANCEOF reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On IF reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On EQOP reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On EQEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On DOTDOT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On DOT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On COMP reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On COMMA reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On COLON reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On CARET reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On AMPERSANDAMPERSAND reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 
-- On AMPERSAND reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET implicit_dims 

State 198:
array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On VERTICALBAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On STAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On SLASH reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On SHIFT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On SEMICOLON reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On RIGHTPAR reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On RIGHTBRACKET reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On QUESTIONMARK reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On PLUS reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On PERCENT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On MINUS reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On LTEQEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On LTEQEQ reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On LTEQBANGEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On INSTANCEOF reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On IF reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On EQOP reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On EQEQGT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On DOTDOT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On DOT reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On COMP reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On COMMA reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On COLON reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On CARET reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On AMPERSANDAMPERSAND reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 
-- On AMPERSAND reduce production array_dims -> LEFTBRACKET expr RIGHTBRACKET array_dims 

State 199:
array_creation_expression -> NEW name array_dims . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_creation_expression -> NEW name array_dims 
-- On VERTICALBAR reduce production array_creation_expression -> NEW name array_dims 
-- On STAR reduce production array_creation_expression -> NEW name array_dims 
-- On SLASH reduce production array_creation_expression -> NEW name array_dims 
-- On SHIFT reduce production array_creation_expression -> NEW name array_dims 
-- On SEMICOLON reduce production array_creation_expression -> NEW name array_dims 
-- On RIGHTPAR reduce production array_creation_expression -> NEW name array_dims 
-- On RIGHTBRACKET reduce production array_creation_expression -> NEW name array_dims 
-- On QUESTIONMARK reduce production array_creation_expression -> NEW name array_dims 
-- On PLUS reduce production array_creation_expression -> NEW name array_dims 
-- On PERCENT reduce production array_creation_expression -> NEW name array_dims 
-- On MINUS reduce production array_creation_expression -> NEW name array_dims 
-- On LTEQEQGT reduce production array_creation_expression -> NEW name array_dims 
-- On LTEQEQ reduce production array_creation_expression -> NEW name array_dims 
-- On LTEQBANGEQGT reduce production array_creation_expression -> NEW name array_dims 
-- On INSTANCEOF reduce production array_creation_expression -> NEW name array_dims 
-- On IF reduce production array_creation_expression -> NEW name array_dims 
-- On EQOP reduce production array_creation_expression -> NEW name array_dims 
-- On EQEQGT reduce production array_creation_expression -> NEW name array_dims 
-- On DOTDOT reduce production array_creation_expression -> NEW name array_dims 
-- On DOT reduce production array_creation_expression -> NEW name array_dims 
-- On COMP reduce production array_creation_expression -> NEW name array_dims 
-- On COMMA reduce production array_creation_expression -> NEW name array_dims 
-- On COLON reduce production array_creation_expression -> NEW name array_dims 
-- On CARET reduce production array_creation_expression -> NEW name array_dims 
-- On AMPERSANDAMPERSAND reduce production array_creation_expression -> NEW name array_dims 
-- On AMPERSAND reduce production array_creation_expression -> NEW name array_dims 

State 200:
array_creation_expression -> NEW base_type . array_dims [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 190
-- On array_dims shift to state 201

State 201:
array_creation_expression -> NEW base_type array_dims . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT DOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production array_creation_expression -> NEW base_type array_dims 
-- On VERTICALBAR reduce production array_creation_expression -> NEW base_type array_dims 
-- On STAR reduce production array_creation_expression -> NEW base_type array_dims 
-- On SLASH reduce production array_creation_expression -> NEW base_type array_dims 
-- On SHIFT reduce production array_creation_expression -> NEW base_type array_dims 
-- On SEMICOLON reduce production array_creation_expression -> NEW base_type array_dims 
-- On RIGHTPAR reduce production array_creation_expression -> NEW base_type array_dims 
-- On RIGHTBRACKET reduce production array_creation_expression -> NEW base_type array_dims 
-- On QUESTIONMARK reduce production array_creation_expression -> NEW base_type array_dims 
-- On PLUS reduce production array_creation_expression -> NEW base_type array_dims 
-- On PERCENT reduce production array_creation_expression -> NEW base_type array_dims 
-- On MINUS reduce production array_creation_expression -> NEW base_type array_dims 
-- On LTEQEQGT reduce production array_creation_expression -> NEW base_type array_dims 
-- On LTEQEQ reduce production array_creation_expression -> NEW base_type array_dims 
-- On LTEQBANGEQGT reduce production array_creation_expression -> NEW base_type array_dims 
-- On INSTANCEOF reduce production array_creation_expression -> NEW base_type array_dims 
-- On IF reduce production array_creation_expression -> NEW base_type array_dims 
-- On EQOP reduce production array_creation_expression -> NEW base_type array_dims 
-- On EQEQGT reduce production array_creation_expression -> NEW base_type array_dims 
-- On DOTDOT reduce production array_creation_expression -> NEW base_type array_dims 
-- On DOT reduce production array_creation_expression -> NEW base_type array_dims 
-- On COMP reduce production array_creation_expression -> NEW base_type array_dims 
-- On COMMA reduce production array_creation_expression -> NEW base_type array_dims 
-- On COLON reduce production array_creation_expression -> NEW base_type array_dims 
-- On CARET reduce production array_creation_expression -> NEW base_type array_dims 
-- On AMPERSANDAMPERSAND reduce production array_creation_expression -> NEW base_type array_dims 
-- On AMPERSAND reduce production array_creation_expression -> NEW base_type array_dims 

State 202:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> PLUS expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> PLUS expr 
-- On VERTICALBAR reduce production expr_no_name -> PLUS expr 
-- On STAR reduce production expr_no_name -> PLUS expr 
-- On SLASH reduce production expr_no_name -> PLUS expr 
-- On SHIFT reduce production expr_no_name -> PLUS expr 
-- On SEMICOLON reduce production expr_no_name -> PLUS expr 
-- On RIGHTPAR reduce production expr_no_name -> PLUS expr 
-- On RIGHTBRACKET reduce production expr_no_name -> PLUS expr 
-- On QUESTIONMARK reduce production expr_no_name -> PLUS expr 
-- On PLUS reduce production expr_no_name -> PLUS expr 
-- On PERCENT reduce production expr_no_name -> PLUS expr 
-- On MINUS reduce production expr_no_name -> PLUS expr 
-- On LTEQEQGT reduce production expr_no_name -> PLUS expr 
-- On LTEQEQ reduce production expr_no_name -> PLUS expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> PLUS expr 
-- On INSTANCEOF reduce production expr_no_name -> PLUS expr 
-- On IF reduce production expr_no_name -> PLUS expr 
-- On EQOP reduce production expr_no_name -> PLUS expr 
-- On EQEQGT reduce production expr_no_name -> PLUS expr 
-- On DOTDOT reduce production expr_no_name -> PLUS expr 
-- On COMP reduce production expr_no_name -> PLUS expr 
-- On COMMA reduce production expr_no_name -> PLUS expr 
-- On COLON reduce production expr_no_name -> PLUS expr 
-- On CARET reduce production expr_no_name -> PLUS expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> PLUS expr 
-- On AMPERSAND reduce production expr_no_name -> PLUS expr 

State 203:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> TILDA expr . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON RIGHTPAR RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOTDOT COMP COMMA COLON CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR reduce production expr_no_name -> TILDA expr 
-- On VERTICALBAR reduce production expr_no_name -> TILDA expr 
-- On STAR reduce production expr_no_name -> TILDA expr 
-- On SLASH reduce production expr_no_name -> TILDA expr 
-- On SHIFT reduce production expr_no_name -> TILDA expr 
-- On SEMICOLON reduce production expr_no_name -> TILDA expr 
-- On RIGHTPAR reduce production expr_no_name -> TILDA expr 
-- On RIGHTBRACKET reduce production expr_no_name -> TILDA expr 
-- On QUESTIONMARK reduce production expr_no_name -> TILDA expr 
-- On PLUS reduce production expr_no_name -> TILDA expr 
-- On PERCENT reduce production expr_no_name -> TILDA expr 
-- On MINUS reduce production expr_no_name -> TILDA expr 
-- On LTEQEQGT reduce production expr_no_name -> TILDA expr 
-- On LTEQEQ reduce production expr_no_name -> TILDA expr 
-- On LTEQBANGEQGT reduce production expr_no_name -> TILDA expr 
-- On INSTANCEOF reduce production expr_no_name -> TILDA expr 
-- On IF reduce production expr_no_name -> TILDA expr 
-- On EQOP reduce production expr_no_name -> TILDA expr 
-- On EQEQGT reduce production expr_no_name -> TILDA expr 
-- On DOTDOT reduce production expr_no_name -> TILDA expr 
-- On COMP reduce production expr_no_name -> TILDA expr 
-- On COMMA reduce production expr_no_name -> TILDA expr 
-- On COLON reduce production expr_no_name -> TILDA expr 
-- On CARET reduce production expr_no_name -> TILDA expr 
-- On AMPERSANDAMPERSAND reduce production expr_no_name -> TILDA expr 
-- On AMPERSAND reduce production expr_no_name -> TILDA expr 

State 204:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
jml_declaration -> REPRESENTS ident LEFTARROW expr . SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On SEMICOLON shift to state 205
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 205:
jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON . [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On SHORT reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On REPRESENTS reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On PUBLIC reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On PROTECTED reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On PRIVATE reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On MODEL reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On LONG reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On INVARIANT reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On INT reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On ID reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On FLOAT reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On FINAL reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On EOF reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On DOUBLE reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On CHAR reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On BYTE reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 
-- On BOOLEAN reduce production jml_declaration -> REPRESENTS ident LEFTARROW expr SEMICOLON 

State 206:
jml_specification -> PURE . [ EOF ]
-- On EOF reduce production jml_specification -> PURE 

State 207:
modifier -> PUBLIC . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
privacy -> PUBLIC . [ NORMAL_BEHAVIOR INVARIANT EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On STATIC reduce production modifier -> PUBLIC 
-- On SHORT reduce production modifier -> PUBLIC 
-- On PUBLIC reduce production modifier -> PUBLIC 
-- On PROTECTED reduce production modifier -> PUBLIC 
-- On PRIVATE reduce production modifier -> PUBLIC 
-- On NORMAL_BEHAVIOR reduce production privacy -> PUBLIC 
-- On MODEL reduce production modifier -> PUBLIC 
-- On LONG reduce production modifier -> PUBLIC 
-- On INVARIANT reduce production privacy -> PUBLIC 
-- On INT reduce production modifier -> PUBLIC 
-- On ID reduce production modifier -> PUBLIC 
-- On FLOAT reduce production modifier -> PUBLIC 
-- On FINAL reduce production modifier -> PUBLIC 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PUBLIC 
-- On DOUBLE reduce production modifier -> PUBLIC 
-- On CHAR reduce production modifier -> PUBLIC 
-- On BYTE reduce production modifier -> PUBLIC 
-- On BOOLEAN reduce production modifier -> PUBLIC 
-- On BEHAVIOR reduce production privacy -> PUBLIC 

State 208:
modifier -> PROTECTED . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
privacy -> PROTECTED . [ NORMAL_BEHAVIOR INVARIANT EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On STATIC reduce production modifier -> PROTECTED 
-- On SHORT reduce production modifier -> PROTECTED 
-- On PUBLIC reduce production modifier -> PROTECTED 
-- On PROTECTED reduce production modifier -> PROTECTED 
-- On PRIVATE reduce production modifier -> PROTECTED 
-- On NORMAL_BEHAVIOR reduce production privacy -> PROTECTED 
-- On MODEL reduce production modifier -> PROTECTED 
-- On LONG reduce production modifier -> PROTECTED 
-- On INVARIANT reduce production privacy -> PROTECTED 
-- On INT reduce production modifier -> PROTECTED 
-- On ID reduce production modifier -> PROTECTED 
-- On FLOAT reduce production modifier -> PROTECTED 
-- On FINAL reduce production modifier -> PROTECTED 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PROTECTED 
-- On DOUBLE reduce production modifier -> PROTECTED 
-- On CHAR reduce production modifier -> PROTECTED 
-- On BYTE reduce production modifier -> PROTECTED 
-- On BOOLEAN reduce production modifier -> PROTECTED 
-- On BEHAVIOR reduce production privacy -> PROTECTED 

State 209:
modifier -> PRIVATE . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
privacy -> PRIVATE . [ NORMAL_BEHAVIOR INVARIANT EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On STATIC reduce production modifier -> PRIVATE 
-- On SHORT reduce production modifier -> PRIVATE 
-- On PUBLIC reduce production modifier -> PRIVATE 
-- On PROTECTED reduce production modifier -> PRIVATE 
-- On PRIVATE reduce production modifier -> PRIVATE 
-- On NORMAL_BEHAVIOR reduce production privacy -> PRIVATE 
-- On MODEL reduce production modifier -> PRIVATE 
-- On LONG reduce production modifier -> PRIVATE 
-- On INVARIANT reduce production privacy -> PRIVATE 
-- On INT reduce production modifier -> PRIVATE 
-- On ID reduce production modifier -> PRIVATE 
-- On FLOAT reduce production modifier -> PRIVATE 
-- On FINAL reduce production modifier -> PRIVATE 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PRIVATE 
-- On DOUBLE reduce production modifier -> PRIVATE 
-- On CHAR reduce production modifier -> PRIVATE 
-- On BYTE reduce production modifier -> PRIVATE 
-- On BOOLEAN reduce production modifier -> PRIVATE 
-- On BEHAVIOR reduce production privacy -> PRIVATE 

State 210:
modifier -> MODEL . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> MODEL 
-- On SHORT reduce production modifier -> MODEL 
-- On PUBLIC reduce production modifier -> MODEL 
-- On PROTECTED reduce production modifier -> MODEL 
-- On PRIVATE reduce production modifier -> MODEL 
-- On MODEL reduce production modifier -> MODEL 
-- On LONG reduce production modifier -> MODEL 
-- On INT reduce production modifier -> MODEL 
-- On ID reduce production modifier -> MODEL 
-- On FLOAT reduce production modifier -> MODEL 
-- On FINAL reduce production modifier -> MODEL 
-- On DOUBLE reduce production modifier -> MODEL 
-- On CHAR reduce production modifier -> MODEL 
-- On BYTE reduce production modifier -> MODEL 
-- On BOOLEAN reduce production modifier -> MODEL 

State 211:
loop_annotation -> LOOP_INVARIANT . expr_semicolon assignable_clauses decreases_clause [ EOF ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 212
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 212:
loop_annotation -> LOOP_INVARIANT expr_semicolon . assignable_clauses decreases_clause [ EOF ]
-- On ASSIGNABLE shift to state 213
-- On assignable_clauses shift to state 252
-- On assignable_clause shift to state 258
-- On EOF reduce production assignable_clauses -> 
-- On DECREASES reduce production assignable_clauses -> 

State 213:
assignable_clause -> ASSIGNABLE . assignable_objects SEMICOLON [ SIGNALS EOF ENSURES DIVERGES DECREASES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSNOTHING shift to state 214
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BSFIELDSOF shift to state 215
-- On BSEVERYTHING shift to state 219
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 220
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 238
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 243
-- On assignable_objects shift to state 244
-- On assignable_entry shift to state 246
-- On assignable_any_object shift to state 249
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 214:
assignable_any_object -> BSNOTHING . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production assignable_any_object -> BSNOTHING 
-- On IF reduce production assignable_any_object -> BSNOTHING 
-- On COMMA reduce production assignable_any_object -> BSNOTHING 

State 215:
assignable_any_object -> BSFIELDSOF . LEFTPAR expr RIGHTPAR [ SEMICOLON IF COMMA ]
-- On LEFTPAR shift to state 216

State 216:
assignable_any_object -> BSFIELDSOF LEFTPAR . expr RIGHTPAR [ SEMICOLON IF COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 217
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 217:
assignable_any_object -> BSFIELDSOF LEFTPAR expr . RIGHTPAR [ SEMICOLON IF COMMA ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTPAR QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTPAR shift to state 218
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 218:
assignable_any_object -> BSFIELDSOF LEFTPAR expr RIGHTPAR . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production assignable_any_object -> BSFIELDSOF LEFTPAR expr RIGHTPAR 
-- On IF reduce production assignable_any_object -> BSFIELDSOF LEFTPAR expr RIGHTPAR 
-- On COMMA reduce production assignable_any_object -> BSFIELDSOF LEFTPAR expr RIGHTPAR 

State 219:
assignable_any_object -> BSEVERYTHING . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production assignable_any_object -> BSEVERYTHING 
-- On IF reduce production assignable_any_object -> BSEVERYTHING 
-- On COMMA reduce production assignable_any_object -> BSEVERYTHING 

State 220:
array_access -> primary_no_new_array . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
assignable_any_object -> primary_no_new_array . set_ref_sep set_ref_list [ SEMICOLON IF COMMA ]
primary_expr -> primary_no_new_array . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 221
-- On set_ref_sep shift to state 228
-- On VERTICALBARVERTICALBAR reduce production primary_expr -> primary_no_new_array 
-- On VERTICALBAR reduce production primary_expr -> primary_no_new_array 
-- On STAR reduce production primary_expr -> primary_no_new_array 
-- On SLASH reduce production primary_expr -> primary_no_new_array 
-- On SHIFT reduce production primary_expr -> primary_no_new_array 
-- On SEMICOLON reduce production primary_expr -> primary_no_new_array 
-- On QUESTIONMARK reduce production primary_expr -> primary_no_new_array 
-- On PLUS reduce production primary_expr -> primary_no_new_array 
-- On PERCENT reduce production primary_expr -> primary_no_new_array 
-- On MINUS reduce production primary_expr -> primary_no_new_array 
-- On LTEQEQGT reduce production primary_expr -> primary_no_new_array 
-- On LTEQEQ reduce production primary_expr -> primary_no_new_array 
-- On LTEQBANGEQGT reduce production primary_expr -> primary_no_new_array 
-- On INSTANCEOF reduce production primary_expr -> primary_no_new_array 
-- On IF reduce production primary_expr -> primary_no_new_array 
-- On EQOP reduce production primary_expr -> primary_no_new_array 
-- On EQEQGT reduce production primary_expr -> primary_no_new_array 
-- On DOT reduce production primary_expr -> primary_no_new_array 
-- On COMP reduce production primary_expr -> primary_no_new_array 
-- On COMMA reduce production primary_expr -> primary_no_new_array 
-- On CARET reduce production primary_expr -> primary_no_new_array 
-- On AMPERSANDAMPERSAND reduce production primary_expr -> primary_no_new_array 
-- On AMPERSAND reduce production primary_expr -> primary_no_new_array 

State 221:
array_access -> primary_no_new_array LEFTBRACKET . expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref_sep -> LEFTBRACKET . expr DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
set_ref_sep -> LEFTBRACKET . STAR RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On STAR shift to state 222
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 224
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 222:
set_ref_sep -> LEFTBRACKET STAR . RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On RIGHTBRACKET shift to state 223

State 223:
set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET . [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On SEMICOLON reduce production set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET 
-- On LEFTBRACKET reduce production set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET 
-- On IF reduce production set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET 
-- On DOT reduce production set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET 
-- On COMMA reduce production set_ref_sep -> LEFTBRACKET STAR RIGHTBRACKET 

State 224:
array_access -> primary_no_new_array LEFTBRACKET expr . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref_sep -> LEFTBRACKET expr . DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 131
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On DOTDOT shift to state 225
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 225:
set_ref_sep -> LEFTBRACKET expr DOTDOT . expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 226
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 226:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref_sep -> LEFTBRACKET expr DOTDOT expr . RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 227
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 227:
set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET . [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On SEMICOLON reduce production set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET 
-- On LEFTBRACKET reduce production set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET 
-- On IF reduce production set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET 
-- On DOT reduce production set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET 
-- On COMMA reduce production set_ref_sep -> LEFTBRACKET expr DOTDOT expr RIGHTBRACKET 

State 228:
assignable_any_object -> primary_no_new_array set_ref_sep . set_ref_list [ SEMICOLON IF COMMA ]
-- On LEFTBRACKET shift to state 229
-- On DOT shift to state 232
-- On set_ref_sep shift to state 234
-- On set_ref_list shift to state 235
-- On set_ref shift to state 236
-- On SEMICOLON reduce production set_ref_list -> 
-- On IF reduce production set_ref_list -> 
-- On COMMA reduce production set_ref_list -> 

State 229:
set_ref -> LEFTBRACKET . expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
set_ref_sep -> LEFTBRACKET . expr DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
set_ref_sep -> LEFTBRACKET . STAR RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On STAR shift to state 222
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 230
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 230:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref -> LEFTBRACKET expr . RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
set_ref_sep -> LEFTBRACKET expr . DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 231
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On DOTDOT shift to state 225
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 231:
set_ref -> LEFTBRACKET expr RIGHTBRACKET . [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On SEMICOLON reduce production set_ref -> LEFTBRACKET expr RIGHTBRACKET 
-- On LEFTBRACKET reduce production set_ref -> LEFTBRACKET expr RIGHTBRACKET 
-- On IF reduce production set_ref -> LEFTBRACKET expr RIGHTBRACKET 
-- On DOT reduce production set_ref -> LEFTBRACKET expr RIGHTBRACKET 
-- On COMMA reduce production set_ref -> LEFTBRACKET expr RIGHTBRACKET 

State 232:
set_ref -> DOT . ident [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On ID shift to state 4
-- On ident shift to state 233

State 233:
set_ref -> DOT ident . [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On SEMICOLON reduce production set_ref -> DOT ident 
-- On LEFTBRACKET reduce production set_ref -> DOT ident 
-- On IF reduce production set_ref -> DOT ident 
-- On DOT reduce production set_ref -> DOT ident 
-- On COMMA reduce production set_ref -> DOT ident 

State 234:
set_ref -> set_ref_sep . [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On SEMICOLON reduce production set_ref -> set_ref_sep 
-- On LEFTBRACKET reduce production set_ref -> set_ref_sep 
-- On IF reduce production set_ref -> set_ref_sep 
-- On DOT reduce production set_ref -> set_ref_sep 
-- On COMMA reduce production set_ref -> set_ref_sep 

State 235:
assignable_any_object -> primary_no_new_array set_ref_sep set_ref_list . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production assignable_any_object -> primary_no_new_array set_ref_sep set_ref_list 
-- On IF reduce production assignable_any_object -> primary_no_new_array set_ref_sep set_ref_list 
-- On COMMA reduce production assignable_any_object -> primary_no_new_array set_ref_sep set_ref_list 

State 236:
set_ref_list -> set_ref . set_ref_list [ SEMICOLON IF COMMA ]
-- On LEFTBRACKET shift to state 229
-- On DOT shift to state 232
-- On set_ref_sep shift to state 234
-- On set_ref_list shift to state 237
-- On set_ref shift to state 236
-- On SEMICOLON reduce production set_ref_list -> 
-- On IF reduce production set_ref_list -> 
-- On COMMA reduce production set_ref_list -> 

State 237:
set_ref_list -> set_ref set_ref_list . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production set_ref_list -> set_ref set_ref_list 
-- On IF reduce production set_ref_list -> set_ref set_ref_list 
-- On COMMA reduce production set_ref_list -> set_ref set_ref_list 

State 238:
array_access -> name . LEFTBRACKET expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
assignable_any_object -> name . set_ref_sep set_ref_list [ SEMICOLON IF COMMA ]
expr -> name . [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
name -> name . DOT ident [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
primary_no_new_array -> name . DOT ident LEFTPAR argument_list RIGHTPAR [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On LEFTBRACKET shift to state 239
-- On DOT shift to state 123
-- On set_ref_sep shift to state 241
-- On VERTICALBARVERTICALBAR reduce production expr -> name 
-- On VERTICALBAR reduce production expr -> name 
-- On STAR reduce production expr -> name 
-- On SLASH reduce production expr -> name 
-- On SHIFT reduce production expr -> name 
-- On SEMICOLON reduce production expr -> name 
-- On QUESTIONMARK reduce production expr -> name 
-- On PLUS reduce production expr -> name 
-- On PERCENT reduce production expr -> name 
-- On MINUS reduce production expr -> name 
-- On LTEQEQGT reduce production expr -> name 
-- On LTEQEQ reduce production expr -> name 
-- On LTEQBANGEQGT reduce production expr -> name 
-- On INSTANCEOF reduce production expr -> name 
-- On IF reduce production expr -> name 
-- On EQOP reduce production expr -> name 
-- On EQEQGT reduce production expr -> name 
-- On COMP reduce production expr -> name 
-- On COMMA reduce production expr -> name 
-- On CARET reduce production expr -> name 
-- On AMPERSANDAMPERSAND reduce production expr -> name 
-- On AMPERSAND reduce production expr -> name 

State 239:
array_access -> name LEFTBRACKET . expr RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref_sep -> LEFTBRACKET . expr DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
set_ref_sep -> LEFTBRACKET . STAR RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On STAR shift to state 222
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 240
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 240:
array_access -> name LEFTBRACKET expr . RIGHTBRACKET [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT LEFTBRACKET INSTANCEOF IF EQOP EQEQGT DOT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT RIGHTBRACKET QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT DOTDOT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
set_ref_sep -> LEFTBRACKET expr . DOTDOT expr RIGHTBRACKET [ SEMICOLON LEFTBRACKET IF DOT COMMA ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On RIGHTBRACKET shift to state 122
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On DOTDOT shift to state 225
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 241:
assignable_any_object -> name set_ref_sep . set_ref_list [ SEMICOLON IF COMMA ]
-- On LEFTBRACKET shift to state 229
-- On DOT shift to state 232
-- On set_ref_sep shift to state 234
-- On set_ref_list shift to state 242
-- On set_ref shift to state 236
-- On SEMICOLON reduce production set_ref_list -> 
-- On IF reduce production set_ref_list -> 
-- On COMMA reduce production set_ref_list -> 

State 242:
assignable_any_object -> name set_ref_sep set_ref_list . [ SEMICOLON IF COMMA ]
-- On SEMICOLON reduce production assignable_any_object -> name set_ref_sep set_ref_list 
-- On IF reduce production assignable_any_object -> name set_ref_sep set_ref_list 
-- On COMMA reduce production assignable_any_object -> name set_ref_sep set_ref_list 

State 243:
assignable_any_object -> expr . [ SEMICOLON IF COMMA ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF IF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production assignable_any_object -> expr 
-- On IF reduce production assignable_any_object -> expr 
-- On COMMA reduce production assignable_any_object -> expr 

State 244:
assignable_clause -> ASSIGNABLE assignable_objects . SEMICOLON [ SIGNALS EOF ENSURES DIVERGES DECREASES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SEMICOLON shift to state 245

State 245:
assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON . [ SIGNALS EOF ENSURES DIVERGES DECREASES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SIGNALS reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On EOF reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On ENSURES reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On DIVERGES reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On DECREASES reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On BARRIGHTBRACE reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On ASSIGNABLE reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On AND reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 
-- On ALSO reduce production assignable_clause -> ASSIGNABLE assignable_objects SEMICOLON 

State 246:
assignable_objects -> assignable_entry . [ SEMICOLON ]
assignable_objects -> assignable_entry . COMMA assignable_objects [ SEMICOLON ]
-- On COMMA shift to state 247
-- On SEMICOLON reduce production assignable_objects -> assignable_entry 

State 247:
assignable_objects -> assignable_entry COMMA . assignable_objects [ SEMICOLON ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSNOTHING shift to state 214
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BSFIELDSOF shift to state 215
-- On BSEVERYTHING shift to state 219
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 220
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 238
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 243
-- On assignable_objects shift to state 248
-- On assignable_entry shift to state 246
-- On assignable_any_object shift to state 249
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 248:
assignable_objects -> assignable_entry COMMA assignable_objects . [ SEMICOLON ]
-- On SEMICOLON reduce production assignable_objects -> assignable_entry COMMA assignable_objects 

State 249:
assignable_entry -> assignable_any_object . [ SEMICOLON COMMA ]
assignable_entry -> assignable_any_object . IF expr [ SEMICOLON COMMA ]
-- On IF shift to state 250
-- On SEMICOLON reduce production assignable_entry -> assignable_any_object 
-- On COMMA reduce production assignable_entry -> assignable_any_object 

State 250:
assignable_entry -> assignable_any_object IF . expr [ SEMICOLON COMMA ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 251
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 251:
assignable_entry -> assignable_any_object IF expr . [ SEMICOLON COMMA ]
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP COMMA CARET AMPERSANDAMPERSAND AMPERSAND ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101
-- On SEMICOLON reduce production assignable_entry -> assignable_any_object IF expr 
-- On COMMA reduce production assignable_entry -> assignable_any_object IF expr 

State 252:
loop_annotation -> LOOP_INVARIANT expr_semicolon assignable_clauses . decreases_clause [ EOF ]
-- On DECREASES shift to state 253
-- On decreases_clause shift to state 257
-- On EOF reduce production decreases_clause -> 

State 253:
decreases_clause -> DECREASES . expr_semicolon [ EOF ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 254
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 254:
decreases_clause -> DECREASES expr_semicolon . [ EOF ]
-- On EOF reduce production decreases_clause -> DECREASES expr_semicolon 

State 255:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_semicolon -> expr . SEMICOLON [ WHEN STATIC SIGNALS SHORT REQUIRES REPRESENTS PUBLIC PROTECTED PRIVATE MODEL MEASURED_BY LONG LEFTBRACEBAR INVARIANT INT ID FLOAT FINAL EOF ENSURES DOUBLE DIVERGES DECREASES CHAR BYTE BOOLEAN BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On SEMICOLON shift to state 256
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 256:
expr_semicolon -> expr SEMICOLON . [ WHEN STATIC SIGNALS SHORT REQUIRES REPRESENTS PUBLIC PROTECTED PRIVATE MODEL MEASURED_BY LONG LEFTBRACEBAR INVARIANT INT ID FLOAT FINAL EOF ENSURES DOUBLE DIVERGES DECREASES CHAR BYTE BOOLEAN BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production expr_semicolon -> expr SEMICOLON 
-- On STATIC reduce production expr_semicolon -> expr SEMICOLON 
-- On SIGNALS reduce production expr_semicolon -> expr SEMICOLON 
-- On SHORT reduce production expr_semicolon -> expr SEMICOLON 
-- On REQUIRES reduce production expr_semicolon -> expr SEMICOLON 
-- On REPRESENTS reduce production expr_semicolon -> expr SEMICOLON 
-- On PUBLIC reduce production expr_semicolon -> expr SEMICOLON 
-- On PROTECTED reduce production expr_semicolon -> expr SEMICOLON 
-- On PRIVATE reduce production expr_semicolon -> expr SEMICOLON 
-- On MODEL reduce production expr_semicolon -> expr SEMICOLON 
-- On MEASURED_BY reduce production expr_semicolon -> expr SEMICOLON 
-- On LONG reduce production expr_semicolon -> expr SEMICOLON 
-- On LEFTBRACEBAR reduce production expr_semicolon -> expr SEMICOLON 
-- On INVARIANT reduce production expr_semicolon -> expr SEMICOLON 
-- On INT reduce production expr_semicolon -> expr SEMICOLON 
-- On ID reduce production expr_semicolon -> expr SEMICOLON 
-- On FLOAT reduce production expr_semicolon -> expr SEMICOLON 
-- On FINAL reduce production expr_semicolon -> expr SEMICOLON 
-- On EOF reduce production expr_semicolon -> expr SEMICOLON 
-- On ENSURES reduce production expr_semicolon -> expr SEMICOLON 
-- On DOUBLE reduce production expr_semicolon -> expr SEMICOLON 
-- On DIVERGES reduce production expr_semicolon -> expr SEMICOLON 
-- On DECREASES reduce production expr_semicolon -> expr SEMICOLON 
-- On CHAR reduce production expr_semicolon -> expr SEMICOLON 
-- On BYTE reduce production expr_semicolon -> expr SEMICOLON 
-- On BOOLEAN reduce production expr_semicolon -> expr SEMICOLON 
-- On BARRIGHTBRACE reduce production expr_semicolon -> expr SEMICOLON 
-- On ASSIGNABLE reduce production expr_semicolon -> expr SEMICOLON 
-- On AND reduce production expr_semicolon -> expr SEMICOLON 
-- On ALSO reduce production expr_semicolon -> expr SEMICOLON 

State 257:
loop_annotation -> LOOP_INVARIANT expr_semicolon assignable_clauses decreases_clause . [ EOF ]
-- On EOF reduce production loop_annotation -> LOOP_INVARIANT expr_semicolon assignable_clauses decreases_clause 

State 258:
assignable_clauses -> assignable_clause . assignable_clauses [ SIGNALS EOF ENSURES DIVERGES DECREASES BARRIGHTBRACE AND ALSO ]
-- On ASSIGNABLE shift to state 213
-- On assignable_clauses shift to state 259
-- On assignable_clause shift to state 258
-- On SIGNALS reduce production assignable_clauses -> 
-- On EOF reduce production assignable_clauses -> 
-- On ENSURES reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On DECREASES reduce production assignable_clauses -> 
-- On BARRIGHTBRACE reduce production assignable_clauses -> 
-- On AND reduce production assignable_clauses -> 
-- On ALSO reduce production assignable_clauses -> 

State 259:
assignable_clauses -> assignable_clause assignable_clauses . [ SIGNALS EOF ENSURES DIVERGES DECREASES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On EOF reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On ENSURES reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On DIVERGES reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On DECREASES reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On BARRIGHTBRACE reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On AND reduce production assignable_clauses -> assignable_clause assignable_clauses 
-- On ALSO reduce production assignable_clauses -> assignable_clause assignable_clauses 

State 260:
forall_var_decl -> FORALL . variable_declaration SEMICOLON [ WHEN SIGNALS REQUIRES OLD MEASURED_BY LEFTBRACEBAR FORALL EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On variable_declaration shift to state 261
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 153
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 261:
forall_var_decl -> FORALL variable_declaration . SEMICOLON [ WHEN SIGNALS REQUIRES OLD MEASURED_BY LEFTBRACEBAR FORALL EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SEMICOLON shift to state 262

State 262:
forall_var_decl -> FORALL variable_declaration SEMICOLON . [ WHEN SIGNALS REQUIRES OLD MEASURED_BY LEFTBRACEBAR FORALL EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On SIGNALS reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On REQUIRES reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On OLD reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On MEASURED_BY reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On LEFTBRACEBAR reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On FORALL reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On EOF reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On ENSURES reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On DIVERGES reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On BARRIGHTBRACE reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On ASSIGNABLE reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On AND reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 
-- On ALSO reduce production forall_var_decl -> FORALL variable_declaration SEMICOLON 

State 263:
modifier -> FINAL . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> FINAL 
-- On SHORT reduce production modifier -> FINAL 
-- On PUBLIC reduce production modifier -> FINAL 
-- On PROTECTED reduce production modifier -> FINAL 
-- On PRIVATE reduce production modifier -> FINAL 
-- On MODEL reduce production modifier -> FINAL 
-- On LONG reduce production modifier -> FINAL 
-- On INT reduce production modifier -> FINAL 
-- On ID reduce production modifier -> FINAL 
-- On FLOAT reduce production modifier -> FINAL 
-- On FINAL reduce production modifier -> FINAL 
-- On DOUBLE reduce production modifier -> FINAL 
-- On CHAR reduce production modifier -> FINAL 
-- On BYTE reduce production modifier -> FINAL 
-- On BOOLEAN reduce production modifier -> FINAL 

State 264:
jml_specification -> ASSERT . expr_semicolon [ EOF ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 265
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 265:
jml_specification -> ASSERT expr_semicolon . [ EOF ]
-- On EOF reduce production jml_specification -> ASSERT expr_semicolon 

State 266:
extending_specification -> AND . conjoinable_spec_seq [ EOF ]
-- On PUBLIC shift to state 267
-- On PROTECTED shift to state 268
-- On PRIVATE shift to state 269
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 270
-- On privacy shift to state 307
-- On generic_conjoinable_spec shift to state 337
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On conjoinable_spec_seq shift to state 338
-- On conjoinable_spec shift to state 339
-- On behavior_conjoinable_spec shift to state 342
-- On SIGNALS reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On NORMAL_BEHAVIOR reduce production privacy -> 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BEHAVIOR reduce production privacy -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 267:
privacy -> PUBLIC . [ NORMAL_BEHAVIOR EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On NORMAL_BEHAVIOR reduce production privacy -> PUBLIC 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PUBLIC 
-- On BEHAVIOR reduce production privacy -> PUBLIC 

State 268:
privacy -> PROTECTED . [ NORMAL_BEHAVIOR EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On NORMAL_BEHAVIOR reduce production privacy -> PROTECTED 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PROTECTED 
-- On BEHAVIOR reduce production privacy -> PROTECTED 

State 269:
privacy -> PRIVATE . [ NORMAL_BEHAVIOR EXCEPTIONAL_BEHAVIOR BEHAVIOR ]
-- On NORMAL_BEHAVIOR reduce production privacy -> PRIVATE 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> PRIVATE 
-- On BEHAVIOR reduce production privacy -> PRIVATE 

State 270:
generic_conjoinable_spec -> spec_var_decls . simple_spec_body [ EOF AND ]
-- On SIGNALS shift to state 271
-- On ENSURES shift to state 282
-- On DIVERGES shift to state 284
-- On ASSIGNABLE shift to state 213
-- On simple_spec_body shift to state 286
-- On signals_clause shift to state 287
-- On ensures_clause shift to state 294
-- On diverges_clause shift to state 300
-- On assignable_clause shift to state 302

State 271:
signals_clause -> SIGNALS . LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
signals_clause -> SIGNALS . LEFTPAR type_expr RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On LEFTPAR shift to state 272

State 272:
signals_clause -> SIGNALS LEFTPAR . type_expr ident RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
signals_clause -> SIGNALS LEFTPAR . type_expr RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 273
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 273:
signals_clause -> SIGNALS LEFTPAR type_expr . ident RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
signals_clause -> SIGNALS LEFTPAR type_expr . RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On RIGHTPAR shift to state 274
-- On ID shift to state 4
-- On ident shift to state 279

State 274:
signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR . opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On SEMICOLON shift to state 275
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On opt_expr_semicolon shift to state 276
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 277
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 275:
opt_expr_semicolon -> SEMICOLON . [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production opt_expr_semicolon -> SEMICOLON 
-- On EOF reduce production opt_expr_semicolon -> SEMICOLON 
-- On DIVERGES reduce production opt_expr_semicolon -> SEMICOLON 
-- On BARRIGHTBRACE reduce production opt_expr_semicolon -> SEMICOLON 
-- On AND reduce production opt_expr_semicolon -> SEMICOLON 
-- On ALSO reduce production opt_expr_semicolon -> SEMICOLON 

State 276:
signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon . [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 
-- On EOF reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 
-- On DIVERGES reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 
-- On BARRIGHTBRACE reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 
-- On AND reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 
-- On ALSO reduce production signals_clause -> SIGNALS LEFTPAR type_expr RIGHTPAR opt_expr_semicolon 

State 277:
expr_no_name -> expr . QUESTIONMARK expr COLON expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQ expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . LTEQBANGEQGT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBARVERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSANDAMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . VERTICALBAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . CARET expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . AMPERSAND expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . EQOP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . COMP expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SHIFT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PLUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . MINUS expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . STAR expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . SLASH expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . PERCENT expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
expr_no_name -> expr . INSTANCEOF type_expr [ VERTICALBARVERTICALBAR VERTICALBAR STAR SLASH SHIFT SEMICOLON QUESTIONMARK PLUS PERCENT MINUS LTEQEQGT LTEQEQ LTEQBANGEQGT INSTANCEOF EQOP EQEQGT COMP CARET AMPERSANDAMPERSAND AMPERSAND ]
opt_expr_semicolon -> expr . SEMICOLON [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On VERTICALBARVERTICALBAR shift to state 75
-- On VERTICALBAR shift to state 77
-- On STAR shift to state 79
-- On SLASH shift to state 83
-- On SHIFT shift to state 85
-- On SEMICOLON shift to state 278
-- On QUESTIONMARK shift to state 105
-- On PLUS shift to state 87
-- On PERCENT shift to state 89
-- On MINUS shift to state 91
-- On LTEQEQGT shift to state 107
-- On LTEQEQ shift to state 109
-- On LTEQBANGEQGT shift to state 113
-- On INSTANCEOF shift to state 93
-- On EQOP shift to state 95
-- On EQEQGT shift to state 111
-- On COMP shift to state 97
-- On CARET shift to state 99
-- On AMPERSANDAMPERSAND shift to state 103
-- On AMPERSAND shift to state 101

State 278:
opt_expr_semicolon -> expr SEMICOLON . [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production opt_expr_semicolon -> expr SEMICOLON 
-- On EOF reduce production opt_expr_semicolon -> expr SEMICOLON 
-- On DIVERGES reduce production opt_expr_semicolon -> expr SEMICOLON 
-- On BARRIGHTBRACE reduce production opt_expr_semicolon -> expr SEMICOLON 
-- On AND reduce production opt_expr_semicolon -> expr SEMICOLON 
-- On ALSO reduce production opt_expr_semicolon -> expr SEMICOLON 

State 279:
signals_clause -> SIGNALS LEFTPAR type_expr ident . RIGHTPAR opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On RIGHTPAR shift to state 280

State 280:
signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR . opt_expr_semicolon [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On SEMICOLON shift to state 275
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On opt_expr_semicolon shift to state 281
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_no_name shift to state 72
-- On expr shift to state 277
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 281:
signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon . [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 
-- On EOF reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 
-- On DIVERGES reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 
-- On BARRIGHTBRACE reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 
-- On AND reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 
-- On ALSO reduce production signals_clause -> SIGNALS LEFTPAR type_expr ident RIGHTPAR opt_expr_semicolon 

State 282:
ensures_clause -> ENSURES . expr_semicolon [ SIGNALS EOF ENSURES DIVERGES BARRIGHTBRACE AND ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 283
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 283:
ensures_clause -> ENSURES expr_semicolon . [ SIGNALS EOF ENSURES DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production ensures_clause -> ENSURES expr_semicolon 
-- On EOF reduce production ensures_clause -> ENSURES expr_semicolon 
-- On ENSURES reduce production ensures_clause -> ENSURES expr_semicolon 
-- On DIVERGES reduce production ensures_clause -> ENSURES expr_semicolon 
-- On BARRIGHTBRACE reduce production ensures_clause -> ENSURES expr_semicolon 
-- On AND reduce production ensures_clause -> ENSURES expr_semicolon 
-- On ALSO reduce production ensures_clause -> ENSURES expr_semicolon 

State 284:
diverges_clause -> DIVERGES . expr_semicolon [ EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 285
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 285:
diverges_clause -> DIVERGES expr_semicolon . [ EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production diverges_clause -> DIVERGES expr_semicolon 
-- On DIVERGES reduce production diverges_clause -> DIVERGES expr_semicolon 
-- On BARRIGHTBRACE reduce production diverges_clause -> DIVERGES expr_semicolon 
-- On AND reduce production diverges_clause -> DIVERGES expr_semicolon 
-- On ALSO reduce production diverges_clause -> DIVERGES expr_semicolon 

State 286:
generic_conjoinable_spec -> spec_var_decls simple_spec_body . [ EOF AND ]
-- On EOF reduce production generic_conjoinable_spec -> spec_var_decls simple_spec_body 
-- On AND reduce production generic_conjoinable_spec -> spec_var_decls simple_spec_body 

State 287:
simple_spec_body -> signals_clause . signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On SIGNALS shift to state 271
-- On signals_clauses shift to state 288
-- On signals_clause shift to state 292
-- On EOF reduce production signals_clauses -> 
-- On DIVERGES reduce production signals_clauses -> 
-- On BARRIGHTBRACE reduce production signals_clauses -> 
-- On AND reduce production signals_clauses -> 
-- On ALSO reduce production signals_clauses -> 

State 288:
simple_spec_body -> signals_clause signals_clauses . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 289
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 289:
simple_spec_body -> signals_clause signals_clauses diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production simple_spec_body -> signals_clause signals_clauses diverges_clauses 
-- On BARRIGHTBRACE reduce production simple_spec_body -> signals_clause signals_clauses diverges_clauses 
-- On AND reduce production simple_spec_body -> signals_clause signals_clauses diverges_clauses 
-- On ALSO reduce production simple_spec_body -> signals_clause signals_clauses diverges_clauses 

State 290:
diverges_clauses -> diverges_clause . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 291
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 291:
diverges_clauses -> diverges_clause diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production diverges_clauses -> diverges_clause diverges_clauses 
-- On BARRIGHTBRACE reduce production diverges_clauses -> diverges_clause diverges_clauses 
-- On AND reduce production diverges_clauses -> diverges_clause diverges_clauses 
-- On ALSO reduce production diverges_clauses -> diverges_clause diverges_clauses 

State 292:
signals_clauses -> signals_clause . signals_clauses [ EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS shift to state 271
-- On signals_clauses shift to state 293
-- On signals_clause shift to state 292
-- On EOF reduce production signals_clauses -> 
-- On DIVERGES reduce production signals_clauses -> 
-- On BARRIGHTBRACE reduce production signals_clauses -> 
-- On AND reduce production signals_clauses -> 
-- On ALSO reduce production signals_clauses -> 

State 293:
signals_clauses -> signals_clause signals_clauses . [ EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production signals_clauses -> signals_clause signals_clauses 
-- On DIVERGES reduce production signals_clauses -> signals_clause signals_clauses 
-- On BARRIGHTBRACE reduce production signals_clauses -> signals_clause signals_clauses 
-- On AND reduce production signals_clauses -> signals_clause signals_clauses 
-- On ALSO reduce production signals_clauses -> signals_clause signals_clauses 

State 294:
simple_spec_body -> ensures_clause . ensures_clauses signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On ENSURES shift to state 282
-- On ensures_clauses shift to state 295
-- On ensures_clause shift to state 298
-- On SIGNALS reduce production ensures_clauses -> 
-- On EOF reduce production ensures_clauses -> 
-- On DIVERGES reduce production ensures_clauses -> 
-- On BARRIGHTBRACE reduce production ensures_clauses -> 
-- On AND reduce production ensures_clauses -> 
-- On ALSO reduce production ensures_clauses -> 

State 295:
simple_spec_body -> ensures_clause ensures_clauses . signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On SIGNALS shift to state 271
-- On signals_clauses shift to state 296
-- On signals_clause shift to state 292
-- On EOF reduce production signals_clauses -> 
-- On DIVERGES reduce production signals_clauses -> 
-- On BARRIGHTBRACE reduce production signals_clauses -> 
-- On AND reduce production signals_clauses -> 
-- On ALSO reduce production signals_clauses -> 

State 296:
simple_spec_body -> ensures_clause ensures_clauses signals_clauses . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 297
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 297:
simple_spec_body -> ensures_clause ensures_clauses signals_clauses diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production simple_spec_body -> ensures_clause ensures_clauses signals_clauses diverges_clauses 
-- On BARRIGHTBRACE reduce production simple_spec_body -> ensures_clause ensures_clauses signals_clauses diverges_clauses 
-- On AND reduce production simple_spec_body -> ensures_clause ensures_clauses signals_clauses diverges_clauses 
-- On ALSO reduce production simple_spec_body -> ensures_clause ensures_clauses signals_clauses diverges_clauses 

State 298:
ensures_clauses -> ensures_clause . ensures_clauses [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On ENSURES shift to state 282
-- On ensures_clauses shift to state 299
-- On ensures_clause shift to state 298
-- On SIGNALS reduce production ensures_clauses -> 
-- On EOF reduce production ensures_clauses -> 
-- On DIVERGES reduce production ensures_clauses -> 
-- On BARRIGHTBRACE reduce production ensures_clauses -> 
-- On AND reduce production ensures_clauses -> 
-- On ALSO reduce production ensures_clauses -> 

State 299:
ensures_clauses -> ensures_clause ensures_clauses . [ SIGNALS EOF DIVERGES BARRIGHTBRACE AND ALSO ]
-- On SIGNALS reduce production ensures_clauses -> ensures_clause ensures_clauses 
-- On EOF reduce production ensures_clauses -> ensures_clause ensures_clauses 
-- On DIVERGES reduce production ensures_clauses -> ensures_clause ensures_clauses 
-- On BARRIGHTBRACE reduce production ensures_clauses -> ensures_clause ensures_clauses 
-- On AND reduce production ensures_clauses -> ensures_clause ensures_clauses 
-- On ALSO reduce production ensures_clauses -> ensures_clause ensures_clauses 

State 300:
simple_spec_body -> diverges_clause . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 301
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 301:
simple_spec_body -> diverges_clause diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production simple_spec_body -> diverges_clause diverges_clauses 
-- On BARRIGHTBRACE reduce production simple_spec_body -> diverges_clause diverges_clauses 
-- On AND reduce production simple_spec_body -> diverges_clause diverges_clauses 
-- On ALSO reduce production simple_spec_body -> diverges_clause diverges_clauses 

State 302:
simple_spec_body -> assignable_clause . assignable_clauses ensures_clauses signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On ASSIGNABLE shift to state 213
-- On assignable_clauses shift to state 303
-- On assignable_clause shift to state 258
-- On SIGNALS reduce production assignable_clauses -> 
-- On EOF reduce production assignable_clauses -> 
-- On ENSURES reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On BARRIGHTBRACE reduce production assignable_clauses -> 
-- On AND reduce production assignable_clauses -> 
-- On ALSO reduce production assignable_clauses -> 

State 303:
simple_spec_body -> assignable_clause assignable_clauses . ensures_clauses signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On ENSURES shift to state 282
-- On ensures_clauses shift to state 304
-- On ensures_clause shift to state 298
-- On SIGNALS reduce production ensures_clauses -> 
-- On EOF reduce production ensures_clauses -> 
-- On DIVERGES reduce production ensures_clauses -> 
-- On BARRIGHTBRACE reduce production ensures_clauses -> 
-- On AND reduce production ensures_clauses -> 
-- On ALSO reduce production ensures_clauses -> 

State 304:
simple_spec_body -> assignable_clause assignable_clauses ensures_clauses . signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On SIGNALS shift to state 271
-- On signals_clauses shift to state 305
-- On signals_clause shift to state 292
-- On EOF reduce production signals_clauses -> 
-- On DIVERGES reduce production signals_clauses -> 
-- On BARRIGHTBRACE reduce production signals_clauses -> 
-- On AND reduce production signals_clauses -> 
-- On ALSO reduce production signals_clauses -> 

State 305:
simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 306
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 306:
simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses diverges_clauses 
-- On BARRIGHTBRACE reduce production simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses diverges_clauses 
-- On AND reduce production simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses diverges_clauses 
-- On ALSO reduce production simple_spec_body -> assignable_clause assignable_clauses ensures_clauses signals_clauses diverges_clauses 

State 307:
behavior_conjoinable_spec -> privacy . BEHAVIOR spec_var_decls simple_spec_body [ EOF AND ]
behavior_conjoinable_spec -> privacy . EXCEPTIONAL_BEHAVIOR spec_var_decls exceptional_simple_spec_body [ EOF AND ]
behavior_conjoinable_spec -> privacy . NORMAL_BEHAVIOR spec_var_decls normal_simple_spec_body [ EOF AND ]
-- On NORMAL_BEHAVIOR shift to state 308
-- On EXCEPTIONAL_BEHAVIOR shift to state 328
-- On BEHAVIOR shift to state 334

State 308:
behavior_conjoinable_spec -> privacy NORMAL_BEHAVIOR . spec_var_decls normal_simple_spec_body [ EOF AND ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 309
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On OLD reduce production forall_var_decls -> 
-- On EOF reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On AND reduce production forall_var_decls -> 

State 309:
behavior_conjoinable_spec -> privacy NORMAL_BEHAVIOR spec_var_decls . normal_simple_spec_body [ EOF AND ]
-- On ASSIGNABLE shift to state 213
-- On normal_simple_spec_body shift to state 310
-- On assignable_clauses shift to state 311
-- On assignable_clause shift to state 258
-- On EOF reduce production assignable_clauses -> 
-- On ENSURES reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On AND reduce production assignable_clauses -> 

State 310:
behavior_conjoinable_spec -> privacy NORMAL_BEHAVIOR spec_var_decls normal_simple_spec_body . [ EOF AND ]
-- On EOF reduce production behavior_conjoinable_spec -> privacy NORMAL_BEHAVIOR spec_var_decls normal_simple_spec_body 
-- On AND reduce production behavior_conjoinable_spec -> privacy NORMAL_BEHAVIOR spec_var_decls normal_simple_spec_body 

State 311:
normal_simple_spec_body -> assignable_clauses . ensures_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On ENSURES shift to state 282
-- On ensures_clauses shift to state 312
-- On ensures_clause shift to state 298
-- On EOF reduce production ensures_clauses -> 
-- On DIVERGES reduce production ensures_clauses -> 
-- On BARRIGHTBRACE reduce production ensures_clauses -> 
-- On AND reduce production ensures_clauses -> 
-- On ALSO reduce production ensures_clauses -> 

State 312:
normal_simple_spec_body -> assignable_clauses ensures_clauses . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 313
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 313:
normal_simple_spec_body -> assignable_clauses ensures_clauses diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production normal_simple_spec_body -> assignable_clauses ensures_clauses diverges_clauses 
-- On BARRIGHTBRACE reduce production normal_simple_spec_body -> assignable_clauses ensures_clauses diverges_clauses 
-- On AND reduce production normal_simple_spec_body -> assignable_clauses ensures_clauses diverges_clauses 
-- On ALSO reduce production normal_simple_spec_body -> assignable_clauses ensures_clauses diverges_clauses 

State 314:
spec_var_decls -> forall_var_decls . let_var_decls [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On OLD shift to state 315
-- On let_var_decls shift to state 325
-- On WHEN reduce production let_var_decls -> 
-- On SIGNALS reduce production let_var_decls -> 
-- On REQUIRES reduce production let_var_decls -> 
-- On MEASURED_BY reduce production let_var_decls -> 
-- On LEFTBRACEBAR reduce production let_var_decls -> 
-- On EOF reduce production let_var_decls -> 
-- On ENSURES reduce production let_var_decls -> 
-- On DIVERGES reduce production let_var_decls -> 
-- On BARRIGHTBRACE reduce production let_var_decls -> 
-- On ASSIGNABLE reduce production let_var_decls -> 
-- On AND reduce production let_var_decls -> 
-- On ALSO reduce production let_var_decls -> 

State 315:
let_var_decls -> OLD . local_spec_var_decls [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On MODEL shift to state 316
-- On GHOST shift to state 319
-- On local_spec_var_decls shift to state 322
-- On local_spec_var_decl shift to state 323

State 316:
local_spec_var_decl -> MODEL . variable_declaration SEMICOLON [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On variable_declaration shift to state 317
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 153
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 317:
local_spec_var_decl -> MODEL variable_declaration . SEMICOLON [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SEMICOLON shift to state 318

State 318:
local_spec_var_decl -> MODEL variable_declaration SEMICOLON . [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On SIGNALS reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On REQUIRES reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On MODEL reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On MEASURED_BY reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On LEFTBRACEBAR reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On GHOST reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On EOF reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On ENSURES reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On DIVERGES reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On BARRIGHTBRACE reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On ASSIGNABLE reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On AND reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 
-- On ALSO reduce production local_spec_var_decl -> MODEL variable_declaration SEMICOLON 

State 319:
local_spec_var_decl -> GHOST . variable_declaration SEMICOLON [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On variable_declaration shift to state 320
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 153
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 320:
local_spec_var_decl -> GHOST variable_declaration . SEMICOLON [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On SEMICOLON shift to state 321

State 321:
local_spec_var_decl -> GHOST variable_declaration SEMICOLON . [ WHEN SIGNALS REQUIRES MODEL MEASURED_BY LEFTBRACEBAR GHOST EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On SIGNALS reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On REQUIRES reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On MODEL reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On MEASURED_BY reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On LEFTBRACEBAR reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On GHOST reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On EOF reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On ENSURES reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On DIVERGES reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On BARRIGHTBRACE reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On ASSIGNABLE reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On AND reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 
-- On ALSO reduce production local_spec_var_decl -> GHOST variable_declaration SEMICOLON 

State 322:
let_var_decls -> OLD local_spec_var_decls . [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production let_var_decls -> OLD local_spec_var_decls 
-- On SIGNALS reduce production let_var_decls -> OLD local_spec_var_decls 
-- On REQUIRES reduce production let_var_decls -> OLD local_spec_var_decls 
-- On MEASURED_BY reduce production let_var_decls -> OLD local_spec_var_decls 
-- On LEFTBRACEBAR reduce production let_var_decls -> OLD local_spec_var_decls 
-- On EOF reduce production let_var_decls -> OLD local_spec_var_decls 
-- On ENSURES reduce production let_var_decls -> OLD local_spec_var_decls 
-- On DIVERGES reduce production let_var_decls -> OLD local_spec_var_decls 
-- On BARRIGHTBRACE reduce production let_var_decls -> OLD local_spec_var_decls 
-- On ASSIGNABLE reduce production let_var_decls -> OLD local_spec_var_decls 
-- On AND reduce production let_var_decls -> OLD local_spec_var_decls 
-- On ALSO reduce production let_var_decls -> OLD local_spec_var_decls 

State 323:
local_spec_var_decls -> local_spec_var_decl . [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
local_spec_var_decls -> local_spec_var_decl . local_spec_var_decls [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On MODEL shift to state 316
-- On GHOST shift to state 319
-- On local_spec_var_decls shift to state 324
-- On local_spec_var_decl shift to state 323
-- On WHEN reduce production local_spec_var_decls -> local_spec_var_decl 
-- On SIGNALS reduce production local_spec_var_decls -> local_spec_var_decl 
-- On REQUIRES reduce production local_spec_var_decls -> local_spec_var_decl 
-- On MEASURED_BY reduce production local_spec_var_decls -> local_spec_var_decl 
-- On LEFTBRACEBAR reduce production local_spec_var_decls -> local_spec_var_decl 
-- On EOF reduce production local_spec_var_decls -> local_spec_var_decl 
-- On ENSURES reduce production local_spec_var_decls -> local_spec_var_decl 
-- On DIVERGES reduce production local_spec_var_decls -> local_spec_var_decl 
-- On BARRIGHTBRACE reduce production local_spec_var_decls -> local_spec_var_decl 
-- On ASSIGNABLE reduce production local_spec_var_decls -> local_spec_var_decl 
-- On AND reduce production local_spec_var_decls -> local_spec_var_decl 
-- On ALSO reduce production local_spec_var_decls -> local_spec_var_decl 

State 324:
local_spec_var_decls -> local_spec_var_decl local_spec_var_decls . [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On SIGNALS reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On REQUIRES reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On MEASURED_BY reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On LEFTBRACEBAR reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On EOF reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On ENSURES reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On DIVERGES reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On BARRIGHTBRACE reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On ASSIGNABLE reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On AND reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 
-- On ALSO reduce production local_spec_var_decls -> local_spec_var_decl local_spec_var_decls 

State 325:
spec_var_decls -> forall_var_decls let_var_decls . [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On SIGNALS reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On REQUIRES reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On MEASURED_BY reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On LEFTBRACEBAR reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On EOF reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On ENSURES reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On DIVERGES reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On BARRIGHTBRACE reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On ASSIGNABLE reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On AND reduce production spec_var_decls -> forall_var_decls let_var_decls 
-- On ALSO reduce production spec_var_decls -> forall_var_decls let_var_decls 

State 326:
forall_var_decls -> forall_var_decl . forall_var_decls [ WHEN SIGNALS REQUIRES OLD MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On FORALL shift to state 260
-- On forall_var_decls shift to state 327
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On EOF reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BARRIGHTBRACE reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On AND reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 327:
forall_var_decls -> forall_var_decl forall_var_decls . [ WHEN SIGNALS REQUIRES OLD MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE AND ALSO ]
-- On WHEN reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On SIGNALS reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On REQUIRES reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On OLD reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On MEASURED_BY reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On LEFTBRACEBAR reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On EOF reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On ENSURES reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On DIVERGES reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On BARRIGHTBRACE reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On ASSIGNABLE reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On AND reduce production forall_var_decls -> forall_var_decl forall_var_decls 
-- On ALSO reduce production forall_var_decls -> forall_var_decl forall_var_decls 

State 328:
behavior_conjoinable_spec -> privacy EXCEPTIONAL_BEHAVIOR . spec_var_decls exceptional_simple_spec_body [ EOF AND ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 329
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On SIGNALS reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On EOF reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On AND reduce production forall_var_decls -> 

State 329:
behavior_conjoinable_spec -> privacy EXCEPTIONAL_BEHAVIOR spec_var_decls . exceptional_simple_spec_body [ EOF AND ]
-- On ASSIGNABLE shift to state 213
-- On exceptional_simple_spec_body shift to state 330
-- On assignable_clauses shift to state 331
-- On assignable_clause shift to state 258
-- On SIGNALS reduce production assignable_clauses -> 
-- On EOF reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On AND reduce production assignable_clauses -> 

State 330:
behavior_conjoinable_spec -> privacy EXCEPTIONAL_BEHAVIOR spec_var_decls exceptional_simple_spec_body . [ EOF AND ]
-- On EOF reduce production behavior_conjoinable_spec -> privacy EXCEPTIONAL_BEHAVIOR spec_var_decls exceptional_simple_spec_body 
-- On AND reduce production behavior_conjoinable_spec -> privacy EXCEPTIONAL_BEHAVIOR spec_var_decls exceptional_simple_spec_body 

State 331:
exceptional_simple_spec_body -> assignable_clauses . signals_clauses diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On SIGNALS shift to state 271
-- On signals_clauses shift to state 332
-- On signals_clause shift to state 292
-- On EOF reduce production signals_clauses -> 
-- On DIVERGES reduce production signals_clauses -> 
-- On BARRIGHTBRACE reduce production signals_clauses -> 
-- On AND reduce production signals_clauses -> 
-- On ALSO reduce production signals_clauses -> 

State 332:
exceptional_simple_spec_body -> assignable_clauses signals_clauses . diverges_clauses [ EOF BARRIGHTBRACE AND ALSO ]
-- On DIVERGES shift to state 284
-- On diverges_clauses shift to state 333
-- On diverges_clause shift to state 290
-- On EOF reduce production diverges_clauses -> 
-- On BARRIGHTBRACE reduce production diverges_clauses -> 
-- On AND reduce production diverges_clauses -> 
-- On ALSO reduce production diverges_clauses -> 

State 333:
exceptional_simple_spec_body -> assignable_clauses signals_clauses diverges_clauses . [ EOF BARRIGHTBRACE AND ALSO ]
-- On EOF reduce production exceptional_simple_spec_body -> assignable_clauses signals_clauses diverges_clauses 
-- On BARRIGHTBRACE reduce production exceptional_simple_spec_body -> assignable_clauses signals_clauses diverges_clauses 
-- On AND reduce production exceptional_simple_spec_body -> assignable_clauses signals_clauses diverges_clauses 
-- On ALSO reduce production exceptional_simple_spec_body -> assignable_clauses signals_clauses diverges_clauses 

State 334:
behavior_conjoinable_spec -> privacy BEHAVIOR . spec_var_decls simple_spec_body [ EOF AND ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 335
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On SIGNALS reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 335:
behavior_conjoinable_spec -> privacy BEHAVIOR spec_var_decls . simple_spec_body [ EOF AND ]
-- On SIGNALS shift to state 271
-- On ENSURES shift to state 282
-- On DIVERGES shift to state 284
-- On ASSIGNABLE shift to state 213
-- On simple_spec_body shift to state 336
-- On signals_clause shift to state 287
-- On ensures_clause shift to state 294
-- On diverges_clause shift to state 300
-- On assignable_clause shift to state 302

State 336:
behavior_conjoinable_spec -> privacy BEHAVIOR spec_var_decls simple_spec_body . [ EOF AND ]
-- On EOF reduce production behavior_conjoinable_spec -> privacy BEHAVIOR spec_var_decls simple_spec_body 
-- On AND reduce production behavior_conjoinable_spec -> privacy BEHAVIOR spec_var_decls simple_spec_body 

State 337:
conjoinable_spec -> generic_conjoinable_spec . [ EOF AND ]
-- On EOF reduce production conjoinable_spec -> generic_conjoinable_spec 
-- On AND reduce production conjoinable_spec -> generic_conjoinable_spec 

State 338:
extending_specification -> AND conjoinable_spec_seq . [ EOF ]
-- On EOF reduce production extending_specification -> AND conjoinable_spec_seq 

State 339:
conjoinable_spec_seq -> conjoinable_spec . [ EOF ]
conjoinable_spec_seq -> conjoinable_spec . AND conjoinable_spec_seq [ EOF ]
-- On AND shift to state 340
-- On EOF reduce production conjoinable_spec_seq -> conjoinable_spec 

State 340:
conjoinable_spec_seq -> conjoinable_spec AND . conjoinable_spec_seq [ EOF ]
-- On PUBLIC shift to state 267
-- On PROTECTED shift to state 268
-- On PRIVATE shift to state 269
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 270
-- On privacy shift to state 307
-- On generic_conjoinable_spec shift to state 337
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On conjoinable_spec_seq shift to state 341
-- On conjoinable_spec shift to state 339
-- On behavior_conjoinable_spec shift to state 342
-- On SIGNALS reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On NORMAL_BEHAVIOR reduce production privacy -> 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BEHAVIOR reduce production privacy -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 341:
conjoinable_spec_seq -> conjoinable_spec AND conjoinable_spec_seq . [ EOF ]
-- On EOF reduce production conjoinable_spec_seq -> conjoinable_spec AND conjoinable_spec_seq 

State 342:
conjoinable_spec -> behavior_conjoinable_spec . [ EOF AND ]
-- On EOF reduce production conjoinable_spec -> behavior_conjoinable_spec 
-- On AND reduce production conjoinable_spec -> behavior_conjoinable_spec 

State 343:
extending_specification -> ALSO . additive_specification [ EOF ]
-- On PUBLIC shift to state 267
-- On PROTECTED shift to state 268
-- On PRIVATE shift to state 269
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 344
-- On spec_case_seq shift to state 369
-- On spec_case shift to state 370
-- On privacy shift to state 373
-- On generic_spec_case shift to state 400
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On behavior_spec shift to state 401
-- On additive_specification shift to state 402
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On NORMAL_BEHAVIOR reduce production privacy -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BEHAVIOR reduce production privacy -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 344:
generic_spec_case -> spec_var_decls . spec_header generic_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On REQUIRES shift to state 345
-- On spec_header shift to state 347
-- On requires_clauses shift to state 356
-- On requires_clause shift to state 367
-- On WHEN reduce production requires_clauses -> 
-- On SIGNALS reduce production requires_clauses -> 
-- On MEASURED_BY reduce production requires_clauses -> 
-- On LEFTBRACEBAR reduce production requires_clauses -> 
-- On ENSURES reduce production requires_clauses -> 
-- On DIVERGES reduce production requires_clauses -> 
-- On ASSIGNABLE reduce production requires_clauses -> 

State 345:
requires_clause -> REQUIRES . expr_semicolon [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 346
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 346:
requires_clause -> REQUIRES expr_semicolon . [ WHEN SIGNALS REQUIRES MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On WHEN reduce production requires_clause -> REQUIRES expr_semicolon 
-- On SIGNALS reduce production requires_clause -> REQUIRES expr_semicolon 
-- On REQUIRES reduce production requires_clause -> REQUIRES expr_semicolon 
-- On MEASURED_BY reduce production requires_clause -> REQUIRES expr_semicolon 
-- On LEFTBRACEBAR reduce production requires_clause -> REQUIRES expr_semicolon 
-- On EOF reduce production requires_clause -> REQUIRES expr_semicolon 
-- On ENSURES reduce production requires_clause -> REQUIRES expr_semicolon 
-- On DIVERGES reduce production requires_clause -> REQUIRES expr_semicolon 
-- On BARRIGHTBRACE reduce production requires_clause -> REQUIRES expr_semicolon 
-- On ASSIGNABLE reduce production requires_clause -> REQUIRES expr_semicolon 
-- On ALSO reduce production requires_clause -> REQUIRES expr_semicolon 

State 347:
generic_spec_case -> spec_var_decls spec_header . generic_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On SIGNALS shift to state 271
-- On LEFTBRACEBAR shift to state 348
-- On ENSURES shift to state 282
-- On DIVERGES shift to state 284
-- On ASSIGNABLE shift to state 213
-- On simple_spec_body shift to state 354
-- On signals_clause shift to state 287
-- On generic_spec_body shift to state 355
-- On ensures_clause shift to state 294
-- On diverges_clause shift to state 300
-- On assignable_clause shift to state 302

State 348:
generic_spec_body -> LEFTBRACEBAR . generic_spec_case_seq BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 344
-- On generic_spec_case_seq shift to state 349
-- On generic_spec_case shift to state 351
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 349:
generic_spec_body -> LEFTBRACEBAR generic_spec_case_seq . BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On BARRIGHTBRACE shift to state 350

State 350:
generic_spec_body -> LEFTBRACEBAR generic_spec_case_seq BARRIGHTBRACE . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production generic_spec_body -> LEFTBRACEBAR generic_spec_case_seq BARRIGHTBRACE 
-- On BARRIGHTBRACE reduce production generic_spec_body -> LEFTBRACEBAR generic_spec_case_seq BARRIGHTBRACE 
-- On ALSO reduce production generic_spec_body -> LEFTBRACEBAR generic_spec_case_seq BARRIGHTBRACE 

State 351:
generic_spec_case_seq -> generic_spec_case . [ BARRIGHTBRACE ]
generic_spec_case_seq -> generic_spec_case . ALSO generic_spec_case_seq [ BARRIGHTBRACE ]
-- On ALSO shift to state 352
-- On BARRIGHTBRACE reduce production generic_spec_case_seq -> generic_spec_case 

State 352:
generic_spec_case_seq -> generic_spec_case ALSO . generic_spec_case_seq [ BARRIGHTBRACE ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 344
-- On generic_spec_case_seq shift to state 353
-- On generic_spec_case shift to state 351
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 353:
generic_spec_case_seq -> generic_spec_case ALSO generic_spec_case_seq . [ BARRIGHTBRACE ]
-- On BARRIGHTBRACE reduce production generic_spec_case_seq -> generic_spec_case ALSO generic_spec_case_seq 

State 354:
generic_spec_body -> simple_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production generic_spec_body -> simple_spec_body 
-- On BARRIGHTBRACE reduce production generic_spec_body -> simple_spec_body 
-- On ALSO reduce production generic_spec_body -> simple_spec_body 

State 355:
generic_spec_case -> spec_var_decls spec_header generic_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production generic_spec_case -> spec_var_decls spec_header generic_spec_body 
-- On BARRIGHTBRACE reduce production generic_spec_case -> spec_var_decls spec_header generic_spec_body 
-- On ALSO reduce production generic_spec_case -> spec_var_decls spec_header generic_spec_body 

State 356:
spec_header -> requires_clauses . when_clauses measured_clauses [ SIGNALS LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On WHEN shift to state 357
-- On when_clauses shift to state 359
-- On when_clause shift to state 365
-- On SIGNALS reduce production when_clauses -> 
-- On MEASURED_BY reduce production when_clauses -> 
-- On LEFTBRACEBAR reduce production when_clauses -> 
-- On EOF reduce production when_clauses -> 
-- On ENSURES reduce production when_clauses -> 
-- On DIVERGES reduce production when_clauses -> 
-- On BARRIGHTBRACE reduce production when_clauses -> 
-- On ASSIGNABLE reduce production when_clauses -> 
-- On ALSO reduce production when_clauses -> 

State 357:
when_clause -> WHEN . expr_semicolon [ WHEN SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 358
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 358:
when_clause -> WHEN expr_semicolon . [ WHEN SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On WHEN reduce production when_clause -> WHEN expr_semicolon 
-- On SIGNALS reduce production when_clause -> WHEN expr_semicolon 
-- On MEASURED_BY reduce production when_clause -> WHEN expr_semicolon 
-- On LEFTBRACEBAR reduce production when_clause -> WHEN expr_semicolon 
-- On EOF reduce production when_clause -> WHEN expr_semicolon 
-- On ENSURES reduce production when_clause -> WHEN expr_semicolon 
-- On DIVERGES reduce production when_clause -> WHEN expr_semicolon 
-- On BARRIGHTBRACE reduce production when_clause -> WHEN expr_semicolon 
-- On ASSIGNABLE reduce production when_clause -> WHEN expr_semicolon 
-- On ALSO reduce production when_clause -> WHEN expr_semicolon 

State 359:
spec_header -> requires_clauses when_clauses . measured_clauses [ SIGNALS LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On MEASURED_BY shift to state 360
-- On measured_clauses shift to state 362
-- On measured_clause shift to state 363
-- On SIGNALS reduce production measured_clauses -> 
-- On LEFTBRACEBAR reduce production measured_clauses -> 
-- On EOF reduce production measured_clauses -> 
-- On ENSURES reduce production measured_clauses -> 
-- On DIVERGES reduce production measured_clauses -> 
-- On BARRIGHTBRACE reduce production measured_clauses -> 
-- On ASSIGNABLE reduce production measured_clauses -> 
-- On ALSO reduce production measured_clauses -> 

State 360:
measured_clause -> MEASURED_BY . expr_semicolon [ SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 361
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 361:
measured_clause -> MEASURED_BY expr_semicolon . [ SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On SIGNALS reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On MEASURED_BY reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On LEFTBRACEBAR reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On EOF reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On ENSURES reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On DIVERGES reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On BARRIGHTBRACE reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On ASSIGNABLE reduce production measured_clause -> MEASURED_BY expr_semicolon 
-- On ALSO reduce production measured_clause -> MEASURED_BY expr_semicolon 

State 362:
spec_header -> requires_clauses when_clauses measured_clauses . [ SIGNALS LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On SIGNALS reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On LEFTBRACEBAR reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On EOF reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On ENSURES reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On DIVERGES reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On BARRIGHTBRACE reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On ASSIGNABLE reduce production spec_header -> requires_clauses when_clauses measured_clauses 
-- On ALSO reduce production spec_header -> requires_clauses when_clauses measured_clauses 

State 363:
measured_clauses -> measured_clause . measured_clauses [ SIGNALS LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On MEASURED_BY shift to state 360
-- On measured_clauses shift to state 364
-- On measured_clause shift to state 363
-- On SIGNALS reduce production measured_clauses -> 
-- On LEFTBRACEBAR reduce production measured_clauses -> 
-- On EOF reduce production measured_clauses -> 
-- On ENSURES reduce production measured_clauses -> 
-- On DIVERGES reduce production measured_clauses -> 
-- On BARRIGHTBRACE reduce production measured_clauses -> 
-- On ASSIGNABLE reduce production measured_clauses -> 
-- On ALSO reduce production measured_clauses -> 

State 364:
measured_clauses -> measured_clause measured_clauses . [ SIGNALS LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On SIGNALS reduce production measured_clauses -> measured_clause measured_clauses 
-- On LEFTBRACEBAR reduce production measured_clauses -> measured_clause measured_clauses 
-- On EOF reduce production measured_clauses -> measured_clause measured_clauses 
-- On ENSURES reduce production measured_clauses -> measured_clause measured_clauses 
-- On DIVERGES reduce production measured_clauses -> measured_clause measured_clauses 
-- On BARRIGHTBRACE reduce production measured_clauses -> measured_clause measured_clauses 
-- On ASSIGNABLE reduce production measured_clauses -> measured_clause measured_clauses 
-- On ALSO reduce production measured_clauses -> measured_clause measured_clauses 

State 365:
when_clauses -> when_clause . when_clauses [ SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On WHEN shift to state 357
-- On when_clauses shift to state 366
-- On when_clause shift to state 365
-- On SIGNALS reduce production when_clauses -> 
-- On MEASURED_BY reduce production when_clauses -> 
-- On LEFTBRACEBAR reduce production when_clauses -> 
-- On EOF reduce production when_clauses -> 
-- On ENSURES reduce production when_clauses -> 
-- On DIVERGES reduce production when_clauses -> 
-- On BARRIGHTBRACE reduce production when_clauses -> 
-- On ASSIGNABLE reduce production when_clauses -> 
-- On ALSO reduce production when_clauses -> 

State 366:
when_clauses -> when_clause when_clauses . [ SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On SIGNALS reduce production when_clauses -> when_clause when_clauses 
-- On MEASURED_BY reduce production when_clauses -> when_clause when_clauses 
-- On LEFTBRACEBAR reduce production when_clauses -> when_clause when_clauses 
-- On EOF reduce production when_clauses -> when_clause when_clauses 
-- On ENSURES reduce production when_clauses -> when_clause when_clauses 
-- On DIVERGES reduce production when_clauses -> when_clause when_clauses 
-- On BARRIGHTBRACE reduce production when_clauses -> when_clause when_clauses 
-- On ASSIGNABLE reduce production when_clauses -> when_clause when_clauses 
-- On ALSO reduce production when_clauses -> when_clause when_clauses 

State 367:
requires_clauses -> requires_clause . requires_clauses [ WHEN SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On REQUIRES shift to state 345
-- On requires_clauses shift to state 368
-- On requires_clause shift to state 367
-- On WHEN reduce production requires_clauses -> 
-- On SIGNALS reduce production requires_clauses -> 
-- On MEASURED_BY reduce production requires_clauses -> 
-- On LEFTBRACEBAR reduce production requires_clauses -> 
-- On EOF reduce production requires_clauses -> 
-- On ENSURES reduce production requires_clauses -> 
-- On DIVERGES reduce production requires_clauses -> 
-- On BARRIGHTBRACE reduce production requires_clauses -> 
-- On ASSIGNABLE reduce production requires_clauses -> 
-- On ALSO reduce production requires_clauses -> 

State 368:
requires_clauses -> requires_clause requires_clauses . [ WHEN SIGNALS MEASURED_BY LEFTBRACEBAR EOF ENSURES DIVERGES BARRIGHTBRACE ASSIGNABLE ALSO ]
-- On WHEN reduce production requires_clauses -> requires_clause requires_clauses 
-- On SIGNALS reduce production requires_clauses -> requires_clause requires_clauses 
-- On MEASURED_BY reduce production requires_clauses -> requires_clause requires_clauses 
-- On LEFTBRACEBAR reduce production requires_clauses -> requires_clause requires_clauses 
-- On EOF reduce production requires_clauses -> requires_clause requires_clauses 
-- On ENSURES reduce production requires_clauses -> requires_clause requires_clauses 
-- On DIVERGES reduce production requires_clauses -> requires_clause requires_clauses 
-- On BARRIGHTBRACE reduce production requires_clauses -> requires_clause requires_clauses 
-- On ASSIGNABLE reduce production requires_clauses -> requires_clause requires_clauses 
-- On ALSO reduce production requires_clauses -> requires_clause requires_clauses 

State 369:
additive_specification -> spec_case_seq . [ EOF ]
-- On EOF reduce production additive_specification -> spec_case_seq 

State 370:
spec_case_seq -> spec_case . [ EOF ]
spec_case_seq -> spec_case . ALSO spec_case_seq [ EOF ]
-- On ALSO shift to state 371
-- On EOF reduce production spec_case_seq -> spec_case 

State 371:
spec_case_seq -> spec_case ALSO . spec_case_seq [ EOF ]
-- On PUBLIC shift to state 267
-- On PROTECTED shift to state 268
-- On PRIVATE shift to state 269
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 344
-- On spec_case_seq shift to state 372
-- On spec_case shift to state 370
-- On privacy shift to state 373
-- On generic_spec_case shift to state 400
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On behavior_spec shift to state 401
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On NORMAL_BEHAVIOR reduce production privacy -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On EXCEPTIONAL_BEHAVIOR reduce production privacy -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BEHAVIOR reduce production privacy -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 372:
spec_case_seq -> spec_case ALSO spec_case_seq . [ EOF ]
-- On EOF reduce production spec_case_seq -> spec_case ALSO spec_case_seq 

State 373:
behavior_spec -> privacy . BEHAVIOR generic_spec_case [ EOF ALSO ]
behavior_spec -> privacy . EXCEPTIONAL_BEHAVIOR exceptional_spec_case [ EOF ALSO ]
behavior_spec -> privacy . NORMAL_BEHAVIOR normal_spec_case [ EOF ALSO ]
-- On NORMAL_BEHAVIOR shift to state 374
-- On EXCEPTIONAL_BEHAVIOR shift to state 386
-- On BEHAVIOR shift to state 398

State 374:
behavior_spec -> privacy NORMAL_BEHAVIOR . normal_spec_case [ EOF ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 375
-- On normal_spec_case shift to state 385
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On EOF reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 375:
normal_spec_case -> spec_var_decls . spec_header normal_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On REQUIRES shift to state 345
-- On spec_header shift to state 376
-- On requires_clauses shift to state 356
-- On requires_clause shift to state 367
-- On WHEN reduce production requires_clauses -> 
-- On MEASURED_BY reduce production requires_clauses -> 
-- On LEFTBRACEBAR reduce production requires_clauses -> 
-- On EOF reduce production requires_clauses -> 
-- On ENSURES reduce production requires_clauses -> 
-- On DIVERGES reduce production requires_clauses -> 
-- On BARRIGHTBRACE reduce production requires_clauses -> 
-- On ASSIGNABLE reduce production requires_clauses -> 
-- On ALSO reduce production requires_clauses -> 

State 376:
normal_spec_case -> spec_var_decls spec_header . normal_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On LEFTBRACEBAR shift to state 377
-- On ASSIGNABLE shift to state 213
-- On normal_spec_body shift to state 383
-- On normal_simple_spec_body shift to state 384
-- On assignable_clauses shift to state 311
-- On assignable_clause shift to state 258
-- On EOF reduce production assignable_clauses -> 
-- On ENSURES reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On BARRIGHTBRACE reduce production assignable_clauses -> 
-- On ALSO reduce production assignable_clauses -> 

State 377:
normal_spec_body -> LEFTBRACEBAR . normal_spec_case_seq BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 375
-- On normal_spec_case_seq shift to state 378
-- On normal_spec_case shift to state 380
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BARRIGHTBRACE reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 378:
normal_spec_body -> LEFTBRACEBAR normal_spec_case_seq . BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On BARRIGHTBRACE shift to state 379

State 379:
normal_spec_body -> LEFTBRACEBAR normal_spec_case_seq BARRIGHTBRACE . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production normal_spec_body -> LEFTBRACEBAR normal_spec_case_seq BARRIGHTBRACE 
-- On BARRIGHTBRACE reduce production normal_spec_body -> LEFTBRACEBAR normal_spec_case_seq BARRIGHTBRACE 
-- On ALSO reduce production normal_spec_body -> LEFTBRACEBAR normal_spec_case_seq BARRIGHTBRACE 

State 380:
normal_spec_case_seq -> normal_spec_case . [ BARRIGHTBRACE ]
normal_spec_case_seq -> normal_spec_case . ALSO normal_spec_case_seq [ BARRIGHTBRACE ]
-- On ALSO shift to state 381
-- On BARRIGHTBRACE reduce production normal_spec_case_seq -> normal_spec_case 

State 381:
normal_spec_case_seq -> normal_spec_case ALSO . normal_spec_case_seq [ BARRIGHTBRACE ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 375
-- On normal_spec_case_seq shift to state 382
-- On normal_spec_case shift to state 380
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BARRIGHTBRACE reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 382:
normal_spec_case_seq -> normal_spec_case ALSO normal_spec_case_seq . [ BARRIGHTBRACE ]
-- On BARRIGHTBRACE reduce production normal_spec_case_seq -> normal_spec_case ALSO normal_spec_case_seq 

State 383:
normal_spec_case -> spec_var_decls spec_header normal_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production normal_spec_case -> spec_var_decls spec_header normal_spec_body 
-- On BARRIGHTBRACE reduce production normal_spec_case -> spec_var_decls spec_header normal_spec_body 
-- On ALSO reduce production normal_spec_case -> spec_var_decls spec_header normal_spec_body 

State 384:
normal_spec_body -> normal_simple_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production normal_spec_body -> normal_simple_spec_body 
-- On BARRIGHTBRACE reduce production normal_spec_body -> normal_simple_spec_body 
-- On ALSO reduce production normal_spec_body -> normal_simple_spec_body 

State 385:
behavior_spec -> privacy NORMAL_BEHAVIOR normal_spec_case . [ EOF ALSO ]
-- On EOF reduce production behavior_spec -> privacy NORMAL_BEHAVIOR normal_spec_case 
-- On ALSO reduce production behavior_spec -> privacy NORMAL_BEHAVIOR normal_spec_case 

State 386:
behavior_spec -> privacy EXCEPTIONAL_BEHAVIOR . exceptional_spec_case [ EOF ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 387
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On exceptional_spec_case shift to state 397
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On EOF reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 387:
exceptional_spec_case -> spec_var_decls . spec_header exceptional_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On REQUIRES shift to state 345
-- On spec_header shift to state 388
-- On requires_clauses shift to state 356
-- On requires_clause shift to state 367
-- On WHEN reduce production requires_clauses -> 
-- On SIGNALS reduce production requires_clauses -> 
-- On MEASURED_BY reduce production requires_clauses -> 
-- On LEFTBRACEBAR reduce production requires_clauses -> 
-- On EOF reduce production requires_clauses -> 
-- On DIVERGES reduce production requires_clauses -> 
-- On BARRIGHTBRACE reduce production requires_clauses -> 
-- On ASSIGNABLE reduce production requires_clauses -> 
-- On ALSO reduce production requires_clauses -> 

State 388:
exceptional_spec_case -> spec_var_decls spec_header . exceptional_spec_body [ EOF BARRIGHTBRACE ALSO ]
-- On LEFTBRACEBAR shift to state 389
-- On ASSIGNABLE shift to state 213
-- On exceptional_spec_body shift to state 395
-- On exceptional_simple_spec_body shift to state 396
-- On assignable_clauses shift to state 331
-- On assignable_clause shift to state 258
-- On SIGNALS reduce production assignable_clauses -> 
-- On EOF reduce production assignable_clauses -> 
-- On DIVERGES reduce production assignable_clauses -> 
-- On BARRIGHTBRACE reduce production assignable_clauses -> 
-- On ALSO reduce production assignable_clauses -> 

State 389:
exceptional_spec_body -> LEFTBRACEBAR . exceptional_spec_case_seq BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 387
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On exceptional_spec_case_seq shift to state 390
-- On exceptional_spec_case shift to state 392
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BARRIGHTBRACE reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 390:
exceptional_spec_body -> LEFTBRACEBAR exceptional_spec_case_seq . BARRIGHTBRACE [ EOF BARRIGHTBRACE ALSO ]
-- On BARRIGHTBRACE shift to state 391

State 391:
exceptional_spec_body -> LEFTBRACEBAR exceptional_spec_case_seq BARRIGHTBRACE . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production exceptional_spec_body -> LEFTBRACEBAR exceptional_spec_case_seq BARRIGHTBRACE 
-- On BARRIGHTBRACE reduce production exceptional_spec_body -> LEFTBRACEBAR exceptional_spec_case_seq BARRIGHTBRACE 
-- On ALSO reduce production exceptional_spec_body -> LEFTBRACEBAR exceptional_spec_case_seq BARRIGHTBRACE 

State 392:
exceptional_spec_case_seq -> exceptional_spec_case . [ BARRIGHTBRACE ]
exceptional_spec_case_seq -> exceptional_spec_case . ALSO exceptional_spec_case_seq [ BARRIGHTBRACE ]
-- On ALSO shift to state 393
-- On BARRIGHTBRACE reduce production exceptional_spec_case_seq -> exceptional_spec_case 

State 393:
exceptional_spec_case_seq -> exceptional_spec_case ALSO . exceptional_spec_case_seq [ BARRIGHTBRACE ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 387
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On exceptional_spec_case_seq shift to state 394
-- On exceptional_spec_case shift to state 392
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On BARRIGHTBRACE reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 
-- On ALSO reduce production forall_var_decls -> 

State 394:
exceptional_spec_case_seq -> exceptional_spec_case ALSO exceptional_spec_case_seq . [ BARRIGHTBRACE ]
-- On BARRIGHTBRACE reduce production exceptional_spec_case_seq -> exceptional_spec_case ALSO exceptional_spec_case_seq 

State 395:
exceptional_spec_case -> spec_var_decls spec_header exceptional_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production exceptional_spec_case -> spec_var_decls spec_header exceptional_spec_body 
-- On BARRIGHTBRACE reduce production exceptional_spec_case -> spec_var_decls spec_header exceptional_spec_body 
-- On ALSO reduce production exceptional_spec_case -> spec_var_decls spec_header exceptional_spec_body 

State 396:
exceptional_spec_body -> exceptional_simple_spec_body . [ EOF BARRIGHTBRACE ALSO ]
-- On EOF reduce production exceptional_spec_body -> exceptional_simple_spec_body 
-- On BARRIGHTBRACE reduce production exceptional_spec_body -> exceptional_simple_spec_body 
-- On ALSO reduce production exceptional_spec_body -> exceptional_simple_spec_body 

State 397:
behavior_spec -> privacy EXCEPTIONAL_BEHAVIOR exceptional_spec_case . [ EOF ALSO ]
-- On EOF reduce production behavior_spec -> privacy EXCEPTIONAL_BEHAVIOR exceptional_spec_case 
-- On ALSO reduce production behavior_spec -> privacy EXCEPTIONAL_BEHAVIOR exceptional_spec_case 

State 398:
behavior_spec -> privacy BEHAVIOR . generic_spec_case [ EOF ALSO ]
-- On FORALL shift to state 260
-- On spec_var_decls shift to state 344
-- On generic_spec_case shift to state 399
-- On forall_var_decls shift to state 314
-- On forall_var_decl shift to state 326
-- On WHEN reduce production forall_var_decls -> 
-- On SIGNALS reduce production forall_var_decls -> 
-- On REQUIRES reduce production forall_var_decls -> 
-- On OLD reduce production forall_var_decls -> 
-- On MEASURED_BY reduce production forall_var_decls -> 
-- On LEFTBRACEBAR reduce production forall_var_decls -> 
-- On ENSURES reduce production forall_var_decls -> 
-- On DIVERGES reduce production forall_var_decls -> 
-- On ASSIGNABLE reduce production forall_var_decls -> 

State 399:
behavior_spec -> privacy BEHAVIOR generic_spec_case . [ EOF ALSO ]
-- On EOF reduce production behavior_spec -> privacy BEHAVIOR generic_spec_case 
-- On ALSO reduce production behavior_spec -> privacy BEHAVIOR generic_spec_case 

State 400:
spec_case -> generic_spec_case . [ EOF ALSO ]
-- On EOF reduce production spec_case -> generic_spec_case 
-- On ALSO reduce production spec_case -> generic_spec_case 

State 401:
spec_case -> behavior_spec . [ EOF ALSO ]
-- On EOF reduce production spec_case -> behavior_spec 
-- On ALSO reduce production spec_case -> behavior_spec 

State 402:
extending_specification -> ALSO additive_specification . [ EOF ]
-- On EOF reduce production extending_specification -> ALSO additive_specification 

State 403:
non_extending_specification -> spec_case_seq . [ EOF ]
-- On EOF reduce production non_extending_specification -> spec_case_seq 

State 404:
behavior_spec -> privacy . BEHAVIOR generic_spec_case [ EOF ALSO ]
behavior_spec -> privacy . EXCEPTIONAL_BEHAVIOR exceptional_spec_case [ EOF ALSO ]
behavior_spec -> privacy . NORMAL_BEHAVIOR normal_spec_case [ EOF ALSO ]
jml_declaration -> privacy . INVARIANT expr_semicolon [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On NORMAL_BEHAVIOR shift to state 374
-- On INVARIANT shift to state 405
-- On EXCEPTIONAL_BEHAVIOR shift to state 386
-- On BEHAVIOR shift to state 398

State 405:
jml_declaration -> privacy INVARIANT . expr_semicolon [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On TRUE shift to state 7
-- On TILDA shift to state 8
-- On THIS shift to state 9
-- On SUPER shift to state 10
-- On STRING shift to state 13
-- On REAL shift to state 14
-- On PLUS shift to state 15
-- On NULL shift to state 16
-- On NEW shift to state 17
-- On MINUS shift to state 28
-- On LEFTPAR shift to state 29
-- On INTEGER shift to state 30
-- On ID shift to state 4
-- On FALSE shift to state 31
-- On CHARACTER shift to state 32
-- On BSTYPEOF shift to state 33
-- On BSTYPE shift to state 35
-- On BSRESULT shift to state 52
-- On BSOLD shift to state 53
-- On BSFRESH shift to state 55
-- On BSFPI shift to state 57
-- On BANG shift to state 59
-- On primary_no_new_array shift to state 60
-- On primary_expr shift to state 62
-- On parenthesized_name shift to state 66
-- On name shift to state 67
-- On ident shift to state 69
-- On field_access shift to state 71
-- On expr_semicolon shift to state 406
-- On expr_no_name shift to state 72
-- On expr shift to state 255
-- On array_creation_expression shift to state 81
-- On array_access shift to state 82

State 406:
jml_declaration -> privacy INVARIANT expr_semicolon . [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On SHORT reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On REPRESENTS reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On PUBLIC reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On PROTECTED reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On PRIVATE reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On MODEL reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On LONG reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On INVARIANT reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On INT reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On ID reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On FLOAT reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On FINAL reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On EOF reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On DOUBLE reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On CHAR reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On BYTE reduce production jml_declaration -> privacy INVARIANT expr_semicolon 
-- On BOOLEAN reduce production jml_declaration -> privacy INVARIANT expr_semicolon 

State 407:
method_specification -> non_extending_specification . [ EOF ]
-- On EOF reduce production method_specification -> non_extending_specification 

State 408:
jml_declaration -> modifiers . type_expr variable_declarators SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On SHORT shift to state 18
-- On LONG shift to state 19
-- On INT shift to state 20
-- On ID shift to state 4
-- On FLOAT shift to state 21
-- On DOUBLE shift to state 22
-- On CHAR shift to state 23
-- On BYTE shift to state 24
-- On BOOLEAN shift to state 25
-- On type_expr_no_name shift to state 37
-- On type_expr shift to state 409
-- On name shift to state 40
-- On ident shift to state 45
-- On base_type shift to state 46
-- On array_type_expr shift to state 49

State 409:
jml_declaration -> modifiers type_expr . variable_declarators SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On ID shift to state 4
-- On variable_declarators shift to state 410
-- On variable_declarator_id shift to state 155
-- On ident shift to state 160

State 410:
jml_declaration -> modifiers type_expr variable_declarators . SEMICOLON [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On SEMICOLON shift to state 411

State 411:
jml_declaration -> modifiers type_expr variable_declarators SEMICOLON . [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On SHORT reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On REPRESENTS reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On PUBLIC reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On PROTECTED reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On PRIVATE reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On MODEL reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On LONG reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On INVARIANT reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On INT reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On ID reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On FLOAT reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On FINAL reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On EOF reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On DOUBLE reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On CHAR reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On BYTE reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 
-- On BOOLEAN reduce production jml_declaration -> modifiers type_expr variable_declarators SEMICOLON 

State 412:
modifiers -> modifier . modifiers [ SHORT LONG INT ID FLOAT DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC shift to state 1
-- On PUBLIC shift to state 413
-- On PROTECTED shift to state 414
-- On PRIVATE shift to state 415
-- On MODEL shift to state 210
-- On FINAL shift to state 263
-- On modifiers shift to state 416
-- On modifier shift to state 412
-- On SHORT reduce production modifiers -> 
-- On LONG reduce production modifiers -> 
-- On INT reduce production modifiers -> 
-- On ID reduce production modifiers -> 
-- On FLOAT reduce production modifiers -> 
-- On DOUBLE reduce production modifiers -> 
-- On CHAR reduce production modifiers -> 
-- On BYTE reduce production modifiers -> 
-- On BOOLEAN reduce production modifiers -> 

State 413:
modifier -> PUBLIC . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> PUBLIC 
-- On SHORT reduce production modifier -> PUBLIC 
-- On PUBLIC reduce production modifier -> PUBLIC 
-- On PROTECTED reduce production modifier -> PUBLIC 
-- On PRIVATE reduce production modifier -> PUBLIC 
-- On MODEL reduce production modifier -> PUBLIC 
-- On LONG reduce production modifier -> PUBLIC 
-- On INT reduce production modifier -> PUBLIC 
-- On ID reduce production modifier -> PUBLIC 
-- On FLOAT reduce production modifier -> PUBLIC 
-- On FINAL reduce production modifier -> PUBLIC 
-- On DOUBLE reduce production modifier -> PUBLIC 
-- On CHAR reduce production modifier -> PUBLIC 
-- On BYTE reduce production modifier -> PUBLIC 
-- On BOOLEAN reduce production modifier -> PUBLIC 

State 414:
modifier -> PROTECTED . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> PROTECTED 
-- On SHORT reduce production modifier -> PROTECTED 
-- On PUBLIC reduce production modifier -> PROTECTED 
-- On PROTECTED reduce production modifier -> PROTECTED 
-- On PRIVATE reduce production modifier -> PROTECTED 
-- On MODEL reduce production modifier -> PROTECTED 
-- On LONG reduce production modifier -> PROTECTED 
-- On INT reduce production modifier -> PROTECTED 
-- On ID reduce production modifier -> PROTECTED 
-- On FLOAT reduce production modifier -> PROTECTED 
-- On FINAL reduce production modifier -> PROTECTED 
-- On DOUBLE reduce production modifier -> PROTECTED 
-- On CHAR reduce production modifier -> PROTECTED 
-- On BYTE reduce production modifier -> PROTECTED 
-- On BOOLEAN reduce production modifier -> PROTECTED 

State 415:
modifier -> PRIVATE . [ STATIC SHORT PUBLIC PROTECTED PRIVATE MODEL LONG INT ID FLOAT FINAL DOUBLE CHAR BYTE BOOLEAN ]
-- On STATIC reduce production modifier -> PRIVATE 
-- On SHORT reduce production modifier -> PRIVATE 
-- On PUBLIC reduce production modifier -> PRIVATE 
-- On PROTECTED reduce production modifier -> PRIVATE 
-- On PRIVATE reduce production modifier -> PRIVATE 
-- On MODEL reduce production modifier -> PRIVATE 
-- On LONG reduce production modifier -> PRIVATE 
-- On INT reduce production modifier -> PRIVATE 
-- On ID reduce production modifier -> PRIVATE 
-- On FLOAT reduce production modifier -> PRIVATE 
-- On FINAL reduce production modifier -> PRIVATE 
-- On DOUBLE reduce production modifier -> PRIVATE 
-- On CHAR reduce production modifier -> PRIVATE 
-- On BYTE reduce production modifier -> PRIVATE 
-- On BOOLEAN reduce production modifier -> PRIVATE 

State 416:
modifiers -> modifier modifiers . [ SHORT LONG INT ID FLOAT DOUBLE CHAR BYTE BOOLEAN ]
-- On SHORT reduce production modifiers -> modifier modifiers 
-- On LONG reduce production modifiers -> modifier modifiers 
-- On INT reduce production modifiers -> modifier modifiers 
-- On ID reduce production modifiers -> modifier modifiers 
-- On FLOAT reduce production modifiers -> modifier modifiers 
-- On DOUBLE reduce production modifiers -> modifier modifiers 
-- On CHAR reduce production modifiers -> modifier modifiers 
-- On BYTE reduce production modifiers -> modifier modifiers 
-- On BOOLEAN reduce production modifiers -> modifier modifiers 

State 417:
jml_specification -> method_specification . [ EOF ]
-- On EOF reduce production jml_specification -> method_specification 

State 418:
jml_specification -> loop_annotation . [ EOF ]
-- On EOF reduce production jml_specification -> loop_annotation 

State 419:
jml_specification_eof' -> jml_specification_eof . [ # ]
-- On # accept jml_specification_eof

State 420:
jml_specification_eof -> jml_specification . EOF [ # ]
-- On EOF shift to state 421

State 421:
jml_specification_eof -> jml_specification EOF . [ # ]
-- On # reduce production jml_specification_eof -> jml_specification EOF 

State 422:
jml_specification -> jml_declarations . [ EOF ]
-- On EOF reduce production jml_specification -> jml_declarations 

State 423:
jml_declarations -> jml_declaration . jml_declarations [ EOF ]
-- On STATIC shift to state 1
-- On REPRESENTS shift to state 3
-- On PUBLIC shift to state 207
-- On PROTECTED shift to state 208
-- On PRIVATE shift to state 209
-- On MODEL shift to state 210
-- On FINAL shift to state 263
-- On privacy shift to state 424
-- On modifiers shift to state 408
-- On modifier shift to state 412
-- On jml_declarations shift to state 425
-- On jml_declaration shift to state 423
-- On SHORT reduce production modifiers -> 
-- On LONG reduce production modifiers -> 
-- On INVARIANT reduce production privacy -> 
-- On INT reduce production modifiers -> 
-- On ID reduce production modifiers -> 
-- On FLOAT reduce production modifiers -> 
-- On EOF reduce production jml_declarations -> 
-- On DOUBLE reduce production modifiers -> 
-- On CHAR reduce production modifiers -> 
-- On BYTE reduce production modifiers -> 
-- On BOOLEAN reduce production modifiers -> 

State 424:
jml_declaration -> privacy . INVARIANT expr_semicolon [ STATIC SHORT REPRESENTS PUBLIC PROTECTED PRIVATE MODEL LONG INVARIANT INT ID FLOAT FINAL EOF DOUBLE CHAR BYTE BOOLEAN ]
-- On INVARIANT shift to state 405

State 425:
jml_declarations -> jml_declaration jml_declarations . [ EOF ]
-- On EOF reduce production jml_declarations -> jml_declaration jml_declarations 

State 426:
method_specification -> extending_specification . [ EOF ]
-- On EOF reduce production method_specification -> extending_specification 

