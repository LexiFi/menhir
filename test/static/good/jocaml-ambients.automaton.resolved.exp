State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 46
-- On main shift to state 48
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 1:
## Known stack suffix:
## ZERO
## LR(1) items:
proc -> ZERO . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> ZERO

State 2:
## Known stack suffix:
## STRING
## LR(1) items:
capa -> STRING . [ RPOINT DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capa -> STRING

State 3:
## Known stack suffix:
## OUT
## LR(1) items:
capa -> OUT . ident [ RPOINT DOT ]
## Transitions:
-- On IDENT shift to state 4
-- On ident shift to state 5
## Reductions:

State 4:
## Known stack suffix:
## IDENT
## LR(1) items:
ident -> IDENT . [ RPOINT LBRACKET DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> IDENT

State 5:
## Known stack suffix:
## OUT ident
## LR(1) items:
capa -> OUT ident . [ RPOINT DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capa -> OUT ident

State 6:
## Known stack suffix:
## OPEN
## LR(1) items:
capa -> OPEN . ident [ RPOINT DOT ]
## Transitions:
-- On IDENT shift to state 4
-- On ident shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## OPEN ident
## LR(1) items:
capa -> OPEN ident . [ RPOINT DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capa -> OPEN ident

State 8:
## Known stack suffix:
## NEW
## LR(1) items:
proc -> NEW . str DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On IDENT shift to state 9
-- On str shift to state 10
## Reductions:

State 9:
## Known stack suffix:
## IDENT
## LR(1) items:
str -> IDENT . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production str -> IDENT

State 10:
## Known stack suffix:
## NEW str
## LR(1) items:
proc -> NEW str . DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On DOT shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## NEW str DOT
## LR(1) items:
proc -> NEW str DOT . proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 45
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 12:
## Known stack suffix:
## LPOINT
## LR(1) items:
proc -> LPOINT . capa RPOINT [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On ident shift to state 15
-- On capa shift to state 16
## Reductions:

State 13:
## Known stack suffix:
## IN
## LR(1) items:
capa -> IN . ident [ RPOINT DOT ]
## Transitions:
-- On IDENT shift to state 4
-- On ident shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## IN ident
## LR(1) items:
capa -> IN ident . [ RPOINT DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capa -> IN ident

State 15:
## Known stack suffix:
## ident
## LR(1) items:
capa -> ident . [ RPOINT DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capa -> ident

State 16:
## Known stack suffix:
## LPOINT capa
## LR(1) items:
capa -> capa . DOT capa [ RPOINT DOT ]
proc -> LPOINT capa . RPOINT [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On RPOINT shift to state 17
-- On DOT shift to state 18
## Reductions:

State 17:
## Known stack suffix:
## LPOINT capa RPOINT
## LR(1) items:
proc -> LPOINT capa RPOINT . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> LPOINT capa RPOINT

State 18:
## Known stack suffix:
## capa DOT
## LR(1) items:
capa -> capa DOT . capa [ RPOINT DOT ]
## Transitions:
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On ident shift to state 15
-- On capa shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## capa DOT capa
## LR(1) items:
capa -> capa . DOT capa [ RPOINT DOT ]
capa -> capa DOT capa . [ RPOINT DOT ]
## Transitions:
-- On DOT shift to state 18
## Reductions:
-- On RPOINT
--   reduce production capa -> capa DOT capa

State 20:
## Known stack suffix:
## LPAREN
## LR(1) items:
proc -> LPAREN . proc RPAREN [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> LPAREN . str RPAREN DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 21
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On str shift to state 39
-- On proc shift to state 43
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 21:
## Known stack suffix:
## IDENT
## LR(1) items:
ident -> IDENT . [ LBRACKET DOT ]
str -> IDENT . [ RPAREN ]
## Transitions:
## Reductions:
-- On LBRACKET DOT
--   reduce production ident -> IDENT
-- On RPAREN
--   reduce production str -> IDENT

State 22:
## Known stack suffix:
## DOLLAR
## LR(1) items:
proc -> DOLLAR . ident LBRACKET proc RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On IDENT shift to state 4
-- On ident shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## DOLLAR ident
## LR(1) items:
proc -> DOLLAR ident . LBRACKET proc RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On LBRACKET shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## DOLLAR ident LBRACKET
## LR(1) items:
proc -> DOLLAR ident LBRACKET . proc RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 37
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 25:
## Known stack suffix:
## BANG
## LR(1) items:
proc -> BANG . proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 26
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 26:
## Known stack suffix:
## BANG proc
## LR(1) items:
proc -> proc . PAR proc [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> BANG proc . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> BANG proc

State 27:
## Known stack suffix:
## ident
## LR(1) items:
capa -> ident . [ DOT ]
proc -> ident . LBRACKET proc RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On LBRACKET shift to state 28
## Reductions:
-- On DOT
--   reduce production capa -> ident

State 28:
## Known stack suffix:
## ident LBRACKET
## LR(1) items:
proc -> ident LBRACKET . proc RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 29
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 29:
## Known stack suffix:
## ident LBRACKET proc
## LR(1) items:
proc -> proc . PAR proc [ RBRACKET PAR ]
proc -> ident LBRACKET proc . RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On RBRACKET shift to state 30
-- On PAR shift to state 31
## Reductions:

State 30:
## Known stack suffix:
## ident LBRACKET proc RBRACKET
## LR(1) items:
proc -> ident LBRACKET proc RBRACKET . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> ident LBRACKET proc RBRACKET

State 31:
## Known stack suffix:
## proc PAR
## LR(1) items:
proc -> proc PAR . proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 32
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 32:
## Known stack suffix:
## proc PAR proc
## LR(1) items:
proc -> proc . PAR proc [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> proc PAR proc . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On PAR shift to state 31
## Reductions:
-- On SEMISEMI RPAREN RBRACKET
--   reduce production proc -> proc PAR proc

State 33:
## Known stack suffix:
## capa
## LR(1) items:
capa -> capa . DOT capa [ DOT ]
proc -> capa . DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On DOT shift to state 34
## Reductions:

State 34:
## Known stack suffix:
## capa DOT
## LR(1) items:
capa -> capa DOT . capa [ DOT ]
proc -> capa DOT . proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 35
-- On ident shift to state 27
-- On capa shift to state 36
## Reductions:

State 35:
## Known stack suffix:
## capa DOT proc
## LR(1) items:
proc -> proc . PAR proc [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> capa DOT proc . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> capa DOT proc

State 36:
## Known stack suffix:
## capa DOT capa
## LR(1) items:
capa -> capa . DOT capa [ DOT ]
capa -> capa DOT capa . [ DOT ]
proc -> capa . DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On DOT shift to state 34
## Reductions:

State 37:
## Known stack suffix:
## DOLLAR ident LBRACKET proc
## LR(1) items:
proc -> proc . PAR proc [ RBRACKET PAR ]
proc -> DOLLAR ident LBRACKET proc . RBRACKET [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On RBRACKET shift to state 38
-- On PAR shift to state 31
## Reductions:

State 38:
## Known stack suffix:
## DOLLAR ident LBRACKET proc RBRACKET
## LR(1) items:
proc -> DOLLAR ident LBRACKET proc RBRACKET . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> DOLLAR ident LBRACKET proc RBRACKET

State 39:
## Known stack suffix:
## LPAREN str
## LR(1) items:
proc -> LPAREN str . RPAREN DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On RPAREN shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## LPAREN str RPAREN
## LR(1) items:
proc -> LPAREN str RPAREN . DOT proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On DOT shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## LPAREN str RPAREN DOT
## LR(1) items:
proc -> LPAREN str RPAREN DOT . proc [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On ZERO shift to state 1
-- On STRING shift to state 2
-- On OUT shift to state 3
-- On OPEN shift to state 6
-- On NEW shift to state 8
-- On LPOINT shift to state 12
-- On LPAREN shift to state 20
-- On IN shift to state 13
-- On IDENT shift to state 4
-- On DOLLAR shift to state 22
-- On BANG shift to state 25
-- On proc shift to state 42
-- On ident shift to state 27
-- On capa shift to state 33
## Reductions:

State 42:
## Known stack suffix:
## LPAREN str RPAREN DOT proc
## LR(1) items:
proc -> proc . PAR proc [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> LPAREN str RPAREN DOT proc . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> LPAREN str RPAREN DOT proc

State 43:
## Known stack suffix:
## LPAREN proc
## LR(1) items:
proc -> proc . PAR proc [ RPAREN PAR ]
proc -> LPAREN proc . RPAREN [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
-- On RPAREN shift to state 44
-- On PAR shift to state 31
## Reductions:

State 44:
## Known stack suffix:
## LPAREN proc RPAREN
## LR(1) items:
proc -> LPAREN proc RPAREN . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> LPAREN proc RPAREN

State 45:
## Known stack suffix:
## NEW str DOT proc
## LR(1) items:
proc -> proc . PAR proc [ SEMISEMI RPAREN RBRACKET PAR ]
proc -> NEW str DOT proc . [ SEMISEMI RPAREN RBRACKET PAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production proc -> NEW str DOT proc

State 46:
## Known stack suffix:
## proc
## LR(1) items:
main -> proc . SEMISEMI [ # ]
proc -> proc . PAR proc [ SEMISEMI PAR ]
## Transitions:
-- On SEMISEMI shift to state 47
-- On PAR shift to state 31
## Reductions:

State 47:
## Known stack suffix:
## proc SEMISEMI
## LR(1) items:
main -> proc SEMISEMI . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> proc SEMISEMI

State 48:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

