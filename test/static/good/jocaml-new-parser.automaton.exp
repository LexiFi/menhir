State 0:
implementation' -> . implementation [ # ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TYPE shift to state 967
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 1032
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On OPEN shift to state 1033
-- On NEW shift to state 9
-- On MODULE shift to state 1035
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 1492
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1506
-- On CLASS shift to state 1508
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On structure_tail shift to state 1523
-- On structure_item shift to state 1519
-- On structure shift to state 1524
-- On simple_expr shift to state 640
-- On seq_expr shift to state 1526
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On implementation shift to state 1528
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On EOF reduce production structure_tail -> 

State 1:
expr -> WHILE . seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE . seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 962
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 2:
mod_longident -> UIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production mod_longident -> UIDENT
-- On WHILE reduce production mod_longident -> UIDENT
-- On WHEN reduce production mod_longident -> UIDENT
-- On VAL reduce production mod_longident -> UIDENT
-- On UNDERSCORE reduce production mod_longident -> UIDENT
-- On UIDENT reduce production mod_longident -> UIDENT
-- On TYPE reduce production mod_longident -> UIDENT
-- On TRY reduce production mod_longident -> UIDENT
-- On TRUE reduce production mod_longident -> UIDENT
-- On TO reduce production mod_longident -> UIDENT
-- On THEN reduce production mod_longident -> UIDENT
-- On SUBTRACTIVE reduce production mod_longident -> UIDENT
-- On STRING reduce production mod_longident -> UIDENT
-- On STAR reduce production mod_longident -> UIDENT
-- On SHARP reduce production mod_longident -> UIDENT
-- On SEMISEMI reduce production mod_longident -> UIDENT
-- On SEMI reduce production mod_longident -> UIDENT
-- On RPAREN reduce production mod_longident -> UIDENT
-- On PREFIXOP reduce production mod_longident -> UIDENT
-- On PARSER reduce production mod_longident -> UIDENT
-- On OR reduce production mod_longident -> UIDENT
-- On OPEN reduce production mod_longident -> UIDENT
-- On NEW reduce production mod_longident -> UIDENT
-- On MODULE reduce production mod_longident -> UIDENT
-- On MINUSGREATER reduce production mod_longident -> UIDENT
-- On MATCH reduce production mod_longident -> UIDENT
-- On LPAREN reduce production mod_longident -> UIDENT
-- On LOC reduce production mod_longident -> UIDENT
-- On LIDENT reduce production mod_longident -> UIDENT
-- On LET reduce production mod_longident -> UIDENT
-- On LESSLESSGREATERGREATER reduce production mod_longident -> UIDENT
-- On LESSLESS reduce production mod_longident -> UIDENT
-- On LESSGREATER reduce production mod_longident -> UIDENT
-- On LESS reduce production mod_longident -> UIDENT
-- On LBRACKETLESS reduce production mod_longident -> UIDENT
-- On LBRACKETBAR reduce production mod_longident -> UIDENT
-- On LBRACKET reduce production mod_longident -> UIDENT
-- On LBRACELESS reduce production mod_longident -> UIDENT
-- On LBRACEBAR reduce production mod_longident -> UIDENT
-- On LBRACE reduce production mod_longident -> UIDENT
-- On LAZY reduce production mod_longident -> UIDENT
-- On INT reduce production mod_longident -> UIDENT
-- On INFIXOP4 reduce production mod_longident -> UIDENT
-- On INFIXOP3 reduce production mod_longident -> UIDENT
-- On INFIXOP2 reduce production mod_longident -> UIDENT
-- On INFIXOP1 reduce production mod_longident -> UIDENT
-- On INFIXOP0 reduce production mod_longident -> UIDENT
-- On INCLUDE reduce production mod_longident -> UIDENT
-- On IN reduce production mod_longident -> UIDENT
-- On IF reduce production mod_longident -> UIDENT
-- On GREATERGREATER reduce production mod_longident -> UIDENT
-- On GREATER reduce production mod_longident -> UIDENT
-- On FUNCTION reduce production mod_longident -> UIDENT
-- On FUN reduce production mod_longident -> UIDENT
-- On FOR reduce production mod_longident -> UIDENT
-- On FLOAT reduce production mod_longident -> UIDENT
-- On FALSE reduce production mod_longident -> UIDENT
-- On EXTERNAL reduce production mod_longident -> UIDENT
-- On EXCEPTION reduce production mod_longident -> UIDENT
-- On EQUAL reduce production mod_longident -> UIDENT
-- On EOF reduce production mod_longident -> UIDENT
-- On END reduce production mod_longident -> UIDENT
-- On ELSE reduce production mod_longident -> UIDENT
-- On DOWNTO reduce production mod_longident -> UIDENT
-- On DOT reduce production mod_longident -> UIDENT
-- On DO reduce production mod_longident -> UIDENT
-- On DEF reduce production mod_longident -> UIDENT
-- On COMMA reduce production mod_longident -> UIDENT
-- On COLONGREATER reduce production mod_longident -> UIDENT
-- On COLONEQUAL reduce production mod_longident -> UIDENT
-- On COLONCOLON reduce production mod_longident -> UIDENT
-- On COLON reduce production mod_longident -> UIDENT
-- On CLASS reduce production mod_longident -> UIDENT
-- On CHAR reduce production mod_longident -> UIDENT
-- On BEGIN reduce production mod_longident -> UIDENT
-- On BARRBRACE reduce production mod_longident -> UIDENT
-- On BARBAR reduce production mod_longident -> UIDENT
-- On BAR reduce production mod_longident -> UIDENT
-- On ASSERT reduce production mod_longident -> UIDENT
-- On AS reduce production mod_longident -> UIDENT
-- On AND reduce production mod_longident -> UIDENT
-- On AMPERSAND reduce production mod_longident -> UIDENT
-- On AMPERAMPER reduce production mod_longident -> UIDENT

State 3:
expr -> TRY . seq_expr WITH opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 956
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 4:
expr -> WHILE . seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE . seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 951
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 5:
constr_longident -> TRUE . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constr_longident -> TRUE
-- On WHILE reduce production constr_longident -> TRUE
-- On WHEN reduce production constr_longident -> TRUE
-- On UNDERSCORE reduce production constr_longident -> TRUE
-- On UIDENT reduce production constr_longident -> TRUE
-- On TYPE reduce production constr_longident -> TRUE
-- On TRY reduce production constr_longident -> TRUE
-- On TRUE reduce production constr_longident -> TRUE
-- On TO reduce production constr_longident -> TRUE
-- On THEN reduce production constr_longident -> TRUE
-- On SUBTRACTIVE reduce production constr_longident -> TRUE
-- On STRING reduce production constr_longident -> TRUE
-- On STAR reduce production constr_longident -> TRUE
-- On SHARP reduce production constr_longident -> TRUE
-- On SEMISEMI reduce production constr_longident -> TRUE
-- On SEMI reduce production constr_longident -> TRUE
-- On RPAREN reduce production constr_longident -> TRUE
-- On PREFIXOP reduce production constr_longident -> TRUE
-- On PARSER reduce production constr_longident -> TRUE
-- On OR reduce production constr_longident -> TRUE
-- On OPEN reduce production constr_longident -> TRUE
-- On NEW reduce production constr_longident -> TRUE
-- On MODULE reduce production constr_longident -> TRUE
-- On MINUSGREATER reduce production constr_longident -> TRUE
-- On MATCH reduce production constr_longident -> TRUE
-- On LPAREN reduce production constr_longident -> TRUE
-- On LOC reduce production constr_longident -> TRUE
-- On LIDENT reduce production constr_longident -> TRUE
-- On LET reduce production constr_longident -> TRUE
-- On LESSLESSGREATERGREATER reduce production constr_longident -> TRUE
-- On LESSLESS reduce production constr_longident -> TRUE
-- On LESSGREATER reduce production constr_longident -> TRUE
-- On LESS reduce production constr_longident -> TRUE
-- On LBRACKETLESS reduce production constr_longident -> TRUE
-- On LBRACKETBAR reduce production constr_longident -> TRUE
-- On LBRACKET reduce production constr_longident -> TRUE
-- On LBRACELESS reduce production constr_longident -> TRUE
-- On LBRACEBAR reduce production constr_longident -> TRUE
-- On LBRACE reduce production constr_longident -> TRUE
-- On LAZY reduce production constr_longident -> TRUE
-- On INT reduce production constr_longident -> TRUE
-- On INFIXOP4 reduce production constr_longident -> TRUE
-- On INFIXOP3 reduce production constr_longident -> TRUE
-- On INFIXOP2 reduce production constr_longident -> TRUE
-- On INFIXOP1 reduce production constr_longident -> TRUE
-- On INFIXOP0 reduce production constr_longident -> TRUE
-- On IN reduce production constr_longident -> TRUE
-- On IF reduce production constr_longident -> TRUE
-- On GREATERGREATER reduce production constr_longident -> TRUE
-- On GREATER reduce production constr_longident -> TRUE
-- On FUNCTION reduce production constr_longident -> TRUE
-- On FUN reduce production constr_longident -> TRUE
-- On FOR reduce production constr_longident -> TRUE
-- On FLOAT reduce production constr_longident -> TRUE
-- On FALSE reduce production constr_longident -> TRUE
-- On EXTERNAL reduce production constr_longident -> TRUE
-- On EXCEPTION reduce production constr_longident -> TRUE
-- On EQUAL reduce production constr_longident -> TRUE
-- On EOF reduce production constr_longident -> TRUE
-- On END reduce production constr_longident -> TRUE
-- On ELSE reduce production constr_longident -> TRUE
-- On DOWNTO reduce production constr_longident -> TRUE
-- On DOT reduce production constr_longident -> TRUE
-- On DO reduce production constr_longident -> TRUE
-- On DEF reduce production constr_longident -> TRUE
-- On COMMA reduce production constr_longident -> TRUE
-- On COLONGREATER reduce production constr_longident -> TRUE
-- On COLONEQUAL reduce production constr_longident -> TRUE
-- On COLONCOLON reduce production constr_longident -> TRUE
-- On COLON reduce production constr_longident -> TRUE
-- On CLASS reduce production constr_longident -> TRUE
-- On CHAR reduce production constr_longident -> TRUE
-- On BEGIN reduce production constr_longident -> TRUE
-- On BARRBRACE reduce production constr_longident -> TRUE
-- On BARBAR reduce production constr_longident -> TRUE
-- On BAR reduce production constr_longident -> TRUE
-- On ASSERT reduce production constr_longident -> TRUE
-- On AS reduce production constr_longident -> TRUE
-- On AND reduce production constr_longident -> TRUE
-- On AMPERSAND reduce production constr_longident -> TRUE
-- On AMPERAMPER reduce production constr_longident -> TRUE

State 6:
expr -> SUBTRACTIVE . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 950
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 7:
constant -> STRING . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constant -> STRING
-- On WHILE reduce production constant -> STRING
-- On WHEN reduce production constant -> STRING
-- On UNDERSCORE reduce production constant -> STRING
-- On UIDENT reduce production constant -> STRING
-- On TYPE reduce production constant -> STRING
-- On TRY reduce production constant -> STRING
-- On TRUE reduce production constant -> STRING
-- On TO reduce production constant -> STRING
-- On THEN reduce production constant -> STRING
-- On SUBTRACTIVE reduce production constant -> STRING
-- On STRING reduce production constant -> STRING
-- On STAR reduce production constant -> STRING
-- On SHARP reduce production constant -> STRING
-- On SEMISEMI reduce production constant -> STRING
-- On SEMI reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On PREFIXOP reduce production constant -> STRING
-- On PARSER reduce production constant -> STRING
-- On OR reduce production constant -> STRING
-- On OPEN reduce production constant -> STRING
-- On NEW reduce production constant -> STRING
-- On MODULE reduce production constant -> STRING
-- On MINUSGREATER reduce production constant -> STRING
-- On MATCH reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On LOC reduce production constant -> STRING
-- On LIDENT reduce production constant -> STRING
-- On LET reduce production constant -> STRING
-- On LESSLESSGREATERGREATER reduce production constant -> STRING
-- On LESSLESS reduce production constant -> STRING
-- On LESSGREATER reduce production constant -> STRING
-- On LESS reduce production constant -> STRING
-- On LBRACKETLESS reduce production constant -> STRING
-- On LBRACKETBAR reduce production constant -> STRING
-- On LBRACKET reduce production constant -> STRING
-- On LBRACELESS reduce production constant -> STRING
-- On LBRACEBAR reduce production constant -> STRING
-- On LBRACE reduce production constant -> STRING
-- On LAZY reduce production constant -> STRING
-- On INT reduce production constant -> STRING
-- On INFIXOP4 reduce production constant -> STRING
-- On INFIXOP3 reduce production constant -> STRING
-- On INFIXOP2 reduce production constant -> STRING
-- On INFIXOP1 reduce production constant -> STRING
-- On INFIXOP0 reduce production constant -> STRING
-- On IN reduce production constant -> STRING
-- On IF reduce production constant -> STRING
-- On GREATERGREATER reduce production constant -> STRING
-- On GREATER reduce production constant -> STRING
-- On FUNCTION reduce production constant -> STRING
-- On FUN reduce production constant -> STRING
-- On FOR reduce production constant -> STRING
-- On FLOAT reduce production constant -> STRING
-- On FALSE reduce production constant -> STRING
-- On EXTERNAL reduce production constant -> STRING
-- On EXCEPTION reduce production constant -> STRING
-- On EQUAL reduce production constant -> STRING
-- On EOF reduce production constant -> STRING
-- On END reduce production constant -> STRING
-- On ELSE reduce production constant -> STRING
-- On DOWNTO reduce production constant -> STRING
-- On DOT reduce production constant -> STRING
-- On DO reduce production constant -> STRING
-- On DEF reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONGREATER reduce production constant -> STRING
-- On COLONEQUAL reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On CLASS reduce production constant -> STRING
-- On CHAR reduce production constant -> STRING
-- On BEGIN reduce production constant -> STRING
-- On BARRBRACE reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On BAR reduce production constant -> STRING
-- On ASSERT reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AND reduce production constant -> STRING
-- On AMPERSAND reduce production constant -> STRING
-- On AMPERAMPER reduce production constant -> STRING

State 8:
simple_expr -> PREFIXOP . simple_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 949
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623

State 9:
simple_expr -> NEW . class_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 15

State 10:
class_longident -> LIDENT . [ WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END ELSE DOWNTO DOT DO DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production class_longident -> LIDENT
-- On WHILE reduce production class_longident -> LIDENT
-- On VIRTUAL reduce production class_longident -> LIDENT
-- On VAL reduce production class_longident -> LIDENT
-- On UIDENT reduce production class_longident -> LIDENT
-- On TYPE reduce production class_longident -> LIDENT
-- On TRY reduce production class_longident -> LIDENT
-- On TRUE reduce production class_longident -> LIDENT
-- On TO reduce production class_longident -> LIDENT
-- On THEN reduce production class_longident -> LIDENT
-- On SUBTRACTIVE reduce production class_longident -> LIDENT
-- On STRING reduce production class_longident -> LIDENT
-- On STAR reduce production class_longident -> LIDENT
-- On SHARP reduce production class_longident -> LIDENT
-- On SEMISEMI reduce production class_longident -> LIDENT
-- On SEMI reduce production class_longident -> LIDENT
-- On RPAREN reduce production class_longident -> LIDENT
-- On RBRACE reduce production class_longident -> LIDENT
-- On PREFIXOP reduce production class_longident -> LIDENT
-- On PARSER reduce production class_longident -> LIDENT
-- On OR reduce production class_longident -> LIDENT
-- On OPEN reduce production class_longident -> LIDENT
-- On NEW reduce production class_longident -> LIDENT
-- On MODULE reduce production class_longident -> LIDENT
-- On MINUSGREATER reduce production class_longident -> LIDENT
-- On METHOD reduce production class_longident -> LIDENT
-- On MATCH reduce production class_longident -> LIDENT
-- On LPAREN reduce production class_longident -> LIDENT
-- On LOC reduce production class_longident -> LIDENT
-- On LIDENT reduce production class_longident -> LIDENT
-- On LET reduce production class_longident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production class_longident -> LIDENT
-- On LESSLESS reduce production class_longident -> LIDENT
-- On LESSGREATER reduce production class_longident -> LIDENT
-- On LESS reduce production class_longident -> LIDENT
-- On LBRACKETLESS reduce production class_longident -> LIDENT
-- On LBRACKETBAR reduce production class_longident -> LIDENT
-- On LBRACKET reduce production class_longident -> LIDENT
-- On LBRACELESS reduce production class_longident -> LIDENT
-- On LBRACEBAR reduce production class_longident -> LIDENT
-- On LBRACE reduce production class_longident -> LIDENT
-- On LAZY reduce production class_longident -> LIDENT
-- On INT reduce production class_longident -> LIDENT
-- On INHERIT reduce production class_longident -> LIDENT
-- On INFIXOP4 reduce production class_longident -> LIDENT
-- On INFIXOP3 reduce production class_longident -> LIDENT
-- On INFIXOP2 reduce production class_longident -> LIDENT
-- On INFIXOP1 reduce production class_longident -> LIDENT
-- On INFIXOP0 reduce production class_longident -> LIDENT
-- On INCLUDE reduce production class_longident -> LIDENT
-- On IN reduce production class_longident -> LIDENT
-- On IF reduce production class_longident -> LIDENT
-- On GREATERGREATER reduce production class_longident -> LIDENT
-- On GREATER reduce production class_longident -> LIDENT
-- On FUNCTION reduce production class_longident -> LIDENT
-- On FUN reduce production class_longident -> LIDENT
-- On FOR reduce production class_longident -> LIDENT
-- On FLOAT reduce production class_longident -> LIDENT
-- On FALSE reduce production class_longident -> LIDENT
-- On EXTERNAL reduce production class_longident -> LIDENT
-- On EXCEPTION reduce production class_longident -> LIDENT
-- On EQUALGREATER reduce production class_longident -> LIDENT
-- On EQUAL reduce production class_longident -> LIDENT
-- On EOF reduce production class_longident -> LIDENT
-- On END reduce production class_longident -> LIDENT
-- On ELSE reduce production class_longident -> LIDENT
-- On DOWNTO reduce production class_longident -> LIDENT
-- On DOT reduce production class_longident -> LIDENT
-- On DO reduce production class_longident -> LIDENT
-- On DEF reduce production class_longident -> LIDENT
-- On CONSTRAINT reduce production class_longident -> LIDENT
-- On COMMA reduce production class_longident -> LIDENT
-- On COLONGREATER reduce production class_longident -> LIDENT
-- On COLONEQUAL reduce production class_longident -> LIDENT
-- On COLONCOLON reduce production class_longident -> LIDENT
-- On CLASS reduce production class_longident -> LIDENT
-- On CHAR reduce production class_longident -> LIDENT
-- On BEGIN reduce production class_longident -> LIDENT
-- On BARBAR reduce production class_longident -> LIDENT
-- On BAR reduce production class_longident -> LIDENT
-- On ASSERT reduce production class_longident -> LIDENT
-- On AS reduce production class_longident -> LIDENT
-- On AND reduce production class_longident -> LIDENT
-- On AMPERSAND reduce production class_longident -> LIDENT
-- On AMPERAMPER reduce production class_longident -> LIDENT

State 11:
class_longident -> mod_longident . DOT LIDENT [ WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END ELSE DOWNTO DOT DO DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
-- On DOT shift to state 12

State 12:
class_longident -> mod_longident DOT . LIDENT [ WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END ELSE DOWNTO DOT DO DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
-- On UIDENT shift to state 13
-- On LIDENT shift to state 14

State 13:
mod_longident -> mod_longident DOT UIDENT . [ WITH WHILE WHEN VAL UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production mod_longident -> mod_longident DOT UIDENT
-- On WHILE reduce production mod_longident -> mod_longident DOT UIDENT
-- On WHEN reduce production mod_longident -> mod_longident DOT UIDENT
-- On VAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On UNDERSCORE reduce production mod_longident -> mod_longident DOT UIDENT
-- On UIDENT reduce production mod_longident -> mod_longident DOT UIDENT
-- On TYPE reduce production mod_longident -> mod_longident DOT UIDENT
-- On TRY reduce production mod_longident -> mod_longident DOT UIDENT
-- On TRUE reduce production mod_longident -> mod_longident DOT UIDENT
-- On TO reduce production mod_longident -> mod_longident DOT UIDENT
-- On THEN reduce production mod_longident -> mod_longident DOT UIDENT
-- On SUBTRACTIVE reduce production mod_longident -> mod_longident DOT UIDENT
-- On STRING reduce production mod_longident -> mod_longident DOT UIDENT
-- On STAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On SHARP reduce production mod_longident -> mod_longident DOT UIDENT
-- On SEMISEMI reduce production mod_longident -> mod_longident DOT UIDENT
-- On SEMI reduce production mod_longident -> mod_longident DOT UIDENT
-- On RPAREN reduce production mod_longident -> mod_longident DOT UIDENT
-- On PREFIXOP reduce production mod_longident -> mod_longident DOT UIDENT
-- On PARSER reduce production mod_longident -> mod_longident DOT UIDENT
-- On OR reduce production mod_longident -> mod_longident DOT UIDENT
-- On OPEN reduce production mod_longident -> mod_longident DOT UIDENT
-- On NEW reduce production mod_longident -> mod_longident DOT UIDENT
-- On MODULE reduce production mod_longident -> mod_longident DOT UIDENT
-- On MINUSGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On MATCH reduce production mod_longident -> mod_longident DOT UIDENT
-- On LPAREN reduce production mod_longident -> mod_longident DOT UIDENT
-- On LOC reduce production mod_longident -> mod_longident DOT UIDENT
-- On LIDENT reduce production mod_longident -> mod_longident DOT UIDENT
-- On LET reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSLESSGREATERGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSLESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKETLESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKETBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKET reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACELESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACEBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACE reduce production mod_longident -> mod_longident DOT UIDENT
-- On LAZY reduce production mod_longident -> mod_longident DOT UIDENT
-- On INT reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP4 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP3 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP2 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP1 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP0 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INCLUDE reduce production mod_longident -> mod_longident DOT UIDENT
-- On IN reduce production mod_longident -> mod_longident DOT UIDENT
-- On IF reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATERGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On FUNCTION reduce production mod_longident -> mod_longident DOT UIDENT
-- On FUN reduce production mod_longident -> mod_longident DOT UIDENT
-- On FOR reduce production mod_longident -> mod_longident DOT UIDENT
-- On FLOAT reduce production mod_longident -> mod_longident DOT UIDENT
-- On FALSE reduce production mod_longident -> mod_longident DOT UIDENT
-- On EXTERNAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On EXCEPTION reduce production mod_longident -> mod_longident DOT UIDENT
-- On EQUAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On EOF reduce production mod_longident -> mod_longident DOT UIDENT
-- On END reduce production mod_longident -> mod_longident DOT UIDENT
-- On ELSE reduce production mod_longident -> mod_longident DOT UIDENT
-- On DOWNTO reduce production mod_longident -> mod_longident DOT UIDENT
-- On DOT reduce production mod_longident -> mod_longident DOT UIDENT
-- On DO reduce production mod_longident -> mod_longident DOT UIDENT
-- On DEF reduce production mod_longident -> mod_longident DOT UIDENT
-- On COMMA reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONEQUAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONCOLON reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLON reduce production mod_longident -> mod_longident DOT UIDENT
-- On CLASS reduce production mod_longident -> mod_longident DOT UIDENT
-- On CHAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On BEGIN reduce production mod_longident -> mod_longident DOT UIDENT
-- On BARRBRACE reduce production mod_longident -> mod_longident DOT UIDENT
-- On BARBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On BAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On ASSERT reduce production mod_longident -> mod_longident DOT UIDENT
-- On AS reduce production mod_longident -> mod_longident DOT UIDENT
-- On AND reduce production mod_longident -> mod_longident DOT UIDENT
-- On AMPERSAND reduce production mod_longident -> mod_longident DOT UIDENT
-- On AMPERAMPER reduce production mod_longident -> mod_longident DOT UIDENT

State 14:
class_longident -> mod_longident DOT LIDENT . [ WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END ELSE DOWNTO DOT DO DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production class_longident -> mod_longident DOT LIDENT
-- On WHILE reduce production class_longident -> mod_longident DOT LIDENT
-- On VIRTUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On VAL reduce production class_longident -> mod_longident DOT LIDENT
-- On UIDENT reduce production class_longident -> mod_longident DOT LIDENT
-- On TYPE reduce production class_longident -> mod_longident DOT LIDENT
-- On TRY reduce production class_longident -> mod_longident DOT LIDENT
-- On TRUE reduce production class_longident -> mod_longident DOT LIDENT
-- On TO reduce production class_longident -> mod_longident DOT LIDENT
-- On THEN reduce production class_longident -> mod_longident DOT LIDENT
-- On SUBTRACTIVE reduce production class_longident -> mod_longident DOT LIDENT
-- On STRING reduce production class_longident -> mod_longident DOT LIDENT
-- On STAR reduce production class_longident -> mod_longident DOT LIDENT
-- On SHARP reduce production class_longident -> mod_longident DOT LIDENT
-- On SEMISEMI reduce production class_longident -> mod_longident DOT LIDENT
-- On SEMI reduce production class_longident -> mod_longident DOT LIDENT
-- On RPAREN reduce production class_longident -> mod_longident DOT LIDENT
-- On RBRACE reduce production class_longident -> mod_longident DOT LIDENT
-- On PREFIXOP reduce production class_longident -> mod_longident DOT LIDENT
-- On PARSER reduce production class_longident -> mod_longident DOT LIDENT
-- On OR reduce production class_longident -> mod_longident DOT LIDENT
-- On OPEN reduce production class_longident -> mod_longident DOT LIDENT
-- On NEW reduce production class_longident -> mod_longident DOT LIDENT
-- On MODULE reduce production class_longident -> mod_longident DOT LIDENT
-- On MINUSGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On METHOD reduce production class_longident -> mod_longident DOT LIDENT
-- On MATCH reduce production class_longident -> mod_longident DOT LIDENT
-- On LPAREN reduce production class_longident -> mod_longident DOT LIDENT
-- On LOC reduce production class_longident -> mod_longident DOT LIDENT
-- On LIDENT reduce production class_longident -> mod_longident DOT LIDENT
-- On LET reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSLESSGREATERGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSLESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On LESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKETLESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKETBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKET reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACELESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACEBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACE reduce production class_longident -> mod_longident DOT LIDENT
-- On LAZY reduce production class_longident -> mod_longident DOT LIDENT
-- On INT reduce production class_longident -> mod_longident DOT LIDENT
-- On INHERIT reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP4 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP3 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP2 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP1 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP0 reduce production class_longident -> mod_longident DOT LIDENT
-- On INCLUDE reduce production class_longident -> mod_longident DOT LIDENT
-- On IN reduce production class_longident -> mod_longident DOT LIDENT
-- On IF reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATERGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On FUNCTION reduce production class_longident -> mod_longident DOT LIDENT
-- On FUN reduce production class_longident -> mod_longident DOT LIDENT
-- On FOR reduce production class_longident -> mod_longident DOT LIDENT
-- On FLOAT reduce production class_longident -> mod_longident DOT LIDENT
-- On FALSE reduce production class_longident -> mod_longident DOT LIDENT
-- On EXTERNAL reduce production class_longident -> mod_longident DOT LIDENT
-- On EXCEPTION reduce production class_longident -> mod_longident DOT LIDENT
-- On EQUALGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On EQUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On EOF reduce production class_longident -> mod_longident DOT LIDENT
-- On END reduce production class_longident -> mod_longident DOT LIDENT
-- On ELSE reduce production class_longident -> mod_longident DOT LIDENT
-- On DOWNTO reduce production class_longident -> mod_longident DOT LIDENT
-- On DOT reduce production class_longident -> mod_longident DOT LIDENT
-- On DO reduce production class_longident -> mod_longident DOT LIDENT
-- On DEF reduce production class_longident -> mod_longident DOT LIDENT
-- On CONSTRAINT reduce production class_longident -> mod_longident DOT LIDENT
-- On COMMA reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONEQUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONCOLON reduce production class_longident -> mod_longident DOT LIDENT
-- On CLASS reduce production class_longident -> mod_longident DOT LIDENT
-- On CHAR reduce production class_longident -> mod_longident DOT LIDENT
-- On BEGIN reduce production class_longident -> mod_longident DOT LIDENT
-- On BARBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On BAR reduce production class_longident -> mod_longident DOT LIDENT
-- On ASSERT reduce production class_longident -> mod_longident DOT LIDENT
-- On AS reduce production class_longident -> mod_longident DOT LIDENT
-- On AND reduce production class_longident -> mod_longident DOT LIDENT
-- On AMPERSAND reduce production class_longident -> mod_longident DOT LIDENT
-- On AMPERAMPER reduce production class_longident -> mod_longident DOT LIDENT

State 15:
simple_expr -> NEW class_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> NEW class_longident
-- On WHILE reduce production simple_expr -> NEW class_longident
-- On UIDENT reduce production simple_expr -> NEW class_longident
-- On TYPE reduce production simple_expr -> NEW class_longident
-- On TRY reduce production simple_expr -> NEW class_longident
-- On TRUE reduce production simple_expr -> NEW class_longident
-- On TO reduce production simple_expr -> NEW class_longident
-- On THEN reduce production simple_expr -> NEW class_longident
-- On SUBTRACTIVE reduce production simple_expr -> NEW class_longident
-- On STRING reduce production simple_expr -> NEW class_longident
-- On STAR reduce production simple_expr -> NEW class_longident
-- On SHARP reduce production simple_expr -> NEW class_longident
-- On SEMISEMI reduce production simple_expr -> NEW class_longident
-- On SEMI reduce production simple_expr -> NEW class_longident
-- On PREFIXOP reduce production simple_expr -> NEW class_longident
-- On PARSER reduce production simple_expr -> NEW class_longident
-- On OR reduce production simple_expr -> NEW class_longident
-- On OPEN reduce production simple_expr -> NEW class_longident
-- On NEW reduce production simple_expr -> NEW class_longident
-- On MODULE reduce production simple_expr -> NEW class_longident
-- On MINUSGREATER reduce production simple_expr -> NEW class_longident
-- On MATCH reduce production simple_expr -> NEW class_longident
-- On LPAREN reduce production simple_expr -> NEW class_longident
-- On LOC reduce production simple_expr -> NEW class_longident
-- On LIDENT reduce production simple_expr -> NEW class_longident
-- On LET reduce production simple_expr -> NEW class_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> NEW class_longident
-- On LESSLESS reduce production simple_expr -> NEW class_longident
-- On LESSGREATER reduce production simple_expr -> NEW class_longident
-- On LESS reduce production simple_expr -> NEW class_longident
-- On LBRACKETLESS reduce production simple_expr -> NEW class_longident
-- On LBRACKETBAR reduce production simple_expr -> NEW class_longident
-- On LBRACKET reduce production simple_expr -> NEW class_longident
-- On LBRACELESS reduce production simple_expr -> NEW class_longident
-- On LBRACEBAR reduce production simple_expr -> NEW class_longident
-- On LBRACE reduce production simple_expr -> NEW class_longident
-- On LAZY reduce production simple_expr -> NEW class_longident
-- On INT reduce production simple_expr -> NEW class_longident
-- On INFIXOP4 reduce production simple_expr -> NEW class_longident
-- On INFIXOP3 reduce production simple_expr -> NEW class_longident
-- On INFIXOP2 reduce production simple_expr -> NEW class_longident
-- On INFIXOP1 reduce production simple_expr -> NEW class_longident
-- On INFIXOP0 reduce production simple_expr -> NEW class_longident
-- On IN reduce production simple_expr -> NEW class_longident
-- On IF reduce production simple_expr -> NEW class_longident
-- On GREATER reduce production simple_expr -> NEW class_longident
-- On FUNCTION reduce production simple_expr -> NEW class_longident
-- On FUN reduce production simple_expr -> NEW class_longident
-- On FOR reduce production simple_expr -> NEW class_longident
-- On FLOAT reduce production simple_expr -> NEW class_longident
-- On FALSE reduce production simple_expr -> NEW class_longident
-- On EXTERNAL reduce production simple_expr -> NEW class_longident
-- On EXCEPTION reduce production simple_expr -> NEW class_longident
-- On EQUAL reduce production simple_expr -> NEW class_longident
-- On EOF reduce production simple_expr -> NEW class_longident
-- On END reduce production simple_expr -> NEW class_longident
-- On ELSE reduce production simple_expr -> NEW class_longident
-- On DOWNTO reduce production simple_expr -> NEW class_longident
-- On DOT reduce production simple_expr -> NEW class_longident
-- On DO reduce production simple_expr -> NEW class_longident
-- On DEF reduce production simple_expr -> NEW class_longident
-- On COMMA reduce production simple_expr -> NEW class_longident
-- On COLONEQUAL reduce production simple_expr -> NEW class_longident
-- On COLONCOLON reduce production simple_expr -> NEW class_longident
-- On CLASS reduce production simple_expr -> NEW class_longident
-- On CHAR reduce production simple_expr -> NEW class_longident
-- On BEGIN reduce production simple_expr -> NEW class_longident
-- On BARBAR reduce production simple_expr -> NEW class_longident
-- On BAR reduce production simple_expr -> NEW class_longident
-- On ASSERT reduce production simple_expr -> NEW class_longident
-- On AND reduce production simple_expr -> NEW class_longident
-- On AMPERSAND reduce production simple_expr -> NEW class_longident
-- On AMPERAMPER reduce production simple_expr -> NEW class_longident

State 16:
constr_longident -> LPAREN . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . SHARP label RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 30
-- On STRING shift to state 21
-- On STAR shift to state 41
-- On SHARP shift to state 941
-- On RPAREN shift to state 42
-- On PREFIXOP shift to state 488
-- On PARSER shift to state 31
-- On OR shift to state 44
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On IF shift to state 417
-- On GREATER shift to state 95
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EQUAL shift to state 96
-- On DEF shift to state 448
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On BARBAR shift to state 98
-- On ASSERT shift to state 473
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 944
-- On operator shift to state 244
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 17:
mod_longident -> UIDENT . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production mod_longident -> UIDENT
-- On WITH reduce production mod_longident -> UIDENT
-- On WHILE reduce production mod_longident -> UIDENT
-- On WHEN reduce production mod_longident -> UIDENT
-- On VIRTUAL reduce production mod_longident -> UIDENT
-- On VAL reduce production mod_longident -> UIDENT
-- On UNDERSCORE reduce production mod_longident -> UIDENT
-- On UIDENT reduce production mod_longident -> UIDENT
-- On TYPE reduce production mod_longident -> UIDENT
-- On TRY reduce production mod_longident -> UIDENT
-- On TRUE reduce production mod_longident -> UIDENT
-- On TO reduce production mod_longident -> UIDENT
-- On SUBTRACTIVE reduce production mod_longident -> UIDENT
-- On STRING reduce production mod_longident -> UIDENT
-- On STAR reduce production mod_longident -> UIDENT
-- On SHARP reduce production mod_longident -> UIDENT
-- On SEMISEMI reduce production mod_longident -> UIDENT
-- On SEMI reduce production mod_longident -> UIDENT
-- On RPAREN reduce production mod_longident -> UIDENT
-- On RBRACKET reduce production mod_longident -> UIDENT
-- On RBRACE reduce production mod_longident -> UIDENT
-- On QUESTION reduce production mod_longident -> UIDENT
-- On PREFIXOP reduce production mod_longident -> UIDENT
-- On PARSER reduce production mod_longident -> UIDENT
-- On OR reduce production mod_longident -> UIDENT
-- On OPEN reduce production mod_longident -> UIDENT
-- On NEW reduce production mod_longident -> UIDENT
-- On MODULE reduce production mod_longident -> UIDENT
-- On METHOD reduce production mod_longident -> UIDENT
-- On MATCH reduce production mod_longident -> UIDENT
-- On LPAREN reduce production mod_longident -> UIDENT
-- On LOC reduce production mod_longident -> UIDENT
-- On LIDENT reduce production mod_longident -> UIDENT
-- On LET reduce production mod_longident -> UIDENT
-- On LESSLESSGREATERGREATER reduce production mod_longident -> UIDENT
-- On LESSLESS reduce production mod_longident -> UIDENT
-- On LESSGREATER reduce production mod_longident -> UIDENT
-- On LESS reduce production mod_longident -> UIDENT
-- On LBRACKETLESS reduce production mod_longident -> UIDENT
-- On LBRACKETBAR reduce production mod_longident -> UIDENT
-- On LBRACKET reduce production mod_longident -> UIDENT
-- On LBRACELESS reduce production mod_longident -> UIDENT
-- On LBRACEBAR reduce production mod_longident -> UIDENT
-- On LBRACE reduce production mod_longident -> UIDENT
-- On LAZY reduce production mod_longident -> UIDENT
-- On INT reduce production mod_longident -> UIDENT
-- On INHERIT reduce production mod_longident -> UIDENT
-- On INFIXOP4 reduce production mod_longident -> UIDENT
-- On INFIXOP3 reduce production mod_longident -> UIDENT
-- On INFIXOP2 reduce production mod_longident -> UIDENT
-- On INFIXOP1 reduce production mod_longident -> UIDENT
-- On INFIXOP0 reduce production mod_longident -> UIDENT
-- On INCLUDE reduce production mod_longident -> UIDENT
-- On IN reduce production mod_longident -> UIDENT
-- On IF reduce production mod_longident -> UIDENT
-- On GREATERRBRACKET reduce production mod_longident -> UIDENT
-- On GREATERRBRACE reduce production mod_longident -> UIDENT
-- On GREATERGREATER reduce production mod_longident -> UIDENT
-- On GREATER reduce production mod_longident -> UIDENT
-- On FUNCTION reduce production mod_longident -> UIDENT
-- On FUN reduce production mod_longident -> UIDENT
-- On FOR reduce production mod_longident -> UIDENT
-- On FLOAT reduce production mod_longident -> UIDENT
-- On FALSE reduce production mod_longident -> UIDENT
-- On EXTERNAL reduce production mod_longident -> UIDENT
-- On EXCEPTION reduce production mod_longident -> UIDENT
-- On EQUAL reduce production mod_longident -> UIDENT
-- On EOF reduce production mod_longident -> UIDENT
-- On END reduce production mod_longident -> UIDENT
-- On ELSE reduce production mod_longident -> UIDENT
-- On DOT reduce production mod_longident -> UIDENT
-- On DONE reduce production mod_longident -> UIDENT
-- On DEF reduce production mod_longident -> UIDENT
-- On COMMA reduce production mod_longident -> UIDENT
-- On COLONGREATER reduce production mod_longident -> UIDENT
-- On COLONEQUAL reduce production mod_longident -> UIDENT
-- On COLONCOLON reduce production mod_longident -> UIDENT
-- On COLON reduce production mod_longident -> UIDENT
-- On CLASS reduce production mod_longident -> UIDENT
-- On CHAR reduce production mod_longident -> UIDENT
-- On BEGIN reduce production mod_longident -> UIDENT
-- On BARRBRACKET reduce production mod_longident -> UIDENT
-- On BARBAR reduce production mod_longident -> UIDENT
-- On BAR reduce production mod_longident -> UIDENT
-- On ASSERT reduce production mod_longident -> UIDENT
-- On AS reduce production mod_longident -> UIDENT
-- On AND reduce production mod_longident -> UIDENT
-- On AMPERSAND reduce production mod_longident -> UIDENT
-- On AMPERAMPER reduce production mod_longident -> UIDENT

State 18:
expr -> TRY . seq_expr WITH opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr WITH error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 935
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 19:
constr_longident -> TRUE . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constr_longident -> TRUE
-- On WITH reduce production constr_longident -> TRUE
-- On WHILE reduce production constr_longident -> TRUE
-- On WHEN reduce production constr_longident -> TRUE
-- On VIRTUAL reduce production constr_longident -> TRUE
-- On VAL reduce production constr_longident -> TRUE
-- On UNDERSCORE reduce production constr_longident -> TRUE
-- On UIDENT reduce production constr_longident -> TRUE
-- On TYPE reduce production constr_longident -> TRUE
-- On TRY reduce production constr_longident -> TRUE
-- On TRUE reduce production constr_longident -> TRUE
-- On TO reduce production constr_longident -> TRUE
-- On SUBTRACTIVE reduce production constr_longident -> TRUE
-- On STRING reduce production constr_longident -> TRUE
-- On STAR reduce production constr_longident -> TRUE
-- On SHARP reduce production constr_longident -> TRUE
-- On SEMISEMI reduce production constr_longident -> TRUE
-- On SEMI reduce production constr_longident -> TRUE
-- On RPAREN reduce production constr_longident -> TRUE
-- On RBRACKET reduce production constr_longident -> TRUE
-- On RBRACE reduce production constr_longident -> TRUE
-- On QUESTION reduce production constr_longident -> TRUE
-- On PREFIXOP reduce production constr_longident -> TRUE
-- On PARSER reduce production constr_longident -> TRUE
-- On OR reduce production constr_longident -> TRUE
-- On OPEN reduce production constr_longident -> TRUE
-- On NEW reduce production constr_longident -> TRUE
-- On MODULE reduce production constr_longident -> TRUE
-- On METHOD reduce production constr_longident -> TRUE
-- On MATCH reduce production constr_longident -> TRUE
-- On LPAREN reduce production constr_longident -> TRUE
-- On LOC reduce production constr_longident -> TRUE
-- On LIDENT reduce production constr_longident -> TRUE
-- On LET reduce production constr_longident -> TRUE
-- On LESSLESSGREATERGREATER reduce production constr_longident -> TRUE
-- On LESSLESS reduce production constr_longident -> TRUE
-- On LESSGREATER reduce production constr_longident -> TRUE
-- On LESS reduce production constr_longident -> TRUE
-- On LBRACKETLESS reduce production constr_longident -> TRUE
-- On LBRACKETBAR reduce production constr_longident -> TRUE
-- On LBRACKET reduce production constr_longident -> TRUE
-- On LBRACELESS reduce production constr_longident -> TRUE
-- On LBRACEBAR reduce production constr_longident -> TRUE
-- On LBRACE reduce production constr_longident -> TRUE
-- On LAZY reduce production constr_longident -> TRUE
-- On INT reduce production constr_longident -> TRUE
-- On INHERIT reduce production constr_longident -> TRUE
-- On INFIXOP4 reduce production constr_longident -> TRUE
-- On INFIXOP3 reduce production constr_longident -> TRUE
-- On INFIXOP2 reduce production constr_longident -> TRUE
-- On INFIXOP1 reduce production constr_longident -> TRUE
-- On INFIXOP0 reduce production constr_longident -> TRUE
-- On IN reduce production constr_longident -> TRUE
-- On IF reduce production constr_longident -> TRUE
-- On GREATERRBRACKET reduce production constr_longident -> TRUE
-- On GREATERRBRACE reduce production constr_longident -> TRUE
-- On GREATERGREATER reduce production constr_longident -> TRUE
-- On GREATER reduce production constr_longident -> TRUE
-- On FUNCTION reduce production constr_longident -> TRUE
-- On FUN reduce production constr_longident -> TRUE
-- On FOR reduce production constr_longident -> TRUE
-- On FLOAT reduce production constr_longident -> TRUE
-- On FALSE reduce production constr_longident -> TRUE
-- On EXTERNAL reduce production constr_longident -> TRUE
-- On EXCEPTION reduce production constr_longident -> TRUE
-- On EQUAL reduce production constr_longident -> TRUE
-- On EOF reduce production constr_longident -> TRUE
-- On END reduce production constr_longident -> TRUE
-- On ELSE reduce production constr_longident -> TRUE
-- On DOT reduce production constr_longident -> TRUE
-- On DONE reduce production constr_longident -> TRUE
-- On DEF reduce production constr_longident -> TRUE
-- On COMMA reduce production constr_longident -> TRUE
-- On COLONGREATER reduce production constr_longident -> TRUE
-- On COLONEQUAL reduce production constr_longident -> TRUE
-- On COLONCOLON reduce production constr_longident -> TRUE
-- On COLON reduce production constr_longident -> TRUE
-- On CLASS reduce production constr_longident -> TRUE
-- On CHAR reduce production constr_longident -> TRUE
-- On BEGIN reduce production constr_longident -> TRUE
-- On BARRBRACKET reduce production constr_longident -> TRUE
-- On BARBAR reduce production constr_longident -> TRUE
-- On BAR reduce production constr_longident -> TRUE
-- On ASSERT reduce production constr_longident -> TRUE
-- On AS reduce production constr_longident -> TRUE
-- On AND reduce production constr_longident -> TRUE
-- On AMPERSAND reduce production constr_longident -> TRUE
-- On AMPERAMPER reduce production constr_longident -> TRUE

State 20:
expr -> SUBTRACTIVE . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 934
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 21:
constant -> STRING . [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constant -> STRING
-- On WITH reduce production constant -> STRING
-- On WHILE reduce production constant -> STRING
-- On WHEN reduce production constant -> STRING
-- On VIRTUAL reduce production constant -> STRING
-- On VAL reduce production constant -> STRING
-- On UIDENT reduce production constant -> STRING
-- On TYPE reduce production constant -> STRING
-- On TRY reduce production constant -> STRING
-- On TRUE reduce production constant -> STRING
-- On TO reduce production constant -> STRING
-- On SUBTRACTIVE reduce production constant -> STRING
-- On STRING reduce production constant -> STRING
-- On STAR reduce production constant -> STRING
-- On SHARP reduce production constant -> STRING
-- On SEMISEMI reduce production constant -> STRING
-- On SEMI reduce production constant -> STRING
-- On RPAREN reduce production constant -> STRING
-- On RBRACKET reduce production constant -> STRING
-- On RBRACE reduce production constant -> STRING
-- On QUESTION reduce production constant -> STRING
-- On PREFIXOP reduce production constant -> STRING
-- On PARSER reduce production constant -> STRING
-- On OR reduce production constant -> STRING
-- On OPEN reduce production constant -> STRING
-- On NEW reduce production constant -> STRING
-- On MODULE reduce production constant -> STRING
-- On METHOD reduce production constant -> STRING
-- On MATCH reduce production constant -> STRING
-- On LPAREN reduce production constant -> STRING
-- On LOC reduce production constant -> STRING
-- On LIDENT reduce production constant -> STRING
-- On LET reduce production constant -> STRING
-- On LESSLESSGREATERGREATER reduce production constant -> STRING
-- On LESSLESS reduce production constant -> STRING
-- On LESSGREATER reduce production constant -> STRING
-- On LESS reduce production constant -> STRING
-- On LBRACKETLESS reduce production constant -> STRING
-- On LBRACKETBAR reduce production constant -> STRING
-- On LBRACKET reduce production constant -> STRING
-- On LBRACELESS reduce production constant -> STRING
-- On LBRACEBAR reduce production constant -> STRING
-- On LBRACE reduce production constant -> STRING
-- On LAZY reduce production constant -> STRING
-- On INT reduce production constant -> STRING
-- On INHERIT reduce production constant -> STRING
-- On INFIXOP4 reduce production constant -> STRING
-- On INFIXOP3 reduce production constant -> STRING
-- On INFIXOP2 reduce production constant -> STRING
-- On INFIXOP1 reduce production constant -> STRING
-- On INFIXOP0 reduce production constant -> STRING
-- On IN reduce production constant -> STRING
-- On IF reduce production constant -> STRING
-- On GREATERRBRACKET reduce production constant -> STRING
-- On GREATERRBRACE reduce production constant -> STRING
-- On GREATERGREATER reduce production constant -> STRING
-- On GREATER reduce production constant -> STRING
-- On FUNCTION reduce production constant -> STRING
-- On FUN reduce production constant -> STRING
-- On FOR reduce production constant -> STRING
-- On FLOAT reduce production constant -> STRING
-- On FALSE reduce production constant -> STRING
-- On EXTERNAL reduce production constant -> STRING
-- On EXCEPTION reduce production constant -> STRING
-- On EQUAL reduce production constant -> STRING
-- On EOF reduce production constant -> STRING
-- On END reduce production constant -> STRING
-- On ELSE reduce production constant -> STRING
-- On DOT reduce production constant -> STRING
-- On DONE reduce production constant -> STRING
-- On DEF reduce production constant -> STRING
-- On COMMA reduce production constant -> STRING
-- On COLONGREATER reduce production constant -> STRING
-- On COLONEQUAL reduce production constant -> STRING
-- On COLONCOLON reduce production constant -> STRING
-- On COLON reduce production constant -> STRING
-- On CLASS reduce production constant -> STRING
-- On CHAR reduce production constant -> STRING
-- On BEGIN reduce production constant -> STRING
-- On BARRBRACKET reduce production constant -> STRING
-- On BARBAR reduce production constant -> STRING
-- On BAR reduce production constant -> STRING
-- On ASSERT reduce production constant -> STRING
-- On AS reduce production constant -> STRING
-- On AND reduce production constant -> STRING
-- On AMPERSAND reduce production constant -> STRING
-- On AMPERAMPER reduce production constant -> STRING

State 22:
simple_expr -> PREFIXOP . simple_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 489
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 23:
simple_expr -> NEW . class_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 24
-- On mod_longident shift to state 25
-- On class_longident shift to state 28

State 24:
class_longident -> LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production class_longident -> LIDENT
-- On WITH reduce production class_longident -> LIDENT
-- On WHILE reduce production class_longident -> LIDENT
-- On VIRTUAL reduce production class_longident -> LIDENT
-- On VAL reduce production class_longident -> LIDENT
-- On UIDENT reduce production class_longident -> LIDENT
-- On TYPE reduce production class_longident -> LIDENT
-- On TRY reduce production class_longident -> LIDENT
-- On TRUE reduce production class_longident -> LIDENT
-- On SUBTRACTIVE reduce production class_longident -> LIDENT
-- On STRING reduce production class_longident -> LIDENT
-- On STAR reduce production class_longident -> LIDENT
-- On SHARP reduce production class_longident -> LIDENT
-- On SEMISEMI reduce production class_longident -> LIDENT
-- On SEMI reduce production class_longident -> LIDENT
-- On RPAREN reduce production class_longident -> LIDENT
-- On RBRACKET reduce production class_longident -> LIDENT
-- On RBRACE reduce production class_longident -> LIDENT
-- On QUESTION reduce production class_longident -> LIDENT
-- On PREFIXOP reduce production class_longident -> LIDENT
-- On PARSER reduce production class_longident -> LIDENT
-- On OR reduce production class_longident -> LIDENT
-- On OPEN reduce production class_longident -> LIDENT
-- On NEW reduce production class_longident -> LIDENT
-- On MODULE reduce production class_longident -> LIDENT
-- On MINUSGREATER reduce production class_longident -> LIDENT
-- On METHOD reduce production class_longident -> LIDENT
-- On MATCH reduce production class_longident -> LIDENT
-- On LPAREN reduce production class_longident -> LIDENT
-- On LOC reduce production class_longident -> LIDENT
-- On LIDENT reduce production class_longident -> LIDENT
-- On LET reduce production class_longident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production class_longident -> LIDENT
-- On LESSLESS reduce production class_longident -> LIDENT
-- On LESSGREATER reduce production class_longident -> LIDENT
-- On LESS reduce production class_longident -> LIDENT
-- On LBRACKETLESS reduce production class_longident -> LIDENT
-- On LBRACKETBAR reduce production class_longident -> LIDENT
-- On LBRACKET reduce production class_longident -> LIDENT
-- On LBRACELESS reduce production class_longident -> LIDENT
-- On LBRACEBAR reduce production class_longident -> LIDENT
-- On LBRACE reduce production class_longident -> LIDENT
-- On LAZY reduce production class_longident -> LIDENT
-- On INT reduce production class_longident -> LIDENT
-- On INHERIT reduce production class_longident -> LIDENT
-- On INFIXOP4 reduce production class_longident -> LIDENT
-- On INFIXOP3 reduce production class_longident -> LIDENT
-- On INFIXOP2 reduce production class_longident -> LIDENT
-- On INFIXOP1 reduce production class_longident -> LIDENT
-- On INFIXOP0 reduce production class_longident -> LIDENT
-- On INCLUDE reduce production class_longident -> LIDENT
-- On IN reduce production class_longident -> LIDENT
-- On IF reduce production class_longident -> LIDENT
-- On GREATERRBRACKET reduce production class_longident -> LIDENT
-- On GREATERRBRACE reduce production class_longident -> LIDENT
-- On GREATERGREATER reduce production class_longident -> LIDENT
-- On GREATER reduce production class_longident -> LIDENT
-- On FUNCTION reduce production class_longident -> LIDENT
-- On FUN reduce production class_longident -> LIDENT
-- On FOR reduce production class_longident -> LIDENT
-- On FLOAT reduce production class_longident -> LIDENT
-- On FALSE reduce production class_longident -> LIDENT
-- On EXTERNAL reduce production class_longident -> LIDENT
-- On EXCEPTION reduce production class_longident -> LIDENT
-- On EQUAL reduce production class_longident -> LIDENT
-- On EOF reduce production class_longident -> LIDENT
-- On END reduce production class_longident -> LIDENT
-- On ELSE reduce production class_longident -> LIDENT
-- On DOT reduce production class_longident -> LIDENT
-- On DONE reduce production class_longident -> LIDENT
-- On DEF reduce production class_longident -> LIDENT
-- On CONSTRAINT reduce production class_longident -> LIDENT
-- On COMMA reduce production class_longident -> LIDENT
-- On COLONGREATER reduce production class_longident -> LIDENT
-- On COLONEQUAL reduce production class_longident -> LIDENT
-- On COLONCOLON reduce production class_longident -> LIDENT
-- On COLON reduce production class_longident -> LIDENT
-- On CLASS reduce production class_longident -> LIDENT
-- On CHAR reduce production class_longident -> LIDENT
-- On BEGIN reduce production class_longident -> LIDENT
-- On BARRBRACKET reduce production class_longident -> LIDENT
-- On BARBAR reduce production class_longident -> LIDENT
-- On BAR reduce production class_longident -> LIDENT
-- On ASSERT reduce production class_longident -> LIDENT
-- On AS reduce production class_longident -> LIDENT
-- On AND reduce production class_longident -> LIDENT
-- On AMPERSAND reduce production class_longident -> LIDENT
-- On AMPERAMPER reduce production class_longident -> LIDENT

State 25:
class_longident -> mod_longident . DOT LIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
-- On DOT shift to state 26

State 26:
class_longident -> mod_longident DOT . LIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
-- On UIDENT shift to state 13
-- On LIDENT shift to state 27

State 27:
class_longident -> mod_longident DOT LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF CONSTRAINT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production class_longident -> mod_longident DOT LIDENT
-- On WITH reduce production class_longident -> mod_longident DOT LIDENT
-- On WHILE reduce production class_longident -> mod_longident DOT LIDENT
-- On VIRTUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On VAL reduce production class_longident -> mod_longident DOT LIDENT
-- On UIDENT reduce production class_longident -> mod_longident DOT LIDENT
-- On TYPE reduce production class_longident -> mod_longident DOT LIDENT
-- On TRY reduce production class_longident -> mod_longident DOT LIDENT
-- On TRUE reduce production class_longident -> mod_longident DOT LIDENT
-- On SUBTRACTIVE reduce production class_longident -> mod_longident DOT LIDENT
-- On STRING reduce production class_longident -> mod_longident DOT LIDENT
-- On STAR reduce production class_longident -> mod_longident DOT LIDENT
-- On SHARP reduce production class_longident -> mod_longident DOT LIDENT
-- On SEMISEMI reduce production class_longident -> mod_longident DOT LIDENT
-- On SEMI reduce production class_longident -> mod_longident DOT LIDENT
-- On RPAREN reduce production class_longident -> mod_longident DOT LIDENT
-- On RBRACKET reduce production class_longident -> mod_longident DOT LIDENT
-- On RBRACE reduce production class_longident -> mod_longident DOT LIDENT
-- On QUESTION reduce production class_longident -> mod_longident DOT LIDENT
-- On PREFIXOP reduce production class_longident -> mod_longident DOT LIDENT
-- On PARSER reduce production class_longident -> mod_longident DOT LIDENT
-- On OR reduce production class_longident -> mod_longident DOT LIDENT
-- On OPEN reduce production class_longident -> mod_longident DOT LIDENT
-- On NEW reduce production class_longident -> mod_longident DOT LIDENT
-- On MODULE reduce production class_longident -> mod_longident DOT LIDENT
-- On MINUSGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On METHOD reduce production class_longident -> mod_longident DOT LIDENT
-- On MATCH reduce production class_longident -> mod_longident DOT LIDENT
-- On LPAREN reduce production class_longident -> mod_longident DOT LIDENT
-- On LOC reduce production class_longident -> mod_longident DOT LIDENT
-- On LIDENT reduce production class_longident -> mod_longident DOT LIDENT
-- On LET reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSLESSGREATERGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSLESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LESSGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On LESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKETLESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKETBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACKET reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACELESS reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACEBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On LBRACE reduce production class_longident -> mod_longident DOT LIDENT
-- On LAZY reduce production class_longident -> mod_longident DOT LIDENT
-- On INT reduce production class_longident -> mod_longident DOT LIDENT
-- On INHERIT reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP4 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP3 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP2 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP1 reduce production class_longident -> mod_longident DOT LIDENT
-- On INFIXOP0 reduce production class_longident -> mod_longident DOT LIDENT
-- On INCLUDE reduce production class_longident -> mod_longident DOT LIDENT
-- On IN reduce production class_longident -> mod_longident DOT LIDENT
-- On IF reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATERRBRACKET reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATERRBRACE reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATERGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On GREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On FUNCTION reduce production class_longident -> mod_longident DOT LIDENT
-- On FUN reduce production class_longident -> mod_longident DOT LIDENT
-- On FOR reduce production class_longident -> mod_longident DOT LIDENT
-- On FLOAT reduce production class_longident -> mod_longident DOT LIDENT
-- On FALSE reduce production class_longident -> mod_longident DOT LIDENT
-- On EXTERNAL reduce production class_longident -> mod_longident DOT LIDENT
-- On EXCEPTION reduce production class_longident -> mod_longident DOT LIDENT
-- On EQUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On EOF reduce production class_longident -> mod_longident DOT LIDENT
-- On END reduce production class_longident -> mod_longident DOT LIDENT
-- On ELSE reduce production class_longident -> mod_longident DOT LIDENT
-- On DOT reduce production class_longident -> mod_longident DOT LIDENT
-- On DONE reduce production class_longident -> mod_longident DOT LIDENT
-- On DEF reduce production class_longident -> mod_longident DOT LIDENT
-- On CONSTRAINT reduce production class_longident -> mod_longident DOT LIDENT
-- On COMMA reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONGREATER reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONEQUAL reduce production class_longident -> mod_longident DOT LIDENT
-- On COLONCOLON reduce production class_longident -> mod_longident DOT LIDENT
-- On COLON reduce production class_longident -> mod_longident DOT LIDENT
-- On CLASS reduce production class_longident -> mod_longident DOT LIDENT
-- On CHAR reduce production class_longident -> mod_longident DOT LIDENT
-- On BEGIN reduce production class_longident -> mod_longident DOT LIDENT
-- On BARRBRACKET reduce production class_longident -> mod_longident DOT LIDENT
-- On BARBAR reduce production class_longident -> mod_longident DOT LIDENT
-- On BAR reduce production class_longident -> mod_longident DOT LIDENT
-- On ASSERT reduce production class_longident -> mod_longident DOT LIDENT
-- On AS reduce production class_longident -> mod_longident DOT LIDENT
-- On AND reduce production class_longident -> mod_longident DOT LIDENT
-- On AMPERSAND reduce production class_longident -> mod_longident DOT LIDENT
-- On AMPERAMPER reduce production class_longident -> mod_longident DOT LIDENT

State 28:
simple_expr -> NEW class_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> NEW class_longident
-- On WITH reduce production simple_expr -> NEW class_longident
-- On WHILE reduce production simple_expr -> NEW class_longident
-- On VIRTUAL reduce production simple_expr -> NEW class_longident
-- On VAL reduce production simple_expr -> NEW class_longident
-- On UIDENT reduce production simple_expr -> NEW class_longident
-- On TYPE reduce production simple_expr -> NEW class_longident
-- On TRY reduce production simple_expr -> NEW class_longident
-- On TRUE reduce production simple_expr -> NEW class_longident
-- On SUBTRACTIVE reduce production simple_expr -> NEW class_longident
-- On STRING reduce production simple_expr -> NEW class_longident
-- On STAR reduce production simple_expr -> NEW class_longident
-- On SHARP reduce production simple_expr -> NEW class_longident
-- On SEMISEMI reduce production simple_expr -> NEW class_longident
-- On SEMI reduce production simple_expr -> NEW class_longident
-- On RPAREN reduce production simple_expr -> NEW class_longident
-- On RBRACKET reduce production simple_expr -> NEW class_longident
-- On RBRACE reduce production simple_expr -> NEW class_longident
-- On QUESTION reduce production simple_expr -> NEW class_longident
-- On PREFIXOP reduce production simple_expr -> NEW class_longident
-- On PARSER reduce production simple_expr -> NEW class_longident
-- On OR reduce production simple_expr -> NEW class_longident
-- On OPEN reduce production simple_expr -> NEW class_longident
-- On NEW reduce production simple_expr -> NEW class_longident
-- On MODULE reduce production simple_expr -> NEW class_longident
-- On METHOD reduce production simple_expr -> NEW class_longident
-- On MATCH reduce production simple_expr -> NEW class_longident
-- On LPAREN reduce production simple_expr -> NEW class_longident
-- On LOC reduce production simple_expr -> NEW class_longident
-- On LIDENT reduce production simple_expr -> NEW class_longident
-- On LET reduce production simple_expr -> NEW class_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> NEW class_longident
-- On LESSLESS reduce production simple_expr -> NEW class_longident
-- On LESSGREATER reduce production simple_expr -> NEW class_longident
-- On LESS reduce production simple_expr -> NEW class_longident
-- On LBRACKETLESS reduce production simple_expr -> NEW class_longident
-- On LBRACKETBAR reduce production simple_expr -> NEW class_longident
-- On LBRACKET reduce production simple_expr -> NEW class_longident
-- On LBRACELESS reduce production simple_expr -> NEW class_longident
-- On LBRACEBAR reduce production simple_expr -> NEW class_longident
-- On LBRACE reduce production simple_expr -> NEW class_longident
-- On LAZY reduce production simple_expr -> NEW class_longident
-- On INT reduce production simple_expr -> NEW class_longident
-- On INHERIT reduce production simple_expr -> NEW class_longident
-- On INFIXOP4 reduce production simple_expr -> NEW class_longident
-- On INFIXOP3 reduce production simple_expr -> NEW class_longident
-- On INFIXOP2 reduce production simple_expr -> NEW class_longident
-- On INFIXOP1 reduce production simple_expr -> NEW class_longident
-- On INFIXOP0 reduce production simple_expr -> NEW class_longident
-- On IN reduce production simple_expr -> NEW class_longident
-- On IF reduce production simple_expr -> NEW class_longident
-- On GREATERRBRACKET reduce production simple_expr -> NEW class_longident
-- On GREATERRBRACE reduce production simple_expr -> NEW class_longident
-- On GREATERGREATER reduce production simple_expr -> NEW class_longident
-- On GREATER reduce production simple_expr -> NEW class_longident
-- On FUNCTION reduce production simple_expr -> NEW class_longident
-- On FUN reduce production simple_expr -> NEW class_longident
-- On FOR reduce production simple_expr -> NEW class_longident
-- On FLOAT reduce production simple_expr -> NEW class_longident
-- On FALSE reduce production simple_expr -> NEW class_longident
-- On EXTERNAL reduce production simple_expr -> NEW class_longident
-- On EXCEPTION reduce production simple_expr -> NEW class_longident
-- On EQUAL reduce production simple_expr -> NEW class_longident
-- On EOF reduce production simple_expr -> NEW class_longident
-- On END reduce production simple_expr -> NEW class_longident
-- On ELSE reduce production simple_expr -> NEW class_longident
-- On DOT reduce production simple_expr -> NEW class_longident
-- On DONE reduce production simple_expr -> NEW class_longident
-- On DEF reduce production simple_expr -> NEW class_longident
-- On COMMA reduce production simple_expr -> NEW class_longident
-- On COLONGREATER reduce production simple_expr -> NEW class_longident
-- On COLONEQUAL reduce production simple_expr -> NEW class_longident
-- On COLONCOLON reduce production simple_expr -> NEW class_longident
-- On COLON reduce production simple_expr -> NEW class_longident
-- On CLASS reduce production simple_expr -> NEW class_longident
-- On CHAR reduce production simple_expr -> NEW class_longident
-- On BEGIN reduce production simple_expr -> NEW class_longident
-- On BARRBRACKET reduce production simple_expr -> NEW class_longident
-- On BARBAR reduce production simple_expr -> NEW class_longident
-- On BAR reduce production simple_expr -> NEW class_longident
-- On ASSERT reduce production simple_expr -> NEW class_longident
-- On AS reduce production simple_expr -> NEW class_longident
-- On AND reduce production simple_expr -> NEW class_longident
-- On AMPERSAND reduce production simple_expr -> NEW class_longident
-- On AMPERAMPER reduce production simple_expr -> NEW class_longident

State 29:
constr_longident -> LPAREN . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . SHARP label RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 30
-- On STRING shift to state 21
-- On STAR shift to state 41
-- On SHARP shift to state 485
-- On RPAREN shift to state 46
-- On PREFIXOP shift to state 488
-- On PARSER shift to state 31
-- On OR shift to state 44
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On IF shift to state 417
-- On GREATER shift to state 95
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EQUAL shift to state 96
-- On DEF shift to state 448
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On BARBAR shift to state 98
-- On ASSERT shift to state 473
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 492
-- On operator shift to state 101
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 30:
expr -> SUBTRACTIVE . expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
operator -> SUBTRACTIVE . [ RPAREN ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 934
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On RPAREN reduce production operator -> SUBTRACTIVE

State 31:
expr -> PARSER . opt_pat opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 267
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On LBRACKETLESS reduce production opt_pat -> 
-- On BAR reduce production opt_pat -> 

State 32:
simple_pattern -> UNDERSCORE . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> UNDERSCORE
-- On UNDERSCORE reduce production simple_pattern -> UNDERSCORE
-- On UIDENT reduce production simple_pattern -> UNDERSCORE
-- On TRUE reduce production simple_pattern -> UNDERSCORE
-- On SUBTRACTIVE reduce production simple_pattern -> UNDERSCORE
-- On STRING reduce production simple_pattern -> UNDERSCORE
-- On MINUSGREATER reduce production simple_pattern -> UNDERSCORE
-- On LPAREN reduce production simple_pattern -> UNDERSCORE
-- On LIDENT reduce production simple_pattern -> UNDERSCORE
-- On LBRACKETLESS reduce production simple_pattern -> UNDERSCORE
-- On LBRACKET reduce production simple_pattern -> UNDERSCORE
-- On LBRACE reduce production simple_pattern -> UNDERSCORE
-- On INT reduce production simple_pattern -> UNDERSCORE
-- On GREATERGREATER reduce production simple_pattern -> UNDERSCORE
-- On GREATER reduce production simple_pattern -> UNDERSCORE
-- On FLOAT reduce production simple_pattern -> UNDERSCORE
-- On FALSE reduce production simple_pattern -> UNDERSCORE
-- On EQUAL reduce production simple_pattern -> UNDERSCORE
-- On COMMA reduce production simple_pattern -> UNDERSCORE
-- On COLONGREATER reduce production simple_pattern -> UNDERSCORE
-- On COLONEQUAL reduce production simple_pattern -> UNDERSCORE
-- On COLONCOLON reduce production simple_pattern -> UNDERSCORE
-- On COLON reduce production simple_pattern -> UNDERSCORE
-- On CHAR reduce production simple_pattern -> UNDERSCORE
-- On BAR reduce production simple_pattern -> UNDERSCORE
-- On AS reduce production simple_pattern -> UNDERSCORE

State 33:
signed_constant -> SUBTRACTIVE . INT [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
signed_constant -> SUBTRACTIVE . FLOAT [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On INT shift to state 34
-- On FLOAT shift to state 35

State 34:
signed_constant -> SUBTRACTIVE INT . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production signed_constant -> SUBTRACTIVE INT
-- On UNDERSCORE reduce production signed_constant -> SUBTRACTIVE INT
-- On UIDENT reduce production signed_constant -> SUBTRACTIVE INT
-- On TRUE reduce production signed_constant -> SUBTRACTIVE INT
-- On SUBTRACTIVE reduce production signed_constant -> SUBTRACTIVE INT
-- On STRING reduce production signed_constant -> SUBTRACTIVE INT
-- On MINUSGREATER reduce production signed_constant -> SUBTRACTIVE INT
-- On LPAREN reduce production signed_constant -> SUBTRACTIVE INT
-- On LIDENT reduce production signed_constant -> SUBTRACTIVE INT
-- On LBRACKETLESS reduce production signed_constant -> SUBTRACTIVE INT
-- On LBRACKET reduce production signed_constant -> SUBTRACTIVE INT
-- On LBRACE reduce production signed_constant -> SUBTRACTIVE INT
-- On INT reduce production signed_constant -> SUBTRACTIVE INT
-- On GREATERGREATER reduce production signed_constant -> SUBTRACTIVE INT
-- On GREATER reduce production signed_constant -> SUBTRACTIVE INT
-- On FLOAT reduce production signed_constant -> SUBTRACTIVE INT
-- On FALSE reduce production signed_constant -> SUBTRACTIVE INT
-- On EQUAL reduce production signed_constant -> SUBTRACTIVE INT
-- On COMMA reduce production signed_constant -> SUBTRACTIVE INT
-- On COLONGREATER reduce production signed_constant -> SUBTRACTIVE INT
-- On COLONEQUAL reduce production signed_constant -> SUBTRACTIVE INT
-- On COLONCOLON reduce production signed_constant -> SUBTRACTIVE INT
-- On COLON reduce production signed_constant -> SUBTRACTIVE INT
-- On CHAR reduce production signed_constant -> SUBTRACTIVE INT
-- On BAR reduce production signed_constant -> SUBTRACTIVE INT
-- On AS reduce production signed_constant -> SUBTRACTIVE INT

State 35:
signed_constant -> SUBTRACTIVE FLOAT . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On UNDERSCORE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On UIDENT reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On TRUE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On SUBTRACTIVE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On STRING reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On MINUSGREATER reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On LPAREN reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On LIDENT reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On LBRACKETLESS reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On LBRACKET reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On LBRACE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On INT reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On GREATERGREATER reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On GREATER reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On FLOAT reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On FALSE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On EQUAL reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COMMA reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLONGREATER reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLONEQUAL reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLONCOLON reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLON reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On CHAR reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On BAR reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On AS reduce production signed_constant -> SUBTRACTIVE FLOAT

State 36:
constr_longident -> LPAREN . RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN . pattern RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN . pattern error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
val_ident -> LPAREN . operator RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 38
-- On STRING shift to state 21
-- On STAR shift to state 41
-- On RPAREN shift to state 42
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 65
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 237
-- On operator shift to state 244
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 37:
simple_pattern -> UNDERSCORE . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> UNDERSCORE
-- On WHEN reduce production simple_pattern -> UNDERSCORE
-- On SEMI reduce production simple_pattern -> UNDERSCORE
-- On RPAREN reduce production simple_pattern -> UNDERSCORE
-- On RBRACKET reduce production simple_pattern -> UNDERSCORE
-- On RBRACE reduce production simple_pattern -> UNDERSCORE
-- On QUESTION reduce production simple_pattern -> UNDERSCORE
-- On GREATERRBRACKET reduce production simple_pattern -> UNDERSCORE
-- On EQUAL reduce production simple_pattern -> UNDERSCORE
-- On COMMA reduce production simple_pattern -> UNDERSCORE
-- On COLONCOLON reduce production simple_pattern -> UNDERSCORE
-- On COLON reduce production simple_pattern -> UNDERSCORE
-- On BAR reduce production simple_pattern -> UNDERSCORE
-- On AS reduce production simple_pattern -> UNDERSCORE

State 38:
operator -> SUBTRACTIVE . [ RPAREN ]
signed_constant -> SUBTRACTIVE . INT [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
signed_constant -> SUBTRACTIVE . FLOAT [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
-- On INT shift to state 39
-- On FLOAT shift to state 40
-- On RPAREN reduce production operator -> SUBTRACTIVE

State 39:
signed_constant -> SUBTRACTIVE INT . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production signed_constant -> SUBTRACTIVE INT
-- On WHEN reduce production signed_constant -> SUBTRACTIVE INT
-- On SEMI reduce production signed_constant -> SUBTRACTIVE INT
-- On RPAREN reduce production signed_constant -> SUBTRACTIVE INT
-- On RBRACKET reduce production signed_constant -> SUBTRACTIVE INT
-- On RBRACE reduce production signed_constant -> SUBTRACTIVE INT
-- On QUESTION reduce production signed_constant -> SUBTRACTIVE INT
-- On GREATERRBRACKET reduce production signed_constant -> SUBTRACTIVE INT
-- On EQUAL reduce production signed_constant -> SUBTRACTIVE INT
-- On COMMA reduce production signed_constant -> SUBTRACTIVE INT
-- On COLONCOLON reduce production signed_constant -> SUBTRACTIVE INT
-- On COLON reduce production signed_constant -> SUBTRACTIVE INT
-- On BAR reduce production signed_constant -> SUBTRACTIVE INT
-- On AS reduce production signed_constant -> SUBTRACTIVE INT

State 40:
signed_constant -> SUBTRACTIVE FLOAT . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On WHEN reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On SEMI reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On RPAREN reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On RBRACKET reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On RBRACE reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On QUESTION reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On GREATERRBRACKET reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On EQUAL reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COMMA reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLONCOLON reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On COLON reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On BAR reduce production signed_constant -> SUBTRACTIVE FLOAT
-- On AS reduce production signed_constant -> SUBTRACTIVE FLOAT

State 41:
operator -> STAR . [ RPAREN ]
-- On RPAREN reduce production operator -> STAR

State 42:
constr_longident -> LPAREN RPAREN . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constr_longident -> LPAREN RPAREN
-- On WHILE reduce production constr_longident -> LPAREN RPAREN
-- On WHEN reduce production constr_longident -> LPAREN RPAREN
-- On UNDERSCORE reduce production constr_longident -> LPAREN RPAREN
-- On UIDENT reduce production constr_longident -> LPAREN RPAREN
-- On TYPE reduce production constr_longident -> LPAREN RPAREN
-- On TRY reduce production constr_longident -> LPAREN RPAREN
-- On TRUE reduce production constr_longident -> LPAREN RPAREN
-- On TO reduce production constr_longident -> LPAREN RPAREN
-- On THEN reduce production constr_longident -> LPAREN RPAREN
-- On SUBTRACTIVE reduce production constr_longident -> LPAREN RPAREN
-- On STRING reduce production constr_longident -> LPAREN RPAREN
-- On STAR reduce production constr_longident -> LPAREN RPAREN
-- On SHARP reduce production constr_longident -> LPAREN RPAREN
-- On SEMISEMI reduce production constr_longident -> LPAREN RPAREN
-- On SEMI reduce production constr_longident -> LPAREN RPAREN
-- On RPAREN reduce production constr_longident -> LPAREN RPAREN
-- On PREFIXOP reduce production constr_longident -> LPAREN RPAREN
-- On PARSER reduce production constr_longident -> LPAREN RPAREN
-- On OR reduce production constr_longident -> LPAREN RPAREN
-- On OPEN reduce production constr_longident -> LPAREN RPAREN
-- On NEW reduce production constr_longident -> LPAREN RPAREN
-- On MODULE reduce production constr_longident -> LPAREN RPAREN
-- On MINUSGREATER reduce production constr_longident -> LPAREN RPAREN
-- On MATCH reduce production constr_longident -> LPAREN RPAREN
-- On LPAREN reduce production constr_longident -> LPAREN RPAREN
-- On LOC reduce production constr_longident -> LPAREN RPAREN
-- On LIDENT reduce production constr_longident -> LPAREN RPAREN
-- On LET reduce production constr_longident -> LPAREN RPAREN
-- On LESSLESSGREATERGREATER reduce production constr_longident -> LPAREN RPAREN
-- On LESSLESS reduce production constr_longident -> LPAREN RPAREN
-- On LESSGREATER reduce production constr_longident -> LPAREN RPAREN
-- On LESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKETLESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKETBAR reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKET reduce production constr_longident -> LPAREN RPAREN
-- On LBRACELESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACEBAR reduce production constr_longident -> LPAREN RPAREN
-- On LBRACE reduce production constr_longident -> LPAREN RPAREN
-- On LAZY reduce production constr_longident -> LPAREN RPAREN
-- On INT reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP4 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP3 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP2 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP1 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP0 reduce production constr_longident -> LPAREN RPAREN
-- On IN reduce production constr_longident -> LPAREN RPAREN
-- On IF reduce production constr_longident -> LPAREN RPAREN
-- On GREATERGREATER reduce production constr_longident -> LPAREN RPAREN
-- On GREATER reduce production constr_longident -> LPAREN RPAREN
-- On FUNCTION reduce production constr_longident -> LPAREN RPAREN
-- On FUN reduce production constr_longident -> LPAREN RPAREN
-- On FOR reduce production constr_longident -> LPAREN RPAREN
-- On FLOAT reduce production constr_longident -> LPAREN RPAREN
-- On FALSE reduce production constr_longident -> LPAREN RPAREN
-- On EXTERNAL reduce production constr_longident -> LPAREN RPAREN
-- On EXCEPTION reduce production constr_longident -> LPAREN RPAREN
-- On EQUAL reduce production constr_longident -> LPAREN RPAREN
-- On EOF reduce production constr_longident -> LPAREN RPAREN
-- On END reduce production constr_longident -> LPAREN RPAREN
-- On ELSE reduce production constr_longident -> LPAREN RPAREN
-- On DOWNTO reduce production constr_longident -> LPAREN RPAREN
-- On DOT reduce production constr_longident -> LPAREN RPAREN
-- On DO reduce production constr_longident -> LPAREN RPAREN
-- On DEF reduce production constr_longident -> LPAREN RPAREN
-- On COMMA reduce production constr_longident -> LPAREN RPAREN
-- On COLONGREATER reduce production constr_longident -> LPAREN RPAREN
-- On COLONEQUAL reduce production constr_longident -> LPAREN RPAREN
-- On COLONCOLON reduce production constr_longident -> LPAREN RPAREN
-- On COLON reduce production constr_longident -> LPAREN RPAREN
-- On CLASS reduce production constr_longident -> LPAREN RPAREN
-- On CHAR reduce production constr_longident -> LPAREN RPAREN
-- On BEGIN reduce production constr_longident -> LPAREN RPAREN
-- On BARRBRACE reduce production constr_longident -> LPAREN RPAREN
-- On BARBAR reduce production constr_longident -> LPAREN RPAREN
-- On BAR reduce production constr_longident -> LPAREN RPAREN
-- On ASSERT reduce production constr_longident -> LPAREN RPAREN
-- On AS reduce production constr_longident -> LPAREN RPAREN
-- On AND reduce production constr_longident -> LPAREN RPAREN
-- On AMPERSAND reduce production constr_longident -> LPAREN RPAREN
-- On AMPERAMPER reduce production constr_longident -> LPAREN RPAREN

State 43:
operator -> PREFIXOP . [ RPAREN ]
-- On RPAREN reduce production operator -> PREFIXOP

State 44:
operator -> OR . [ RPAREN ]
-- On RPAREN reduce production operator -> OR

State 45:
constr_longident -> LPAREN . RPAREN [ error WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING SEMI RPAREN RBRACKET RBRACE QUESTION LPAREN LIDENT LBRACKET LBRACE INT GREATERRBRACKET FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN . pattern RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN . pattern error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN . pattern COLON core_type error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
val_ident -> LPAREN . operator RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 38
-- On STRING shift to state 21
-- On STAR shift to state 41
-- On RPAREN shift to state 46
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 65
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 117
-- On operator shift to state 101
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 46:
constr_longident -> LPAREN RPAREN . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constr_longident -> LPAREN RPAREN
-- On WITH reduce production constr_longident -> LPAREN RPAREN
-- On WHILE reduce production constr_longident -> LPAREN RPAREN
-- On WHEN reduce production constr_longident -> LPAREN RPAREN
-- On VIRTUAL reduce production constr_longident -> LPAREN RPAREN
-- On VAL reduce production constr_longident -> LPAREN RPAREN
-- On UNDERSCORE reduce production constr_longident -> LPAREN RPAREN
-- On UIDENT reduce production constr_longident -> LPAREN RPAREN
-- On TYPE reduce production constr_longident -> LPAREN RPAREN
-- On TRY reduce production constr_longident -> LPAREN RPAREN
-- On TRUE reduce production constr_longident -> LPAREN RPAREN
-- On TO reduce production constr_longident -> LPAREN RPAREN
-- On SUBTRACTIVE reduce production constr_longident -> LPAREN RPAREN
-- On STRING reduce production constr_longident -> LPAREN RPAREN
-- On STAR reduce production constr_longident -> LPAREN RPAREN
-- On SHARP reduce production constr_longident -> LPAREN RPAREN
-- On SEMISEMI reduce production constr_longident -> LPAREN RPAREN
-- On SEMI reduce production constr_longident -> LPAREN RPAREN
-- On RPAREN reduce production constr_longident -> LPAREN RPAREN
-- On RBRACKET reduce production constr_longident -> LPAREN RPAREN
-- On RBRACE reduce production constr_longident -> LPAREN RPAREN
-- On QUESTION reduce production constr_longident -> LPAREN RPAREN
-- On PREFIXOP reduce production constr_longident -> LPAREN RPAREN
-- On PARSER reduce production constr_longident -> LPAREN RPAREN
-- On OR reduce production constr_longident -> LPAREN RPAREN
-- On OPEN reduce production constr_longident -> LPAREN RPAREN
-- On NEW reduce production constr_longident -> LPAREN RPAREN
-- On MODULE reduce production constr_longident -> LPAREN RPAREN
-- On METHOD reduce production constr_longident -> LPAREN RPAREN
-- On MATCH reduce production constr_longident -> LPAREN RPAREN
-- On LPAREN reduce production constr_longident -> LPAREN RPAREN
-- On LOC reduce production constr_longident -> LPAREN RPAREN
-- On LIDENT reduce production constr_longident -> LPAREN RPAREN
-- On LET reduce production constr_longident -> LPAREN RPAREN
-- On LESSLESSGREATERGREATER reduce production constr_longident -> LPAREN RPAREN
-- On LESSLESS reduce production constr_longident -> LPAREN RPAREN
-- On LESSGREATER reduce production constr_longident -> LPAREN RPAREN
-- On LESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKETLESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKETBAR reduce production constr_longident -> LPAREN RPAREN
-- On LBRACKET reduce production constr_longident -> LPAREN RPAREN
-- On LBRACELESS reduce production constr_longident -> LPAREN RPAREN
-- On LBRACEBAR reduce production constr_longident -> LPAREN RPAREN
-- On LBRACE reduce production constr_longident -> LPAREN RPAREN
-- On LAZY reduce production constr_longident -> LPAREN RPAREN
-- On INT reduce production constr_longident -> LPAREN RPAREN
-- On INHERIT reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP4 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP3 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP2 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP1 reduce production constr_longident -> LPAREN RPAREN
-- On INFIXOP0 reduce production constr_longident -> LPAREN RPAREN
-- On IN reduce production constr_longident -> LPAREN RPAREN
-- On IF reduce production constr_longident -> LPAREN RPAREN
-- On GREATERRBRACKET reduce production constr_longident -> LPAREN RPAREN
-- On GREATERRBRACE reduce production constr_longident -> LPAREN RPAREN
-- On GREATERGREATER reduce production constr_longident -> LPAREN RPAREN
-- On GREATER reduce production constr_longident -> LPAREN RPAREN
-- On FUNCTION reduce production constr_longident -> LPAREN RPAREN
-- On FUN reduce production constr_longident -> LPAREN RPAREN
-- On FOR reduce production constr_longident -> LPAREN RPAREN
-- On FLOAT reduce production constr_longident -> LPAREN RPAREN
-- On FALSE reduce production constr_longident -> LPAREN RPAREN
-- On EXTERNAL reduce production constr_longident -> LPAREN RPAREN
-- On EXCEPTION reduce production constr_longident -> LPAREN RPAREN
-- On EQUAL reduce production constr_longident -> LPAREN RPAREN
-- On EOF reduce production constr_longident -> LPAREN RPAREN
-- On END reduce production constr_longident -> LPAREN RPAREN
-- On ELSE reduce production constr_longident -> LPAREN RPAREN
-- On DOT reduce production constr_longident -> LPAREN RPAREN
-- On DONE reduce production constr_longident -> LPAREN RPAREN
-- On DEF reduce production constr_longident -> LPAREN RPAREN
-- On COMMA reduce production constr_longident -> LPAREN RPAREN
-- On COLONGREATER reduce production constr_longident -> LPAREN RPAREN
-- On COLONEQUAL reduce production constr_longident -> LPAREN RPAREN
-- On COLONCOLON reduce production constr_longident -> LPAREN RPAREN
-- On COLON reduce production constr_longident -> LPAREN RPAREN
-- On CLASS reduce production constr_longident -> LPAREN RPAREN
-- On CHAR reduce production constr_longident -> LPAREN RPAREN
-- On BEGIN reduce production constr_longident -> LPAREN RPAREN
-- On BARRBRACKET reduce production constr_longident -> LPAREN RPAREN
-- On BARBAR reduce production constr_longident -> LPAREN RPAREN
-- On BAR reduce production constr_longident -> LPAREN RPAREN
-- On ASSERT reduce production constr_longident -> LPAREN RPAREN
-- On AS reduce production constr_longident -> LPAREN RPAREN
-- On AND reduce production constr_longident -> LPAREN RPAREN
-- On AMPERSAND reduce production constr_longident -> LPAREN RPAREN
-- On AMPERAMPER reduce production constr_longident -> LPAREN RPAREN

State 47:
val_ident -> LIDENT . [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production val_ident -> LIDENT
-- On WITH reduce production val_ident -> LIDENT
-- On WHILE reduce production val_ident -> LIDENT
-- On WHEN reduce production val_ident -> LIDENT
-- On VIRTUAL reduce production val_ident -> LIDENT
-- On VAL reduce production val_ident -> LIDENT
-- On UIDENT reduce production val_ident -> LIDENT
-- On TYPE reduce production val_ident -> LIDENT
-- On TRY reduce production val_ident -> LIDENT
-- On TRUE reduce production val_ident -> LIDENT
-- On TO reduce production val_ident -> LIDENT
-- On SUBTRACTIVE reduce production val_ident -> LIDENT
-- On STRING reduce production val_ident -> LIDENT
-- On STAR reduce production val_ident -> LIDENT
-- On SHARP reduce production val_ident -> LIDENT
-- On SEMISEMI reduce production val_ident -> LIDENT
-- On SEMI reduce production val_ident -> LIDENT
-- On RPAREN reduce production val_ident -> LIDENT
-- On RBRACKET reduce production val_ident -> LIDENT
-- On RBRACE reduce production val_ident -> LIDENT
-- On QUESTION reduce production val_ident -> LIDENT
-- On PREFIXOP reduce production val_ident -> LIDENT
-- On PARSER reduce production val_ident -> LIDENT
-- On OR reduce production val_ident -> LIDENT
-- On OPEN reduce production val_ident -> LIDENT
-- On NEW reduce production val_ident -> LIDENT
-- On MODULE reduce production val_ident -> LIDENT
-- On METHOD reduce production val_ident -> LIDENT
-- On MATCH reduce production val_ident -> LIDENT
-- On LPAREN reduce production val_ident -> LIDENT
-- On LOC reduce production val_ident -> LIDENT
-- On LIDENT reduce production val_ident -> LIDENT
-- On LET reduce production val_ident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production val_ident -> LIDENT
-- On LESSLESS reduce production val_ident -> LIDENT
-- On LESSGREATER reduce production val_ident -> LIDENT
-- On LESS reduce production val_ident -> LIDENT
-- On LBRACKETLESS reduce production val_ident -> LIDENT
-- On LBRACKETBAR reduce production val_ident -> LIDENT
-- On LBRACKET reduce production val_ident -> LIDENT
-- On LBRACELESS reduce production val_ident -> LIDENT
-- On LBRACEBAR reduce production val_ident -> LIDENT
-- On LBRACE reduce production val_ident -> LIDENT
-- On LAZY reduce production val_ident -> LIDENT
-- On INT reduce production val_ident -> LIDENT
-- On INHERIT reduce production val_ident -> LIDENT
-- On INFIXOP4 reduce production val_ident -> LIDENT
-- On INFIXOP3 reduce production val_ident -> LIDENT
-- On INFIXOP2 reduce production val_ident -> LIDENT
-- On INFIXOP1 reduce production val_ident -> LIDENT
-- On INFIXOP0 reduce production val_ident -> LIDENT
-- On IN reduce production val_ident -> LIDENT
-- On IF reduce production val_ident -> LIDENT
-- On GREATERRBRACKET reduce production val_ident -> LIDENT
-- On GREATERRBRACE reduce production val_ident -> LIDENT
-- On GREATERGREATER reduce production val_ident -> LIDENT
-- On GREATER reduce production val_ident -> LIDENT
-- On FUNCTION reduce production val_ident -> LIDENT
-- On FUN reduce production val_ident -> LIDENT
-- On FOR reduce production val_ident -> LIDENT
-- On FLOAT reduce production val_ident -> LIDENT
-- On FALSE reduce production val_ident -> LIDENT
-- On EXTERNAL reduce production val_ident -> LIDENT
-- On EXCEPTION reduce production val_ident -> LIDENT
-- On EQUAL reduce production val_ident -> LIDENT
-- On EOF reduce production val_ident -> LIDENT
-- On END reduce production val_ident -> LIDENT
-- On ELSE reduce production val_ident -> LIDENT
-- On DOT reduce production val_ident -> LIDENT
-- On DONE reduce production val_ident -> LIDENT
-- On DEF reduce production val_ident -> LIDENT
-- On COMMA reduce production val_ident -> LIDENT
-- On COLONGREATER reduce production val_ident -> LIDENT
-- On COLONEQUAL reduce production val_ident -> LIDENT
-- On COLONCOLON reduce production val_ident -> LIDENT
-- On COLON reduce production val_ident -> LIDENT
-- On CLASS reduce production val_ident -> LIDENT
-- On CHAR reduce production val_ident -> LIDENT
-- On BEGIN reduce production val_ident -> LIDENT
-- On BARRBRACKET reduce production val_ident -> LIDENT
-- On BARBAR reduce production val_ident -> LIDENT
-- On BAR reduce production val_ident -> LIDENT
-- On ASSERT reduce production val_ident -> LIDENT
-- On AS reduce production val_ident -> LIDENT
-- On AND reduce production val_ident -> LIDENT
-- On AMPERSAND reduce production val_ident -> LIDENT
-- On AMPERAMPER reduce production val_ident -> LIDENT

State 48:
operator -> LESSGREATER . [ RPAREN ]
-- On RPAREN reduce production operator -> LESSGREATER

State 49:
operator -> LESS . [ RPAREN ]
-- On RPAREN reduce production operator -> LESS

State 50:
constr_longident -> LBRACKET . RBRACKET [ error WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING SEMI RPAREN RBRACKET RBRACE QUESTION LPAREN LIDENT LBRACKET LBRACE INT GREATERRBRACKET FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On RBRACKET shift to state 52
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_semi_list shift to state 110
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 116
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 51:
signed_constant -> SUBTRACTIVE . INT [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
signed_constant -> SUBTRACTIVE . FLOAT [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On INT shift to state 39
-- On FLOAT shift to state 40

State 52:
constr_longident -> LBRACKET RBRACKET . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constr_longident -> LBRACKET RBRACKET
-- On WITH reduce production constr_longident -> LBRACKET RBRACKET
-- On WHILE reduce production constr_longident -> LBRACKET RBRACKET
-- On WHEN reduce production constr_longident -> LBRACKET RBRACKET
-- On VIRTUAL reduce production constr_longident -> LBRACKET RBRACKET
-- On VAL reduce production constr_longident -> LBRACKET RBRACKET
-- On UNDERSCORE reduce production constr_longident -> LBRACKET RBRACKET
-- On UIDENT reduce production constr_longident -> LBRACKET RBRACKET
-- On TYPE reduce production constr_longident -> LBRACKET RBRACKET
-- On TRY reduce production constr_longident -> LBRACKET RBRACKET
-- On TRUE reduce production constr_longident -> LBRACKET RBRACKET
-- On TO reduce production constr_longident -> LBRACKET RBRACKET
-- On SUBTRACTIVE reduce production constr_longident -> LBRACKET RBRACKET
-- On STRING reduce production constr_longident -> LBRACKET RBRACKET
-- On STAR reduce production constr_longident -> LBRACKET RBRACKET
-- On SHARP reduce production constr_longident -> LBRACKET RBRACKET
-- On SEMISEMI reduce production constr_longident -> LBRACKET RBRACKET
-- On SEMI reduce production constr_longident -> LBRACKET RBRACKET
-- On RPAREN reduce production constr_longident -> LBRACKET RBRACKET
-- On RBRACKET reduce production constr_longident -> LBRACKET RBRACKET
-- On RBRACE reduce production constr_longident -> LBRACKET RBRACKET
-- On QUESTION reduce production constr_longident -> LBRACKET RBRACKET
-- On PREFIXOP reduce production constr_longident -> LBRACKET RBRACKET
-- On PARSER reduce production constr_longident -> LBRACKET RBRACKET
-- On OR reduce production constr_longident -> LBRACKET RBRACKET
-- On OPEN reduce production constr_longident -> LBRACKET RBRACKET
-- On NEW reduce production constr_longident -> LBRACKET RBRACKET
-- On MODULE reduce production constr_longident -> LBRACKET RBRACKET
-- On METHOD reduce production constr_longident -> LBRACKET RBRACKET
-- On MATCH reduce production constr_longident -> LBRACKET RBRACKET
-- On LPAREN reduce production constr_longident -> LBRACKET RBRACKET
-- On LOC reduce production constr_longident -> LBRACKET RBRACKET
-- On LIDENT reduce production constr_longident -> LBRACKET RBRACKET
-- On LET reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSLESSGREATERGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSLESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On LESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKETLESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKETBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKET reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACELESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACEBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACE reduce production constr_longident -> LBRACKET RBRACKET
-- On LAZY reduce production constr_longident -> LBRACKET RBRACKET
-- On INT reduce production constr_longident -> LBRACKET RBRACKET
-- On INHERIT reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP4 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP3 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP2 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP1 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP0 reduce production constr_longident -> LBRACKET RBRACKET
-- On IN reduce production constr_longident -> LBRACKET RBRACKET
-- On IF reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATERRBRACKET reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATERRBRACE reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATERGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On FUNCTION reduce production constr_longident -> LBRACKET RBRACKET
-- On FUN reduce production constr_longident -> LBRACKET RBRACKET
-- On FOR reduce production constr_longident -> LBRACKET RBRACKET
-- On FLOAT reduce production constr_longident -> LBRACKET RBRACKET
-- On FALSE reduce production constr_longident -> LBRACKET RBRACKET
-- On EXTERNAL reduce production constr_longident -> LBRACKET RBRACKET
-- On EXCEPTION reduce production constr_longident -> LBRACKET RBRACKET
-- On EQUAL reduce production constr_longident -> LBRACKET RBRACKET
-- On EOF reduce production constr_longident -> LBRACKET RBRACKET
-- On END reduce production constr_longident -> LBRACKET RBRACKET
-- On ELSE reduce production constr_longident -> LBRACKET RBRACKET
-- On DOT reduce production constr_longident -> LBRACKET RBRACKET
-- On DONE reduce production constr_longident -> LBRACKET RBRACKET
-- On DEF reduce production constr_longident -> LBRACKET RBRACKET
-- On COMMA reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONEQUAL reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONCOLON reduce production constr_longident -> LBRACKET RBRACKET
-- On COLON reduce production constr_longident -> LBRACKET RBRACKET
-- On CLASS reduce production constr_longident -> LBRACKET RBRACKET
-- On CHAR reduce production constr_longident -> LBRACKET RBRACKET
-- On BEGIN reduce production constr_longident -> LBRACKET RBRACKET
-- On BARRBRACKET reduce production constr_longident -> LBRACKET RBRACKET
-- On BARBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On BAR reduce production constr_longident -> LBRACKET RBRACKET
-- On ASSERT reduce production constr_longident -> LBRACKET RBRACKET
-- On AS reduce production constr_longident -> LBRACKET RBRACKET
-- On AND reduce production constr_longident -> LBRACKET RBRACKET
-- On AMPERSAND reduce production constr_longident -> LBRACKET RBRACKET
-- On AMPERAMPER reduce production constr_longident -> LBRACKET RBRACKET

State 53:
simple_pattern -> LBRACE . lbl_pattern_list opt_semi RBRACE [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACE . lbl_pattern_list opt_semi error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On lbl_pattern_list shift to state 58
-- On label_longident shift to state 107

State 54:
label_longident -> LIDENT . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production label_longident -> LIDENT
-- On WHILE reduce production label_longident -> LIDENT
-- On UIDENT reduce production label_longident -> LIDENT
-- On TYPE reduce production label_longident -> LIDENT
-- On TRY reduce production label_longident -> LIDENT
-- On TRUE reduce production label_longident -> LIDENT
-- On TO reduce production label_longident -> LIDENT
-- On THEN reduce production label_longident -> LIDENT
-- On SUBTRACTIVE reduce production label_longident -> LIDENT
-- On STRING reduce production label_longident -> LIDENT
-- On STAR reduce production label_longident -> LIDENT
-- On SHARP reduce production label_longident -> LIDENT
-- On SEMISEMI reduce production label_longident -> LIDENT
-- On SEMI reduce production label_longident -> LIDENT
-- On RPAREN reduce production label_longident -> LIDENT
-- On PREFIXOP reduce production label_longident -> LIDENT
-- On PARSER reduce production label_longident -> LIDENT
-- On OR reduce production label_longident -> LIDENT
-- On OPEN reduce production label_longident -> LIDENT
-- On NEW reduce production label_longident -> LIDENT
-- On MODULE reduce production label_longident -> LIDENT
-- On MINUSGREATER reduce production label_longident -> LIDENT
-- On MATCH reduce production label_longident -> LIDENT
-- On LPAREN reduce production label_longident -> LIDENT
-- On LOC reduce production label_longident -> LIDENT
-- On LIDENT reduce production label_longident -> LIDENT
-- On LET reduce production label_longident -> LIDENT
-- On LESSMINUS reduce production label_longident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production label_longident -> LIDENT
-- On LESSLESS reduce production label_longident -> LIDENT
-- On LESSGREATER reduce production label_longident -> LIDENT
-- On LESS reduce production label_longident -> LIDENT
-- On LBRACKETLESS reduce production label_longident -> LIDENT
-- On LBRACKETBAR reduce production label_longident -> LIDENT
-- On LBRACKET reduce production label_longident -> LIDENT
-- On LBRACELESS reduce production label_longident -> LIDENT
-- On LBRACEBAR reduce production label_longident -> LIDENT
-- On LBRACE reduce production label_longident -> LIDENT
-- On LAZY reduce production label_longident -> LIDENT
-- On INT reduce production label_longident -> LIDENT
-- On INFIXOP4 reduce production label_longident -> LIDENT
-- On INFIXOP3 reduce production label_longident -> LIDENT
-- On INFIXOP2 reduce production label_longident -> LIDENT
-- On INFIXOP1 reduce production label_longident -> LIDENT
-- On INFIXOP0 reduce production label_longident -> LIDENT
-- On IN reduce production label_longident -> LIDENT
-- On IF reduce production label_longident -> LIDENT
-- On GREATER reduce production label_longident -> LIDENT
-- On FUNCTION reduce production label_longident -> LIDENT
-- On FUN reduce production label_longident -> LIDENT
-- On FOR reduce production label_longident -> LIDENT
-- On FLOAT reduce production label_longident -> LIDENT
-- On FALSE reduce production label_longident -> LIDENT
-- On EXTERNAL reduce production label_longident -> LIDENT
-- On EXCEPTION reduce production label_longident -> LIDENT
-- On EQUAL reduce production label_longident -> LIDENT
-- On EOF reduce production label_longident -> LIDENT
-- On END reduce production label_longident -> LIDENT
-- On ELSE reduce production label_longident -> LIDENT
-- On DOWNTO reduce production label_longident -> LIDENT
-- On DOT reduce production label_longident -> LIDENT
-- On DO reduce production label_longident -> LIDENT
-- On DEF reduce production label_longident -> LIDENT
-- On COMMA reduce production label_longident -> LIDENT
-- On COLONGREATER reduce production label_longident -> LIDENT
-- On COLONEQUAL reduce production label_longident -> LIDENT
-- On COLONCOLON reduce production label_longident -> LIDENT
-- On COLON reduce production label_longident -> LIDENT
-- On CLASS reduce production label_longident -> LIDENT
-- On CHAR reduce production label_longident -> LIDENT
-- On BEGIN reduce production label_longident -> LIDENT
-- On BARRBRACE reduce production label_longident -> LIDENT
-- On BARBAR reduce production label_longident -> LIDENT
-- On BAR reduce production label_longident -> LIDENT
-- On ASSERT reduce production label_longident -> LIDENT
-- On AND reduce production label_longident -> LIDENT
-- On AMPERSAND reduce production label_longident -> LIDENT
-- On AMPERAMPER reduce production label_longident -> LIDENT

State 55:
label_longident -> mod_longident . DOT LIDENT [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
-- On DOT shift to state 56

State 56:
label_longident -> mod_longident DOT . LIDENT [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
-- On UIDENT shift to state 13
-- On LIDENT shift to state 57

State 57:
label_longident -> mod_longident DOT LIDENT . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production label_longident -> mod_longident DOT LIDENT
-- On WHILE reduce production label_longident -> mod_longident DOT LIDENT
-- On UIDENT reduce production label_longident -> mod_longident DOT LIDENT
-- On TYPE reduce production label_longident -> mod_longident DOT LIDENT
-- On TRY reduce production label_longident -> mod_longident DOT LIDENT
-- On TRUE reduce production label_longident -> mod_longident DOT LIDENT
-- On TO reduce production label_longident -> mod_longident DOT LIDENT
-- On THEN reduce production label_longident -> mod_longident DOT LIDENT
-- On SUBTRACTIVE reduce production label_longident -> mod_longident DOT LIDENT
-- On STRING reduce production label_longident -> mod_longident DOT LIDENT
-- On STAR reduce production label_longident -> mod_longident DOT LIDENT
-- On SHARP reduce production label_longident -> mod_longident DOT LIDENT
-- On SEMISEMI reduce production label_longident -> mod_longident DOT LIDENT
-- On SEMI reduce production label_longident -> mod_longident DOT LIDENT
-- On RPAREN reduce production label_longident -> mod_longident DOT LIDENT
-- On PREFIXOP reduce production label_longident -> mod_longident DOT LIDENT
-- On PARSER reduce production label_longident -> mod_longident DOT LIDENT
-- On OR reduce production label_longident -> mod_longident DOT LIDENT
-- On OPEN reduce production label_longident -> mod_longident DOT LIDENT
-- On NEW reduce production label_longident -> mod_longident DOT LIDENT
-- On MODULE reduce production label_longident -> mod_longident DOT LIDENT
-- On MINUSGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On MATCH reduce production label_longident -> mod_longident DOT LIDENT
-- On LPAREN reduce production label_longident -> mod_longident DOT LIDENT
-- On LOC reduce production label_longident -> mod_longident DOT LIDENT
-- On LIDENT reduce production label_longident -> mod_longident DOT LIDENT
-- On LET reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSMINUS reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSLESSGREATERGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSLESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On LESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKETLESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKETBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKET reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACELESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACEBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACE reduce production label_longident -> mod_longident DOT LIDENT
-- On LAZY reduce production label_longident -> mod_longident DOT LIDENT
-- On INT reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP4 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP3 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP2 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP1 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP0 reduce production label_longident -> mod_longident DOT LIDENT
-- On IN reduce production label_longident -> mod_longident DOT LIDENT
-- On IF reduce production label_longident -> mod_longident DOT LIDENT
-- On GREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On FUNCTION reduce production label_longident -> mod_longident DOT LIDENT
-- On FUN reduce production label_longident -> mod_longident DOT LIDENT
-- On FOR reduce production label_longident -> mod_longident DOT LIDENT
-- On FLOAT reduce production label_longident -> mod_longident DOT LIDENT
-- On FALSE reduce production label_longident -> mod_longident DOT LIDENT
-- On EXTERNAL reduce production label_longident -> mod_longident DOT LIDENT
-- On EXCEPTION reduce production label_longident -> mod_longident DOT LIDENT
-- On EQUAL reduce production label_longident -> mod_longident DOT LIDENT
-- On EOF reduce production label_longident -> mod_longident DOT LIDENT
-- On END reduce production label_longident -> mod_longident DOT LIDENT
-- On ELSE reduce production label_longident -> mod_longident DOT LIDENT
-- On DOWNTO reduce production label_longident -> mod_longident DOT LIDENT
-- On DOT reduce production label_longident -> mod_longident DOT LIDENT
-- On DO reduce production label_longident -> mod_longident DOT LIDENT
-- On DEF reduce production label_longident -> mod_longident DOT LIDENT
-- On COMMA reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONEQUAL reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONCOLON reduce production label_longident -> mod_longident DOT LIDENT
-- On COLON reduce production label_longident -> mod_longident DOT LIDENT
-- On CLASS reduce production label_longident -> mod_longident DOT LIDENT
-- On CHAR reduce production label_longident -> mod_longident DOT LIDENT
-- On BEGIN reduce production label_longident -> mod_longident DOT LIDENT
-- On BARRBRACE reduce production label_longident -> mod_longident DOT LIDENT
-- On BARBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On BAR reduce production label_longident -> mod_longident DOT LIDENT
-- On ASSERT reduce production label_longident -> mod_longident DOT LIDENT
-- On AND reduce production label_longident -> mod_longident DOT LIDENT
-- On AMPERSAND reduce production label_longident -> mod_longident DOT LIDENT
-- On AMPERAMPER reduce production label_longident -> mod_longident DOT LIDENT

State 58:
lbl_pattern_list -> lbl_pattern_list . SEMI label_longident EQUAL pattern [ error SEMI RBRACE ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi RBRACE [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On SEMI shift to state 59
-- On opt_semi shift to state 104
-- On error reduce production opt_semi -> 
-- On RBRACE reduce production opt_semi -> 

State 59:
lbl_pattern_list -> lbl_pattern_list SEMI . label_longident EQUAL pattern [ error SEMI RBRACE ]
opt_semi -> SEMI . [ error RBRACE ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On label_longident shift to state 60
-- On error reduce production opt_semi -> SEMI
-- On RBRACE reduce production opt_semi -> SEMI

State 60:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident . EQUAL pattern [ error SEMI RBRACE ]
-- On EQUAL shift to state 61

State 61:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL . pattern [ error SEMI RBRACE ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 82
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 62:
constant -> INT . [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constant -> INT
-- On WITH reduce production constant -> INT
-- On WHILE reduce production constant -> INT
-- On WHEN reduce production constant -> INT
-- On VIRTUAL reduce production constant -> INT
-- On VAL reduce production constant -> INT
-- On UIDENT reduce production constant -> INT
-- On TYPE reduce production constant -> INT
-- On TRY reduce production constant -> INT
-- On TRUE reduce production constant -> INT
-- On TO reduce production constant -> INT
-- On SUBTRACTIVE reduce production constant -> INT
-- On STRING reduce production constant -> INT
-- On STAR reduce production constant -> INT
-- On SHARP reduce production constant -> INT
-- On SEMISEMI reduce production constant -> INT
-- On SEMI reduce production constant -> INT
-- On RPAREN reduce production constant -> INT
-- On RBRACKET reduce production constant -> INT
-- On RBRACE reduce production constant -> INT
-- On QUESTION reduce production constant -> INT
-- On PREFIXOP reduce production constant -> INT
-- On PARSER reduce production constant -> INT
-- On OR reduce production constant -> INT
-- On OPEN reduce production constant -> INT
-- On NEW reduce production constant -> INT
-- On MODULE reduce production constant -> INT
-- On METHOD reduce production constant -> INT
-- On MATCH reduce production constant -> INT
-- On LPAREN reduce production constant -> INT
-- On LOC reduce production constant -> INT
-- On LIDENT reduce production constant -> INT
-- On LET reduce production constant -> INT
-- On LESSLESSGREATERGREATER reduce production constant -> INT
-- On LESSLESS reduce production constant -> INT
-- On LESSGREATER reduce production constant -> INT
-- On LESS reduce production constant -> INT
-- On LBRACKETLESS reduce production constant -> INT
-- On LBRACKETBAR reduce production constant -> INT
-- On LBRACKET reduce production constant -> INT
-- On LBRACELESS reduce production constant -> INT
-- On LBRACEBAR reduce production constant -> INT
-- On LBRACE reduce production constant -> INT
-- On LAZY reduce production constant -> INT
-- On INT reduce production constant -> INT
-- On INHERIT reduce production constant -> INT
-- On INFIXOP4 reduce production constant -> INT
-- On INFIXOP3 reduce production constant -> INT
-- On INFIXOP2 reduce production constant -> INT
-- On INFIXOP1 reduce production constant -> INT
-- On INFIXOP0 reduce production constant -> INT
-- On IN reduce production constant -> INT
-- On IF reduce production constant -> INT
-- On GREATERRBRACKET reduce production constant -> INT
-- On GREATERRBRACE reduce production constant -> INT
-- On GREATERGREATER reduce production constant -> INT
-- On GREATER reduce production constant -> INT
-- On FUNCTION reduce production constant -> INT
-- On FUN reduce production constant -> INT
-- On FOR reduce production constant -> INT
-- On FLOAT reduce production constant -> INT
-- On FALSE reduce production constant -> INT
-- On EXTERNAL reduce production constant -> INT
-- On EXCEPTION reduce production constant -> INT
-- On EQUAL reduce production constant -> INT
-- On EOF reduce production constant -> INT
-- On END reduce production constant -> INT
-- On ELSE reduce production constant -> INT
-- On DOT reduce production constant -> INT
-- On DONE reduce production constant -> INT
-- On DEF reduce production constant -> INT
-- On COMMA reduce production constant -> INT
-- On COLONGREATER reduce production constant -> INT
-- On COLONEQUAL reduce production constant -> INT
-- On COLONCOLON reduce production constant -> INT
-- On COLON reduce production constant -> INT
-- On CLASS reduce production constant -> INT
-- On CHAR reduce production constant -> INT
-- On BEGIN reduce production constant -> INT
-- On BARRBRACKET reduce production constant -> INT
-- On BARBAR reduce production constant -> INT
-- On BAR reduce production constant -> INT
-- On ASSERT reduce production constant -> INT
-- On AS reduce production constant -> INT
-- On AND reduce production constant -> INT
-- On AMPERSAND reduce production constant -> INT
-- On AMPERAMPER reduce production constant -> INT

State 63:
constant -> FLOAT . [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constant -> FLOAT
-- On WITH reduce production constant -> FLOAT
-- On WHILE reduce production constant -> FLOAT
-- On WHEN reduce production constant -> FLOAT
-- On VIRTUAL reduce production constant -> FLOAT
-- On VAL reduce production constant -> FLOAT
-- On UIDENT reduce production constant -> FLOAT
-- On TYPE reduce production constant -> FLOAT
-- On TRY reduce production constant -> FLOAT
-- On TRUE reduce production constant -> FLOAT
-- On TO reduce production constant -> FLOAT
-- On SUBTRACTIVE reduce production constant -> FLOAT
-- On STRING reduce production constant -> FLOAT
-- On STAR reduce production constant -> FLOAT
-- On SHARP reduce production constant -> FLOAT
-- On SEMISEMI reduce production constant -> FLOAT
-- On SEMI reduce production constant -> FLOAT
-- On RPAREN reduce production constant -> FLOAT
-- On RBRACKET reduce production constant -> FLOAT
-- On RBRACE reduce production constant -> FLOAT
-- On QUESTION reduce production constant -> FLOAT
-- On PREFIXOP reduce production constant -> FLOAT
-- On PARSER reduce production constant -> FLOAT
-- On OR reduce production constant -> FLOAT
-- On OPEN reduce production constant -> FLOAT
-- On NEW reduce production constant -> FLOAT
-- On MODULE reduce production constant -> FLOAT
-- On METHOD reduce production constant -> FLOAT
-- On MATCH reduce production constant -> FLOAT
-- On LPAREN reduce production constant -> FLOAT
-- On LOC reduce production constant -> FLOAT
-- On LIDENT reduce production constant -> FLOAT
-- On LET reduce production constant -> FLOAT
-- On LESSLESSGREATERGREATER reduce production constant -> FLOAT
-- On LESSLESS reduce production constant -> FLOAT
-- On LESSGREATER reduce production constant -> FLOAT
-- On LESS reduce production constant -> FLOAT
-- On LBRACKETLESS reduce production constant -> FLOAT
-- On LBRACKETBAR reduce production constant -> FLOAT
-- On LBRACKET reduce production constant -> FLOAT
-- On LBRACELESS reduce production constant -> FLOAT
-- On LBRACEBAR reduce production constant -> FLOAT
-- On LBRACE reduce production constant -> FLOAT
-- On LAZY reduce production constant -> FLOAT
-- On INT reduce production constant -> FLOAT
-- On INHERIT reduce production constant -> FLOAT
-- On INFIXOP4 reduce production constant -> FLOAT
-- On INFIXOP3 reduce production constant -> FLOAT
-- On INFIXOP2 reduce production constant -> FLOAT
-- On INFIXOP1 reduce production constant -> FLOAT
-- On INFIXOP0 reduce production constant -> FLOAT
-- On IN reduce production constant -> FLOAT
-- On IF reduce production constant -> FLOAT
-- On GREATERRBRACKET reduce production constant -> FLOAT
-- On GREATERRBRACE reduce production constant -> FLOAT
-- On GREATERGREATER reduce production constant -> FLOAT
-- On GREATER reduce production constant -> FLOAT
-- On FUNCTION reduce production constant -> FLOAT
-- On FUN reduce production constant -> FLOAT
-- On FOR reduce production constant -> FLOAT
-- On FLOAT reduce production constant -> FLOAT
-- On FALSE reduce production constant -> FLOAT
-- On EXTERNAL reduce production constant -> FLOAT
-- On EXCEPTION reduce production constant -> FLOAT
-- On EQUAL reduce production constant -> FLOAT
-- On EOF reduce production constant -> FLOAT
-- On END reduce production constant -> FLOAT
-- On ELSE reduce production constant -> FLOAT
-- On DOT reduce production constant -> FLOAT
-- On DONE reduce production constant -> FLOAT
-- On DEF reduce production constant -> FLOAT
-- On COMMA reduce production constant -> FLOAT
-- On COLONGREATER reduce production constant -> FLOAT
-- On COLONEQUAL reduce production constant -> FLOAT
-- On COLONCOLON reduce production constant -> FLOAT
-- On COLON reduce production constant -> FLOAT
-- On CLASS reduce production constant -> FLOAT
-- On CHAR reduce production constant -> FLOAT
-- On BEGIN reduce production constant -> FLOAT
-- On BARRBRACKET reduce production constant -> FLOAT
-- On BARBAR reduce production constant -> FLOAT
-- On BAR reduce production constant -> FLOAT
-- On ASSERT reduce production constant -> FLOAT
-- On AS reduce production constant -> FLOAT
-- On AND reduce production constant -> FLOAT
-- On AMPERSAND reduce production constant -> FLOAT
-- On AMPERAMPER reduce production constant -> FLOAT

State 64:
constr_longident -> FALSE . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constr_longident -> FALSE
-- On WITH reduce production constr_longident -> FALSE
-- On WHILE reduce production constr_longident -> FALSE
-- On WHEN reduce production constr_longident -> FALSE
-- On VIRTUAL reduce production constr_longident -> FALSE
-- On VAL reduce production constr_longident -> FALSE
-- On UNDERSCORE reduce production constr_longident -> FALSE
-- On UIDENT reduce production constr_longident -> FALSE
-- On TYPE reduce production constr_longident -> FALSE
-- On TRY reduce production constr_longident -> FALSE
-- On TRUE reduce production constr_longident -> FALSE
-- On TO reduce production constr_longident -> FALSE
-- On SUBTRACTIVE reduce production constr_longident -> FALSE
-- On STRING reduce production constr_longident -> FALSE
-- On STAR reduce production constr_longident -> FALSE
-- On SHARP reduce production constr_longident -> FALSE
-- On SEMISEMI reduce production constr_longident -> FALSE
-- On SEMI reduce production constr_longident -> FALSE
-- On RPAREN reduce production constr_longident -> FALSE
-- On RBRACKET reduce production constr_longident -> FALSE
-- On RBRACE reduce production constr_longident -> FALSE
-- On QUESTION reduce production constr_longident -> FALSE
-- On PREFIXOP reduce production constr_longident -> FALSE
-- On PARSER reduce production constr_longident -> FALSE
-- On OR reduce production constr_longident -> FALSE
-- On OPEN reduce production constr_longident -> FALSE
-- On NEW reduce production constr_longident -> FALSE
-- On MODULE reduce production constr_longident -> FALSE
-- On METHOD reduce production constr_longident -> FALSE
-- On MATCH reduce production constr_longident -> FALSE
-- On LPAREN reduce production constr_longident -> FALSE
-- On LOC reduce production constr_longident -> FALSE
-- On LIDENT reduce production constr_longident -> FALSE
-- On LET reduce production constr_longident -> FALSE
-- On LESSLESSGREATERGREATER reduce production constr_longident -> FALSE
-- On LESSLESS reduce production constr_longident -> FALSE
-- On LESSGREATER reduce production constr_longident -> FALSE
-- On LESS reduce production constr_longident -> FALSE
-- On LBRACKETLESS reduce production constr_longident -> FALSE
-- On LBRACKETBAR reduce production constr_longident -> FALSE
-- On LBRACKET reduce production constr_longident -> FALSE
-- On LBRACELESS reduce production constr_longident -> FALSE
-- On LBRACEBAR reduce production constr_longident -> FALSE
-- On LBRACE reduce production constr_longident -> FALSE
-- On LAZY reduce production constr_longident -> FALSE
-- On INT reduce production constr_longident -> FALSE
-- On INHERIT reduce production constr_longident -> FALSE
-- On INFIXOP4 reduce production constr_longident -> FALSE
-- On INFIXOP3 reduce production constr_longident -> FALSE
-- On INFIXOP2 reduce production constr_longident -> FALSE
-- On INFIXOP1 reduce production constr_longident -> FALSE
-- On INFIXOP0 reduce production constr_longident -> FALSE
-- On IN reduce production constr_longident -> FALSE
-- On IF reduce production constr_longident -> FALSE
-- On GREATERRBRACKET reduce production constr_longident -> FALSE
-- On GREATERRBRACE reduce production constr_longident -> FALSE
-- On GREATERGREATER reduce production constr_longident -> FALSE
-- On GREATER reduce production constr_longident -> FALSE
-- On FUNCTION reduce production constr_longident -> FALSE
-- On FUN reduce production constr_longident -> FALSE
-- On FOR reduce production constr_longident -> FALSE
-- On FLOAT reduce production constr_longident -> FALSE
-- On FALSE reduce production constr_longident -> FALSE
-- On EXTERNAL reduce production constr_longident -> FALSE
-- On EXCEPTION reduce production constr_longident -> FALSE
-- On EQUAL reduce production constr_longident -> FALSE
-- On EOF reduce production constr_longident -> FALSE
-- On END reduce production constr_longident -> FALSE
-- On ELSE reduce production constr_longident -> FALSE
-- On DOT reduce production constr_longident -> FALSE
-- On DONE reduce production constr_longident -> FALSE
-- On DEF reduce production constr_longident -> FALSE
-- On COMMA reduce production constr_longident -> FALSE
-- On COLONGREATER reduce production constr_longident -> FALSE
-- On COLONEQUAL reduce production constr_longident -> FALSE
-- On COLONCOLON reduce production constr_longident -> FALSE
-- On COLON reduce production constr_longident -> FALSE
-- On CLASS reduce production constr_longident -> FALSE
-- On CHAR reduce production constr_longident -> FALSE
-- On BEGIN reduce production constr_longident -> FALSE
-- On BARRBRACKET reduce production constr_longident -> FALSE
-- On BARBAR reduce production constr_longident -> FALSE
-- On BAR reduce production constr_longident -> FALSE
-- On ASSERT reduce production constr_longident -> FALSE
-- On AS reduce production constr_longident -> FALSE
-- On AND reduce production constr_longident -> FALSE
-- On AMPERSAND reduce production constr_longident -> FALSE
-- On AMPERAMPER reduce production constr_longident -> FALSE

State 65:
constant -> CHAR . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> CHAR . DOTDOT CHAR [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On DOTDOT shift to state 66
-- On error reduce production constant -> CHAR
-- On WHEN reduce production constant -> CHAR
-- On SEMI reduce production constant -> CHAR
-- On RPAREN reduce production constant -> CHAR
-- On RBRACKET reduce production constant -> CHAR
-- On RBRACE reduce production constant -> CHAR
-- On QUESTION reduce production constant -> CHAR
-- On GREATERRBRACKET reduce production constant -> CHAR
-- On EQUAL reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On BAR reduce production constant -> CHAR
-- On AS reduce production constant -> CHAR

State 66:
simple_pattern -> CHAR DOTDOT . CHAR [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On CHAR shift to state 67

State 67:
simple_pattern -> CHAR DOTDOT CHAR . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On WHEN reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On SEMI reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On RPAREN reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On RBRACKET reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On RBRACE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On QUESTION reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On GREATERRBRACKET reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On EQUAL reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COMMA reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLONCOLON reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLON reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On BAR reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On AS reduce production simple_pattern -> CHAR DOTDOT CHAR

State 68:
simple_pattern -> val_ident . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> val_ident
-- On WHEN reduce production simple_pattern -> val_ident
-- On SEMI reduce production simple_pattern -> val_ident
-- On RPAREN reduce production simple_pattern -> val_ident
-- On RBRACKET reduce production simple_pattern -> val_ident
-- On RBRACE reduce production simple_pattern -> val_ident
-- On QUESTION reduce production simple_pattern -> val_ident
-- On GREATERRBRACKET reduce production simple_pattern -> val_ident
-- On EQUAL reduce production simple_pattern -> val_ident
-- On COMMA reduce production simple_pattern -> val_ident
-- On COLONCOLON reduce production simple_pattern -> val_ident
-- On COLON reduce production simple_pattern -> val_ident
-- On BAR reduce production simple_pattern -> val_ident
-- On AS reduce production simple_pattern -> val_ident

State 69:
pattern -> simple_pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production pattern -> simple_pattern
-- On WHEN reduce production pattern -> simple_pattern
-- On SEMI reduce production pattern -> simple_pattern
-- On RPAREN reduce production pattern -> simple_pattern
-- On RBRACKET reduce production pattern -> simple_pattern
-- On RBRACE reduce production pattern -> simple_pattern
-- On QUESTION reduce production pattern -> simple_pattern
-- On GREATERRBRACKET reduce production pattern -> simple_pattern
-- On EQUAL reduce production pattern -> simple_pattern
-- On COMMA reduce production pattern -> simple_pattern
-- On COLONCOLON reduce production pattern -> simple_pattern
-- On COLON reduce production pattern -> simple_pattern
-- On BAR reduce production pattern -> simple_pattern
-- On AS reduce production pattern -> simple_pattern

State 70:
simple_pattern -> signed_constant . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> signed_constant
-- On WHEN reduce production simple_pattern -> signed_constant
-- On SEMI reduce production simple_pattern -> signed_constant
-- On RPAREN reduce production simple_pattern -> signed_constant
-- On RBRACKET reduce production simple_pattern -> signed_constant
-- On RBRACE reduce production simple_pattern -> signed_constant
-- On QUESTION reduce production simple_pattern -> signed_constant
-- On GREATERRBRACKET reduce production simple_pattern -> signed_constant
-- On EQUAL reduce production simple_pattern -> signed_constant
-- On COMMA reduce production simple_pattern -> signed_constant
-- On COLONCOLON reduce production simple_pattern -> signed_constant
-- On COLON reduce production simple_pattern -> signed_constant
-- On BAR reduce production simple_pattern -> signed_constant
-- On AS reduce production simple_pattern -> signed_constant

State 71:
pattern -> pattern_comma_list . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On COMMA shift to state 72
-- On error reduce production pattern -> pattern_comma_list
-- On WHEN reduce production pattern -> pattern_comma_list
-- On SEMI reduce production pattern -> pattern_comma_list
-- On RPAREN reduce production pattern -> pattern_comma_list
-- On RBRACKET reduce production pattern -> pattern_comma_list
-- On RBRACE reduce production pattern -> pattern_comma_list
-- On QUESTION reduce production pattern -> pattern_comma_list
-- On GREATERRBRACKET reduce production pattern -> pattern_comma_list
-- On EQUAL reduce production pattern -> pattern_comma_list
-- On COMMA reduce production pattern -> pattern_comma_list
-- On COLONCOLON reduce production pattern -> pattern_comma_list
-- On COLON reduce production pattern -> pattern_comma_list
-- On BAR reduce production pattern -> pattern_comma_list
-- On AS reduce production pattern -> pattern_comma_list
** Conflict on COMMA

State 72:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 73
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 73:
pattern -> pattern . AS val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On COLONCOLON shift to state 74
-- On error reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On WHEN reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On SEMI reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On RPAREN reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On RBRACKET reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On RBRACE reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On QUESTION reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On GREATERRBRACKET reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On EQUAL reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On COMMA reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On COLON reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On BAR reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On AS reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 74:
pattern -> pattern COLONCOLON . pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 75
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 75:
pattern -> pattern . AS val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern COLONCOLON pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On COLONCOLON shift to state 74
-- On error reduce production pattern -> pattern COLONCOLON pattern
-- On WHEN reduce production pattern -> pattern COLONCOLON pattern
-- On SEMI reduce production pattern -> pattern COLONCOLON pattern
-- On RPAREN reduce production pattern -> pattern COLONCOLON pattern
-- On RBRACKET reduce production pattern -> pattern COLONCOLON pattern
-- On RBRACE reduce production pattern -> pattern COLONCOLON pattern
-- On QUESTION reduce production pattern -> pattern COLONCOLON pattern
-- On GREATERRBRACKET reduce production pattern -> pattern COLONCOLON pattern
-- On EQUAL reduce production pattern -> pattern COLONCOLON pattern
-- On COMMA reduce production pattern -> pattern COLONCOLON pattern
-- On COLON reduce production pattern -> pattern COLONCOLON pattern
-- On BAR reduce production pattern -> pattern COLONCOLON pattern
-- On AS reduce production pattern -> pattern COLONCOLON pattern

State 76:
constr_longident -> mod_longident . [ error WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING SEMI RPAREN RBRACKET RBRACE QUESTION LPAREN LIDENT LBRACKET LBRACE INT GREATERRBRACKET FLOAT FALSE EQUAL COMMA COLONCOLON COLON CHAR BAR AS ]
mod_longident -> mod_longident . DOT UIDENT [ error WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING SEMI RPAREN RBRACKET RBRACE QUESTION LPAREN LIDENT LBRACKET LBRACE INT GREATERRBRACKET FLOAT FALSE EQUAL DOT COMMA COLONCOLON COLON CHAR BAR AS ]
-- On DOT shift to state 77
-- On error reduce production constr_longident -> mod_longident
-- On WHEN reduce production constr_longident -> mod_longident
-- On UNDERSCORE reduce production constr_longident -> mod_longident
-- On UIDENT reduce production constr_longident -> mod_longident
-- On TRUE reduce production constr_longident -> mod_longident
-- On SUBTRACTIVE reduce production constr_longident -> mod_longident
-- On STRING reduce production constr_longident -> mod_longident
-- On SEMI reduce production constr_longident -> mod_longident
-- On RPAREN reduce production constr_longident -> mod_longident
-- On RBRACKET reduce production constr_longident -> mod_longident
-- On RBRACE reduce production constr_longident -> mod_longident
-- On QUESTION reduce production constr_longident -> mod_longident
-- On LPAREN reduce production constr_longident -> mod_longident
-- On LIDENT reduce production constr_longident -> mod_longident
-- On LBRACKET reduce production constr_longident -> mod_longident
-- On LBRACE reduce production constr_longident -> mod_longident
-- On INT reduce production constr_longident -> mod_longident
-- On GREATERRBRACKET reduce production constr_longident -> mod_longident
-- On FLOAT reduce production constr_longident -> mod_longident
-- On FALSE reduce production constr_longident -> mod_longident
-- On EQUAL reduce production constr_longident -> mod_longident
-- On COMMA reduce production constr_longident -> mod_longident
-- On COLONCOLON reduce production constr_longident -> mod_longident
-- On COLON reduce production constr_longident -> mod_longident
-- On CHAR reduce production constr_longident -> mod_longident
-- On BAR reduce production constr_longident -> mod_longident
-- On AS reduce production constr_longident -> mod_longident

State 77:
mod_longident -> mod_longident DOT . UIDENT [ error WHEN VAL UNDERSCORE UIDENT TYPE TRUE SUBTRACTIVE STRING SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION OPEN MODULE LPAREN LIDENT LET LBRACKET LBRACE INT INCLUDE GREATERRBRACKET FLOAT FALSE EXTERNAL EXCEPTION EQUAL END DOT DEF COMMA COLONCOLON COLON CLASS CHAR BAR AS ]
-- On UIDENT shift to state 78

State 78:
mod_longident -> mod_longident DOT UIDENT . [ error WITH WHILE WHEN VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 INCLUDE IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production mod_longident -> mod_longident DOT UIDENT
-- On WITH reduce production mod_longident -> mod_longident DOT UIDENT
-- On WHILE reduce production mod_longident -> mod_longident DOT UIDENT
-- On WHEN reduce production mod_longident -> mod_longident DOT UIDENT
-- On VIRTUAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On VAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On UNDERSCORE reduce production mod_longident -> mod_longident DOT UIDENT
-- On UIDENT reduce production mod_longident -> mod_longident DOT UIDENT
-- On TYPE reduce production mod_longident -> mod_longident DOT UIDENT
-- On TRY reduce production mod_longident -> mod_longident DOT UIDENT
-- On TRUE reduce production mod_longident -> mod_longident DOT UIDENT
-- On TO reduce production mod_longident -> mod_longident DOT UIDENT
-- On SUBTRACTIVE reduce production mod_longident -> mod_longident DOT UIDENT
-- On STRING reduce production mod_longident -> mod_longident DOT UIDENT
-- On STAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On SHARP reduce production mod_longident -> mod_longident DOT UIDENT
-- On SEMISEMI reduce production mod_longident -> mod_longident DOT UIDENT
-- On SEMI reduce production mod_longident -> mod_longident DOT UIDENT
-- On RPAREN reduce production mod_longident -> mod_longident DOT UIDENT
-- On RBRACKET reduce production mod_longident -> mod_longident DOT UIDENT
-- On RBRACE reduce production mod_longident -> mod_longident DOT UIDENT
-- On QUESTION reduce production mod_longident -> mod_longident DOT UIDENT
-- On PREFIXOP reduce production mod_longident -> mod_longident DOT UIDENT
-- On PARSER reduce production mod_longident -> mod_longident DOT UIDENT
-- On OR reduce production mod_longident -> mod_longident DOT UIDENT
-- On OPEN reduce production mod_longident -> mod_longident DOT UIDENT
-- On NEW reduce production mod_longident -> mod_longident DOT UIDENT
-- On MODULE reduce production mod_longident -> mod_longident DOT UIDENT
-- On METHOD reduce production mod_longident -> mod_longident DOT UIDENT
-- On MATCH reduce production mod_longident -> mod_longident DOT UIDENT
-- On LPAREN reduce production mod_longident -> mod_longident DOT UIDENT
-- On LOC reduce production mod_longident -> mod_longident DOT UIDENT
-- On LIDENT reduce production mod_longident -> mod_longident DOT UIDENT
-- On LET reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSLESSGREATERGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSLESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESSGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On LESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKETLESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKETBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACKET reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACELESS reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACEBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On LBRACE reduce production mod_longident -> mod_longident DOT UIDENT
-- On LAZY reduce production mod_longident -> mod_longident DOT UIDENT
-- On INT reduce production mod_longident -> mod_longident DOT UIDENT
-- On INHERIT reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP4 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP3 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP2 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP1 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INFIXOP0 reduce production mod_longident -> mod_longident DOT UIDENT
-- On INCLUDE reduce production mod_longident -> mod_longident DOT UIDENT
-- On IN reduce production mod_longident -> mod_longident DOT UIDENT
-- On IF reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATERRBRACKET reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATERRBRACE reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATERGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On GREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On FUNCTION reduce production mod_longident -> mod_longident DOT UIDENT
-- On FUN reduce production mod_longident -> mod_longident DOT UIDENT
-- On FOR reduce production mod_longident -> mod_longident DOT UIDENT
-- On FLOAT reduce production mod_longident -> mod_longident DOT UIDENT
-- On FALSE reduce production mod_longident -> mod_longident DOT UIDENT
-- On EXTERNAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On EXCEPTION reduce production mod_longident -> mod_longident DOT UIDENT
-- On EQUAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On EOF reduce production mod_longident -> mod_longident DOT UIDENT
-- On END reduce production mod_longident -> mod_longident DOT UIDENT
-- On ELSE reduce production mod_longident -> mod_longident DOT UIDENT
-- On DOT reduce production mod_longident -> mod_longident DOT UIDENT
-- On DONE reduce production mod_longident -> mod_longident DOT UIDENT
-- On DEF reduce production mod_longident -> mod_longident DOT UIDENT
-- On COMMA reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONGREATER reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONEQUAL reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLONCOLON reduce production mod_longident -> mod_longident DOT UIDENT
-- On COLON reduce production mod_longident -> mod_longident DOT UIDENT
-- On CLASS reduce production mod_longident -> mod_longident DOT UIDENT
-- On CHAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On BEGIN reduce production mod_longident -> mod_longident DOT UIDENT
-- On BARRBRACKET reduce production mod_longident -> mod_longident DOT UIDENT
-- On BARBAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On BAR reduce production mod_longident -> mod_longident DOT UIDENT
-- On ASSERT reduce production mod_longident -> mod_longident DOT UIDENT
-- On AS reduce production mod_longident -> mod_longident DOT UIDENT
-- On AND reduce production mod_longident -> mod_longident DOT UIDENT
-- On AMPERSAND reduce production mod_longident -> mod_longident DOT UIDENT
-- On AMPERAMPER reduce production mod_longident -> mod_longident DOT UIDENT

State 79:
pattern -> constr_longident . pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> constr_longident . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 80
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81
-- On error reduce production simple_pattern -> constr_longident
-- On WHEN reduce production simple_pattern -> constr_longident
-- On SEMI reduce production simple_pattern -> constr_longident
-- On RPAREN reduce production simple_pattern -> constr_longident
-- On RBRACKET reduce production simple_pattern -> constr_longident
-- On RBRACE reduce production simple_pattern -> constr_longident
-- On QUESTION reduce production simple_pattern -> constr_longident
-- On GREATERRBRACKET reduce production simple_pattern -> constr_longident
-- On EQUAL reduce production simple_pattern -> constr_longident
-- On COMMA reduce production simple_pattern -> constr_longident
-- On COLONCOLON reduce production simple_pattern -> constr_longident
-- On COLON reduce production simple_pattern -> constr_longident
-- On BAR reduce production simple_pattern -> constr_longident
-- On AS reduce production simple_pattern -> constr_longident

State 80:
pattern -> pattern . AS val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> constr_longident pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production pattern -> constr_longident pattern
-- On WHEN reduce production pattern -> constr_longident pattern
-- On SEMI reduce production pattern -> constr_longident pattern
-- On RPAREN reduce production pattern -> constr_longident pattern
-- On RBRACKET reduce production pattern -> constr_longident pattern
-- On RBRACE reduce production pattern -> constr_longident pattern
-- On QUESTION reduce production pattern -> constr_longident pattern
-- On GREATERRBRACKET reduce production pattern -> constr_longident pattern
-- On EQUAL reduce production pattern -> constr_longident pattern
-- On COMMA reduce production pattern -> constr_longident pattern
-- On COLONCOLON reduce production pattern -> constr_longident pattern
-- On COLON reduce production pattern -> constr_longident pattern
-- On BAR reduce production pattern -> constr_longident pattern
-- On AS reduce production pattern -> constr_longident pattern

State 81:
signed_constant -> constant . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production signed_constant -> constant
-- On WHEN reduce production signed_constant -> constant
-- On SEMI reduce production signed_constant -> constant
-- On RPAREN reduce production signed_constant -> constant
-- On RBRACKET reduce production signed_constant -> constant
-- On RBRACE reduce production signed_constant -> constant
-- On QUESTION reduce production signed_constant -> constant
-- On GREATERRBRACKET reduce production signed_constant -> constant
-- On EQUAL reduce production signed_constant -> constant
-- On COMMA reduce production signed_constant -> constant
-- On COLONCOLON reduce production signed_constant -> constant
-- On COLON reduce production signed_constant -> constant
-- On BAR reduce production signed_constant -> constant
-- On AS reduce production signed_constant -> constant

State 82:
lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern . [ error SEMI RBRACE ]
pattern -> pattern . AS val_ident [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern
-- On SEMI reduce production lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern
-- On RBRACE reduce production lbl_pattern_list -> lbl_pattern_list SEMI label_longident EQUAL pattern

State 83:
pattern_comma_list -> pattern COMMA . pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 84
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 84:
pattern -> pattern . AS val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On COLONCOLON shift to state 74
-- On error reduce production pattern_comma_list -> pattern COMMA pattern
-- On WHEN reduce production pattern_comma_list -> pattern COMMA pattern
-- On SEMI reduce production pattern_comma_list -> pattern COMMA pattern
-- On RPAREN reduce production pattern_comma_list -> pattern COMMA pattern
-- On RBRACKET reduce production pattern_comma_list -> pattern COMMA pattern
-- On RBRACE reduce production pattern_comma_list -> pattern COMMA pattern
-- On QUESTION reduce production pattern_comma_list -> pattern COMMA pattern
-- On GREATERRBRACKET reduce production pattern_comma_list -> pattern COMMA pattern
-- On EQUAL reduce production pattern_comma_list -> pattern COMMA pattern
-- On COMMA reduce production pattern_comma_list -> pattern COMMA pattern
-- On COLON reduce production pattern_comma_list -> pattern COMMA pattern
-- On BAR reduce production pattern_comma_list -> pattern COMMA pattern
-- On AS reduce production pattern_comma_list -> pattern COMMA pattern

State 85:
pattern -> pattern BAR . pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 86
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 86:
pattern -> pattern . AS val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern BAR pattern . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On error reduce production pattern -> pattern BAR pattern
-- On WHEN reduce production pattern -> pattern BAR pattern
-- On SEMI reduce production pattern -> pattern BAR pattern
-- On RPAREN reduce production pattern -> pattern BAR pattern
-- On RBRACKET reduce production pattern -> pattern BAR pattern
-- On RBRACE reduce production pattern -> pattern BAR pattern
-- On QUESTION reduce production pattern -> pattern BAR pattern
-- On GREATERRBRACKET reduce production pattern -> pattern BAR pattern
-- On EQUAL reduce production pattern -> pattern BAR pattern
-- On COLON reduce production pattern -> pattern BAR pattern
-- On BAR reduce production pattern -> pattern BAR pattern
-- On AS reduce production pattern -> pattern BAR pattern

State 87:
pattern -> pattern AS . val_ident [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On LPAREN shift to state 88
-- On LIDENT shift to state 47
-- On val_ident shift to state 103

State 88:
val_ident -> LPAREN . operator RPAREN [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 89
-- On STAR shift to state 41
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On operator shift to state 101

State 89:
operator -> SUBTRACTIVE . [ RPAREN ]
-- On RPAREN reduce production operator -> SUBTRACTIVE

State 90:
operator -> INFIXOP4 . [ RPAREN ]
-- On RPAREN reduce production operator -> INFIXOP4

State 91:
operator -> INFIXOP3 . [ RPAREN ]
-- On RPAREN reduce production operator -> INFIXOP3

State 92:
operator -> INFIXOP2 . [ RPAREN ]
-- On RPAREN reduce production operator -> INFIXOP2

State 93:
operator -> INFIXOP1 . [ RPAREN ]
-- On RPAREN reduce production operator -> INFIXOP1

State 94:
operator -> INFIXOP0 . [ RPAREN ]
-- On RPAREN reduce production operator -> INFIXOP0

State 95:
operator -> GREATER . [ RPAREN ]
-- On RPAREN reduce production operator -> GREATER

State 96:
operator -> EQUAL . [ RPAREN ]
-- On RPAREN reduce production operator -> EQUAL

State 97:
operator -> COLONEQUAL . [ RPAREN ]
-- On RPAREN reduce production operator -> COLONEQUAL

State 98:
operator -> BARBAR . [ RPAREN ]
-- On RPAREN reduce production operator -> BARBAR

State 99:
operator -> AMPERSAND . [ RPAREN ]
-- On RPAREN reduce production operator -> AMPERSAND

State 100:
operator -> AMPERAMPER . [ RPAREN ]
-- On RPAREN reduce production operator -> AMPERAMPER

State 101:
val_ident -> LPAREN operator . RPAREN [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 102

State 102:
val_ident -> LPAREN operator RPAREN . [ error WITH WHILE WHEN VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production val_ident -> LPAREN operator RPAREN
-- On WITH reduce production val_ident -> LPAREN operator RPAREN
-- On WHILE reduce production val_ident -> LPAREN operator RPAREN
-- On WHEN reduce production val_ident -> LPAREN operator RPAREN
-- On VIRTUAL reduce production val_ident -> LPAREN operator RPAREN
-- On VAL reduce production val_ident -> LPAREN operator RPAREN
-- On UIDENT reduce production val_ident -> LPAREN operator RPAREN
-- On TYPE reduce production val_ident -> LPAREN operator RPAREN
-- On TRY reduce production val_ident -> LPAREN operator RPAREN
-- On TRUE reduce production val_ident -> LPAREN operator RPAREN
-- On TO reduce production val_ident -> LPAREN operator RPAREN
-- On SUBTRACTIVE reduce production val_ident -> LPAREN operator RPAREN
-- On STRING reduce production val_ident -> LPAREN operator RPAREN
-- On STAR reduce production val_ident -> LPAREN operator RPAREN
-- On SHARP reduce production val_ident -> LPAREN operator RPAREN
-- On SEMISEMI reduce production val_ident -> LPAREN operator RPAREN
-- On SEMI reduce production val_ident -> LPAREN operator RPAREN
-- On RPAREN reduce production val_ident -> LPAREN operator RPAREN
-- On RBRACKET reduce production val_ident -> LPAREN operator RPAREN
-- On RBRACE reduce production val_ident -> LPAREN operator RPAREN
-- On QUESTION reduce production val_ident -> LPAREN operator RPAREN
-- On PREFIXOP reduce production val_ident -> LPAREN operator RPAREN
-- On PARSER reduce production val_ident -> LPAREN operator RPAREN
-- On OR reduce production val_ident -> LPAREN operator RPAREN
-- On OPEN reduce production val_ident -> LPAREN operator RPAREN
-- On NEW reduce production val_ident -> LPAREN operator RPAREN
-- On MODULE reduce production val_ident -> LPAREN operator RPAREN
-- On METHOD reduce production val_ident -> LPAREN operator RPAREN
-- On MATCH reduce production val_ident -> LPAREN operator RPAREN
-- On LPAREN reduce production val_ident -> LPAREN operator RPAREN
-- On LOC reduce production val_ident -> LPAREN operator RPAREN
-- On LIDENT reduce production val_ident -> LPAREN operator RPAREN
-- On LET reduce production val_ident -> LPAREN operator RPAREN
-- On LESSLESSGREATERGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On LESSLESS reduce production val_ident -> LPAREN operator RPAREN
-- On LESSGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On LESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKETLESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKETBAR reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKET reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACELESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACEBAR reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACE reduce production val_ident -> LPAREN operator RPAREN
-- On LAZY reduce production val_ident -> LPAREN operator RPAREN
-- On INT reduce production val_ident -> LPAREN operator RPAREN
-- On INHERIT reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP4 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP3 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP2 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP1 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP0 reduce production val_ident -> LPAREN operator RPAREN
-- On IN reduce production val_ident -> LPAREN operator RPAREN
-- On IF reduce production val_ident -> LPAREN operator RPAREN
-- On GREATERRBRACKET reduce production val_ident -> LPAREN operator RPAREN
-- On GREATERRBRACE reduce production val_ident -> LPAREN operator RPAREN
-- On GREATERGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On GREATER reduce production val_ident -> LPAREN operator RPAREN
-- On FUNCTION reduce production val_ident -> LPAREN operator RPAREN
-- On FUN reduce production val_ident -> LPAREN operator RPAREN
-- On FOR reduce production val_ident -> LPAREN operator RPAREN
-- On FLOAT reduce production val_ident -> LPAREN operator RPAREN
-- On FALSE reduce production val_ident -> LPAREN operator RPAREN
-- On EXTERNAL reduce production val_ident -> LPAREN operator RPAREN
-- On EXCEPTION reduce production val_ident -> LPAREN operator RPAREN
-- On EQUAL reduce production val_ident -> LPAREN operator RPAREN
-- On EOF reduce production val_ident -> LPAREN operator RPAREN
-- On END reduce production val_ident -> LPAREN operator RPAREN
-- On ELSE reduce production val_ident -> LPAREN operator RPAREN
-- On DOT reduce production val_ident -> LPAREN operator RPAREN
-- On DONE reduce production val_ident -> LPAREN operator RPAREN
-- On DEF reduce production val_ident -> LPAREN operator RPAREN
-- On COMMA reduce production val_ident -> LPAREN operator RPAREN
-- On COLONGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On COLONEQUAL reduce production val_ident -> LPAREN operator RPAREN
-- On COLONCOLON reduce production val_ident -> LPAREN operator RPAREN
-- On COLON reduce production val_ident -> LPAREN operator RPAREN
-- On CLASS reduce production val_ident -> LPAREN operator RPAREN
-- On CHAR reduce production val_ident -> LPAREN operator RPAREN
-- On BEGIN reduce production val_ident -> LPAREN operator RPAREN
-- On BARRBRACKET reduce production val_ident -> LPAREN operator RPAREN
-- On BARBAR reduce production val_ident -> LPAREN operator RPAREN
-- On BAR reduce production val_ident -> LPAREN operator RPAREN
-- On ASSERT reduce production val_ident -> LPAREN operator RPAREN
-- On AS reduce production val_ident -> LPAREN operator RPAREN
-- On AND reduce production val_ident -> LPAREN operator RPAREN
-- On AMPERSAND reduce production val_ident -> LPAREN operator RPAREN
-- On AMPERAMPER reduce production val_ident -> LPAREN operator RPAREN

State 103:
pattern -> pattern AS val_ident . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production pattern -> pattern AS val_ident
-- On WHEN reduce production pattern -> pattern AS val_ident
-- On SEMI reduce production pattern -> pattern AS val_ident
-- On RPAREN reduce production pattern -> pattern AS val_ident
-- On RBRACKET reduce production pattern -> pattern AS val_ident
-- On RBRACE reduce production pattern -> pattern AS val_ident
-- On QUESTION reduce production pattern -> pattern AS val_ident
-- On GREATERRBRACKET reduce production pattern -> pattern AS val_ident
-- On EQUAL reduce production pattern -> pattern AS val_ident
-- On COMMA reduce production pattern -> pattern AS val_ident
-- On COLONCOLON reduce production pattern -> pattern AS val_ident
-- On COLON reduce production pattern -> pattern AS val_ident
-- On BAR reduce production pattern -> pattern AS val_ident
-- On AS reduce production pattern -> pattern AS val_ident

State 104:
simple_pattern -> LBRACE lbl_pattern_list opt_semi . RBRACE [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list opt_semi . error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error shift to state 105
-- On RBRACE shift to state 106

State 105:
simple_pattern -> LBRACE lbl_pattern_list opt_semi error . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On WHEN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On SEMI reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On RPAREN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On RBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On RBRACE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On QUESTION reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On GREATERRBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On EQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COMMA reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLONCOLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On BAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On AS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error

State 106:
simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On WHEN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On SEMI reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On RPAREN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On RBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On RBRACE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On QUESTION reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On GREATERRBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On EQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COMMA reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLONCOLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On BAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On AS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE

State 107:
lbl_pattern_list -> label_longident . EQUAL pattern [ error SEMI RBRACE ]
-- On EQUAL shift to state 108

State 108:
lbl_pattern_list -> label_longident EQUAL . pattern [ error SEMI RBRACE ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 109
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 109:
lbl_pattern_list -> label_longident EQUAL pattern . [ error SEMI RBRACE ]
pattern -> pattern . AS val_ident [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACE COMMA COLONCOLON BAR AS ]
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production lbl_pattern_list -> label_longident EQUAL pattern
-- On SEMI reduce production lbl_pattern_list -> label_longident EQUAL pattern
-- On RBRACE reduce production lbl_pattern_list -> label_longident EQUAL pattern

State 110:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI RBRACKET ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi RBRACKET [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On SEMI shift to state 111
-- On opt_semi shift to state 113
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 111:
opt_semi -> SEMI . [ error RBRACKET ]
pattern_semi_list -> pattern_semi_list SEMI . pattern [ error SEMI RBRACKET ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 112
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81
-- On error reduce production opt_semi -> SEMI
-- On RBRACKET reduce production opt_semi -> SEMI

State 112:
pattern -> pattern . AS val_ident [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern_semi_list -> pattern_semi_list SEMI pattern . [ error SEMI RBRACKET ]
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production pattern_semi_list -> pattern_semi_list SEMI pattern
-- On SEMI reduce production pattern_semi_list -> pattern_semi_list SEMI pattern
-- On RBRACKET reduce production pattern_semi_list -> pattern_semi_list SEMI pattern

State 113:
simple_pattern -> LBRACKET pattern_semi_list opt_semi . RBRACKET [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list opt_semi . error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error shift to state 114
-- On RBRACKET shift to state 115

State 114:
simple_pattern -> LBRACKET pattern_semi_list opt_semi error . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On WHEN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On SEMI reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On RPAREN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On RBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On RBRACE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On QUESTION reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On GREATERRBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On EQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COMMA reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLONCOLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On BAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On AS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error

State 115:
simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On WHEN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On SEMI reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On RPAREN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On RBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On RBRACE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On QUESTION reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On GREATERRBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On EQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COMMA reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLONCOLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On BAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On AS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET

State 116:
pattern -> pattern . AS val_ident [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI RBRACKET COMMA COLONCOLON BAR AS ]
pattern_semi_list -> pattern . [ error SEMI RBRACKET ]
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production pattern_semi_list -> pattern
-- On SEMI reduce production pattern_semi_list -> pattern
-- On RBRACKET reduce production pattern_semi_list -> pattern

State 117:
pattern -> pattern . AS val_ident [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error shift to state 118
-- On RPAREN shift to state 119
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On COLON shift to state 120
-- On BAR shift to state 85
-- On AS shift to state 87

State 118:
simple_pattern -> LPAREN pattern error . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LPAREN pattern error
-- On WHEN reduce production simple_pattern -> LPAREN pattern error
-- On SEMI reduce production simple_pattern -> LPAREN pattern error
-- On RPAREN reduce production simple_pattern -> LPAREN pattern error
-- On RBRACKET reduce production simple_pattern -> LPAREN pattern error
-- On RBRACE reduce production simple_pattern -> LPAREN pattern error
-- On QUESTION reduce production simple_pattern -> LPAREN pattern error
-- On GREATERRBRACKET reduce production simple_pattern -> LPAREN pattern error
-- On EQUAL reduce production simple_pattern -> LPAREN pattern error
-- On COMMA reduce production simple_pattern -> LPAREN pattern error
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern error
-- On COLON reduce production simple_pattern -> LPAREN pattern error
-- On BAR reduce production simple_pattern -> LPAREN pattern error
-- On AS reduce production simple_pattern -> LPAREN pattern error

State 119:
simple_pattern -> LPAREN pattern RPAREN . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LPAREN pattern RPAREN
-- On WHEN reduce production simple_pattern -> LPAREN pattern RPAREN
-- On SEMI reduce production simple_pattern -> LPAREN pattern RPAREN
-- On RPAREN reduce production simple_pattern -> LPAREN pattern RPAREN
-- On RBRACKET reduce production simple_pattern -> LPAREN pattern RPAREN
-- On RBRACE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On QUESTION reduce production simple_pattern -> LPAREN pattern RPAREN
-- On GREATERRBRACKET reduce production simple_pattern -> LPAREN pattern RPAREN
-- On EQUAL reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COMMA reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLON reduce production simple_pattern -> LPAREN pattern RPAREN
-- On BAR reduce production simple_pattern -> LPAREN pattern RPAREN
-- On AS reduce production simple_pattern -> LPAREN pattern RPAREN

State 120:
simple_pattern -> LPAREN pattern COLON . core_type RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern COLON . core_type error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 228

State 121:
simple_core_type -> UNDERSCORE . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> UNDERSCORE
-- On WITH reduce production simple_core_type -> UNDERSCORE
-- On VIRTUAL reduce production simple_core_type -> UNDERSCORE
-- On VAL reduce production simple_core_type -> UNDERSCORE
-- On UIDENT reduce production simple_core_type -> UNDERSCORE
-- On TYPE reduce production simple_core_type -> UNDERSCORE
-- On STAR reduce production simple_core_type -> UNDERSCORE
-- On SHARP reduce production simple_core_type -> UNDERSCORE
-- On SEMISEMI reduce production simple_core_type -> UNDERSCORE
-- On RPAREN reduce production simple_core_type -> UNDERSCORE
-- On OPEN reduce production simple_core_type -> UNDERSCORE
-- On MODULE reduce production simple_core_type -> UNDERSCORE
-- On MINUSGREATER reduce production simple_core_type -> UNDERSCORE
-- On METHOD reduce production simple_core_type -> UNDERSCORE
-- On LIDENT reduce production simple_core_type -> UNDERSCORE
-- On LET reduce production simple_core_type -> UNDERSCORE
-- On INHERIT reduce production simple_core_type -> UNDERSCORE
-- On INCLUDE reduce production simple_core_type -> UNDERSCORE
-- On EXTERNAL reduce production simple_core_type -> UNDERSCORE
-- On EXCEPTION reduce production simple_core_type -> UNDERSCORE
-- On EQUAL reduce production simple_core_type -> UNDERSCORE
-- On END reduce production simple_core_type -> UNDERSCORE
-- On DEF reduce production simple_core_type -> UNDERSCORE
-- On CONSTRAINT reduce production simple_core_type -> UNDERSCORE
-- On CLASS reduce production simple_core_type -> UNDERSCORE
-- On BAR reduce production simple_core_type -> UNDERSCORE
-- On AS reduce production simple_core_type -> UNDERSCORE
-- On AND reduce production simple_core_type -> UNDERSCORE

State 122:
mod_ext_longident -> UIDENT . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On WITH reduce production mod_ext_longident -> UIDENT
-- On VAL reduce production mod_ext_longident -> UIDENT
-- On TYPE reduce production mod_ext_longident -> UIDENT
-- On SHARP reduce production mod_ext_longident -> UIDENT
-- On SEMISEMI reduce production mod_ext_longident -> UIDENT
-- On RPAREN reduce production mod_ext_longident -> UIDENT
-- On OPEN reduce production mod_ext_longident -> UIDENT
-- On MODULE reduce production mod_ext_longident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production mod_ext_longident -> UIDENT
-- On INCLUDE reduce production mod_ext_longident -> UIDENT
-- On EXTERNAL reduce production mod_ext_longident -> UIDENT
-- On EXCEPTION reduce production mod_ext_longident -> UIDENT
-- On EQUAL reduce production mod_ext_longident -> UIDENT
-- On EOF reduce production mod_ext_longident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production mod_ext_longident -> UIDENT
-- On CLASS reduce production mod_ext_longident -> UIDENT
-- On AND reduce production mod_ext_longident -> UIDENT

State 123:
simple_core_type -> SHARP . class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 24
-- On mod_longident shift to state 25
-- On class_longident shift to state 124

State 124:
simple_core_type -> SHARP class_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> SHARP class_longident
-- On WITH reduce production simple_core_type -> SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> SHARP class_longident
-- On VAL reduce production simple_core_type -> SHARP class_longident
-- On UIDENT reduce production simple_core_type -> SHARP class_longident
-- On TYPE reduce production simple_core_type -> SHARP class_longident
-- On STAR reduce production simple_core_type -> SHARP class_longident
-- On SHARP reduce production simple_core_type -> SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> SHARP class_longident
-- On RPAREN reduce production simple_core_type -> SHARP class_longident
-- On OPEN reduce production simple_core_type -> SHARP class_longident
-- On MODULE reduce production simple_core_type -> SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> SHARP class_longident
-- On METHOD reduce production simple_core_type -> SHARP class_longident
-- On LIDENT reduce production simple_core_type -> SHARP class_longident
-- On LET reduce production simple_core_type -> SHARP class_longident
-- On INHERIT reduce production simple_core_type -> SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> SHARP class_longident
-- On EQUAL reduce production simple_core_type -> SHARP class_longident
-- On END reduce production simple_core_type -> SHARP class_longident
-- On DEF reduce production simple_core_type -> SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> SHARP class_longident
-- On CLASS reduce production simple_core_type -> SHARP class_longident
-- On BAR reduce production simple_core_type -> SHARP class_longident
-- On AS reduce production simple_core_type -> SHARP class_longident
-- On AND reduce production simple_core_type -> SHARP class_longident

State 125:
simple_core_type -> QUOTE . ident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 126
-- On LIDENT shift to state 127
-- On ident shift to state 128

State 126:
ident -> UIDENT . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production ident -> UIDENT
-- On WITH reduce production ident -> UIDENT
-- On VIRTUAL reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On UIDENT reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On STAR reduce production ident -> UIDENT
-- On SHARP reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On MINUSGREATER reduce production ident -> UIDENT
-- On METHOD reduce production ident -> UIDENT
-- On LIDENT reduce production ident -> UIDENT
-- On LET reduce production ident -> UIDENT
-- On INHERIT reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On EQUAL reduce production ident -> UIDENT
-- On END reduce production ident -> UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CONSTRAINT reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT
-- On BAR reduce production ident -> UIDENT
-- On AS reduce production ident -> UIDENT
-- On AND reduce production ident -> UIDENT

State 127:
ident -> LIDENT . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production ident -> LIDENT
-- On WITH reduce production ident -> LIDENT
-- On VIRTUAL reduce production ident -> LIDENT
-- On VAL reduce production ident -> LIDENT
-- On UIDENT reduce production ident -> LIDENT
-- On TYPE reduce production ident -> LIDENT
-- On STAR reduce production ident -> LIDENT
-- On SHARP reduce production ident -> LIDENT
-- On SEMISEMI reduce production ident -> LIDENT
-- On RPAREN reduce production ident -> LIDENT
-- On OPEN reduce production ident -> LIDENT
-- On MODULE reduce production ident -> LIDENT
-- On MINUSGREATER reduce production ident -> LIDENT
-- On METHOD reduce production ident -> LIDENT
-- On LIDENT reduce production ident -> LIDENT
-- On LET reduce production ident -> LIDENT
-- On INHERIT reduce production ident -> LIDENT
-- On INCLUDE reduce production ident -> LIDENT
-- On EXTERNAL reduce production ident -> LIDENT
-- On EXCEPTION reduce production ident -> LIDENT
-- On EQUAL reduce production ident -> LIDENT
-- On END reduce production ident -> LIDENT
-- On DEF reduce production ident -> LIDENT
-- On CONSTRAINT reduce production ident -> LIDENT
-- On CLASS reduce production ident -> LIDENT
-- On BAR reduce production ident -> LIDENT
-- On AS reduce production ident -> LIDENT
-- On AND reduce production ident -> LIDENT

State 128:
simple_core_type -> QUOTE ident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> QUOTE ident
-- On WITH reduce production simple_core_type -> QUOTE ident
-- On VIRTUAL reduce production simple_core_type -> QUOTE ident
-- On VAL reduce production simple_core_type -> QUOTE ident
-- On UIDENT reduce production simple_core_type -> QUOTE ident
-- On TYPE reduce production simple_core_type -> QUOTE ident
-- On STAR reduce production simple_core_type -> QUOTE ident
-- On SHARP reduce production simple_core_type -> QUOTE ident
-- On SEMISEMI reduce production simple_core_type -> QUOTE ident
-- On RPAREN reduce production simple_core_type -> QUOTE ident
-- On OPEN reduce production simple_core_type -> QUOTE ident
-- On MODULE reduce production simple_core_type -> QUOTE ident
-- On MINUSGREATER reduce production simple_core_type -> QUOTE ident
-- On METHOD reduce production simple_core_type -> QUOTE ident
-- On LIDENT reduce production simple_core_type -> QUOTE ident
-- On LET reduce production simple_core_type -> QUOTE ident
-- On INHERIT reduce production simple_core_type -> QUOTE ident
-- On INCLUDE reduce production simple_core_type -> QUOTE ident
-- On EXTERNAL reduce production simple_core_type -> QUOTE ident
-- On EXCEPTION reduce production simple_core_type -> QUOTE ident
-- On EQUAL reduce production simple_core_type -> QUOTE ident
-- On END reduce production simple_core_type -> QUOTE ident
-- On DEF reduce production simple_core_type -> QUOTE ident
-- On CONSTRAINT reduce production simple_core_type -> QUOTE ident
-- On CLASS reduce production simple_core_type -> QUOTE ident
-- On BAR reduce production simple_core_type -> QUOTE ident
-- On AS reduce production simple_core_type -> QUOTE ident
-- On AND reduce production simple_core_type -> QUOTE ident

State 129:
simple_core_type -> LPAREN . core_type_comma_list RPAREN type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
simple_core_type -> LPAREN . core_type RPAREN [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 197
-- On core_type shift to state 206

State 130:
simple_core_type -> UNDERSCORE . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> UNDERSCORE
-- On VIRTUAL reduce production simple_core_type -> UNDERSCORE
-- On VAL reduce production simple_core_type -> UNDERSCORE
-- On UIDENT reduce production simple_core_type -> UNDERSCORE
-- On TYPE reduce production simple_core_type -> UNDERSCORE
-- On STAR reduce production simple_core_type -> UNDERSCORE
-- On SHARP reduce production simple_core_type -> UNDERSCORE
-- On SEMISEMI reduce production simple_core_type -> UNDERSCORE
-- On SEMI reduce production simple_core_type -> UNDERSCORE
-- On RPAREN reduce production simple_core_type -> UNDERSCORE
-- On RBRACE reduce production simple_core_type -> UNDERSCORE
-- On OPEN reduce production simple_core_type -> UNDERSCORE
-- On MODULE reduce production simple_core_type -> UNDERSCORE
-- On MINUSGREATER reduce production simple_core_type -> UNDERSCORE
-- On METHOD reduce production simple_core_type -> UNDERSCORE
-- On LIDENT reduce production simple_core_type -> UNDERSCORE
-- On LET reduce production simple_core_type -> UNDERSCORE
-- On INHERIT reduce production simple_core_type -> UNDERSCORE
-- On INCLUDE reduce production simple_core_type -> UNDERSCORE
-- On GREATERGREATER reduce production simple_core_type -> UNDERSCORE
-- On GREATER reduce production simple_core_type -> UNDERSCORE
-- On EXTERNAL reduce production simple_core_type -> UNDERSCORE
-- On EXCEPTION reduce production simple_core_type -> UNDERSCORE
-- On EQUALGREATER reduce production simple_core_type -> UNDERSCORE
-- On EQUAL reduce production simple_core_type -> UNDERSCORE
-- On EOF reduce production simple_core_type -> UNDERSCORE
-- On END reduce production simple_core_type -> UNDERSCORE
-- On DEF reduce production simple_core_type -> UNDERSCORE
-- On CONSTRAINT reduce production simple_core_type -> UNDERSCORE
-- On COMMA reduce production simple_core_type -> UNDERSCORE
-- On COLONGREATER reduce production simple_core_type -> UNDERSCORE
-- On CLASS reduce production simple_core_type -> UNDERSCORE
-- On BAR reduce production simple_core_type -> UNDERSCORE
-- On AS reduce production simple_core_type -> UNDERSCORE
-- On AND reduce production simple_core_type -> UNDERSCORE

State 131:
simple_core_type -> SHARP . class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 132

State 132:
simple_core_type -> SHARP class_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> SHARP class_longident
-- On VAL reduce production simple_core_type -> SHARP class_longident
-- On UIDENT reduce production simple_core_type -> SHARP class_longident
-- On TYPE reduce production simple_core_type -> SHARP class_longident
-- On STAR reduce production simple_core_type -> SHARP class_longident
-- On SHARP reduce production simple_core_type -> SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> SHARP class_longident
-- On SEMI reduce production simple_core_type -> SHARP class_longident
-- On RPAREN reduce production simple_core_type -> SHARP class_longident
-- On RBRACE reduce production simple_core_type -> SHARP class_longident
-- On OPEN reduce production simple_core_type -> SHARP class_longident
-- On MODULE reduce production simple_core_type -> SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> SHARP class_longident
-- On METHOD reduce production simple_core_type -> SHARP class_longident
-- On LIDENT reduce production simple_core_type -> SHARP class_longident
-- On LET reduce production simple_core_type -> SHARP class_longident
-- On INHERIT reduce production simple_core_type -> SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> SHARP class_longident
-- On GREATERGREATER reduce production simple_core_type -> SHARP class_longident
-- On GREATER reduce production simple_core_type -> SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> SHARP class_longident
-- On EQUALGREATER reduce production simple_core_type -> SHARP class_longident
-- On EQUAL reduce production simple_core_type -> SHARP class_longident
-- On EOF reduce production simple_core_type -> SHARP class_longident
-- On END reduce production simple_core_type -> SHARP class_longident
-- On DEF reduce production simple_core_type -> SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> SHARP class_longident
-- On COMMA reduce production simple_core_type -> SHARP class_longident
-- On COLONGREATER reduce production simple_core_type -> SHARP class_longident
-- On CLASS reduce production simple_core_type -> SHARP class_longident
-- On BAR reduce production simple_core_type -> SHARP class_longident
-- On AS reduce production simple_core_type -> SHARP class_longident
-- On AND reduce production simple_core_type -> SHARP class_longident

State 133:
simple_core_type -> QUOTE . ident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 136

State 134:
ident -> UIDENT . [ WITH VIRTUAL VAL UIDENT TYPE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LPAREN LIDENT LET INT INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production ident -> UIDENT
-- On VIRTUAL reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On UIDENT reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On STRING reduce production ident -> UIDENT
-- On STAR reduce production ident -> UIDENT
-- On SHARP reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On SEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On RBRACE reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On MINUSGREATER reduce production ident -> UIDENT
-- On METHOD reduce production ident -> UIDENT
-- On LPAREN reduce production ident -> UIDENT
-- On LIDENT reduce production ident -> UIDENT
-- On LET reduce production ident -> UIDENT
-- On INT reduce production ident -> UIDENT
-- On INHERIT reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On GREATERGREATER reduce production ident -> UIDENT
-- On GREATER reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On EQUALGREATER reduce production ident -> UIDENT
-- On EQUAL reduce production ident -> UIDENT
-- On EOF reduce production ident -> UIDENT
-- On END reduce production ident -> UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CONSTRAINT reduce production ident -> UIDENT
-- On COMMA reduce production ident -> UIDENT
-- On COLONGREATER reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT
-- On BAR reduce production ident -> UIDENT
-- On AS reduce production ident -> UIDENT
-- On AND reduce production ident -> UIDENT

State 135:
ident -> LIDENT . [ WITH VIRTUAL VAL UIDENT TYPE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LPAREN LIDENT LET INT INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production ident -> LIDENT
-- On VIRTUAL reduce production ident -> LIDENT
-- On VAL reduce production ident -> LIDENT
-- On UIDENT reduce production ident -> LIDENT
-- On TYPE reduce production ident -> LIDENT
-- On STRING reduce production ident -> LIDENT
-- On STAR reduce production ident -> LIDENT
-- On SHARP reduce production ident -> LIDENT
-- On SEMISEMI reduce production ident -> LIDENT
-- On SEMI reduce production ident -> LIDENT
-- On RPAREN reduce production ident -> LIDENT
-- On RBRACE reduce production ident -> LIDENT
-- On OPEN reduce production ident -> LIDENT
-- On MODULE reduce production ident -> LIDENT
-- On MINUSGREATER reduce production ident -> LIDENT
-- On METHOD reduce production ident -> LIDENT
-- On LPAREN reduce production ident -> LIDENT
-- On LIDENT reduce production ident -> LIDENT
-- On LET reduce production ident -> LIDENT
-- On INT reduce production ident -> LIDENT
-- On INHERIT reduce production ident -> LIDENT
-- On INCLUDE reduce production ident -> LIDENT
-- On GREATERGREATER reduce production ident -> LIDENT
-- On GREATER reduce production ident -> LIDENT
-- On EXTERNAL reduce production ident -> LIDENT
-- On EXCEPTION reduce production ident -> LIDENT
-- On EQUALGREATER reduce production ident -> LIDENT
-- On EQUAL reduce production ident -> LIDENT
-- On EOF reduce production ident -> LIDENT
-- On END reduce production ident -> LIDENT
-- On DEF reduce production ident -> LIDENT
-- On CONSTRAINT reduce production ident -> LIDENT
-- On COMMA reduce production ident -> LIDENT
-- On COLONGREATER reduce production ident -> LIDENT
-- On CLASS reduce production ident -> LIDENT
-- On BAR reduce production ident -> LIDENT
-- On AS reduce production ident -> LIDENT
-- On AND reduce production ident -> LIDENT

State 136:
simple_core_type -> QUOTE ident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> QUOTE ident
-- On VIRTUAL reduce production simple_core_type -> QUOTE ident
-- On VAL reduce production simple_core_type -> QUOTE ident
-- On UIDENT reduce production simple_core_type -> QUOTE ident
-- On TYPE reduce production simple_core_type -> QUOTE ident
-- On STAR reduce production simple_core_type -> QUOTE ident
-- On SHARP reduce production simple_core_type -> QUOTE ident
-- On SEMISEMI reduce production simple_core_type -> QUOTE ident
-- On SEMI reduce production simple_core_type -> QUOTE ident
-- On RPAREN reduce production simple_core_type -> QUOTE ident
-- On RBRACE reduce production simple_core_type -> QUOTE ident
-- On OPEN reduce production simple_core_type -> QUOTE ident
-- On MODULE reduce production simple_core_type -> QUOTE ident
-- On MINUSGREATER reduce production simple_core_type -> QUOTE ident
-- On METHOD reduce production simple_core_type -> QUOTE ident
-- On LIDENT reduce production simple_core_type -> QUOTE ident
-- On LET reduce production simple_core_type -> QUOTE ident
-- On INHERIT reduce production simple_core_type -> QUOTE ident
-- On INCLUDE reduce production simple_core_type -> QUOTE ident
-- On GREATERGREATER reduce production simple_core_type -> QUOTE ident
-- On GREATER reduce production simple_core_type -> QUOTE ident
-- On EXTERNAL reduce production simple_core_type -> QUOTE ident
-- On EXCEPTION reduce production simple_core_type -> QUOTE ident
-- On EQUALGREATER reduce production simple_core_type -> QUOTE ident
-- On EQUAL reduce production simple_core_type -> QUOTE ident
-- On EOF reduce production simple_core_type -> QUOTE ident
-- On END reduce production simple_core_type -> QUOTE ident
-- On DEF reduce production simple_core_type -> QUOTE ident
-- On CONSTRAINT reduce production simple_core_type -> QUOTE ident
-- On COMMA reduce production simple_core_type -> QUOTE ident
-- On COLONGREATER reduce production simple_core_type -> QUOTE ident
-- On CLASS reduce production simple_core_type -> QUOTE ident
-- On BAR reduce production simple_core_type -> QUOTE ident
-- On AS reduce production simple_core_type -> QUOTE ident
-- On AND reduce production simple_core_type -> QUOTE ident

State 137:
simple_core_type -> LPAREN . core_type_comma_list RPAREN type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
simple_core_type -> LPAREN . core_type RPAREN [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 186
-- On core_type shift to state 193

State 138:
type_longident -> LIDENT . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production type_longident -> LIDENT
-- On VIRTUAL reduce production type_longident -> LIDENT
-- On VAL reduce production type_longident -> LIDENT
-- On UIDENT reduce production type_longident -> LIDENT
-- On TYPE reduce production type_longident -> LIDENT
-- On STAR reduce production type_longident -> LIDENT
-- On SHARP reduce production type_longident -> LIDENT
-- On SEMISEMI reduce production type_longident -> LIDENT
-- On SEMI reduce production type_longident -> LIDENT
-- On RPAREN reduce production type_longident -> LIDENT
-- On RBRACE reduce production type_longident -> LIDENT
-- On OPEN reduce production type_longident -> LIDENT
-- On MODULE reduce production type_longident -> LIDENT
-- On MINUSGREATER reduce production type_longident -> LIDENT
-- On METHOD reduce production type_longident -> LIDENT
-- On LIDENT reduce production type_longident -> LIDENT
-- On LET reduce production type_longident -> LIDENT
-- On INHERIT reduce production type_longident -> LIDENT
-- On INCLUDE reduce production type_longident -> LIDENT
-- On GREATERGREATER reduce production type_longident -> LIDENT
-- On GREATER reduce production type_longident -> LIDENT
-- On EXTERNAL reduce production type_longident -> LIDENT
-- On EXCEPTION reduce production type_longident -> LIDENT
-- On EQUALGREATER reduce production type_longident -> LIDENT
-- On EQUAL reduce production type_longident -> LIDENT
-- On EOF reduce production type_longident -> LIDENT
-- On END reduce production type_longident -> LIDENT
-- On DEF reduce production type_longident -> LIDENT
-- On CONSTRAINT reduce production type_longident -> LIDENT
-- On COMMA reduce production type_longident -> LIDENT
-- On COLONGREATER reduce production type_longident -> LIDENT
-- On CLASS reduce production type_longident -> LIDENT
-- On BAR reduce production type_longident -> LIDENT
-- On AS reduce production type_longident -> LIDENT
-- On AND reduce production type_longident -> LIDENT

State 139:
core_type -> LESSLESS . channel_type GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type -> LESSLESS . channel_type EQUALGREATER core_type GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 177
-- On channel_type shift to state 178
-- On channel_tuple shift to state 183
-- On GREATERGREATER reduce production channel_type -> 
-- On EQUALGREATER reduce production channel_type -> 

State 140:
simple_core_type -> LESS . meth_list GREATER [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
simple_core_type -> LESS . GREATER [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On LIDENT shift to state 141
-- On GREATER shift to state 142
-- On DOTDOT shift to state 143
-- On meth_list shift to state 144
-- On label shift to state 146
-- On field shift to state 173

State 141:
label -> LIDENT . [ WITH WHILE VIRTUAL VAL UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production label -> LIDENT
-- On WHILE reduce production label -> LIDENT
-- On VIRTUAL reduce production label -> LIDENT
-- On VAL reduce production label -> LIDENT
-- On UNDERSCORE reduce production label -> LIDENT
-- On UIDENT reduce production label -> LIDENT
-- On TYPE reduce production label -> LIDENT
-- On TRY reduce production label -> LIDENT
-- On TRUE reduce production label -> LIDENT
-- On TO reduce production label -> LIDENT
-- On THEN reduce production label -> LIDENT
-- On SUBTRACTIVE reduce production label -> LIDENT
-- On STRING reduce production label -> LIDENT
-- On STAR reduce production label -> LIDENT
-- On SHARP reduce production label -> LIDENT
-- On SEMISEMI reduce production label -> LIDENT
-- On SEMI reduce production label -> LIDENT
-- On RPAREN reduce production label -> LIDENT
-- On PREFIXOP reduce production label -> LIDENT
-- On PARSER reduce production label -> LIDENT
-- On OR reduce production label -> LIDENT
-- On OPEN reduce production label -> LIDENT
-- On NEW reduce production label -> LIDENT
-- On MODULE reduce production label -> LIDENT
-- On MINUSGREATER reduce production label -> LIDENT
-- On METHOD reduce production label -> LIDENT
-- On MATCH reduce production label -> LIDENT
-- On LPAREN reduce production label -> LIDENT
-- On LOC reduce production label -> LIDENT
-- On LIDENT reduce production label -> LIDENT
-- On LET reduce production label -> LIDENT
-- On LESSLESSGREATERGREATER reduce production label -> LIDENT
-- On LESSLESS reduce production label -> LIDENT
-- On LESSGREATER reduce production label -> LIDENT
-- On LESS reduce production label -> LIDENT
-- On LBRACKETLESS reduce production label -> LIDENT
-- On LBRACKETBAR reduce production label -> LIDENT
-- On LBRACKET reduce production label -> LIDENT
-- On LBRACELESS reduce production label -> LIDENT
-- On LBRACEBAR reduce production label -> LIDENT
-- On LBRACE reduce production label -> LIDENT
-- On LAZY reduce production label -> LIDENT
-- On INT reduce production label -> LIDENT
-- On INHERIT reduce production label -> LIDENT
-- On INFIXOP4 reduce production label -> LIDENT
-- On INFIXOP3 reduce production label -> LIDENT
-- On INFIXOP2 reduce production label -> LIDENT
-- On INFIXOP1 reduce production label -> LIDENT
-- On INFIXOP0 reduce production label -> LIDENT
-- On IN reduce production label -> LIDENT
-- On IF reduce production label -> LIDENT
-- On GREATER reduce production label -> LIDENT
-- On FUNCTION reduce production label -> LIDENT
-- On FUN reduce production label -> LIDENT
-- On FOR reduce production label -> LIDENT
-- On FLOAT reduce production label -> LIDENT
-- On FALSE reduce production label -> LIDENT
-- On EXTERNAL reduce production label -> LIDENT
-- On EXCEPTION reduce production label -> LIDENT
-- On EQUAL reduce production label -> LIDENT
-- On EOF reduce production label -> LIDENT
-- On END reduce production label -> LIDENT
-- On ELSE reduce production label -> LIDENT
-- On DOWNTO reduce production label -> LIDENT
-- On DOT reduce production label -> LIDENT
-- On DO reduce production label -> LIDENT
-- On DEF reduce production label -> LIDENT
-- On COMMA reduce production label -> LIDENT
-- On COLONGREATER reduce production label -> LIDENT
-- On COLONEQUAL reduce production label -> LIDENT
-- On COLONCOLON reduce production label -> LIDENT
-- On COLON reduce production label -> LIDENT
-- On CLASS reduce production label -> LIDENT
-- On CHAR reduce production label -> LIDENT
-- On BEGIN reduce production label -> LIDENT
-- On BARBAR reduce production label -> LIDENT
-- On BAR reduce production label -> LIDENT
-- On ASSERT reduce production label -> LIDENT
-- On AND reduce production label -> LIDENT
-- On AMPERSAND reduce production label -> LIDENT
-- On AMPERAMPER reduce production label -> LIDENT

State 142:
simple_core_type -> LESS GREATER . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> LESS GREATER
-- On VIRTUAL reduce production simple_core_type -> LESS GREATER
-- On VAL reduce production simple_core_type -> LESS GREATER
-- On UIDENT reduce production simple_core_type -> LESS GREATER
-- On TYPE reduce production simple_core_type -> LESS GREATER
-- On STAR reduce production simple_core_type -> LESS GREATER
-- On SHARP reduce production simple_core_type -> LESS GREATER
-- On SEMISEMI reduce production simple_core_type -> LESS GREATER
-- On SEMI reduce production simple_core_type -> LESS GREATER
-- On RPAREN reduce production simple_core_type -> LESS GREATER
-- On RBRACE reduce production simple_core_type -> LESS GREATER
-- On OPEN reduce production simple_core_type -> LESS GREATER
-- On MODULE reduce production simple_core_type -> LESS GREATER
-- On MINUSGREATER reduce production simple_core_type -> LESS GREATER
-- On METHOD reduce production simple_core_type -> LESS GREATER
-- On LIDENT reduce production simple_core_type -> LESS GREATER
-- On LET reduce production simple_core_type -> LESS GREATER
-- On INHERIT reduce production simple_core_type -> LESS GREATER
-- On INCLUDE reduce production simple_core_type -> LESS GREATER
-- On GREATERGREATER reduce production simple_core_type -> LESS GREATER
-- On GREATER reduce production simple_core_type -> LESS GREATER
-- On EXTERNAL reduce production simple_core_type -> LESS GREATER
-- On EXCEPTION reduce production simple_core_type -> LESS GREATER
-- On EQUALGREATER reduce production simple_core_type -> LESS GREATER
-- On EQUAL reduce production simple_core_type -> LESS GREATER
-- On EOF reduce production simple_core_type -> LESS GREATER
-- On END reduce production simple_core_type -> LESS GREATER
-- On DEF reduce production simple_core_type -> LESS GREATER
-- On CONSTRAINT reduce production simple_core_type -> LESS GREATER
-- On COMMA reduce production simple_core_type -> LESS GREATER
-- On COLONGREATER reduce production simple_core_type -> LESS GREATER
-- On CLASS reduce production simple_core_type -> LESS GREATER
-- On BAR reduce production simple_core_type -> LESS GREATER
-- On AS reduce production simple_core_type -> LESS GREATER
-- On AND reduce production simple_core_type -> LESS GREATER

State 143:
meth_list -> DOTDOT . [ GREATER ]
-- On GREATER reduce production meth_list -> DOTDOT

State 144:
simple_core_type -> LESS meth_list . GREATER [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On GREATER shift to state 145

State 145:
simple_core_type -> LESS meth_list GREATER . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> LESS meth_list GREATER
-- On VIRTUAL reduce production simple_core_type -> LESS meth_list GREATER
-- On VAL reduce production simple_core_type -> LESS meth_list GREATER
-- On UIDENT reduce production simple_core_type -> LESS meth_list GREATER
-- On TYPE reduce production simple_core_type -> LESS meth_list GREATER
-- On STAR reduce production simple_core_type -> LESS meth_list GREATER
-- On SHARP reduce production simple_core_type -> LESS meth_list GREATER
-- On SEMISEMI reduce production simple_core_type -> LESS meth_list GREATER
-- On SEMI reduce production simple_core_type -> LESS meth_list GREATER
-- On RPAREN reduce production simple_core_type -> LESS meth_list GREATER
-- On RBRACE reduce production simple_core_type -> LESS meth_list GREATER
-- On OPEN reduce production simple_core_type -> LESS meth_list GREATER
-- On MODULE reduce production simple_core_type -> LESS meth_list GREATER
-- On MINUSGREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On METHOD reduce production simple_core_type -> LESS meth_list GREATER
-- On LIDENT reduce production simple_core_type -> LESS meth_list GREATER
-- On LET reduce production simple_core_type -> LESS meth_list GREATER
-- On INHERIT reduce production simple_core_type -> LESS meth_list GREATER
-- On INCLUDE reduce production simple_core_type -> LESS meth_list GREATER
-- On GREATERGREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On GREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On EXTERNAL reduce production simple_core_type -> LESS meth_list GREATER
-- On EXCEPTION reduce production simple_core_type -> LESS meth_list GREATER
-- On EQUALGREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On EQUAL reduce production simple_core_type -> LESS meth_list GREATER
-- On EOF reduce production simple_core_type -> LESS meth_list GREATER
-- On END reduce production simple_core_type -> LESS meth_list GREATER
-- On DEF reduce production simple_core_type -> LESS meth_list GREATER
-- On CONSTRAINT reduce production simple_core_type -> LESS meth_list GREATER
-- On COMMA reduce production simple_core_type -> LESS meth_list GREATER
-- On COLONGREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On CLASS reduce production simple_core_type -> LESS meth_list GREATER
-- On BAR reduce production simple_core_type -> LESS meth_list GREATER
-- On AS reduce production simple_core_type -> LESS meth_list GREATER
-- On AND reduce production simple_core_type -> LESS meth_list GREATER

State 146:
field -> label . COLON core_type [ SEMI GREATER ]
-- On COLON shift to state 147

State 147:
field -> label COLON . core_type [ SEMI GREATER ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 166

State 148:
simple_core_type -> type_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> type_longident
-- On VIRTUAL reduce production simple_core_type -> type_longident
-- On VAL reduce production simple_core_type -> type_longident
-- On UIDENT reduce production simple_core_type -> type_longident
-- On TYPE reduce production simple_core_type -> type_longident
-- On STAR reduce production simple_core_type -> type_longident
-- On SHARP reduce production simple_core_type -> type_longident
-- On SEMISEMI reduce production simple_core_type -> type_longident
-- On SEMI reduce production simple_core_type -> type_longident
-- On RPAREN reduce production simple_core_type -> type_longident
-- On RBRACE reduce production simple_core_type -> type_longident
-- On OPEN reduce production simple_core_type -> type_longident
-- On MODULE reduce production simple_core_type -> type_longident
-- On MINUSGREATER reduce production simple_core_type -> type_longident
-- On METHOD reduce production simple_core_type -> type_longident
-- On LIDENT reduce production simple_core_type -> type_longident
-- On LET reduce production simple_core_type -> type_longident
-- On INHERIT reduce production simple_core_type -> type_longident
-- On INCLUDE reduce production simple_core_type -> type_longident
-- On GREATERGREATER reduce production simple_core_type -> type_longident
-- On GREATER reduce production simple_core_type -> type_longident
-- On EXTERNAL reduce production simple_core_type -> type_longident
-- On EXCEPTION reduce production simple_core_type -> type_longident
-- On EQUALGREATER reduce production simple_core_type -> type_longident
-- On EQUAL reduce production simple_core_type -> type_longident
-- On EOF reduce production simple_core_type -> type_longident
-- On END reduce production simple_core_type -> type_longident
-- On DEF reduce production simple_core_type -> type_longident
-- On CONSTRAINT reduce production simple_core_type -> type_longident
-- On COMMA reduce production simple_core_type -> type_longident
-- On COLONGREATER reduce production simple_core_type -> type_longident
-- On CLASS reduce production simple_core_type -> type_longident
-- On BAR reduce production simple_core_type -> type_longident
-- On AS reduce production simple_core_type -> type_longident
-- On AND reduce production simple_core_type -> type_longident

State 149:
core_type -> simple_core_type . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type_tuple -> simple_core_type . STAR simple_core_type [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UIDENT shift to state 122
-- On STAR shift to state 150
-- On SHARP shift to state 152
-- On LIDENT shift to state 138
-- On type_longident shift to state 154
-- On mod_ext_longident shift to state 155
-- On WITH reduce production core_type -> simple_core_type
-- On VIRTUAL reduce production core_type -> simple_core_type
-- On VAL reduce production core_type -> simple_core_type
-- On TYPE reduce production core_type -> simple_core_type
-- On SHARP reduce production core_type -> simple_core_type
-- On SEMISEMI reduce production core_type -> simple_core_type
-- On SEMI reduce production core_type -> simple_core_type
-- On RPAREN reduce production core_type -> simple_core_type
-- On RBRACE reduce production core_type -> simple_core_type
-- On OPEN reduce production core_type -> simple_core_type
-- On MODULE reduce production core_type -> simple_core_type
-- On MINUSGREATER reduce production core_type -> simple_core_type
-- On METHOD reduce production core_type -> simple_core_type
-- On LET reduce production core_type -> simple_core_type
-- On INHERIT reduce production core_type -> simple_core_type
-- On INCLUDE reduce production core_type -> simple_core_type
-- On GREATERGREATER reduce production core_type -> simple_core_type
-- On GREATER reduce production core_type -> simple_core_type
-- On EXTERNAL reduce production core_type -> simple_core_type
-- On EXCEPTION reduce production core_type -> simple_core_type
-- On EQUALGREATER reduce production core_type -> simple_core_type
-- On EQUAL reduce production core_type -> simple_core_type
-- On EOF reduce production core_type -> simple_core_type
-- On END reduce production core_type -> simple_core_type
-- On DEF reduce production core_type -> simple_core_type
-- On CONSTRAINT reduce production core_type -> simple_core_type
-- On COMMA reduce production core_type -> simple_core_type
-- On COLONGREATER reduce production core_type -> simple_core_type
-- On CLASS reduce production core_type -> simple_core_type
-- On AS reduce production core_type -> simple_core_type
-- On AND reduce production core_type -> simple_core_type
** Conflict on SHARP

State 150:
core_type_tuple -> simple_core_type STAR . simple_core_type [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 151
-- On mod_ext_longident shift to state 155

State 151:
core_type_tuple -> simple_core_type STAR simple_core_type . [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 152
-- On LIDENT shift to state 138
-- On type_longident shift to state 154
-- On mod_ext_longident shift to state 155
-- On WITH reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On VIRTUAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On VAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On TYPE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On STAR reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On SEMISEMI reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On SEMI reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On RPAREN reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On RBRACE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On OPEN reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On MODULE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On MINUSGREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On METHOD reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On LET reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On INHERIT reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On INCLUDE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On GREATERGREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On GREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EXTERNAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EXCEPTION reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EQUALGREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EQUAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EOF reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On END reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On DEF reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On CONSTRAINT reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On COMMA reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On COLONGREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On CLASS reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On AS reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On AND reduce production core_type_tuple -> simple_core_type STAR simple_core_type

State 152:
simple_core_type -> simple_core_type SHARP . class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 153

State 153:
simple_core_type -> simple_core_type SHARP class_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On VAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On UIDENT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On TYPE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On STAR reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On SHARP reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On SEMI reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On RPAREN reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On RBRACE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On OPEN reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On MODULE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On METHOD reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On LIDENT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On LET reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On INHERIT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On GREATERGREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On GREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EQUALGREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EQUAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EOF reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On END reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On DEF reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On COMMA reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On COLONGREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On CLASS reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On BAR reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On AS reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On AND reduce production simple_core_type -> simple_core_type SHARP class_longident

State 154:
simple_core_type -> simple_core_type type_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> simple_core_type type_longident
-- On VIRTUAL reduce production simple_core_type -> simple_core_type type_longident
-- On VAL reduce production simple_core_type -> simple_core_type type_longident
-- On UIDENT reduce production simple_core_type -> simple_core_type type_longident
-- On TYPE reduce production simple_core_type -> simple_core_type type_longident
-- On STAR reduce production simple_core_type -> simple_core_type type_longident
-- On SHARP reduce production simple_core_type -> simple_core_type type_longident
-- On SEMISEMI reduce production simple_core_type -> simple_core_type type_longident
-- On SEMI reduce production simple_core_type -> simple_core_type type_longident
-- On RPAREN reduce production simple_core_type -> simple_core_type type_longident
-- On RBRACE reduce production simple_core_type -> simple_core_type type_longident
-- On OPEN reduce production simple_core_type -> simple_core_type type_longident
-- On MODULE reduce production simple_core_type -> simple_core_type type_longident
-- On MINUSGREATER reduce production simple_core_type -> simple_core_type type_longident
-- On METHOD reduce production simple_core_type -> simple_core_type type_longident
-- On LIDENT reduce production simple_core_type -> simple_core_type type_longident
-- On LET reduce production simple_core_type -> simple_core_type type_longident
-- On INHERIT reduce production simple_core_type -> simple_core_type type_longident
-- On INCLUDE reduce production simple_core_type -> simple_core_type type_longident
-- On GREATERGREATER reduce production simple_core_type -> simple_core_type type_longident
-- On GREATER reduce production simple_core_type -> simple_core_type type_longident
-- On EXTERNAL reduce production simple_core_type -> simple_core_type type_longident
-- On EXCEPTION reduce production simple_core_type -> simple_core_type type_longident
-- On EQUALGREATER reduce production simple_core_type -> simple_core_type type_longident
-- On EQUAL reduce production simple_core_type -> simple_core_type type_longident
-- On EOF reduce production simple_core_type -> simple_core_type type_longident
-- On END reduce production simple_core_type -> simple_core_type type_longident
-- On DEF reduce production simple_core_type -> simple_core_type type_longident
-- On CONSTRAINT reduce production simple_core_type -> simple_core_type type_longident
-- On COMMA reduce production simple_core_type -> simple_core_type type_longident
-- On COLONGREATER reduce production simple_core_type -> simple_core_type type_longident
-- On CLASS reduce production simple_core_type -> simple_core_type type_longident
-- On BAR reduce production simple_core_type -> simple_core_type type_longident
-- On AS reduce production simple_core_type -> simple_core_type type_longident
-- On AND reduce production simple_core_type -> simple_core_type type_longident

State 155:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On LPAREN shift to state 156
-- On DOT shift to state 161

State 156:
mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On UIDENT shift to state 122
-- On mod_ext_longident shift to state 157

State 157:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On RPAREN shift to state 158
-- On LPAREN shift to state 156
-- On DOT shift to state 159

State 158:
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On WITH reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On VAL reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On TYPE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On SHARP reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On SEMISEMI reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On RPAREN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On OPEN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On MODULE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On LET reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On INCLUDE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EXTERNAL reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EXCEPTION reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EQUAL reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EOF reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On DOT reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On DEF reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On CLASS reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On AND reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN

State 159:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On UIDENT shift to state 160

State 160:
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
-- On WITH reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On VAL reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On TYPE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On SHARP reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On SEMISEMI reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On RPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On OPEN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On MODULE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LET reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On INCLUDE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EXTERNAL reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EXCEPTION reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EQUAL reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EOF reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DOT reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DEF reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On CLASS reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On AND reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 161:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 160
-- On LIDENT shift to state 162

State 162:
type_longident -> mod_ext_longident DOT LIDENT . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On VIRTUAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On VAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On UIDENT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On TYPE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On STAR reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On SHARP reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On SEMISEMI reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On SEMI reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On RPAREN reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On RBRACE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On OPEN reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On MODULE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On MINUSGREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On METHOD reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On LIDENT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On LET reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On INHERIT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On INCLUDE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On GREATERGREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On GREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EXTERNAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EXCEPTION reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EQUALGREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EQUAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EOF reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On END reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On DEF reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On CONSTRAINT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On COMMA reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On COLONGREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On CLASS reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On BAR reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On AS reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On AND reduce production type_longident -> mod_ext_longident DOT LIDENT

State 163:
core_type -> core_type_tuple . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type_tuple -> core_type_tuple . STAR simple_core_type [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On STAR shift to state 164
-- On WITH reduce production core_type -> core_type_tuple
-- On VIRTUAL reduce production core_type -> core_type_tuple
-- On VAL reduce production core_type -> core_type_tuple
-- On TYPE reduce production core_type -> core_type_tuple
-- On SHARP reduce production core_type -> core_type_tuple
-- On SEMISEMI reduce production core_type -> core_type_tuple
-- On SEMI reduce production core_type -> core_type_tuple
-- On RPAREN reduce production core_type -> core_type_tuple
-- On RBRACE reduce production core_type -> core_type_tuple
-- On OPEN reduce production core_type -> core_type_tuple
-- On MODULE reduce production core_type -> core_type_tuple
-- On MINUSGREATER reduce production core_type -> core_type_tuple
-- On METHOD reduce production core_type -> core_type_tuple
-- On LET reduce production core_type -> core_type_tuple
-- On INHERIT reduce production core_type -> core_type_tuple
-- On INCLUDE reduce production core_type -> core_type_tuple
-- On GREATERGREATER reduce production core_type -> core_type_tuple
-- On GREATER reduce production core_type -> core_type_tuple
-- On EXTERNAL reduce production core_type -> core_type_tuple
-- On EXCEPTION reduce production core_type -> core_type_tuple
-- On EQUALGREATER reduce production core_type -> core_type_tuple
-- On EQUAL reduce production core_type -> core_type_tuple
-- On EOF reduce production core_type -> core_type_tuple
-- On END reduce production core_type -> core_type_tuple
-- On DEF reduce production core_type -> core_type_tuple
-- On CONSTRAINT reduce production core_type -> core_type_tuple
-- On COMMA reduce production core_type -> core_type_tuple
-- On COLONGREATER reduce production core_type -> core_type_tuple
-- On CLASS reduce production core_type -> core_type_tuple
-- On AS reduce production core_type -> core_type_tuple
-- On AND reduce production core_type -> core_type_tuple

State 164:
core_type_tuple -> core_type_tuple STAR . simple_core_type [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 165
-- On mod_ext_longident shift to state 155

State 165:
core_type_tuple -> core_type_tuple STAR simple_core_type . [ WITH VIRTUAL VAL TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 152
-- On LIDENT shift to state 138
-- On type_longident shift to state 154
-- On mod_ext_longident shift to state 155
-- On WITH reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On VIRTUAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On VAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On TYPE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On STAR reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On SEMISEMI reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On SEMI reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On RPAREN reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On RBRACE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On OPEN reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On MODULE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On MINUSGREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On METHOD reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On LET reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On INHERIT reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On INCLUDE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On GREATERGREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On GREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EXTERNAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EXCEPTION reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EQUALGREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EQUAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EOF reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On END reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On DEF reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On CONSTRAINT reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On COMMA reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On COLONGREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On CLASS reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On AS reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On AND reduce production core_type_tuple -> core_type_tuple STAR simple_core_type

State 166:
core_type -> core_type . MINUSGREATER core_type [ SEMI MINUSGREATER GREATER AS ]
core_type -> core_type . AS type_parameter [ SEMI MINUSGREATER GREATER AS ]
field -> label COLON core_type . [ SEMI GREATER ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On SEMI reduce production field -> label COLON core_type
-- On GREATER reduce production field -> label COLON core_type

State 167:
core_type -> core_type MINUSGREATER . core_type [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 168

State 168:
core_type -> core_type . MINUSGREATER core_type [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type -> core_type MINUSGREATER core_type . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type -> core_type . AS type_parameter [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On MINUSGREATER shift to state 167
-- On WITH reduce production core_type -> core_type MINUSGREATER core_type
-- On VIRTUAL reduce production core_type -> core_type MINUSGREATER core_type
-- On VAL reduce production core_type -> core_type MINUSGREATER core_type
-- On TYPE reduce production core_type -> core_type MINUSGREATER core_type
-- On SHARP reduce production core_type -> core_type MINUSGREATER core_type
-- On SEMISEMI reduce production core_type -> core_type MINUSGREATER core_type
-- On SEMI reduce production core_type -> core_type MINUSGREATER core_type
-- On RPAREN reduce production core_type -> core_type MINUSGREATER core_type
-- On RBRACE reduce production core_type -> core_type MINUSGREATER core_type
-- On OPEN reduce production core_type -> core_type MINUSGREATER core_type
-- On MODULE reduce production core_type -> core_type MINUSGREATER core_type
-- On MINUSGREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On METHOD reduce production core_type -> core_type MINUSGREATER core_type
-- On LET reduce production core_type -> core_type MINUSGREATER core_type
-- On INHERIT reduce production core_type -> core_type MINUSGREATER core_type
-- On INCLUDE reduce production core_type -> core_type MINUSGREATER core_type
-- On GREATERGREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On GREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On EXTERNAL reduce production core_type -> core_type MINUSGREATER core_type
-- On EXCEPTION reduce production core_type -> core_type MINUSGREATER core_type
-- On EQUALGREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On EQUAL reduce production core_type -> core_type MINUSGREATER core_type
-- On EOF reduce production core_type -> core_type MINUSGREATER core_type
-- On END reduce production core_type -> core_type MINUSGREATER core_type
-- On DEF reduce production core_type -> core_type MINUSGREATER core_type
-- On CONSTRAINT reduce production core_type -> core_type MINUSGREATER core_type
-- On COMMA reduce production core_type -> core_type MINUSGREATER core_type
-- On COLONGREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On CLASS reduce production core_type -> core_type MINUSGREATER core_type
-- On AS reduce production core_type -> core_type MINUSGREATER core_type
-- On AND reduce production core_type -> core_type MINUSGREATER core_type
** Conflict on MINUSGREATER

State 169:
core_type -> core_type AS . type_parameter [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On QUOTE shift to state 170
-- On type_parameter shift to state 172

State 170:
type_parameter -> QUOTE . ident [ WITH VIRTUAL VAL UIDENT TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 171

State 171:
type_parameter -> QUOTE ident . [ WITH VIRTUAL VAL UIDENT TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On WITH reduce production type_parameter -> QUOTE ident
-- On VIRTUAL reduce production type_parameter -> QUOTE ident
-- On VAL reduce production type_parameter -> QUOTE ident
-- On UIDENT reduce production type_parameter -> QUOTE ident
-- On TYPE reduce production type_parameter -> QUOTE ident
-- On SHARP reduce production type_parameter -> QUOTE ident
-- On SEMISEMI reduce production type_parameter -> QUOTE ident
-- On SEMI reduce production type_parameter -> QUOTE ident
-- On RPAREN reduce production type_parameter -> QUOTE ident
-- On RBRACE reduce production type_parameter -> QUOTE ident
-- On OPEN reduce production type_parameter -> QUOTE ident
-- On MODULE reduce production type_parameter -> QUOTE ident
-- On MINUSGREATER reduce production type_parameter -> QUOTE ident
-- On METHOD reduce production type_parameter -> QUOTE ident
-- On LIDENT reduce production type_parameter -> QUOTE ident
-- On LET reduce production type_parameter -> QUOTE ident
-- On INHERIT reduce production type_parameter -> QUOTE ident
-- On INCLUDE reduce production type_parameter -> QUOTE ident
-- On GREATERGREATER reduce production type_parameter -> QUOTE ident
-- On GREATER reduce production type_parameter -> QUOTE ident
-- On EXTERNAL reduce production type_parameter -> QUOTE ident
-- On EXCEPTION reduce production type_parameter -> QUOTE ident
-- On EQUALGREATER reduce production type_parameter -> QUOTE ident
-- On EQUAL reduce production type_parameter -> QUOTE ident
-- On EOF reduce production type_parameter -> QUOTE ident
-- On END reduce production type_parameter -> QUOTE ident
-- On DEF reduce production type_parameter -> QUOTE ident
-- On CONSTRAINT reduce production type_parameter -> QUOTE ident
-- On COMMA reduce production type_parameter -> QUOTE ident
-- On COLONGREATER reduce production type_parameter -> QUOTE ident
-- On CLASS reduce production type_parameter -> QUOTE ident
-- On AS reduce production type_parameter -> QUOTE ident
-- On AND reduce production type_parameter -> QUOTE ident

State 172:
core_type -> core_type AS type_parameter . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On WITH reduce production core_type -> core_type AS type_parameter
-- On VIRTUAL reduce production core_type -> core_type AS type_parameter
-- On VAL reduce production core_type -> core_type AS type_parameter
-- On TYPE reduce production core_type -> core_type AS type_parameter
-- On SHARP reduce production core_type -> core_type AS type_parameter
-- On SEMISEMI reduce production core_type -> core_type AS type_parameter
-- On SEMI reduce production core_type -> core_type AS type_parameter
-- On RPAREN reduce production core_type -> core_type AS type_parameter
-- On RBRACE reduce production core_type -> core_type AS type_parameter
-- On OPEN reduce production core_type -> core_type AS type_parameter
-- On MODULE reduce production core_type -> core_type AS type_parameter
-- On MINUSGREATER reduce production core_type -> core_type AS type_parameter
-- On METHOD reduce production core_type -> core_type AS type_parameter
-- On LET reduce production core_type -> core_type AS type_parameter
-- On INHERIT reduce production core_type -> core_type AS type_parameter
-- On INCLUDE reduce production core_type -> core_type AS type_parameter
-- On GREATERGREATER reduce production core_type -> core_type AS type_parameter
-- On GREATER reduce production core_type -> core_type AS type_parameter
-- On EXTERNAL reduce production core_type -> core_type AS type_parameter
-- On EXCEPTION reduce production core_type -> core_type AS type_parameter
-- On EQUALGREATER reduce production core_type -> core_type AS type_parameter
-- On EQUAL reduce production core_type -> core_type AS type_parameter
-- On EOF reduce production core_type -> core_type AS type_parameter
-- On END reduce production core_type -> core_type AS type_parameter
-- On DEF reduce production core_type -> core_type AS type_parameter
-- On CONSTRAINT reduce production core_type -> core_type AS type_parameter
-- On COMMA reduce production core_type -> core_type AS type_parameter
-- On COLONGREATER reduce production core_type -> core_type AS type_parameter
-- On CLASS reduce production core_type -> core_type AS type_parameter
-- On AS reduce production core_type -> core_type AS type_parameter
-- On AND reduce production core_type -> core_type AS type_parameter

State 173:
meth_list -> field . SEMI meth_list [ GREATER ]
meth_list -> field . opt_semi [ GREATER ]
-- On SEMI shift to state 174
-- On opt_semi shift to state 176
-- On GREATER reduce production opt_semi -> 

State 174:
meth_list -> field SEMI . meth_list [ GREATER ]
opt_semi -> SEMI . [ GREATER ]
-- On LIDENT shift to state 141
-- On DOTDOT shift to state 143
-- On meth_list shift to state 175
-- On label shift to state 146
-- On field shift to state 173
-- On GREATER reduce production opt_semi -> SEMI

State 175:
meth_list -> field SEMI meth_list . [ GREATER ]
-- On GREATER reduce production meth_list -> field SEMI meth_list

State 176:
meth_list -> field opt_semi . [ GREATER ]
-- On GREATER reduce production meth_list -> field opt_semi

State 177:
channel_tuple -> core_type . [ GREATERGREATER EQUALGREATER COMMA ]
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER GREATERGREATER EQUALGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER GREATERGREATER EQUALGREATER COMMA AS ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On GREATERGREATER reduce production channel_tuple -> core_type
-- On EQUALGREATER reduce production channel_tuple -> core_type
-- On COMMA reduce production channel_tuple -> core_type

State 178:
core_type -> LESSLESS channel_type . GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type -> LESSLESS channel_type . EQUALGREATER core_type GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On GREATERGREATER shift to state 179
-- On EQUALGREATER shift to state 180

State 179:
core_type -> LESSLESS channel_type GREATERGREATER . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On WITH reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On VIRTUAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On VAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On TYPE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On SHARP reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On SEMISEMI reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On SEMI reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On RPAREN reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On RBRACE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On OPEN reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On MODULE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On MINUSGREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On METHOD reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On LET reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On INHERIT reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On INCLUDE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On GREATERGREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On GREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EXTERNAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EXCEPTION reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EQUALGREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EQUAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EOF reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On END reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On DEF reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On CONSTRAINT reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On COMMA reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On COLONGREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On CLASS reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On AS reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On AND reduce production core_type -> LESSLESS channel_type GREATERGREATER

State 180:
core_type -> LESSLESS channel_type EQUALGREATER . core_type GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 181

State 181:
core_type -> LESSLESS channel_type EQUALGREATER core_type . GREATERGREATER [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER GREATERGREATER AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER GREATERGREATER AS ]
-- On MINUSGREATER shift to state 167
-- On GREATERGREATER shift to state 182
-- On AS shift to state 169

State 182:
core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS AS AND ]
-- On WITH reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On VIRTUAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On VAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On TYPE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On SHARP reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On SEMISEMI reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On SEMI reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On RPAREN reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On RBRACE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On OPEN reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On MODULE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On MINUSGREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On METHOD reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On LET reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On INHERIT reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On INCLUDE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On GREATERGREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On GREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EXTERNAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EXCEPTION reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EQUALGREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EQUAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EOF reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On END reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On DEF reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On CONSTRAINT reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On COMMA reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On COLONGREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On CLASS reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On AS reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On AND reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER

State 183:
channel_tuple -> channel_tuple . COMMA core_type [ GREATERGREATER EQUALGREATER COMMA ]
channel_type -> channel_tuple . [ GREATERGREATER EQUALGREATER ]
-- On COMMA shift to state 184
-- On GREATERGREATER reduce production channel_type -> channel_tuple
-- On EQUALGREATER reduce production channel_type -> channel_tuple

State 184:
channel_tuple -> channel_tuple COMMA . core_type [ GREATERGREATER EQUALGREATER COMMA ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 185

State 185:
channel_tuple -> channel_tuple COMMA core_type . [ GREATERGREATER EQUALGREATER COMMA ]
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER GREATERGREATER EQUALGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER GREATERGREATER EQUALGREATER COMMA AS ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On GREATERGREATER reduce production channel_tuple -> channel_tuple COMMA core_type
-- On EQUALGREATER reduce production channel_tuple -> channel_tuple COMMA core_type
-- On COMMA reduce production channel_tuple -> channel_tuple COMMA core_type

State 186:
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On RPAREN shift to state 187
-- On COMMA shift to state 191

State 187:
simple_core_type -> LPAREN core_type_comma_list RPAREN . type_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
simple_core_type -> LPAREN core_type_comma_list RPAREN . SHARP class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 188
-- On LIDENT shift to state 138
-- On type_longident shift to state 190
-- On mod_ext_longident shift to state 155

State 188:
simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP . class_longident [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 189

State 189:
simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On VAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On UIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On TYPE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On STAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On SHARP reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On SEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On RPAREN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On RBRACE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On OPEN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On MODULE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On METHOD reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On LIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On LET reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On INHERIT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On GREATERGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On GREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EQUALGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EQUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EOF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On END reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On DEF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On COMMA reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On COLONGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On CLASS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On BAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On AS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On AND reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident

State 190:
simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On VAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On UIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On TYPE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On STAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On SHARP reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On SEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On RPAREN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On RBRACE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On OPEN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On MODULE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On METHOD reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On LIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On LET reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On INHERIT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On GREATERGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On GREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EQUALGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EQUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EOF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On END reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On DEF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On COMMA reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On COLONGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On CLASS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On BAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On AS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On AND reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident

State 191:
core_type_comma_list -> core_type_comma_list COMMA . core_type [ RPAREN COMMA ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 192

State 192:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type_comma_list COMMA core_type . [ RPAREN COMMA ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On RPAREN reduce production core_type_comma_list -> core_type_comma_list COMMA core_type
-- On COMMA reduce production core_type_comma_list -> core_type_comma_list COMMA core_type

State 193:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type . RPAREN [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On RPAREN shift to state 194
-- On MINUSGREATER shift to state 167
-- On COMMA shift to state 195
-- On AS shift to state 169

State 194:
simple_core_type -> LPAREN core_type RPAREN . [ WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI SEMI RPAREN RBRACE OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE GREATERGREATER GREATER EXTERNAL EXCEPTION EQUALGREATER EQUAL EOF END DEF CONSTRAINT COMMA COLONGREATER CLASS BAR AS AND ]
-- On WITH reduce production simple_core_type -> LPAREN core_type RPAREN
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On VAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On UIDENT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On TYPE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On STAR reduce production simple_core_type -> LPAREN core_type RPAREN
-- On SHARP reduce production simple_core_type -> LPAREN core_type RPAREN
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type RPAREN
-- On SEMI reduce production simple_core_type -> LPAREN core_type RPAREN
-- On RPAREN reduce production simple_core_type -> LPAREN core_type RPAREN
-- On RBRACE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On OPEN reduce production simple_core_type -> LPAREN core_type RPAREN
-- On MODULE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On METHOD reduce production simple_core_type -> LPAREN core_type RPAREN
-- On LIDENT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On LET reduce production simple_core_type -> LPAREN core_type RPAREN
-- On INHERIT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On GREATERGREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On GREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EQUALGREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EQUAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EOF reduce production simple_core_type -> LPAREN core_type RPAREN
-- On END reduce production simple_core_type -> LPAREN core_type RPAREN
-- On DEF reduce production simple_core_type -> LPAREN core_type RPAREN
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On COMMA reduce production simple_core_type -> LPAREN core_type RPAREN
-- On COLONGREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On CLASS reduce production simple_core_type -> LPAREN core_type RPAREN
-- On BAR reduce production simple_core_type -> LPAREN core_type RPAREN
-- On AS reduce production simple_core_type -> LPAREN core_type RPAREN
-- On AND reduce production simple_core_type -> LPAREN core_type RPAREN

State 195:
core_type_comma_list -> core_type COMMA . core_type [ RPAREN COMMA ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 196

State 196:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type COMMA core_type . [ RPAREN COMMA ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On RPAREN reduce production core_type_comma_list -> core_type COMMA core_type
-- On COMMA reduce production core_type_comma_list -> core_type COMMA core_type

State 197:
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
simple_core_type -> LPAREN core_type_comma_list . RPAREN SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On RPAREN shift to state 198
-- On COMMA shift to state 191

State 198:
simple_core_type -> LPAREN core_type_comma_list RPAREN . type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
simple_core_type -> LPAREN core_type_comma_list RPAREN . SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 199
-- On LIDENT shift to state 201
-- On type_longident shift to state 202
-- On mod_ext_longident shift to state 203

State 199:
simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP . class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 24
-- On mod_longident shift to state 25
-- On class_longident shift to state 200

State 200:
simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On WITH reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On VAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On UIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On TYPE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On STAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On SHARP reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On RPAREN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On OPEN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On MODULE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On METHOD reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On LIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On LET reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On INHERIT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On EQUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On END reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On DEF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On CLASS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On BAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On AS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident
-- On AND reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN SHARP class_longident

State 201:
type_longident -> LIDENT . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production type_longident -> LIDENT
-- On WITH reduce production type_longident -> LIDENT
-- On VIRTUAL reduce production type_longident -> LIDENT
-- On VAL reduce production type_longident -> LIDENT
-- On UIDENT reduce production type_longident -> LIDENT
-- On TYPE reduce production type_longident -> LIDENT
-- On STAR reduce production type_longident -> LIDENT
-- On SHARP reduce production type_longident -> LIDENT
-- On SEMISEMI reduce production type_longident -> LIDENT
-- On RPAREN reduce production type_longident -> LIDENT
-- On OPEN reduce production type_longident -> LIDENT
-- On MODULE reduce production type_longident -> LIDENT
-- On MINUSGREATER reduce production type_longident -> LIDENT
-- On METHOD reduce production type_longident -> LIDENT
-- On LIDENT reduce production type_longident -> LIDENT
-- On LET reduce production type_longident -> LIDENT
-- On INHERIT reduce production type_longident -> LIDENT
-- On INCLUDE reduce production type_longident -> LIDENT
-- On EXTERNAL reduce production type_longident -> LIDENT
-- On EXCEPTION reduce production type_longident -> LIDENT
-- On EQUAL reduce production type_longident -> LIDENT
-- On END reduce production type_longident -> LIDENT
-- On DEF reduce production type_longident -> LIDENT
-- On CONSTRAINT reduce production type_longident -> LIDENT
-- On CLASS reduce production type_longident -> LIDENT
-- On BAR reduce production type_longident -> LIDENT
-- On AS reduce production type_longident -> LIDENT
-- On AND reduce production type_longident -> LIDENT

State 202:
simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On WITH reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On VAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On UIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On TYPE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On STAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On SHARP reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On RPAREN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On OPEN reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On MODULE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On METHOD reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On LIDENT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On LET reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On INHERIT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On EQUAL reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On END reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On DEF reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On CLASS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On BAR reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On AS reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident
-- On AND reduce production simple_core_type -> LPAREN core_type_comma_list RPAREN type_longident

State 203:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
type_longident -> mod_ext_longident . DOT LIDENT [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On LPAREN shift to state 156
-- On DOT shift to state 204

State 204:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
type_longident -> mod_ext_longident DOT . LIDENT [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 160
-- On LIDENT shift to state 205

State 205:
type_longident -> mod_ext_longident DOT LIDENT . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On WITH reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On VIRTUAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On VAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On UIDENT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On TYPE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On STAR reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On SHARP reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On SEMISEMI reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On RPAREN reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On OPEN reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On MODULE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On MINUSGREATER reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On METHOD reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On LIDENT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On LET reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On INHERIT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On INCLUDE reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EXTERNAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EXCEPTION reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On EQUAL reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On END reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On DEF reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On CONSTRAINT reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On CLASS reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On BAR reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On AS reduce production type_longident -> mod_ext_longident DOT LIDENT
-- On AND reduce production type_longident -> mod_ext_longident DOT LIDENT

State 206:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type . COMMA core_type [ RPAREN COMMA ]
simple_core_type -> LPAREN core_type . RPAREN [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On RPAREN shift to state 207
-- On MINUSGREATER shift to state 167
-- On COMMA shift to state 195
-- On AS shift to state 169

State 207:
simple_core_type -> LPAREN core_type RPAREN . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> LPAREN core_type RPAREN
-- On WITH reduce production simple_core_type -> LPAREN core_type RPAREN
-- On VIRTUAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On VAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On UIDENT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On TYPE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On STAR reduce production simple_core_type -> LPAREN core_type RPAREN
-- On SHARP reduce production simple_core_type -> LPAREN core_type RPAREN
-- On SEMISEMI reduce production simple_core_type -> LPAREN core_type RPAREN
-- On RPAREN reduce production simple_core_type -> LPAREN core_type RPAREN
-- On OPEN reduce production simple_core_type -> LPAREN core_type RPAREN
-- On MODULE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On MINUSGREATER reduce production simple_core_type -> LPAREN core_type RPAREN
-- On METHOD reduce production simple_core_type -> LPAREN core_type RPAREN
-- On LIDENT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On LET reduce production simple_core_type -> LPAREN core_type RPAREN
-- On INHERIT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On INCLUDE reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EXTERNAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EXCEPTION reduce production simple_core_type -> LPAREN core_type RPAREN
-- On EQUAL reduce production simple_core_type -> LPAREN core_type RPAREN
-- On END reduce production simple_core_type -> LPAREN core_type RPAREN
-- On DEF reduce production simple_core_type -> LPAREN core_type RPAREN
-- On CONSTRAINT reduce production simple_core_type -> LPAREN core_type RPAREN
-- On CLASS reduce production simple_core_type -> LPAREN core_type RPAREN
-- On BAR reduce production simple_core_type -> LPAREN core_type RPAREN
-- On AS reduce production simple_core_type -> LPAREN core_type RPAREN
-- On AND reduce production simple_core_type -> LPAREN core_type RPAREN

State 208:
core_type -> LESSLESS . channel_type GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> LESSLESS . channel_type EQUALGREATER core_type GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 177
-- On channel_type shift to state 209
-- On channel_tuple shift to state 183
-- On GREATERGREATER reduce production channel_type -> 
-- On EQUALGREATER reduce production channel_type -> 

State 209:
core_type -> LESSLESS channel_type . GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> LESSLESS channel_type . EQUALGREATER core_type GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On GREATERGREATER shift to state 210
-- On EQUALGREATER shift to state 211

State 210:
core_type -> LESSLESS channel_type GREATERGREATER . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On error reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On WITH reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On VIRTUAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On VAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On TYPE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On SEMISEMI reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On RPAREN reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On OPEN reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On MODULE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On MINUSGREATER reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On METHOD reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On LET reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On INHERIT reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On INCLUDE reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EXTERNAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EXCEPTION reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On EQUAL reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On END reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On DEF reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On CONSTRAINT reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On CLASS reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On AS reduce production core_type -> LESSLESS channel_type GREATERGREATER
-- On AND reduce production core_type -> LESSLESS channel_type GREATERGREATER

State 211:
core_type -> LESSLESS channel_type EQUALGREATER . core_type GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 212

State 212:
core_type -> LESSLESS channel_type EQUALGREATER core_type . GREATERGREATER [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER GREATERGREATER AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER GREATERGREATER AS ]
-- On MINUSGREATER shift to state 167
-- On GREATERGREATER shift to state 213
-- On AS shift to state 169

State 213:
core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On error reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On WITH reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On VIRTUAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On VAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On TYPE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On SEMISEMI reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On RPAREN reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On OPEN reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On MODULE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On MINUSGREATER reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On METHOD reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On LET reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On INHERIT reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On INCLUDE reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EXTERNAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EXCEPTION reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On EQUAL reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On END reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On DEF reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On CONSTRAINT reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On CLASS reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On AS reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER
-- On AND reduce production core_type -> LESSLESS channel_type EQUALGREATER core_type GREATERGREATER

State 214:
simple_core_type -> LESS . meth_list GREATER [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
simple_core_type -> LESS . GREATER [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On LIDENT shift to state 141
-- On GREATER shift to state 215
-- On DOTDOT shift to state 143
-- On meth_list shift to state 216
-- On label shift to state 146
-- On field shift to state 173

State 215:
simple_core_type -> LESS GREATER . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> LESS GREATER
-- On WITH reduce production simple_core_type -> LESS GREATER
-- On VIRTUAL reduce production simple_core_type -> LESS GREATER
-- On VAL reduce production simple_core_type -> LESS GREATER
-- On UIDENT reduce production simple_core_type -> LESS GREATER
-- On TYPE reduce production simple_core_type -> LESS GREATER
-- On STAR reduce production simple_core_type -> LESS GREATER
-- On SHARP reduce production simple_core_type -> LESS GREATER
-- On SEMISEMI reduce production simple_core_type -> LESS GREATER
-- On RPAREN reduce production simple_core_type -> LESS GREATER
-- On OPEN reduce production simple_core_type -> LESS GREATER
-- On MODULE reduce production simple_core_type -> LESS GREATER
-- On MINUSGREATER reduce production simple_core_type -> LESS GREATER
-- On METHOD reduce production simple_core_type -> LESS GREATER
-- On LIDENT reduce production simple_core_type -> LESS GREATER
-- On LET reduce production simple_core_type -> LESS GREATER
-- On INHERIT reduce production simple_core_type -> LESS GREATER
-- On INCLUDE reduce production simple_core_type -> LESS GREATER
-- On EXTERNAL reduce production simple_core_type -> LESS GREATER
-- On EXCEPTION reduce production simple_core_type -> LESS GREATER
-- On EQUAL reduce production simple_core_type -> LESS GREATER
-- On END reduce production simple_core_type -> LESS GREATER
-- On DEF reduce production simple_core_type -> LESS GREATER
-- On CONSTRAINT reduce production simple_core_type -> LESS GREATER
-- On CLASS reduce production simple_core_type -> LESS GREATER
-- On BAR reduce production simple_core_type -> LESS GREATER
-- On AS reduce production simple_core_type -> LESS GREATER
-- On AND reduce production simple_core_type -> LESS GREATER

State 216:
simple_core_type -> LESS meth_list . GREATER [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On GREATER shift to state 217

State 217:
simple_core_type -> LESS meth_list GREATER . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> LESS meth_list GREATER
-- On WITH reduce production simple_core_type -> LESS meth_list GREATER
-- On VIRTUAL reduce production simple_core_type -> LESS meth_list GREATER
-- On VAL reduce production simple_core_type -> LESS meth_list GREATER
-- On UIDENT reduce production simple_core_type -> LESS meth_list GREATER
-- On TYPE reduce production simple_core_type -> LESS meth_list GREATER
-- On STAR reduce production simple_core_type -> LESS meth_list GREATER
-- On SHARP reduce production simple_core_type -> LESS meth_list GREATER
-- On SEMISEMI reduce production simple_core_type -> LESS meth_list GREATER
-- On RPAREN reduce production simple_core_type -> LESS meth_list GREATER
-- On OPEN reduce production simple_core_type -> LESS meth_list GREATER
-- On MODULE reduce production simple_core_type -> LESS meth_list GREATER
-- On MINUSGREATER reduce production simple_core_type -> LESS meth_list GREATER
-- On METHOD reduce production simple_core_type -> LESS meth_list GREATER
-- On LIDENT reduce production simple_core_type -> LESS meth_list GREATER
-- On LET reduce production simple_core_type -> LESS meth_list GREATER
-- On INHERIT reduce production simple_core_type -> LESS meth_list GREATER
-- On INCLUDE reduce production simple_core_type -> LESS meth_list GREATER
-- On EXTERNAL reduce production simple_core_type -> LESS meth_list GREATER
-- On EXCEPTION reduce production simple_core_type -> LESS meth_list GREATER
-- On EQUAL reduce production simple_core_type -> LESS meth_list GREATER
-- On END reduce production simple_core_type -> LESS meth_list GREATER
-- On DEF reduce production simple_core_type -> LESS meth_list GREATER
-- On CONSTRAINT reduce production simple_core_type -> LESS meth_list GREATER
-- On CLASS reduce production simple_core_type -> LESS meth_list GREATER
-- On BAR reduce production simple_core_type -> LESS meth_list GREATER
-- On AS reduce production simple_core_type -> LESS meth_list GREATER
-- On AND reduce production simple_core_type -> LESS meth_list GREATER

State 218:
simple_core_type -> type_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> type_longident
-- On WITH reduce production simple_core_type -> type_longident
-- On VIRTUAL reduce production simple_core_type -> type_longident
-- On VAL reduce production simple_core_type -> type_longident
-- On UIDENT reduce production simple_core_type -> type_longident
-- On TYPE reduce production simple_core_type -> type_longident
-- On STAR reduce production simple_core_type -> type_longident
-- On SHARP reduce production simple_core_type -> type_longident
-- On SEMISEMI reduce production simple_core_type -> type_longident
-- On RPAREN reduce production simple_core_type -> type_longident
-- On OPEN reduce production simple_core_type -> type_longident
-- On MODULE reduce production simple_core_type -> type_longident
-- On MINUSGREATER reduce production simple_core_type -> type_longident
-- On METHOD reduce production simple_core_type -> type_longident
-- On LIDENT reduce production simple_core_type -> type_longident
-- On LET reduce production simple_core_type -> type_longident
-- On INHERIT reduce production simple_core_type -> type_longident
-- On INCLUDE reduce production simple_core_type -> type_longident
-- On EXTERNAL reduce production simple_core_type -> type_longident
-- On EXCEPTION reduce production simple_core_type -> type_longident
-- On EQUAL reduce production simple_core_type -> type_longident
-- On END reduce production simple_core_type -> type_longident
-- On DEF reduce production simple_core_type -> type_longident
-- On CONSTRAINT reduce production simple_core_type -> type_longident
-- On CLASS reduce production simple_core_type -> type_longident
-- On BAR reduce production simple_core_type -> type_longident
-- On AS reduce production simple_core_type -> type_longident
-- On AND reduce production simple_core_type -> type_longident

State 219:
core_type -> simple_core_type . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type_tuple -> simple_core_type . STAR simple_core_type [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UIDENT shift to state 122
-- On STAR shift to state 220
-- On SHARP shift to state 222
-- On LIDENT shift to state 201
-- On type_longident shift to state 224
-- On mod_ext_longident shift to state 203
-- On error reduce production core_type -> simple_core_type
-- On WITH reduce production core_type -> simple_core_type
-- On VIRTUAL reduce production core_type -> simple_core_type
-- On VAL reduce production core_type -> simple_core_type
-- On TYPE reduce production core_type -> simple_core_type
-- On SEMISEMI reduce production core_type -> simple_core_type
-- On RPAREN reduce production core_type -> simple_core_type
-- On OPEN reduce production core_type -> simple_core_type
-- On MODULE reduce production core_type -> simple_core_type
-- On MINUSGREATER reduce production core_type -> simple_core_type
-- On METHOD reduce production core_type -> simple_core_type
-- On LET reduce production core_type -> simple_core_type
-- On INHERIT reduce production core_type -> simple_core_type
-- On INCLUDE reduce production core_type -> simple_core_type
-- On EXTERNAL reduce production core_type -> simple_core_type
-- On EXCEPTION reduce production core_type -> simple_core_type
-- On EQUAL reduce production core_type -> simple_core_type
-- On END reduce production core_type -> simple_core_type
-- On DEF reduce production core_type -> simple_core_type
-- On CONSTRAINT reduce production core_type -> simple_core_type
-- On CLASS reduce production core_type -> simple_core_type
-- On AS reduce production core_type -> simple_core_type
-- On AND reduce production core_type -> simple_core_type

State 220:
core_type_tuple -> simple_core_type STAR . simple_core_type [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 221
-- On mod_ext_longident shift to state 203

State 221:
core_type_tuple -> simple_core_type STAR simple_core_type . [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 222
-- On LIDENT shift to state 201
-- On type_longident shift to state 224
-- On mod_ext_longident shift to state 203
-- On error reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On WITH reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On VIRTUAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On VAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On TYPE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On STAR reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On SEMISEMI reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On RPAREN reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On OPEN reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On MODULE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On MINUSGREATER reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On METHOD reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On LET reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On INHERIT reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On INCLUDE reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EXTERNAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EXCEPTION reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On EQUAL reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On END reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On DEF reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On CONSTRAINT reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On CLASS reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On AS reduce production core_type_tuple -> simple_core_type STAR simple_core_type
-- On AND reduce production core_type_tuple -> simple_core_type STAR simple_core_type

State 222:
simple_core_type -> simple_core_type SHARP . class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 24
-- On mod_longident shift to state 25
-- On class_longident shift to state 223

State 223:
simple_core_type -> simple_core_type SHARP class_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On WITH reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On VIRTUAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On VAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On UIDENT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On TYPE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On STAR reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On SHARP reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On SEMISEMI reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On RPAREN reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On OPEN reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On MODULE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On MINUSGREATER reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On METHOD reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On LIDENT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On LET reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On INHERIT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On INCLUDE reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EXTERNAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EXCEPTION reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On EQUAL reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On END reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On DEF reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On CONSTRAINT reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On CLASS reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On BAR reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On AS reduce production simple_core_type -> simple_core_type SHARP class_longident
-- On AND reduce production simple_core_type -> simple_core_type SHARP class_longident

State 224:
simple_core_type -> simple_core_type type_longident . [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS BAR AS AND ]
-- On error reduce production simple_core_type -> simple_core_type type_longident
-- On WITH reduce production simple_core_type -> simple_core_type type_longident
-- On VIRTUAL reduce production simple_core_type -> simple_core_type type_longident
-- On VAL reduce production simple_core_type -> simple_core_type type_longident
-- On UIDENT reduce production simple_core_type -> simple_core_type type_longident
-- On TYPE reduce production simple_core_type -> simple_core_type type_longident
-- On STAR reduce production simple_core_type -> simple_core_type type_longident
-- On SHARP reduce production simple_core_type -> simple_core_type type_longident
-- On SEMISEMI reduce production simple_core_type -> simple_core_type type_longident
-- On RPAREN reduce production simple_core_type -> simple_core_type type_longident
-- On OPEN reduce production simple_core_type -> simple_core_type type_longident
-- On MODULE reduce production simple_core_type -> simple_core_type type_longident
-- On MINUSGREATER reduce production simple_core_type -> simple_core_type type_longident
-- On METHOD reduce production simple_core_type -> simple_core_type type_longident
-- On LIDENT reduce production simple_core_type -> simple_core_type type_longident
-- On LET reduce production simple_core_type -> simple_core_type type_longident
-- On INHERIT reduce production simple_core_type -> simple_core_type type_longident
-- On INCLUDE reduce production simple_core_type -> simple_core_type type_longident
-- On EXTERNAL reduce production simple_core_type -> simple_core_type type_longident
-- On EXCEPTION reduce production simple_core_type -> simple_core_type type_longident
-- On EQUAL reduce production simple_core_type -> simple_core_type type_longident
-- On END reduce production simple_core_type -> simple_core_type type_longident
-- On DEF reduce production simple_core_type -> simple_core_type type_longident
-- On CONSTRAINT reduce production simple_core_type -> simple_core_type type_longident
-- On CLASS reduce production simple_core_type -> simple_core_type type_longident
-- On BAR reduce production simple_core_type -> simple_core_type type_longident
-- On AS reduce production simple_core_type -> simple_core_type type_longident
-- On AND reduce production simple_core_type -> simple_core_type type_longident

State 225:
core_type -> core_type_tuple . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type_tuple -> core_type_tuple . STAR simple_core_type [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On STAR shift to state 226
-- On error reduce production core_type -> core_type_tuple
-- On WITH reduce production core_type -> core_type_tuple
-- On VIRTUAL reduce production core_type -> core_type_tuple
-- On VAL reduce production core_type -> core_type_tuple
-- On TYPE reduce production core_type -> core_type_tuple
-- On SEMISEMI reduce production core_type -> core_type_tuple
-- On RPAREN reduce production core_type -> core_type_tuple
-- On OPEN reduce production core_type -> core_type_tuple
-- On MODULE reduce production core_type -> core_type_tuple
-- On MINUSGREATER reduce production core_type -> core_type_tuple
-- On METHOD reduce production core_type -> core_type_tuple
-- On LET reduce production core_type -> core_type_tuple
-- On INHERIT reduce production core_type -> core_type_tuple
-- On INCLUDE reduce production core_type -> core_type_tuple
-- On EXTERNAL reduce production core_type -> core_type_tuple
-- On EXCEPTION reduce production core_type -> core_type_tuple
-- On EQUAL reduce production core_type -> core_type_tuple
-- On END reduce production core_type -> core_type_tuple
-- On DEF reduce production core_type -> core_type_tuple
-- On CONSTRAINT reduce production core_type -> core_type_tuple
-- On CLASS reduce production core_type -> core_type_tuple
-- On AS reduce production core_type -> core_type_tuple
-- On AND reduce production core_type -> core_type_tuple

State 226:
core_type_tuple -> core_type_tuple STAR . simple_core_type [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 227
-- On mod_ext_longident shift to state 203

State 227:
core_type_tuple -> core_type_tuple STAR simple_core_type . [ error WITH VIRTUAL VAL TYPE STAR SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . type_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ error WITH VIRTUAL VAL UIDENT TYPE STAR SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LIDENT LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 222
-- On LIDENT shift to state 201
-- On type_longident shift to state 224
-- On mod_ext_longident shift to state 203
-- On error reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On WITH reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On VIRTUAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On VAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On TYPE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On STAR reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On SEMISEMI reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On RPAREN reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On OPEN reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On MODULE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On MINUSGREATER reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On METHOD reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On LET reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On INHERIT reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On INCLUDE reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EXTERNAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EXCEPTION reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On EQUAL reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On END reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On DEF reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On CONSTRAINT reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On CLASS reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On AS reduce production core_type_tuple -> core_type_tuple STAR simple_core_type
-- On AND reduce production core_type_tuple -> core_type_tuple STAR simple_core_type

State 228:
core_type -> core_type . MINUSGREATER core_type [ error RPAREN MINUSGREATER AS ]
core_type -> core_type . AS type_parameter [ error RPAREN MINUSGREATER AS ]
simple_pattern -> LPAREN pattern COLON core_type . RPAREN [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern COLON core_type . error [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error shift to state 229
-- On RPAREN shift to state 230
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233

State 229:
simple_pattern -> LPAREN pattern COLON core_type error . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On WHEN reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On SEMI reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On RPAREN reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On RBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On RBRACE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On QUESTION reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On GREATERRBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On EQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COMMA reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLON reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On BAR reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On AS reduce production simple_pattern -> LPAREN pattern COLON core_type error

State 230:
simple_pattern -> LPAREN pattern COLON core_type RPAREN . [ error WHEN SEMI RPAREN RBRACKET RBRACE QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON COLON BAR AS ]
-- On error reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On WHEN reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On SEMI reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On RPAREN reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On RBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On RBRACE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On QUESTION reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On GREATERRBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On EQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COMMA reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLON reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On BAR reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On AS reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN

State 231:
core_type -> core_type MINUSGREATER . core_type [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 232

State 232:
core_type -> core_type . MINUSGREATER core_type [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type MINUSGREATER core_type . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On MINUSGREATER shift to state 231
-- On error reduce production core_type -> core_type MINUSGREATER core_type
-- On WITH reduce production core_type -> core_type MINUSGREATER core_type
-- On VIRTUAL reduce production core_type -> core_type MINUSGREATER core_type
-- On VAL reduce production core_type -> core_type MINUSGREATER core_type
-- On TYPE reduce production core_type -> core_type MINUSGREATER core_type
-- On SEMISEMI reduce production core_type -> core_type MINUSGREATER core_type
-- On RPAREN reduce production core_type -> core_type MINUSGREATER core_type
-- On OPEN reduce production core_type -> core_type MINUSGREATER core_type
-- On MODULE reduce production core_type -> core_type MINUSGREATER core_type
-- On MINUSGREATER reduce production core_type -> core_type MINUSGREATER core_type
-- On METHOD reduce production core_type -> core_type MINUSGREATER core_type
-- On LET reduce production core_type -> core_type MINUSGREATER core_type
-- On INHERIT reduce production core_type -> core_type MINUSGREATER core_type
-- On INCLUDE reduce production core_type -> core_type MINUSGREATER core_type
-- On EXTERNAL reduce production core_type -> core_type MINUSGREATER core_type
-- On EXCEPTION reduce production core_type -> core_type MINUSGREATER core_type
-- On EQUAL reduce production core_type -> core_type MINUSGREATER core_type
-- On END reduce production core_type -> core_type MINUSGREATER core_type
-- On DEF reduce production core_type -> core_type MINUSGREATER core_type
-- On CONSTRAINT reduce production core_type -> core_type MINUSGREATER core_type
-- On CLASS reduce production core_type -> core_type MINUSGREATER core_type
-- On AS reduce production core_type -> core_type MINUSGREATER core_type
-- On AND reduce production core_type -> core_type MINUSGREATER core_type
** Conflict on MINUSGREATER

State 233:
core_type -> core_type AS . type_parameter [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On QUOTE shift to state 234
-- On type_parameter shift to state 236

State 234:
type_parameter -> QUOTE . ident [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UIDENT shift to state 126
-- On LIDENT shift to state 127
-- On ident shift to state 235

State 235:
type_parameter -> QUOTE ident . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On error reduce production type_parameter -> QUOTE ident
-- On WITH reduce production type_parameter -> QUOTE ident
-- On VIRTUAL reduce production type_parameter -> QUOTE ident
-- On VAL reduce production type_parameter -> QUOTE ident
-- On TYPE reduce production type_parameter -> QUOTE ident
-- On SEMISEMI reduce production type_parameter -> QUOTE ident
-- On RPAREN reduce production type_parameter -> QUOTE ident
-- On OPEN reduce production type_parameter -> QUOTE ident
-- On MODULE reduce production type_parameter -> QUOTE ident
-- On MINUSGREATER reduce production type_parameter -> QUOTE ident
-- On METHOD reduce production type_parameter -> QUOTE ident
-- On LET reduce production type_parameter -> QUOTE ident
-- On INHERIT reduce production type_parameter -> QUOTE ident
-- On INCLUDE reduce production type_parameter -> QUOTE ident
-- On EXTERNAL reduce production type_parameter -> QUOTE ident
-- On EXCEPTION reduce production type_parameter -> QUOTE ident
-- On EQUAL reduce production type_parameter -> QUOTE ident
-- On END reduce production type_parameter -> QUOTE ident
-- On DEF reduce production type_parameter -> QUOTE ident
-- On CONSTRAINT reduce production type_parameter -> QUOTE ident
-- On CLASS reduce production type_parameter -> QUOTE ident
-- On AS reduce production type_parameter -> QUOTE ident
-- On AND reduce production type_parameter -> QUOTE ident

State 236:
core_type -> core_type AS type_parameter . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On error reduce production core_type -> core_type AS type_parameter
-- On WITH reduce production core_type -> core_type AS type_parameter
-- On VIRTUAL reduce production core_type -> core_type AS type_parameter
-- On VAL reduce production core_type -> core_type AS type_parameter
-- On TYPE reduce production core_type -> core_type AS type_parameter
-- On SEMISEMI reduce production core_type -> core_type AS type_parameter
-- On RPAREN reduce production core_type -> core_type AS type_parameter
-- On OPEN reduce production core_type -> core_type AS type_parameter
-- On MODULE reduce production core_type -> core_type AS type_parameter
-- On MINUSGREATER reduce production core_type -> core_type AS type_parameter
-- On METHOD reduce production core_type -> core_type AS type_parameter
-- On LET reduce production core_type -> core_type AS type_parameter
-- On INHERIT reduce production core_type -> core_type AS type_parameter
-- On INCLUDE reduce production core_type -> core_type AS type_parameter
-- On EXTERNAL reduce production core_type -> core_type AS type_parameter
-- On EXCEPTION reduce production core_type -> core_type AS type_parameter
-- On EQUAL reduce production core_type -> core_type AS type_parameter
-- On END reduce production core_type -> core_type AS type_parameter
-- On DEF reduce production core_type -> core_type AS type_parameter
-- On CONSTRAINT reduce production core_type -> core_type AS type_parameter
-- On CLASS reduce production core_type -> core_type AS type_parameter
-- On AS reduce production core_type -> core_type AS type_parameter
-- On AND reduce production core_type -> core_type AS type_parameter

State 237:
pattern -> pattern . AS val_ident [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern -> pattern . BAR pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error RPAREN COMMA COLONCOLON COLON BAR AS ]
simple_pattern -> LPAREN pattern . RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN pattern . error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN pattern . COLON core_type error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On error shift to state 238
-- On RPAREN shift to state 239
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On COLON shift to state 240
-- On BAR shift to state 85
-- On AS shift to state 87

State 238:
simple_pattern -> LPAREN pattern error . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LPAREN pattern error
-- On UNDERSCORE reduce production simple_pattern -> LPAREN pattern error
-- On UIDENT reduce production simple_pattern -> LPAREN pattern error
-- On TRUE reduce production simple_pattern -> LPAREN pattern error
-- On SUBTRACTIVE reduce production simple_pattern -> LPAREN pattern error
-- On STRING reduce production simple_pattern -> LPAREN pattern error
-- On MINUSGREATER reduce production simple_pattern -> LPAREN pattern error
-- On LPAREN reduce production simple_pattern -> LPAREN pattern error
-- On LIDENT reduce production simple_pattern -> LPAREN pattern error
-- On LBRACKETLESS reduce production simple_pattern -> LPAREN pattern error
-- On LBRACKET reduce production simple_pattern -> LPAREN pattern error
-- On LBRACE reduce production simple_pattern -> LPAREN pattern error
-- On INT reduce production simple_pattern -> LPAREN pattern error
-- On GREATERGREATER reduce production simple_pattern -> LPAREN pattern error
-- On GREATER reduce production simple_pattern -> LPAREN pattern error
-- On FLOAT reduce production simple_pattern -> LPAREN pattern error
-- On FALSE reduce production simple_pattern -> LPAREN pattern error
-- On EQUAL reduce production simple_pattern -> LPAREN pattern error
-- On COMMA reduce production simple_pattern -> LPAREN pattern error
-- On COLONGREATER reduce production simple_pattern -> LPAREN pattern error
-- On COLONEQUAL reduce production simple_pattern -> LPAREN pattern error
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern error
-- On COLON reduce production simple_pattern -> LPAREN pattern error
-- On CHAR reduce production simple_pattern -> LPAREN pattern error
-- On BAR reduce production simple_pattern -> LPAREN pattern error
-- On AS reduce production simple_pattern -> LPAREN pattern error

State 239:
simple_pattern -> LPAREN pattern RPAREN . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LPAREN pattern RPAREN
-- On UNDERSCORE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On UIDENT reduce production simple_pattern -> LPAREN pattern RPAREN
-- On TRUE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On SUBTRACTIVE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On STRING reduce production simple_pattern -> LPAREN pattern RPAREN
-- On MINUSGREATER reduce production simple_pattern -> LPAREN pattern RPAREN
-- On LPAREN reduce production simple_pattern -> LPAREN pattern RPAREN
-- On LIDENT reduce production simple_pattern -> LPAREN pattern RPAREN
-- On LBRACKETLESS reduce production simple_pattern -> LPAREN pattern RPAREN
-- On LBRACKET reduce production simple_pattern -> LPAREN pattern RPAREN
-- On LBRACE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On INT reduce production simple_pattern -> LPAREN pattern RPAREN
-- On GREATERGREATER reduce production simple_pattern -> LPAREN pattern RPAREN
-- On GREATER reduce production simple_pattern -> LPAREN pattern RPAREN
-- On FLOAT reduce production simple_pattern -> LPAREN pattern RPAREN
-- On FALSE reduce production simple_pattern -> LPAREN pattern RPAREN
-- On EQUAL reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COMMA reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLONGREATER reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLONEQUAL reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern RPAREN
-- On COLON reduce production simple_pattern -> LPAREN pattern RPAREN
-- On CHAR reduce production simple_pattern -> LPAREN pattern RPAREN
-- On BAR reduce production simple_pattern -> LPAREN pattern RPAREN
-- On AS reduce production simple_pattern -> LPAREN pattern RPAREN

State 240:
simple_pattern -> LPAREN pattern COLON . core_type RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN pattern COLON . core_type error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 241

State 241:
core_type -> core_type . MINUSGREATER core_type [ error RPAREN MINUSGREATER AS ]
core_type -> core_type . AS type_parameter [ error RPAREN MINUSGREATER AS ]
simple_pattern -> LPAREN pattern COLON core_type . RPAREN [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LPAREN pattern COLON core_type . error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On error shift to state 242
-- On RPAREN shift to state 243
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233

State 242:
simple_pattern -> LPAREN pattern COLON core_type error . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On UNDERSCORE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On UIDENT reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On TRUE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On SUBTRACTIVE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On STRING reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On MINUSGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On LPAREN reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On LIDENT reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On LBRACKETLESS reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On LBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On LBRACE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On INT reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On GREATERGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On GREATER reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On FLOAT reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On FALSE reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On EQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COMMA reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLONGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLONEQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On COLON reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On CHAR reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On BAR reduce production simple_pattern -> LPAREN pattern COLON core_type error
-- On AS reduce production simple_pattern -> LPAREN pattern COLON core_type error

State 243:
simple_pattern -> LPAREN pattern COLON core_type RPAREN . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On UNDERSCORE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On UIDENT reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On TRUE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On SUBTRACTIVE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On STRING reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On MINUSGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On LPAREN reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On LIDENT reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On LBRACKETLESS reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On LBRACKET reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On LBRACE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On INT reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On GREATERGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On GREATER reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On FLOAT reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On FALSE reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On EQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COMMA reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLONGREATER reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLONEQUAL reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLONCOLON reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On COLON reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On CHAR reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On BAR reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN
-- On AS reduce production simple_pattern -> LPAREN pattern COLON core_type RPAREN

State 244:
val_ident -> LPAREN operator . RPAREN [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 245

State 245:
val_ident -> LPAREN operator RPAREN . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production val_ident -> LPAREN operator RPAREN
-- On WHILE reduce production val_ident -> LPAREN operator RPAREN
-- On WHEN reduce production val_ident -> LPAREN operator RPAREN
-- On UNDERSCORE reduce production val_ident -> LPAREN operator RPAREN
-- On UIDENT reduce production val_ident -> LPAREN operator RPAREN
-- On TYPE reduce production val_ident -> LPAREN operator RPAREN
-- On TRY reduce production val_ident -> LPAREN operator RPAREN
-- On TRUE reduce production val_ident -> LPAREN operator RPAREN
-- On TO reduce production val_ident -> LPAREN operator RPAREN
-- On THEN reduce production val_ident -> LPAREN operator RPAREN
-- On SUBTRACTIVE reduce production val_ident -> LPAREN operator RPAREN
-- On STRING reduce production val_ident -> LPAREN operator RPAREN
-- On STAR reduce production val_ident -> LPAREN operator RPAREN
-- On SHARP reduce production val_ident -> LPAREN operator RPAREN
-- On SEMISEMI reduce production val_ident -> LPAREN operator RPAREN
-- On SEMI reduce production val_ident -> LPAREN operator RPAREN
-- On RPAREN reduce production val_ident -> LPAREN operator RPAREN
-- On PREFIXOP reduce production val_ident -> LPAREN operator RPAREN
-- On PARSER reduce production val_ident -> LPAREN operator RPAREN
-- On OR reduce production val_ident -> LPAREN operator RPAREN
-- On OPEN reduce production val_ident -> LPAREN operator RPAREN
-- On NEW reduce production val_ident -> LPAREN operator RPAREN
-- On MODULE reduce production val_ident -> LPAREN operator RPAREN
-- On MINUSGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On MATCH reduce production val_ident -> LPAREN operator RPAREN
-- On LPAREN reduce production val_ident -> LPAREN operator RPAREN
-- On LOC reduce production val_ident -> LPAREN operator RPAREN
-- On LIDENT reduce production val_ident -> LPAREN operator RPAREN
-- On LET reduce production val_ident -> LPAREN operator RPAREN
-- On LESSLESSGREATERGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On LESSLESS reduce production val_ident -> LPAREN operator RPAREN
-- On LESSGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On LESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKETLESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKETBAR reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACKET reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACELESS reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACEBAR reduce production val_ident -> LPAREN operator RPAREN
-- On LBRACE reduce production val_ident -> LPAREN operator RPAREN
-- On LAZY reduce production val_ident -> LPAREN operator RPAREN
-- On INT reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP4 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP3 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP2 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP1 reduce production val_ident -> LPAREN operator RPAREN
-- On INFIXOP0 reduce production val_ident -> LPAREN operator RPAREN
-- On IN reduce production val_ident -> LPAREN operator RPAREN
-- On IF reduce production val_ident -> LPAREN operator RPAREN
-- On GREATERGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On GREATER reduce production val_ident -> LPAREN operator RPAREN
-- On FUNCTION reduce production val_ident -> LPAREN operator RPAREN
-- On FUN reduce production val_ident -> LPAREN operator RPAREN
-- On FOR reduce production val_ident -> LPAREN operator RPAREN
-- On FLOAT reduce production val_ident -> LPAREN operator RPAREN
-- On FALSE reduce production val_ident -> LPAREN operator RPAREN
-- On EXTERNAL reduce production val_ident -> LPAREN operator RPAREN
-- On EXCEPTION reduce production val_ident -> LPAREN operator RPAREN
-- On EQUAL reduce production val_ident -> LPAREN operator RPAREN
-- On EOF reduce production val_ident -> LPAREN operator RPAREN
-- On END reduce production val_ident -> LPAREN operator RPAREN
-- On ELSE reduce production val_ident -> LPAREN operator RPAREN
-- On DOWNTO reduce production val_ident -> LPAREN operator RPAREN
-- On DOT reduce production val_ident -> LPAREN operator RPAREN
-- On DO reduce production val_ident -> LPAREN operator RPAREN
-- On DEF reduce production val_ident -> LPAREN operator RPAREN
-- On COMMA reduce production val_ident -> LPAREN operator RPAREN
-- On COLONGREATER reduce production val_ident -> LPAREN operator RPAREN
-- On COLONEQUAL reduce production val_ident -> LPAREN operator RPAREN
-- On COLONCOLON reduce production val_ident -> LPAREN operator RPAREN
-- On COLON reduce production val_ident -> LPAREN operator RPAREN
-- On CLASS reduce production val_ident -> LPAREN operator RPAREN
-- On CHAR reduce production val_ident -> LPAREN operator RPAREN
-- On BEGIN reduce production val_ident -> LPAREN operator RPAREN
-- On BARRBRACE reduce production val_ident -> LPAREN operator RPAREN
-- On BARBAR reduce production val_ident -> LPAREN operator RPAREN
-- On BAR reduce production val_ident -> LPAREN operator RPAREN
-- On ASSERT reduce production val_ident -> LPAREN operator RPAREN
-- On AS reduce production val_ident -> LPAREN operator RPAREN
-- On AND reduce production val_ident -> LPAREN operator RPAREN
-- On AMPERSAND reduce production val_ident -> LPAREN operator RPAREN
-- On AMPERAMPER reduce production val_ident -> LPAREN operator RPAREN

State 246:
val_ident -> LIDENT . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production val_ident -> LIDENT
-- On WHILE reduce production val_ident -> LIDENT
-- On WHEN reduce production val_ident -> LIDENT
-- On UNDERSCORE reduce production val_ident -> LIDENT
-- On UIDENT reduce production val_ident -> LIDENT
-- On TYPE reduce production val_ident -> LIDENT
-- On TRY reduce production val_ident -> LIDENT
-- On TRUE reduce production val_ident -> LIDENT
-- On TO reduce production val_ident -> LIDENT
-- On THEN reduce production val_ident -> LIDENT
-- On SUBTRACTIVE reduce production val_ident -> LIDENT
-- On STRING reduce production val_ident -> LIDENT
-- On STAR reduce production val_ident -> LIDENT
-- On SHARP reduce production val_ident -> LIDENT
-- On SEMISEMI reduce production val_ident -> LIDENT
-- On SEMI reduce production val_ident -> LIDENT
-- On RPAREN reduce production val_ident -> LIDENT
-- On PREFIXOP reduce production val_ident -> LIDENT
-- On PARSER reduce production val_ident -> LIDENT
-- On OR reduce production val_ident -> LIDENT
-- On OPEN reduce production val_ident -> LIDENT
-- On NEW reduce production val_ident -> LIDENT
-- On MODULE reduce production val_ident -> LIDENT
-- On MINUSGREATER reduce production val_ident -> LIDENT
-- On MATCH reduce production val_ident -> LIDENT
-- On LPAREN reduce production val_ident -> LIDENT
-- On LOC reduce production val_ident -> LIDENT
-- On LIDENT reduce production val_ident -> LIDENT
-- On LET reduce production val_ident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production val_ident -> LIDENT
-- On LESSLESS reduce production val_ident -> LIDENT
-- On LESSGREATER reduce production val_ident -> LIDENT
-- On LESS reduce production val_ident -> LIDENT
-- On LBRACKETLESS reduce production val_ident -> LIDENT
-- On LBRACKETBAR reduce production val_ident -> LIDENT
-- On LBRACKET reduce production val_ident -> LIDENT
-- On LBRACELESS reduce production val_ident -> LIDENT
-- On LBRACEBAR reduce production val_ident -> LIDENT
-- On LBRACE reduce production val_ident -> LIDENT
-- On LAZY reduce production val_ident -> LIDENT
-- On INT reduce production val_ident -> LIDENT
-- On INFIXOP4 reduce production val_ident -> LIDENT
-- On INFIXOP3 reduce production val_ident -> LIDENT
-- On INFIXOP2 reduce production val_ident -> LIDENT
-- On INFIXOP1 reduce production val_ident -> LIDENT
-- On INFIXOP0 reduce production val_ident -> LIDENT
-- On IN reduce production val_ident -> LIDENT
-- On IF reduce production val_ident -> LIDENT
-- On GREATERGREATER reduce production val_ident -> LIDENT
-- On GREATER reduce production val_ident -> LIDENT
-- On FUNCTION reduce production val_ident -> LIDENT
-- On FUN reduce production val_ident -> LIDENT
-- On FOR reduce production val_ident -> LIDENT
-- On FLOAT reduce production val_ident -> LIDENT
-- On FALSE reduce production val_ident -> LIDENT
-- On EXTERNAL reduce production val_ident -> LIDENT
-- On EXCEPTION reduce production val_ident -> LIDENT
-- On EQUAL reduce production val_ident -> LIDENT
-- On EOF reduce production val_ident -> LIDENT
-- On END reduce production val_ident -> LIDENT
-- On ELSE reduce production val_ident -> LIDENT
-- On DOWNTO reduce production val_ident -> LIDENT
-- On DOT reduce production val_ident -> LIDENT
-- On DO reduce production val_ident -> LIDENT
-- On DEF reduce production val_ident -> LIDENT
-- On COMMA reduce production val_ident -> LIDENT
-- On COLONGREATER reduce production val_ident -> LIDENT
-- On COLONEQUAL reduce production val_ident -> LIDENT
-- On COLONCOLON reduce production val_ident -> LIDENT
-- On COLON reduce production val_ident -> LIDENT
-- On CLASS reduce production val_ident -> LIDENT
-- On CHAR reduce production val_ident -> LIDENT
-- On BEGIN reduce production val_ident -> LIDENT
-- On BARRBRACE reduce production val_ident -> LIDENT
-- On BARBAR reduce production val_ident -> LIDENT
-- On BAR reduce production val_ident -> LIDENT
-- On ASSERT reduce production val_ident -> LIDENT
-- On AS reduce production val_ident -> LIDENT
-- On AND reduce production val_ident -> LIDENT
-- On AMPERSAND reduce production val_ident -> LIDENT
-- On AMPERAMPER reduce production val_ident -> LIDENT

State 247:
constr_longident -> LBRACKET . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACKET . pattern_semi_list opt_semi error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On RBRACKET shift to state 248
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_semi_list shift to state 249
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 116
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 248:
constr_longident -> LBRACKET RBRACKET . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constr_longident -> LBRACKET RBRACKET
-- On WHILE reduce production constr_longident -> LBRACKET RBRACKET
-- On WHEN reduce production constr_longident -> LBRACKET RBRACKET
-- On UNDERSCORE reduce production constr_longident -> LBRACKET RBRACKET
-- On UIDENT reduce production constr_longident -> LBRACKET RBRACKET
-- On TYPE reduce production constr_longident -> LBRACKET RBRACKET
-- On TRY reduce production constr_longident -> LBRACKET RBRACKET
-- On TRUE reduce production constr_longident -> LBRACKET RBRACKET
-- On TO reduce production constr_longident -> LBRACKET RBRACKET
-- On THEN reduce production constr_longident -> LBRACKET RBRACKET
-- On SUBTRACTIVE reduce production constr_longident -> LBRACKET RBRACKET
-- On STRING reduce production constr_longident -> LBRACKET RBRACKET
-- On STAR reduce production constr_longident -> LBRACKET RBRACKET
-- On SHARP reduce production constr_longident -> LBRACKET RBRACKET
-- On SEMISEMI reduce production constr_longident -> LBRACKET RBRACKET
-- On SEMI reduce production constr_longident -> LBRACKET RBRACKET
-- On RPAREN reduce production constr_longident -> LBRACKET RBRACKET
-- On PREFIXOP reduce production constr_longident -> LBRACKET RBRACKET
-- On PARSER reduce production constr_longident -> LBRACKET RBRACKET
-- On OR reduce production constr_longident -> LBRACKET RBRACKET
-- On OPEN reduce production constr_longident -> LBRACKET RBRACKET
-- On NEW reduce production constr_longident -> LBRACKET RBRACKET
-- On MODULE reduce production constr_longident -> LBRACKET RBRACKET
-- On MINUSGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On MATCH reduce production constr_longident -> LBRACKET RBRACKET
-- On LPAREN reduce production constr_longident -> LBRACKET RBRACKET
-- On LOC reduce production constr_longident -> LBRACKET RBRACKET
-- On LIDENT reduce production constr_longident -> LBRACKET RBRACKET
-- On LET reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSLESSGREATERGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSLESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LESSGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On LESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKETLESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKETBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACKET reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACELESS reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACEBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On LBRACE reduce production constr_longident -> LBRACKET RBRACKET
-- On LAZY reduce production constr_longident -> LBRACKET RBRACKET
-- On INT reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP4 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP3 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP2 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP1 reduce production constr_longident -> LBRACKET RBRACKET
-- On INFIXOP0 reduce production constr_longident -> LBRACKET RBRACKET
-- On IN reduce production constr_longident -> LBRACKET RBRACKET
-- On IF reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATERGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On GREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On FUNCTION reduce production constr_longident -> LBRACKET RBRACKET
-- On FUN reduce production constr_longident -> LBRACKET RBRACKET
-- On FOR reduce production constr_longident -> LBRACKET RBRACKET
-- On FLOAT reduce production constr_longident -> LBRACKET RBRACKET
-- On FALSE reduce production constr_longident -> LBRACKET RBRACKET
-- On EXTERNAL reduce production constr_longident -> LBRACKET RBRACKET
-- On EXCEPTION reduce production constr_longident -> LBRACKET RBRACKET
-- On EQUAL reduce production constr_longident -> LBRACKET RBRACKET
-- On EOF reduce production constr_longident -> LBRACKET RBRACKET
-- On END reduce production constr_longident -> LBRACKET RBRACKET
-- On ELSE reduce production constr_longident -> LBRACKET RBRACKET
-- On DOWNTO reduce production constr_longident -> LBRACKET RBRACKET
-- On DOT reduce production constr_longident -> LBRACKET RBRACKET
-- On DO reduce production constr_longident -> LBRACKET RBRACKET
-- On DEF reduce production constr_longident -> LBRACKET RBRACKET
-- On COMMA reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONGREATER reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONEQUAL reduce production constr_longident -> LBRACKET RBRACKET
-- On COLONCOLON reduce production constr_longident -> LBRACKET RBRACKET
-- On COLON reduce production constr_longident -> LBRACKET RBRACKET
-- On CLASS reduce production constr_longident -> LBRACKET RBRACKET
-- On CHAR reduce production constr_longident -> LBRACKET RBRACKET
-- On BEGIN reduce production constr_longident -> LBRACKET RBRACKET
-- On BARRBRACE reduce production constr_longident -> LBRACKET RBRACKET
-- On BARBAR reduce production constr_longident -> LBRACKET RBRACKET
-- On BAR reduce production constr_longident -> LBRACKET RBRACKET
-- On ASSERT reduce production constr_longident -> LBRACKET RBRACKET
-- On AS reduce production constr_longident -> LBRACKET RBRACKET
-- On AND reduce production constr_longident -> LBRACKET RBRACKET
-- On AMPERSAND reduce production constr_longident -> LBRACKET RBRACKET
-- On AMPERAMPER reduce production constr_longident -> LBRACKET RBRACKET

State 249:
pattern_semi_list -> pattern_semi_list . SEMI pattern [ error SEMI RBRACKET ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi RBRACKET [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list . opt_semi error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On SEMI shift to state 111
-- On opt_semi shift to state 250
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 250:
simple_pattern -> LBRACKET pattern_semi_list opt_semi . RBRACKET [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACKET pattern_semi_list opt_semi . error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On error shift to state 251
-- On RBRACKET shift to state 252

State 251:
simple_pattern -> LBRACKET pattern_semi_list opt_semi error . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On UNDERSCORE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On UIDENT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On TRUE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On SUBTRACTIVE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On STRING reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On MINUSGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On LPAREN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On LIDENT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On LBRACKETLESS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On LBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On LBRACE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On INT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On GREATERGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On GREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On FLOAT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On FALSE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On EQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COMMA reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLONGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLONEQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLONCOLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On COLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On CHAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On BAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error
-- On AS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi error

State 252:
simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On UNDERSCORE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On UIDENT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On TRUE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On SUBTRACTIVE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On STRING reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On MINUSGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On LPAREN reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On LIDENT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On LBRACKETLESS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On LBRACKET reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On LBRACE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On INT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On GREATERGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On GREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On FLOAT reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On FALSE reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On EQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COMMA reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLONGREATER reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLONEQUAL reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLONCOLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On COLON reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On CHAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On BAR reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET
-- On AS reduce production simple_pattern -> LBRACKET pattern_semi_list opt_semi RBRACKET

State 253:
simple_pattern -> LBRACE . lbl_pattern_list opt_semi RBRACE [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACE . lbl_pattern_list opt_semi error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On lbl_pattern_list shift to state 254
-- On label_longident shift to state 107

State 254:
lbl_pattern_list -> lbl_pattern_list . SEMI label_longident EQUAL pattern [ error SEMI RBRACE ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi RBRACE [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list . opt_semi error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On SEMI shift to state 59
-- On opt_semi shift to state 255
-- On error reduce production opt_semi -> 
-- On RBRACE reduce production opt_semi -> 

State 255:
simple_pattern -> LBRACE lbl_pattern_list opt_semi . RBRACE [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> LBRACE lbl_pattern_list opt_semi . error [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On error shift to state 256
-- On RBRACE shift to state 257

State 256:
simple_pattern -> LBRACE lbl_pattern_list opt_semi error . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On UNDERSCORE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On UIDENT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On TRUE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On SUBTRACTIVE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On STRING reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On MINUSGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On LPAREN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On LIDENT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On LBRACKETLESS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On LBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On LBRACE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On INT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On GREATERGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On GREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On FLOAT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On FALSE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On EQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COMMA reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLONGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLONEQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLONCOLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On COLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On CHAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On BAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error
-- On AS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi error

State 257:
simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On UNDERSCORE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On UIDENT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On TRUE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On SUBTRACTIVE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On STRING reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On MINUSGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On LPAREN reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On LIDENT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On LBRACKETLESS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On LBRACKET reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On LBRACE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On INT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On GREATERGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On GREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On FLOAT reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On FALSE reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On EQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COMMA reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLONGREATER reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLONEQUAL reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLONCOLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On COLON reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On CHAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On BAR reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE
-- On AS reduce production simple_pattern -> LBRACE lbl_pattern_list opt_semi RBRACE

State 258:
constant -> INT . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constant -> INT
-- On WHILE reduce production constant -> INT
-- On WHEN reduce production constant -> INT
-- On UNDERSCORE reduce production constant -> INT
-- On UIDENT reduce production constant -> INT
-- On TYPE reduce production constant -> INT
-- On TRY reduce production constant -> INT
-- On TRUE reduce production constant -> INT
-- On TO reduce production constant -> INT
-- On THEN reduce production constant -> INT
-- On SUBTRACTIVE reduce production constant -> INT
-- On STRING reduce production constant -> INT
-- On STAR reduce production constant -> INT
-- On SHARP reduce production constant -> INT
-- On SEMISEMI reduce production constant -> INT
-- On SEMI reduce production constant -> INT
-- On RPAREN reduce production constant -> INT
-- On PREFIXOP reduce production constant -> INT
-- On PARSER reduce production constant -> INT
-- On OR reduce production constant -> INT
-- On OPEN reduce production constant -> INT
-- On NEW reduce production constant -> INT
-- On MODULE reduce production constant -> INT
-- On MINUSGREATER reduce production constant -> INT
-- On MATCH reduce production constant -> INT
-- On LPAREN reduce production constant -> INT
-- On LOC reduce production constant -> INT
-- On LIDENT reduce production constant -> INT
-- On LET reduce production constant -> INT
-- On LESSLESSGREATERGREATER reduce production constant -> INT
-- On LESSLESS reduce production constant -> INT
-- On LESSGREATER reduce production constant -> INT
-- On LESS reduce production constant -> INT
-- On LBRACKETLESS reduce production constant -> INT
-- On LBRACKETBAR reduce production constant -> INT
-- On LBRACKET reduce production constant -> INT
-- On LBRACELESS reduce production constant -> INT
-- On LBRACEBAR reduce production constant -> INT
-- On LBRACE reduce production constant -> INT
-- On LAZY reduce production constant -> INT
-- On INT reduce production constant -> INT
-- On INFIXOP4 reduce production constant -> INT
-- On INFIXOP3 reduce production constant -> INT
-- On INFIXOP2 reduce production constant -> INT
-- On INFIXOP1 reduce production constant -> INT
-- On INFIXOP0 reduce production constant -> INT
-- On IN reduce production constant -> INT
-- On IF reduce production constant -> INT
-- On GREATERGREATER reduce production constant -> INT
-- On GREATER reduce production constant -> INT
-- On FUNCTION reduce production constant -> INT
-- On FUN reduce production constant -> INT
-- On FOR reduce production constant -> INT
-- On FLOAT reduce production constant -> INT
-- On FALSE reduce production constant -> INT
-- On EXTERNAL reduce production constant -> INT
-- On EXCEPTION reduce production constant -> INT
-- On EQUAL reduce production constant -> INT
-- On EOF reduce production constant -> INT
-- On END reduce production constant -> INT
-- On ELSE reduce production constant -> INT
-- On DOWNTO reduce production constant -> INT
-- On DOT reduce production constant -> INT
-- On DO reduce production constant -> INT
-- On DEF reduce production constant -> INT
-- On COMMA reduce production constant -> INT
-- On COLONGREATER reduce production constant -> INT
-- On COLONEQUAL reduce production constant -> INT
-- On COLONCOLON reduce production constant -> INT
-- On COLON reduce production constant -> INT
-- On CLASS reduce production constant -> INT
-- On CHAR reduce production constant -> INT
-- On BEGIN reduce production constant -> INT
-- On BARRBRACE reduce production constant -> INT
-- On BARBAR reduce production constant -> INT
-- On BAR reduce production constant -> INT
-- On ASSERT reduce production constant -> INT
-- On AS reduce production constant -> INT
-- On AND reduce production constant -> INT
-- On AMPERSAND reduce production constant -> INT
-- On AMPERAMPER reduce production constant -> INT

State 259:
constant -> FLOAT . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constant -> FLOAT
-- On WHILE reduce production constant -> FLOAT
-- On WHEN reduce production constant -> FLOAT
-- On UNDERSCORE reduce production constant -> FLOAT
-- On UIDENT reduce production constant -> FLOAT
-- On TYPE reduce production constant -> FLOAT
-- On TRY reduce production constant -> FLOAT
-- On TRUE reduce production constant -> FLOAT
-- On TO reduce production constant -> FLOAT
-- On THEN reduce production constant -> FLOAT
-- On SUBTRACTIVE reduce production constant -> FLOAT
-- On STRING reduce production constant -> FLOAT
-- On STAR reduce production constant -> FLOAT
-- On SHARP reduce production constant -> FLOAT
-- On SEMISEMI reduce production constant -> FLOAT
-- On SEMI reduce production constant -> FLOAT
-- On RPAREN reduce production constant -> FLOAT
-- On PREFIXOP reduce production constant -> FLOAT
-- On PARSER reduce production constant -> FLOAT
-- On OR reduce production constant -> FLOAT
-- On OPEN reduce production constant -> FLOAT
-- On NEW reduce production constant -> FLOAT
-- On MODULE reduce production constant -> FLOAT
-- On MINUSGREATER reduce production constant -> FLOAT
-- On MATCH reduce production constant -> FLOAT
-- On LPAREN reduce production constant -> FLOAT
-- On LOC reduce production constant -> FLOAT
-- On LIDENT reduce production constant -> FLOAT
-- On LET reduce production constant -> FLOAT
-- On LESSLESSGREATERGREATER reduce production constant -> FLOAT
-- On LESSLESS reduce production constant -> FLOAT
-- On LESSGREATER reduce production constant -> FLOAT
-- On LESS reduce production constant -> FLOAT
-- On LBRACKETLESS reduce production constant -> FLOAT
-- On LBRACKETBAR reduce production constant -> FLOAT
-- On LBRACKET reduce production constant -> FLOAT
-- On LBRACELESS reduce production constant -> FLOAT
-- On LBRACEBAR reduce production constant -> FLOAT
-- On LBRACE reduce production constant -> FLOAT
-- On LAZY reduce production constant -> FLOAT
-- On INT reduce production constant -> FLOAT
-- On INFIXOP4 reduce production constant -> FLOAT
-- On INFIXOP3 reduce production constant -> FLOAT
-- On INFIXOP2 reduce production constant -> FLOAT
-- On INFIXOP1 reduce production constant -> FLOAT
-- On INFIXOP0 reduce production constant -> FLOAT
-- On IN reduce production constant -> FLOAT
-- On IF reduce production constant -> FLOAT
-- On GREATERGREATER reduce production constant -> FLOAT
-- On GREATER reduce production constant -> FLOAT
-- On FUNCTION reduce production constant -> FLOAT
-- On FUN reduce production constant -> FLOAT
-- On FOR reduce production constant -> FLOAT
-- On FLOAT reduce production constant -> FLOAT
-- On FALSE reduce production constant -> FLOAT
-- On EXTERNAL reduce production constant -> FLOAT
-- On EXCEPTION reduce production constant -> FLOAT
-- On EQUAL reduce production constant -> FLOAT
-- On EOF reduce production constant -> FLOAT
-- On END reduce production constant -> FLOAT
-- On ELSE reduce production constant -> FLOAT
-- On DOWNTO reduce production constant -> FLOAT
-- On DOT reduce production constant -> FLOAT
-- On DO reduce production constant -> FLOAT
-- On DEF reduce production constant -> FLOAT
-- On COMMA reduce production constant -> FLOAT
-- On COLONGREATER reduce production constant -> FLOAT
-- On COLONEQUAL reduce production constant -> FLOAT
-- On COLONCOLON reduce production constant -> FLOAT
-- On COLON reduce production constant -> FLOAT
-- On CLASS reduce production constant -> FLOAT
-- On CHAR reduce production constant -> FLOAT
-- On BEGIN reduce production constant -> FLOAT
-- On BARRBRACE reduce production constant -> FLOAT
-- On BARBAR reduce production constant -> FLOAT
-- On BAR reduce production constant -> FLOAT
-- On ASSERT reduce production constant -> FLOAT
-- On AS reduce production constant -> FLOAT
-- On AND reduce production constant -> FLOAT
-- On AMPERSAND reduce production constant -> FLOAT
-- On AMPERAMPER reduce production constant -> FLOAT

State 260:
constr_longident -> FALSE . [ WITH WHILE WHEN UNDERSCORE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constr_longident -> FALSE
-- On WHILE reduce production constr_longident -> FALSE
-- On WHEN reduce production constr_longident -> FALSE
-- On UNDERSCORE reduce production constr_longident -> FALSE
-- On UIDENT reduce production constr_longident -> FALSE
-- On TYPE reduce production constr_longident -> FALSE
-- On TRY reduce production constr_longident -> FALSE
-- On TRUE reduce production constr_longident -> FALSE
-- On TO reduce production constr_longident -> FALSE
-- On THEN reduce production constr_longident -> FALSE
-- On SUBTRACTIVE reduce production constr_longident -> FALSE
-- On STRING reduce production constr_longident -> FALSE
-- On STAR reduce production constr_longident -> FALSE
-- On SHARP reduce production constr_longident -> FALSE
-- On SEMISEMI reduce production constr_longident -> FALSE
-- On SEMI reduce production constr_longident -> FALSE
-- On RPAREN reduce production constr_longident -> FALSE
-- On PREFIXOP reduce production constr_longident -> FALSE
-- On PARSER reduce production constr_longident -> FALSE
-- On OR reduce production constr_longident -> FALSE
-- On OPEN reduce production constr_longident -> FALSE
-- On NEW reduce production constr_longident -> FALSE
-- On MODULE reduce production constr_longident -> FALSE
-- On MINUSGREATER reduce production constr_longident -> FALSE
-- On MATCH reduce production constr_longident -> FALSE
-- On LPAREN reduce production constr_longident -> FALSE
-- On LOC reduce production constr_longident -> FALSE
-- On LIDENT reduce production constr_longident -> FALSE
-- On LET reduce production constr_longident -> FALSE
-- On LESSLESSGREATERGREATER reduce production constr_longident -> FALSE
-- On LESSLESS reduce production constr_longident -> FALSE
-- On LESSGREATER reduce production constr_longident -> FALSE
-- On LESS reduce production constr_longident -> FALSE
-- On LBRACKETLESS reduce production constr_longident -> FALSE
-- On LBRACKETBAR reduce production constr_longident -> FALSE
-- On LBRACKET reduce production constr_longident -> FALSE
-- On LBRACELESS reduce production constr_longident -> FALSE
-- On LBRACEBAR reduce production constr_longident -> FALSE
-- On LBRACE reduce production constr_longident -> FALSE
-- On LAZY reduce production constr_longident -> FALSE
-- On INT reduce production constr_longident -> FALSE
-- On INFIXOP4 reduce production constr_longident -> FALSE
-- On INFIXOP3 reduce production constr_longident -> FALSE
-- On INFIXOP2 reduce production constr_longident -> FALSE
-- On INFIXOP1 reduce production constr_longident -> FALSE
-- On INFIXOP0 reduce production constr_longident -> FALSE
-- On IN reduce production constr_longident -> FALSE
-- On IF reduce production constr_longident -> FALSE
-- On GREATERGREATER reduce production constr_longident -> FALSE
-- On GREATER reduce production constr_longident -> FALSE
-- On FUNCTION reduce production constr_longident -> FALSE
-- On FUN reduce production constr_longident -> FALSE
-- On FOR reduce production constr_longident -> FALSE
-- On FLOAT reduce production constr_longident -> FALSE
-- On FALSE reduce production constr_longident -> FALSE
-- On EXTERNAL reduce production constr_longident -> FALSE
-- On EXCEPTION reduce production constr_longident -> FALSE
-- On EQUAL reduce production constr_longident -> FALSE
-- On EOF reduce production constr_longident -> FALSE
-- On END reduce production constr_longident -> FALSE
-- On ELSE reduce production constr_longident -> FALSE
-- On DOWNTO reduce production constr_longident -> FALSE
-- On DOT reduce production constr_longident -> FALSE
-- On DO reduce production constr_longident -> FALSE
-- On DEF reduce production constr_longident -> FALSE
-- On COMMA reduce production constr_longident -> FALSE
-- On COLONGREATER reduce production constr_longident -> FALSE
-- On COLONEQUAL reduce production constr_longident -> FALSE
-- On COLONCOLON reduce production constr_longident -> FALSE
-- On COLON reduce production constr_longident -> FALSE
-- On CLASS reduce production constr_longident -> FALSE
-- On CHAR reduce production constr_longident -> FALSE
-- On BEGIN reduce production constr_longident -> FALSE
-- On BARRBRACE reduce production constr_longident -> FALSE
-- On BARBAR reduce production constr_longident -> FALSE
-- On BAR reduce production constr_longident -> FALSE
-- On ASSERT reduce production constr_longident -> FALSE
-- On AS reduce production constr_longident -> FALSE
-- On AND reduce production constr_longident -> FALSE
-- On AMPERSAND reduce production constr_longident -> FALSE
-- On AMPERAMPER reduce production constr_longident -> FALSE

State 261:
constant -> CHAR . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
simple_pattern -> CHAR . DOTDOT CHAR [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On DOTDOT shift to state 262
-- On WHEN reduce production constant -> CHAR
-- On UNDERSCORE reduce production constant -> CHAR
-- On UIDENT reduce production constant -> CHAR
-- On TRUE reduce production constant -> CHAR
-- On SUBTRACTIVE reduce production constant -> CHAR
-- On STRING reduce production constant -> CHAR
-- On MINUSGREATER reduce production constant -> CHAR
-- On LPAREN reduce production constant -> CHAR
-- On LIDENT reduce production constant -> CHAR
-- On LBRACKETLESS reduce production constant -> CHAR
-- On LBRACKET reduce production constant -> CHAR
-- On LBRACE reduce production constant -> CHAR
-- On INT reduce production constant -> CHAR
-- On GREATERGREATER reduce production constant -> CHAR
-- On GREATER reduce production constant -> CHAR
-- On FLOAT reduce production constant -> CHAR
-- On FALSE reduce production constant -> CHAR
-- On EQUAL reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONGREATER reduce production constant -> CHAR
-- On COLONEQUAL reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On CHAR reduce production constant -> CHAR
-- On BAR reduce production constant -> CHAR
-- On AS reduce production constant -> CHAR

State 262:
simple_pattern -> CHAR DOTDOT . CHAR [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On CHAR shift to state 263

State 263:
simple_pattern -> CHAR DOTDOT CHAR . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On UNDERSCORE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On UIDENT reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On TRUE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On SUBTRACTIVE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On STRING reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On MINUSGREATER reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On LPAREN reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On LIDENT reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On LBRACKETLESS reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On LBRACKET reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On LBRACE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On INT reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On GREATERGREATER reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On GREATER reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On FLOAT reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On FALSE reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On EQUAL reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COMMA reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLONGREATER reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLONEQUAL reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLONCOLON reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On COLON reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On CHAR reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On BAR reduce production simple_pattern -> CHAR DOTDOT CHAR
-- On AS reduce production simple_pattern -> CHAR DOTDOT CHAR

State 264:
simple_pattern -> val_ident . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> val_ident
-- On UNDERSCORE reduce production simple_pattern -> val_ident
-- On UIDENT reduce production simple_pattern -> val_ident
-- On TRUE reduce production simple_pattern -> val_ident
-- On SUBTRACTIVE reduce production simple_pattern -> val_ident
-- On STRING reduce production simple_pattern -> val_ident
-- On MINUSGREATER reduce production simple_pattern -> val_ident
-- On LPAREN reduce production simple_pattern -> val_ident
-- On LIDENT reduce production simple_pattern -> val_ident
-- On LBRACKETLESS reduce production simple_pattern -> val_ident
-- On LBRACKET reduce production simple_pattern -> val_ident
-- On LBRACE reduce production simple_pattern -> val_ident
-- On INT reduce production simple_pattern -> val_ident
-- On GREATERGREATER reduce production simple_pattern -> val_ident
-- On GREATER reduce production simple_pattern -> val_ident
-- On FLOAT reduce production simple_pattern -> val_ident
-- On FALSE reduce production simple_pattern -> val_ident
-- On EQUAL reduce production simple_pattern -> val_ident
-- On COMMA reduce production simple_pattern -> val_ident
-- On COLONGREATER reduce production simple_pattern -> val_ident
-- On COLONEQUAL reduce production simple_pattern -> val_ident
-- On COLONCOLON reduce production simple_pattern -> val_ident
-- On COLON reduce production simple_pattern -> val_ident
-- On CHAR reduce production simple_pattern -> val_ident
-- On BAR reduce production simple_pattern -> val_ident
-- On AS reduce production simple_pattern -> val_ident

State 265:
opt_pat -> simple_pattern . [ MINUSGREATER LBRACKETLESS BAR ]
-- On MINUSGREATER reduce production opt_pat -> simple_pattern
-- On LBRACKETLESS reduce production opt_pat -> simple_pattern
-- On BAR reduce production opt_pat -> simple_pattern

State 266:
simple_pattern -> signed_constant . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> signed_constant
-- On UNDERSCORE reduce production simple_pattern -> signed_constant
-- On UIDENT reduce production simple_pattern -> signed_constant
-- On TRUE reduce production simple_pattern -> signed_constant
-- On SUBTRACTIVE reduce production simple_pattern -> signed_constant
-- On STRING reduce production simple_pattern -> signed_constant
-- On MINUSGREATER reduce production simple_pattern -> signed_constant
-- On LPAREN reduce production simple_pattern -> signed_constant
-- On LIDENT reduce production simple_pattern -> signed_constant
-- On LBRACKETLESS reduce production simple_pattern -> signed_constant
-- On LBRACKET reduce production simple_pattern -> signed_constant
-- On LBRACE reduce production simple_pattern -> signed_constant
-- On INT reduce production simple_pattern -> signed_constant
-- On GREATERGREATER reduce production simple_pattern -> signed_constant
-- On GREATER reduce production simple_pattern -> signed_constant
-- On FLOAT reduce production simple_pattern -> signed_constant
-- On FALSE reduce production simple_pattern -> signed_constant
-- On EQUAL reduce production simple_pattern -> signed_constant
-- On COMMA reduce production simple_pattern -> signed_constant
-- On COLONGREATER reduce production simple_pattern -> signed_constant
-- On COLONEQUAL reduce production simple_pattern -> signed_constant
-- On COLONCOLON reduce production simple_pattern -> signed_constant
-- On COLON reduce production simple_pattern -> signed_constant
-- On CHAR reduce production simple_pattern -> signed_constant
-- On BAR reduce production simple_pattern -> signed_constant
-- On AS reduce production simple_pattern -> signed_constant

State 267:
expr -> PARSER opt_pat . opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 269
-- On LBRACKETLESS reduce production opt_bar -> 

State 268:
opt_bar -> BAR . [ UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT FLOAT FALSE COLONCOLON CHAR ]
-- On UNDERSCORE reduce production opt_bar -> BAR
-- On UIDENT reduce production opt_bar -> BAR
-- On TRUE reduce production opt_bar -> BAR
-- On SUBTRACTIVE reduce production opt_bar -> BAR
-- On STRING reduce production opt_bar -> BAR
-- On LPAREN reduce production opt_bar -> BAR
-- On LIDENT reduce production opt_bar -> BAR
-- On LBRACKETLESS reduce production opt_bar -> BAR
-- On LBRACKET reduce production opt_bar -> BAR
-- On LBRACE reduce production opt_bar -> BAR
-- On INT reduce production opt_bar -> BAR
-- On FLOAT reduce production opt_bar -> BAR
-- On FALSE reduce production opt_bar -> BAR
-- On COLONCOLON reduce production opt_bar -> BAR
-- On CHAR reduce production opt_bar -> BAR

State 269:
expr -> PARSER opt_pat opt_bar . parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 270
-- On parser_cases shift to state 933
-- On parser_case shift to state 918

State 270:
parser_case -> LBRACKETLESS . stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS . stream_pattern opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS . GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On QUOTE shift to state 271
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On GREATERRBRACKET shift to state 922
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On stream_pattern_component shift to state 892
-- On stream_pattern shift to state 926
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 900
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 271:
stream_pattern_component -> QUOTE . pattern [ error SEMI QUESTION GREATERRBRACKET ]
stream_pattern_component -> QUOTE . pattern WHEN expr [ error SEMI QUESTION GREATERRBRACKET ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 272
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 272:
pattern -> pattern . AS val_ident [ error WHEN SEMI QUESTION GREATERRBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error WHEN SEMI QUESTION GREATERRBRACKET COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error WHEN SEMI QUESTION GREATERRBRACKET COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error WHEN SEMI QUESTION GREATERRBRACKET COMMA COLONCOLON BAR AS ]
stream_pattern_component -> QUOTE pattern . [ error SEMI QUESTION GREATERRBRACKET ]
stream_pattern_component -> QUOTE pattern . WHEN expr [ error SEMI QUESTION GREATERRBRACKET ]
-- On WHEN shift to state 273
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production stream_pattern_component -> QUOTE pattern
-- On SEMI reduce production stream_pattern_component -> QUOTE pattern
-- On QUESTION reduce production stream_pattern_component -> QUOTE pattern
-- On GREATERRBRACKET reduce production stream_pattern_component -> QUOTE pattern

State 273:
stream_pattern_component -> QUOTE pattern WHEN . expr [ error SEMI QUESTION GREATERRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 921
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 274:
expr -> MATCH . seq_expr WITH opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH . seq_expr WITH PARSER opt_pat opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 910
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 275:
expr -> PARSER . opt_pat opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 276
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On LBRACKETLESS reduce production opt_pat -> 
-- On BAR reduce production opt_pat -> 

State 276:
expr -> PARSER opt_pat . opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 277
-- On LBRACKETLESS reduce production opt_bar -> 

State 277:
expr -> PARSER opt_pat opt_bar . parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 278
-- On parser_cases shift to state 909
-- On parser_case shift to state 888

State 278:
parser_case -> LBRACKETLESS . stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS . stream_pattern opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS . GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On QUOTE shift to state 271
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On GREATERRBRACKET shift to state 279
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On stream_pattern_component shift to state 892
-- On stream_pattern shift to state 896
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 900
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81

State 279:
parser_case -> LBRACKETLESS GREATERRBRACKET . opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 280
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On MINUSGREATER reduce production opt_pat -> 

State 280:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat . MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 281

State 281:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 891
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 282:
expr -> MATCH . seq_expr WITH opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH . seq_expr WITH PARSER opt_pat opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 880
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 283:
simple_expr -> LOC . location END [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 865
-- On location_item shift to state 862
-- On location shift to state 878
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On END reduce production location_tail -> 

State 284:
location_tail -> SEMISEMI . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
location_tail -> SEMISEMI . location_item [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_item shift to state 877
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WHILE reduce production location_tail -> SEMISEMI
-- On UIDENT reduce production location_tail -> SEMISEMI
-- On TRY reduce production location_tail -> SEMISEMI
-- On TRUE reduce production location_tail -> SEMISEMI
-- On SUBTRACTIVE reduce production location_tail -> SEMISEMI
-- On STRING reduce production location_tail -> SEMISEMI
-- On SEMISEMI reduce production location_tail -> SEMISEMI
-- On PREFIXOP reduce production location_tail -> SEMISEMI
-- On PARSER reduce production location_tail -> SEMISEMI
-- On NEW reduce production location_tail -> SEMISEMI
-- On MATCH reduce production location_tail -> SEMISEMI
-- On LPAREN reduce production location_tail -> SEMISEMI
-- On LOC reduce production location_tail -> SEMISEMI
-- On LIDENT reduce production location_tail -> SEMISEMI
-- On LET reduce production location_tail -> SEMISEMI
-- On LBRACKETLESS reduce production location_tail -> SEMISEMI
-- On LBRACKETBAR reduce production location_tail -> SEMISEMI
-- On LBRACKET reduce production location_tail -> SEMISEMI
-- On LBRACELESS reduce production location_tail -> SEMISEMI
-- On LBRACEBAR reduce production location_tail -> SEMISEMI
-- On LBRACE reduce production location_tail -> SEMISEMI
-- On LAZY reduce production location_tail -> SEMISEMI
-- On INT reduce production location_tail -> SEMISEMI
-- On IF reduce production location_tail -> SEMISEMI
-- On FUNCTION reduce production location_tail -> SEMISEMI
-- On FUN reduce production location_tail -> SEMISEMI
-- On FOR reduce production location_tail -> SEMISEMI
-- On FLOAT reduce production location_tail -> SEMISEMI
-- On FALSE reduce production location_tail -> SEMISEMI
-- On END reduce production location_tail -> SEMISEMI
-- On DEF reduce production location_tail -> SEMISEMI
-- On CHAR reduce production location_tail -> SEMISEMI
-- On BEGIN reduce production location_tail -> SEMISEMI
-- On ASSERT reduce production location_tail -> SEMISEMI
** Conflict on WHILE UIDENT TRY TRUE SUBTRACTIVE STRING PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 285:
label -> LIDENT . [ LESSMINUS ]
val_ident -> LIDENT . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production val_ident -> LIDENT
-- On WHILE reduce production val_ident -> LIDENT
-- On UIDENT reduce production val_ident -> LIDENT
-- On TYPE reduce production val_ident -> LIDENT
-- On TRY reduce production val_ident -> LIDENT
-- On TRUE reduce production val_ident -> LIDENT
-- On TO reduce production val_ident -> LIDENT
-- On THEN reduce production val_ident -> LIDENT
-- On SUBTRACTIVE reduce production val_ident -> LIDENT
-- On STRING reduce production val_ident -> LIDENT
-- On STAR reduce production val_ident -> LIDENT
-- On SHARP reduce production val_ident -> LIDENT
-- On SEMISEMI reduce production val_ident -> LIDENT
-- On SEMI reduce production val_ident -> LIDENT
-- On PREFIXOP reduce production val_ident -> LIDENT
-- On PARSER reduce production val_ident -> LIDENT
-- On OR reduce production val_ident -> LIDENT
-- On OPEN reduce production val_ident -> LIDENT
-- On NEW reduce production val_ident -> LIDENT
-- On MODULE reduce production val_ident -> LIDENT
-- On MINUSGREATER reduce production val_ident -> LIDENT
-- On MATCH reduce production val_ident -> LIDENT
-- On LPAREN reduce production val_ident -> LIDENT
-- On LOC reduce production val_ident -> LIDENT
-- On LIDENT reduce production val_ident -> LIDENT
-- On LET reduce production val_ident -> LIDENT
-- On LESSMINUS reduce production label -> LIDENT
-- On LESSLESSGREATERGREATER reduce production val_ident -> LIDENT
-- On LESSLESS reduce production val_ident -> LIDENT
-- On LESSGREATER reduce production val_ident -> LIDENT
-- On LESS reduce production val_ident -> LIDENT
-- On LBRACKETLESS reduce production val_ident -> LIDENT
-- On LBRACKETBAR reduce production val_ident -> LIDENT
-- On LBRACKET reduce production val_ident -> LIDENT
-- On LBRACELESS reduce production val_ident -> LIDENT
-- On LBRACEBAR reduce production val_ident -> LIDENT
-- On LBRACE reduce production val_ident -> LIDENT
-- On LAZY reduce production val_ident -> LIDENT
-- On INT reduce production val_ident -> LIDENT
-- On INFIXOP4 reduce production val_ident -> LIDENT
-- On INFIXOP3 reduce production val_ident -> LIDENT
-- On INFIXOP2 reduce production val_ident -> LIDENT
-- On INFIXOP1 reduce production val_ident -> LIDENT
-- On INFIXOP0 reduce production val_ident -> LIDENT
-- On IN reduce production val_ident -> LIDENT
-- On IF reduce production val_ident -> LIDENT
-- On GREATER reduce production val_ident -> LIDENT
-- On FUNCTION reduce production val_ident -> LIDENT
-- On FUN reduce production val_ident -> LIDENT
-- On FOR reduce production val_ident -> LIDENT
-- On FLOAT reduce production val_ident -> LIDENT
-- On FALSE reduce production val_ident -> LIDENT
-- On EXTERNAL reduce production val_ident -> LIDENT
-- On EXCEPTION reduce production val_ident -> LIDENT
-- On EQUAL reduce production val_ident -> LIDENT
-- On EOF reduce production val_ident -> LIDENT
-- On END reduce production val_ident -> LIDENT
-- On ELSE reduce production val_ident -> LIDENT
-- On DOWNTO reduce production val_ident -> LIDENT
-- On DOT reduce production val_ident -> LIDENT
-- On DO reduce production val_ident -> LIDENT
-- On DEF reduce production val_ident -> LIDENT
-- On COMMA reduce production val_ident -> LIDENT
-- On COLONEQUAL reduce production val_ident -> LIDENT
-- On COLONCOLON reduce production val_ident -> LIDENT
-- On CLASS reduce production val_ident -> LIDENT
-- On CHAR reduce production val_ident -> LIDENT
-- On BEGIN reduce production val_ident -> LIDENT
-- On BARBAR reduce production val_ident -> LIDENT
-- On BAR reduce production val_ident -> LIDENT
-- On ASSERT reduce production val_ident -> LIDENT
-- On AND reduce production val_ident -> LIDENT
-- On AMPERSAND reduce production val_ident -> LIDENT
-- On AMPERAMPER reduce production val_ident -> LIDENT

State 286:
expr -> LET . rec_flag let_bindings IN seq_expr [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings IN error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
location_item -> LET . rec_flag let_bindings location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On REC shift to state 287
-- On rec_flag shift to state 288
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 287:
rec_flag -> REC . [ UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING LPAREN LIDENT LBRACKET LBRACE INT FLOAT FALSE CHAR ]
-- On UNDERSCORE reduce production rec_flag -> REC
-- On UIDENT reduce production rec_flag -> REC
-- On TRUE reduce production rec_flag -> REC
-- On SUBTRACTIVE reduce production rec_flag -> REC
-- On STRING reduce production rec_flag -> REC
-- On LPAREN reduce production rec_flag -> REC
-- On LIDENT reduce production rec_flag -> REC
-- On LBRACKET reduce production rec_flag -> REC
-- On LBRACE reduce production rec_flag -> REC
-- On INT reduce production rec_flag -> REC
-- On FLOAT reduce production rec_flag -> REC
-- On FALSE reduce production rec_flag -> REC
-- On CHAR reduce production rec_flag -> REC

State 288:
expr -> LET rec_flag . let_bindings IN seq_expr [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings IN error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
location_item -> LET rec_flag . let_bindings location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 875
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 289:
let_binding -> val_ident . fun_binding [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
simple_pattern -> val_ident . [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 290
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 869
-- On simple_pattern shift to state 872
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On fun_binding shift to state 874
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On EQUAL reduce production simple_pattern -> val_ident
-- On COMMA reduce production simple_pattern -> val_ident
-- On COLONEQUAL reduce production simple_pattern -> val_ident
-- On COLONCOLON reduce production simple_pattern -> val_ident
-- On BAR reduce production simple_pattern -> val_ident
-- On AS reduce production simple_pattern -> val_ident
** Conflict on EQUAL

State 290:
fun_binding -> EQUAL . seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 868
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 291:
simple_expr -> LOC . location END [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 865
-- On location_item shift to state 862
-- On location shift to state 866
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On END reduce production location_tail -> 

State 292:
simple_expr -> LBRACKETLESS . stream_expr opt_semi GREATERRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS . stream_expr opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS . GREATERRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On QUOTE shift to state 293
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On GREATERRBRACKET shift to state 853
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On stream_expr_component shift to state 836
-- On stream_expr shift to state 854
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 840
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 293:
stream_expr_component -> QUOTE . expr [ error SEMI GREATERRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 852
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 294:
label -> LIDENT . [ LESSMINUS ]
val_ident -> LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production val_ident -> LIDENT
-- On WITH reduce production val_ident -> LIDENT
-- On WHILE reduce production val_ident -> LIDENT
-- On VIRTUAL reduce production val_ident -> LIDENT
-- On VAL reduce production val_ident -> LIDENT
-- On UIDENT reduce production val_ident -> LIDENT
-- On TYPE reduce production val_ident -> LIDENT
-- On TRY reduce production val_ident -> LIDENT
-- On TRUE reduce production val_ident -> LIDENT
-- On SUBTRACTIVE reduce production val_ident -> LIDENT
-- On STRING reduce production val_ident -> LIDENT
-- On STAR reduce production val_ident -> LIDENT
-- On SHARP reduce production val_ident -> LIDENT
-- On SEMISEMI reduce production val_ident -> LIDENT
-- On SEMI reduce production val_ident -> LIDENT
-- On RPAREN reduce production val_ident -> LIDENT
-- On RBRACKET reduce production val_ident -> LIDENT
-- On RBRACE reduce production val_ident -> LIDENT
-- On QUESTION reduce production val_ident -> LIDENT
-- On PREFIXOP reduce production val_ident -> LIDENT
-- On PARSER reduce production val_ident -> LIDENT
-- On OR reduce production val_ident -> LIDENT
-- On OPEN reduce production val_ident -> LIDENT
-- On NEW reduce production val_ident -> LIDENT
-- On MODULE reduce production val_ident -> LIDENT
-- On METHOD reduce production val_ident -> LIDENT
-- On MATCH reduce production val_ident -> LIDENT
-- On LPAREN reduce production val_ident -> LIDENT
-- On LOC reduce production val_ident -> LIDENT
-- On LIDENT reduce production val_ident -> LIDENT
-- On LET reduce production val_ident -> LIDENT
-- On LESSMINUS reduce production label -> LIDENT
-- On LESSLESSGREATERGREATER reduce production val_ident -> LIDENT
-- On LESSLESS reduce production val_ident -> LIDENT
-- On LESSGREATER reduce production val_ident -> LIDENT
-- On LESS reduce production val_ident -> LIDENT
-- On LBRACKETLESS reduce production val_ident -> LIDENT
-- On LBRACKETBAR reduce production val_ident -> LIDENT
-- On LBRACKET reduce production val_ident -> LIDENT
-- On LBRACELESS reduce production val_ident -> LIDENT
-- On LBRACEBAR reduce production val_ident -> LIDENT
-- On LBRACE reduce production val_ident -> LIDENT
-- On LAZY reduce production val_ident -> LIDENT
-- On INT reduce production val_ident -> LIDENT
-- On INHERIT reduce production val_ident -> LIDENT
-- On INFIXOP4 reduce production val_ident -> LIDENT
-- On INFIXOP3 reduce production val_ident -> LIDENT
-- On INFIXOP2 reduce production val_ident -> LIDENT
-- On INFIXOP1 reduce production val_ident -> LIDENT
-- On INFIXOP0 reduce production val_ident -> LIDENT
-- On IN reduce production val_ident -> LIDENT
-- On IF reduce production val_ident -> LIDENT
-- On GREATERRBRACKET reduce production val_ident -> LIDENT
-- On GREATERRBRACE reduce production val_ident -> LIDENT
-- On GREATERGREATER reduce production val_ident -> LIDENT
-- On GREATER reduce production val_ident -> LIDENT
-- On FUNCTION reduce production val_ident -> LIDENT
-- On FUN reduce production val_ident -> LIDENT
-- On FOR reduce production val_ident -> LIDENT
-- On FLOAT reduce production val_ident -> LIDENT
-- On FALSE reduce production val_ident -> LIDENT
-- On EXTERNAL reduce production val_ident -> LIDENT
-- On EXCEPTION reduce production val_ident -> LIDENT
-- On EQUAL reduce production val_ident -> LIDENT
-- On EOF reduce production val_ident -> LIDENT
-- On END reduce production val_ident -> LIDENT
-- On ELSE reduce production val_ident -> LIDENT
-- On DOT reduce production val_ident -> LIDENT
-- On DONE reduce production val_ident -> LIDENT
-- On DEF reduce production val_ident -> LIDENT
-- On COMMA reduce production val_ident -> LIDENT
-- On COLONGREATER reduce production val_ident -> LIDENT
-- On COLONEQUAL reduce production val_ident -> LIDENT
-- On COLONCOLON reduce production val_ident -> LIDENT
-- On COLON reduce production val_ident -> LIDENT
-- On CLASS reduce production val_ident -> LIDENT
-- On CHAR reduce production val_ident -> LIDENT
-- On BEGIN reduce production val_ident -> LIDENT
-- On BARRBRACKET reduce production val_ident -> LIDENT
-- On BARBAR reduce production val_ident -> LIDENT
-- On BAR reduce production val_ident -> LIDENT
-- On ASSERT reduce production val_ident -> LIDENT
-- On AND reduce production val_ident -> LIDENT
-- On AMPERSAND reduce production val_ident -> LIDENT
-- On AMPERAMPER reduce production val_ident -> LIDENT

State 295:
expr -> LET . rec_flag let_bindings IN seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings IN error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On REC shift to state 287
-- On rec_flag shift to state 296
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 296:
expr -> LET rec_flag . let_bindings IN seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings IN error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 847
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 297:
pattern -> simple_pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On WHEN reduce production pattern -> simple_pattern
-- On MINUSGREATER reduce production pattern -> simple_pattern
-- On GREATERGREATER reduce production pattern -> simple_pattern
-- On GREATER reduce production pattern -> simple_pattern
-- On EQUAL reduce production pattern -> simple_pattern
-- On COMMA reduce production pattern -> simple_pattern
-- On COLONEQUAL reduce production pattern -> simple_pattern
-- On COLONCOLON reduce production pattern -> simple_pattern
-- On BAR reduce production pattern -> simple_pattern
-- On AS reduce production pattern -> simple_pattern

State 298:
pattern -> pattern_comma_list . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On COMMA shift to state 299
-- On WHEN reduce production pattern -> pattern_comma_list
-- On MINUSGREATER reduce production pattern -> pattern_comma_list
-- On GREATERGREATER reduce production pattern -> pattern_comma_list
-- On GREATER reduce production pattern -> pattern_comma_list
-- On EQUAL reduce production pattern -> pattern_comma_list
-- On COMMA reduce production pattern -> pattern_comma_list
-- On COLONEQUAL reduce production pattern -> pattern_comma_list
-- On COLONCOLON reduce production pattern -> pattern_comma_list
-- On BAR reduce production pattern -> pattern_comma_list
-- On AS reduce production pattern -> pattern_comma_list
** Conflict on COMMA

State 299:
pattern_comma_list -> pattern_comma_list COMMA . pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 300
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 300:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern_comma_list COMMA pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On COLONCOLON shift to state 301
-- On WHEN reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On MINUSGREATER reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On GREATERGREATER reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On GREATER reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On EQUAL reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On COMMA reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On COLONEQUAL reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On BAR reduce production pattern_comma_list -> pattern_comma_list COMMA pattern
-- On AS reduce production pattern_comma_list -> pattern_comma_list COMMA pattern

State 301:
pattern -> pattern COLONCOLON . pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 302
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 302:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern COLONCOLON pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On COLONCOLON shift to state 301
-- On WHEN reduce production pattern -> pattern COLONCOLON pattern
-- On MINUSGREATER reduce production pattern -> pattern COLONCOLON pattern
-- On GREATERGREATER reduce production pattern -> pattern COLONCOLON pattern
-- On GREATER reduce production pattern -> pattern COLONCOLON pattern
-- On EQUAL reduce production pattern -> pattern COLONCOLON pattern
-- On COMMA reduce production pattern -> pattern COLONCOLON pattern
-- On COLONEQUAL reduce production pattern -> pattern COLONCOLON pattern
-- On BAR reduce production pattern -> pattern COLONCOLON pattern
-- On AS reduce production pattern -> pattern COLONCOLON pattern

State 303:
constr_longident -> mod_longident . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
mod_longident -> mod_longident . DOT UIDENT [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On DOT shift to state 304
-- On WHEN reduce production constr_longident -> mod_longident
-- On UNDERSCORE reduce production constr_longident -> mod_longident
-- On UIDENT reduce production constr_longident -> mod_longident
-- On TRUE reduce production constr_longident -> mod_longident
-- On SUBTRACTIVE reduce production constr_longident -> mod_longident
-- On STRING reduce production constr_longident -> mod_longident
-- On MINUSGREATER reduce production constr_longident -> mod_longident
-- On LPAREN reduce production constr_longident -> mod_longident
-- On LIDENT reduce production constr_longident -> mod_longident
-- On LBRACKETLESS reduce production constr_longident -> mod_longident
-- On LBRACKET reduce production constr_longident -> mod_longident
-- On LBRACE reduce production constr_longident -> mod_longident
-- On INT reduce production constr_longident -> mod_longident
-- On GREATERGREATER reduce production constr_longident -> mod_longident
-- On GREATER reduce production constr_longident -> mod_longident
-- On FLOAT reduce production constr_longident -> mod_longident
-- On FALSE reduce production constr_longident -> mod_longident
-- On EQUAL reduce production constr_longident -> mod_longident
-- On COMMA reduce production constr_longident -> mod_longident
-- On COLONGREATER reduce production constr_longident -> mod_longident
-- On COLONEQUAL reduce production constr_longident -> mod_longident
-- On COLONCOLON reduce production constr_longident -> mod_longident
-- On COLON reduce production constr_longident -> mod_longident
-- On CHAR reduce production constr_longident -> mod_longident
-- On BAR reduce production constr_longident -> mod_longident
-- On AS reduce production constr_longident -> mod_longident

State 304:
mod_longident -> mod_longident DOT . UIDENT [ WHEN VAL UNDERSCORE UIDENT TYPE TRUE SUBTRACTIVE STRING SHARP SEMISEMI OPEN MODULE MINUSGREATER LPAREN LIDENT LET LBRACKETLESS LBRACKET LBRACE INT INCLUDE GREATERGREATER GREATER FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF DOT DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BAR AS ]
-- On UIDENT shift to state 13

State 305:
pattern -> constr_longident . pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
simple_pattern -> constr_longident . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 306
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307
-- On WHEN reduce production simple_pattern -> constr_longident
-- On MINUSGREATER reduce production simple_pattern -> constr_longident
-- On GREATERGREATER reduce production simple_pattern -> constr_longident
-- On GREATER reduce production simple_pattern -> constr_longident
-- On EQUAL reduce production simple_pattern -> constr_longident
-- On COMMA reduce production simple_pattern -> constr_longident
-- On COLONEQUAL reduce production simple_pattern -> constr_longident
-- On COLONCOLON reduce production simple_pattern -> constr_longident
-- On BAR reduce production simple_pattern -> constr_longident
-- On AS reduce production simple_pattern -> constr_longident

State 306:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> constr_longident pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On WHEN reduce production pattern -> constr_longident pattern
-- On MINUSGREATER reduce production pattern -> constr_longident pattern
-- On GREATERGREATER reduce production pattern -> constr_longident pattern
-- On GREATER reduce production pattern -> constr_longident pattern
-- On EQUAL reduce production pattern -> constr_longident pattern
-- On COMMA reduce production pattern -> constr_longident pattern
-- On COLONEQUAL reduce production pattern -> constr_longident pattern
-- On COLONCOLON reduce production pattern -> constr_longident pattern
-- On BAR reduce production pattern -> constr_longident pattern
-- On AS reduce production pattern -> constr_longident pattern

State 307:
signed_constant -> constant . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT GREATERGREATER GREATER FLOAT FALSE EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BAR AS ]
-- On WHEN reduce production signed_constant -> constant
-- On UNDERSCORE reduce production signed_constant -> constant
-- On UIDENT reduce production signed_constant -> constant
-- On TRUE reduce production signed_constant -> constant
-- On SUBTRACTIVE reduce production signed_constant -> constant
-- On STRING reduce production signed_constant -> constant
-- On MINUSGREATER reduce production signed_constant -> constant
-- On LPAREN reduce production signed_constant -> constant
-- On LIDENT reduce production signed_constant -> constant
-- On LBRACKETLESS reduce production signed_constant -> constant
-- On LBRACKET reduce production signed_constant -> constant
-- On LBRACE reduce production signed_constant -> constant
-- On INT reduce production signed_constant -> constant
-- On GREATERGREATER reduce production signed_constant -> constant
-- On GREATER reduce production signed_constant -> constant
-- On FLOAT reduce production signed_constant -> constant
-- On FALSE reduce production signed_constant -> constant
-- On EQUAL reduce production signed_constant -> constant
-- On COMMA reduce production signed_constant -> constant
-- On COLONGREATER reduce production signed_constant -> constant
-- On COLONEQUAL reduce production signed_constant -> constant
-- On COLONCOLON reduce production signed_constant -> constant
-- On COLON reduce production signed_constant -> constant
-- On CHAR reduce production signed_constant -> constant
-- On BAR reduce production signed_constant -> constant
-- On AS reduce production signed_constant -> constant

State 308:
let_binding -> pattern . EQUAL seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
let_binding -> pattern . COLONEQUAL seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
pattern -> pattern . AS val_ident [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On EQUAL shift to state 309
-- On COMMA shift to state 455
-- On COLONEQUAL shift to state 845
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459

State 309:
let_binding -> pattern EQUAL . seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 844
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 310:
simple_expr -> LBRACKETLESS . stream_expr opt_semi GREATERRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS . stream_expr opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS . GREATERRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On QUOTE shift to state 293
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On GREATERRBRACKET shift to state 835
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On stream_expr_component shift to state 836
-- On stream_expr shift to state 837
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 840
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 311:
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . BARRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On BARRBRACKET shift to state 830
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_semi_list shift to state 831
-- On expr_comma_list shift to state 499
-- On expr shift to state 779
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 312:
constr_longident -> LBRACKET . RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On RBRACKET shift to state 52
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_semi_list shift to state 826
-- On expr_comma_list shift to state 499
-- On expr shift to state 779
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 313:
simple_expr -> LBRACELESS . label_expr_list opt_semi GREATERRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS . label_expr_list opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS . GREATERRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 141
-- On GREATERRBRACE shift to state 314
-- On label_expr_list shift to state 315
-- On label shift to state 429

State 314:
simple_expr -> LBRACELESS GREATERRBRACE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On WITH reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On WHILE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On VIRTUAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On VAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On UIDENT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TYPE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TRY reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TRUE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On STRING reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On STAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SHARP reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SEMI reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On RPAREN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On RBRACKET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On RBRACE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On QUESTION reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On PARSER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On OR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On OPEN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On NEW reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On MODULE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On METHOD reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On MATCH reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LPAREN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LOC reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LIDENT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSLESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LAZY reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INHERIT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On IN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On IF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On GREATERRBRACKET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On GREATERRBRACE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On GREATERGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On GREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FUNCTION reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FUN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FOR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FLOAT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FALSE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EQUAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EOF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On END reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On ELSE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DOT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DONE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DEF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COMMA reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLONGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLON reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On CLASS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On CHAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BEGIN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BARRBRACKET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BARBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On ASSERT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AND reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS GREATERRBRACE

State 315:
label_expr_list -> label_expr_list . SEMI label EQUAL expr [ error SEMI GREATERRBRACE ]
simple_expr -> LBRACELESS label_expr_list . opt_semi GREATERRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS label_expr_list . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 316
-- On opt_semi shift to state 823
-- On error reduce production opt_semi -> 
-- On GREATERRBRACE reduce production opt_semi -> 

State 316:
label_expr_list -> label_expr_list SEMI . label EQUAL expr [ error SEMI GREATERRBRACE ]
opt_semi -> SEMI . [ error GREATERRBRACE ]
-- On LIDENT shift to state 141
-- On label shift to state 317
-- On error reduce production opt_semi -> SEMI
-- On GREATERRBRACE reduce production opt_semi -> SEMI

State 317:
label_expr_list -> label_expr_list SEMI label . EQUAL expr [ error SEMI GREATERRBRACE ]
-- On EQUAL shift to state 318

State 318:
label_expr_list -> label_expr_list SEMI label EQUAL . expr [ error SEMI GREATERRBRACE ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 822
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 319:
expr -> LBRACEBAR . process BARRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 820
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On BARRBRACE reduce production process -> 

State 320:
process0 -> REPLY . static_expr to_ident [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 395
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 321:
constr_longident -> LPAREN . RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LPAREN . static_expr type_constraint RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LPAREN . static_expr RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LPAREN . static_comma_list RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
val_ident -> LPAREN . operator RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 89
-- On STRING shift to state 7
-- On STAR shift to state 41
-- On RPAREN shift to state 42
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On INT shift to state 258
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 357
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 389
-- On static_comma_list shift to state 393
-- On operator shift to state 244
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 322:
static_expr -> LBRACKETBAR . static_semi_list opt_semi BARRBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKETBAR . static_semi_list opt_semi error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKETBAR . BARRBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BARRBRACKET shift to state 384
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_semi_list shift to state 385
-- On static_expr shift to state 347
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 323:
constr_longident -> LPAREN . RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LPAREN . static_expr type_constraint RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LPAREN . static_expr RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LPAREN . static_comma_list RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
val_ident -> LPAREN . operator RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 89
-- On STRING shift to state 7
-- On STAR shift to state 41
-- On RPAREN shift to state 46
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On INT shift to state 258
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 357
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 360
-- On static_comma_list shift to state 374
-- On operator shift to state 101
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 324:
constr_longident -> LBRACKET . RBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKET . static_semi_list opt_semi RBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKET . static_semi_list opt_semi error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On RBRACKET shift to state 248
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_semi_list shift to state 353
-- On static_expr shift to state 347
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 325:
static_expr -> LBRACKETBAR . static_semi_list opt_semi BARRBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKETBAR . static_semi_list opt_semi error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKETBAR . BARRBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BARRBRACKET shift to state 348
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_semi_list shift to state 349
-- On static_expr shift to state 347
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 326:
constr_longident -> LBRACKET . RBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKET . static_semi_list opt_semi RBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKET . static_semi_list opt_semi error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On RBRACKET shift to state 52
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_semi_list shift to state 330
-- On static_expr shift to state 347
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 327:
constant -> CHAR . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production constant -> CHAR
-- On WITH reduce production constant -> CHAR
-- On WHILE reduce production constant -> CHAR
-- On VIRTUAL reduce production constant -> CHAR
-- On VAL reduce production constant -> CHAR
-- On UIDENT reduce production constant -> CHAR
-- On TYPE reduce production constant -> CHAR
-- On TRY reduce production constant -> CHAR
-- On TRUE reduce production constant -> CHAR
-- On TO reduce production constant -> CHAR
-- On SUBTRACTIVE reduce production constant -> CHAR
-- On STRING reduce production constant -> CHAR
-- On STAR reduce production constant -> CHAR
-- On SHARP reduce production constant -> CHAR
-- On SEMISEMI reduce production constant -> CHAR
-- On SEMI reduce production constant -> CHAR
-- On RPAREN reduce production constant -> CHAR
-- On RBRACKET reduce production constant -> CHAR
-- On RBRACE reduce production constant -> CHAR
-- On QUESTION reduce production constant -> CHAR
-- On PREFIXOP reduce production constant -> CHAR
-- On PARSER reduce production constant -> CHAR
-- On OR reduce production constant -> CHAR
-- On OPEN reduce production constant -> CHAR
-- On NEW reduce production constant -> CHAR
-- On MODULE reduce production constant -> CHAR
-- On METHOD reduce production constant -> CHAR
-- On MATCH reduce production constant -> CHAR
-- On LPAREN reduce production constant -> CHAR
-- On LOC reduce production constant -> CHAR
-- On LIDENT reduce production constant -> CHAR
-- On LET reduce production constant -> CHAR
-- On LESSLESSGREATERGREATER reduce production constant -> CHAR
-- On LESSLESS reduce production constant -> CHAR
-- On LESSGREATER reduce production constant -> CHAR
-- On LESS reduce production constant -> CHAR
-- On LBRACKETLESS reduce production constant -> CHAR
-- On LBRACKETBAR reduce production constant -> CHAR
-- On LBRACKET reduce production constant -> CHAR
-- On LBRACELESS reduce production constant -> CHAR
-- On LBRACEBAR reduce production constant -> CHAR
-- On LBRACE reduce production constant -> CHAR
-- On LAZY reduce production constant -> CHAR
-- On INT reduce production constant -> CHAR
-- On INHERIT reduce production constant -> CHAR
-- On INFIXOP4 reduce production constant -> CHAR
-- On INFIXOP3 reduce production constant -> CHAR
-- On INFIXOP2 reduce production constant -> CHAR
-- On INFIXOP1 reduce production constant -> CHAR
-- On INFIXOP0 reduce production constant -> CHAR
-- On IN reduce production constant -> CHAR
-- On IF reduce production constant -> CHAR
-- On GREATERRBRACKET reduce production constant -> CHAR
-- On GREATERRBRACE reduce production constant -> CHAR
-- On GREATERGREATER reduce production constant -> CHAR
-- On GREATER reduce production constant -> CHAR
-- On FUNCTION reduce production constant -> CHAR
-- On FUN reduce production constant -> CHAR
-- On FOR reduce production constant -> CHAR
-- On FLOAT reduce production constant -> CHAR
-- On FALSE reduce production constant -> CHAR
-- On EXTERNAL reduce production constant -> CHAR
-- On EXCEPTION reduce production constant -> CHAR
-- On EQUAL reduce production constant -> CHAR
-- On EOF reduce production constant -> CHAR
-- On END reduce production constant -> CHAR
-- On ELSE reduce production constant -> CHAR
-- On DOT reduce production constant -> CHAR
-- On DONE reduce production constant -> CHAR
-- On DEF reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONGREATER reduce production constant -> CHAR
-- On COLONEQUAL reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On CLASS reduce production constant -> CHAR
-- On CHAR reduce production constant -> CHAR
-- On BEGIN reduce production constant -> CHAR
-- On BARRBRACKET reduce production constant -> CHAR
-- On BARBAR reduce production constant -> CHAR
-- On BAR reduce production constant -> CHAR
-- On ASSERT reduce production constant -> CHAR
-- On AS reduce production constant -> CHAR
-- On AND reduce production constant -> CHAR
-- On AMPERSAND reduce production constant -> CHAR
-- On AMPERAMPER reduce production constant -> CHAR

State 328:
static_expr -> val_longident . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> val_longident
-- On TYPE reduce production static_expr -> val_longident
-- On TO reduce production static_expr -> val_longident
-- On SEMISEMI reduce production static_expr -> val_longident
-- On SEMI reduce production static_expr -> val_longident
-- On RBRACKET reduce production static_expr -> val_longident
-- On OPEN reduce production static_expr -> val_longident
-- On MODULE reduce production static_expr -> val_longident
-- On LET reduce production static_expr -> val_longident
-- On IN reduce production static_expr -> val_longident
-- On GREATERGREATER reduce production static_expr -> val_longident
-- On EXTERNAL reduce production static_expr -> val_longident
-- On EXCEPTION reduce production static_expr -> val_longident
-- On END reduce production static_expr -> val_longident
-- On ELSE reduce production static_expr -> val_longident
-- On DOT reduce production static_expr -> val_longident
-- On DEF reduce production static_expr -> val_longident
-- On COMMA reduce production static_expr -> val_longident
-- On CLASS reduce production static_expr -> val_longident
-- On BARRBRACKET reduce production static_expr -> val_longident
-- On BAR reduce production static_expr -> val_longident
-- On AND reduce production static_expr -> val_longident

State 329:
val_longident -> val_ident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production val_longident -> val_ident
-- On WITH reduce production val_longident -> val_ident
-- On WHILE reduce production val_longident -> val_ident
-- On VIRTUAL reduce production val_longident -> val_ident
-- On VAL reduce production val_longident -> val_ident
-- On UIDENT reduce production val_longident -> val_ident
-- On TYPE reduce production val_longident -> val_ident
-- On TRY reduce production val_longident -> val_ident
-- On TRUE reduce production val_longident -> val_ident
-- On TO reduce production val_longident -> val_ident
-- On SUBTRACTIVE reduce production val_longident -> val_ident
-- On STRING reduce production val_longident -> val_ident
-- On STAR reduce production val_longident -> val_ident
-- On SHARP reduce production val_longident -> val_ident
-- On SEMISEMI reduce production val_longident -> val_ident
-- On SEMI reduce production val_longident -> val_ident
-- On RPAREN reduce production val_longident -> val_ident
-- On RBRACKET reduce production val_longident -> val_ident
-- On RBRACE reduce production val_longident -> val_ident
-- On QUESTION reduce production val_longident -> val_ident
-- On PREFIXOP reduce production val_longident -> val_ident
-- On PARSER reduce production val_longident -> val_ident
-- On OR reduce production val_longident -> val_ident
-- On OPEN reduce production val_longident -> val_ident
-- On NEW reduce production val_longident -> val_ident
-- On MODULE reduce production val_longident -> val_ident
-- On METHOD reduce production val_longident -> val_ident
-- On MATCH reduce production val_longident -> val_ident
-- On LPAREN reduce production val_longident -> val_ident
-- On LOC reduce production val_longident -> val_ident
-- On LIDENT reduce production val_longident -> val_ident
-- On LET reduce production val_longident -> val_ident
-- On LESSLESSGREATERGREATER reduce production val_longident -> val_ident
-- On LESSLESS reduce production val_longident -> val_ident
-- On LESSGREATER reduce production val_longident -> val_ident
-- On LESS reduce production val_longident -> val_ident
-- On LBRACKETLESS reduce production val_longident -> val_ident
-- On LBRACKETBAR reduce production val_longident -> val_ident
-- On LBRACKET reduce production val_longident -> val_ident
-- On LBRACELESS reduce production val_longident -> val_ident
-- On LBRACEBAR reduce production val_longident -> val_ident
-- On LBRACE reduce production val_longident -> val_ident
-- On LAZY reduce production val_longident -> val_ident
-- On INT reduce production val_longident -> val_ident
-- On INHERIT reduce production val_longident -> val_ident
-- On INFIXOP4 reduce production val_longident -> val_ident
-- On INFIXOP3 reduce production val_longident -> val_ident
-- On INFIXOP2 reduce production val_longident -> val_ident
-- On INFIXOP1 reduce production val_longident -> val_ident
-- On INFIXOP0 reduce production val_longident -> val_ident
-- On IN reduce production val_longident -> val_ident
-- On IF reduce production val_longident -> val_ident
-- On GREATERRBRACKET reduce production val_longident -> val_ident
-- On GREATERRBRACE reduce production val_longident -> val_ident
-- On GREATERGREATER reduce production val_longident -> val_ident
-- On GREATER reduce production val_longident -> val_ident
-- On FUNCTION reduce production val_longident -> val_ident
-- On FUN reduce production val_longident -> val_ident
-- On FOR reduce production val_longident -> val_ident
-- On FLOAT reduce production val_longident -> val_ident
-- On FALSE reduce production val_longident -> val_ident
-- On EXTERNAL reduce production val_longident -> val_ident
-- On EXCEPTION reduce production val_longident -> val_ident
-- On EQUAL reduce production val_longident -> val_ident
-- On EOF reduce production val_longident -> val_ident
-- On END reduce production val_longident -> val_ident
-- On ELSE reduce production val_longident -> val_ident
-- On DOT reduce production val_longident -> val_ident
-- On DONE reduce production val_longident -> val_ident
-- On DEF reduce production val_longident -> val_ident
-- On COMMA reduce production val_longident -> val_ident
-- On COLONGREATER reduce production val_longident -> val_ident
-- On COLONEQUAL reduce production val_longident -> val_ident
-- On COLONCOLON reduce production val_longident -> val_ident
-- On COLON reduce production val_longident -> val_ident
-- On CLASS reduce production val_longident -> val_ident
-- On CHAR reduce production val_longident -> val_ident
-- On BEGIN reduce production val_longident -> val_ident
-- On BARRBRACKET reduce production val_longident -> val_ident
-- On BARBAR reduce production val_longident -> val_ident
-- On BAR reduce production val_longident -> val_ident
-- On ASSERT reduce production val_longident -> val_ident
-- On AS reduce production val_longident -> val_ident
-- On AND reduce production val_longident -> val_ident
-- On AMPERSAND reduce production val_longident -> val_ident
-- On AMPERAMPER reduce production val_longident -> val_ident

State 330:
static_expr -> LBRACKET static_semi_list . opt_semi RBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKET static_semi_list . opt_semi error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_semi_list -> static_semi_list . SEMI static_expr [ error SEMI RBRACKET ]
-- On SEMI shift to state 331
-- On opt_semi shift to state 344
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 331:
opt_semi -> SEMI . [ error RBRACKET BARRBRACKET ]
static_semi_list -> static_semi_list SEMI . static_expr [ error SEMI RBRACKET BARRBRACKET ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_expr shift to state 332
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343
-- On error reduce production opt_semi -> SEMI
-- On RBRACKET reduce production opt_semi -> SEMI
-- On BARRBRACKET reduce production opt_semi -> SEMI

State 332:
static_expr -> static_expr . DOT label_longident [ error SEMI RBRACKET DOT BARRBRACKET ]
static_semi_list -> static_semi_list SEMI static_expr . [ error SEMI RBRACKET BARRBRACKET ]
-- On DOT shift to state 333
-- On error reduce production static_semi_list -> static_semi_list SEMI static_expr
-- On SEMI reduce production static_semi_list -> static_semi_list SEMI static_expr
-- On RBRACKET reduce production static_semi_list -> static_semi_list SEMI static_expr
-- On BARRBRACKET reduce production static_semi_list -> static_semi_list SEMI static_expr

State 333:
static_expr -> static_expr DOT . label_longident [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 334
-- On mod_longident shift to state 335
-- On label_longident shift to state 338

State 334:
label_longident -> LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production label_longident -> LIDENT
-- On WITH reduce production label_longident -> LIDENT
-- On WHILE reduce production label_longident -> LIDENT
-- On VIRTUAL reduce production label_longident -> LIDENT
-- On VAL reduce production label_longident -> LIDENT
-- On UIDENT reduce production label_longident -> LIDENT
-- On TYPE reduce production label_longident -> LIDENT
-- On TRY reduce production label_longident -> LIDENT
-- On TRUE reduce production label_longident -> LIDENT
-- On TO reduce production label_longident -> LIDENT
-- On SUBTRACTIVE reduce production label_longident -> LIDENT
-- On STRING reduce production label_longident -> LIDENT
-- On STAR reduce production label_longident -> LIDENT
-- On SHARP reduce production label_longident -> LIDENT
-- On SEMISEMI reduce production label_longident -> LIDENT
-- On SEMI reduce production label_longident -> LIDENT
-- On RPAREN reduce production label_longident -> LIDENT
-- On RBRACKET reduce production label_longident -> LIDENT
-- On RBRACE reduce production label_longident -> LIDENT
-- On QUESTION reduce production label_longident -> LIDENT
-- On PREFIXOP reduce production label_longident -> LIDENT
-- On PARSER reduce production label_longident -> LIDENT
-- On OR reduce production label_longident -> LIDENT
-- On OPEN reduce production label_longident -> LIDENT
-- On NEW reduce production label_longident -> LIDENT
-- On MODULE reduce production label_longident -> LIDENT
-- On METHOD reduce production label_longident -> LIDENT
-- On MATCH reduce production label_longident -> LIDENT
-- On LPAREN reduce production label_longident -> LIDENT
-- On LOC reduce production label_longident -> LIDENT
-- On LIDENT reduce production label_longident -> LIDENT
-- On LET reduce production label_longident -> LIDENT
-- On LESSMINUS reduce production label_longident -> LIDENT
-- On LESSLESSGREATERGREATER reduce production label_longident -> LIDENT
-- On LESSLESS reduce production label_longident -> LIDENT
-- On LESSGREATER reduce production label_longident -> LIDENT
-- On LESS reduce production label_longident -> LIDENT
-- On LBRACKETLESS reduce production label_longident -> LIDENT
-- On LBRACKETBAR reduce production label_longident -> LIDENT
-- On LBRACKET reduce production label_longident -> LIDENT
-- On LBRACELESS reduce production label_longident -> LIDENT
-- On LBRACEBAR reduce production label_longident -> LIDENT
-- On LBRACE reduce production label_longident -> LIDENT
-- On LAZY reduce production label_longident -> LIDENT
-- On INT reduce production label_longident -> LIDENT
-- On INHERIT reduce production label_longident -> LIDENT
-- On INFIXOP4 reduce production label_longident -> LIDENT
-- On INFIXOP3 reduce production label_longident -> LIDENT
-- On INFIXOP2 reduce production label_longident -> LIDENT
-- On INFIXOP1 reduce production label_longident -> LIDENT
-- On INFIXOP0 reduce production label_longident -> LIDENT
-- On IN reduce production label_longident -> LIDENT
-- On IF reduce production label_longident -> LIDENT
-- On GREATERRBRACKET reduce production label_longident -> LIDENT
-- On GREATERRBRACE reduce production label_longident -> LIDENT
-- On GREATERGREATER reduce production label_longident -> LIDENT
-- On GREATER reduce production label_longident -> LIDENT
-- On FUNCTION reduce production label_longident -> LIDENT
-- On FUN reduce production label_longident -> LIDENT
-- On FOR reduce production label_longident -> LIDENT
-- On FLOAT reduce production label_longident -> LIDENT
-- On FALSE reduce production label_longident -> LIDENT
-- On EXTERNAL reduce production label_longident -> LIDENT
-- On EXCEPTION reduce production label_longident -> LIDENT
-- On EQUAL reduce production label_longident -> LIDENT
-- On EOF reduce production label_longident -> LIDENT
-- On END reduce production label_longident -> LIDENT
-- On ELSE reduce production label_longident -> LIDENT
-- On DOT reduce production label_longident -> LIDENT
-- On DONE reduce production label_longident -> LIDENT
-- On DEF reduce production label_longident -> LIDENT
-- On COMMA reduce production label_longident -> LIDENT
-- On COLONGREATER reduce production label_longident -> LIDENT
-- On COLONEQUAL reduce production label_longident -> LIDENT
-- On COLONCOLON reduce production label_longident -> LIDENT
-- On COLON reduce production label_longident -> LIDENT
-- On CLASS reduce production label_longident -> LIDENT
-- On CHAR reduce production label_longident -> LIDENT
-- On BEGIN reduce production label_longident -> LIDENT
-- On BARRBRACKET reduce production label_longident -> LIDENT
-- On BARBAR reduce production label_longident -> LIDENT
-- On BAR reduce production label_longident -> LIDENT
-- On ASSERT reduce production label_longident -> LIDENT
-- On AS reduce production label_longident -> LIDENT
-- On AND reduce production label_longident -> LIDENT
-- On AMPERSAND reduce production label_longident -> LIDENT
-- On AMPERAMPER reduce production label_longident -> LIDENT

State 335:
label_longident -> mod_longident . DOT LIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
-- On DOT shift to state 336

State 336:
label_longident -> mod_longident DOT . LIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident DOT . UIDENT [ DOT ]
-- On UIDENT shift to state 13
-- On LIDENT shift to state 337

State 337:
label_longident -> mod_longident DOT LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSMINUS LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production label_longident -> mod_longident DOT LIDENT
-- On WITH reduce production label_longident -> mod_longident DOT LIDENT
-- On WHILE reduce production label_longident -> mod_longident DOT LIDENT
-- On VIRTUAL reduce production label_longident -> mod_longident DOT LIDENT
-- On VAL reduce production label_longident -> mod_longident DOT LIDENT
-- On UIDENT reduce production label_longident -> mod_longident DOT LIDENT
-- On TYPE reduce production label_longident -> mod_longident DOT LIDENT
-- On TRY reduce production label_longident -> mod_longident DOT LIDENT
-- On TRUE reduce production label_longident -> mod_longident DOT LIDENT
-- On TO reduce production label_longident -> mod_longident DOT LIDENT
-- On SUBTRACTIVE reduce production label_longident -> mod_longident DOT LIDENT
-- On STRING reduce production label_longident -> mod_longident DOT LIDENT
-- On STAR reduce production label_longident -> mod_longident DOT LIDENT
-- On SHARP reduce production label_longident -> mod_longident DOT LIDENT
-- On SEMISEMI reduce production label_longident -> mod_longident DOT LIDENT
-- On SEMI reduce production label_longident -> mod_longident DOT LIDENT
-- On RPAREN reduce production label_longident -> mod_longident DOT LIDENT
-- On RBRACKET reduce production label_longident -> mod_longident DOT LIDENT
-- On RBRACE reduce production label_longident -> mod_longident DOT LIDENT
-- On QUESTION reduce production label_longident -> mod_longident DOT LIDENT
-- On PREFIXOP reduce production label_longident -> mod_longident DOT LIDENT
-- On PARSER reduce production label_longident -> mod_longident DOT LIDENT
-- On OR reduce production label_longident -> mod_longident DOT LIDENT
-- On OPEN reduce production label_longident -> mod_longident DOT LIDENT
-- On NEW reduce production label_longident -> mod_longident DOT LIDENT
-- On MODULE reduce production label_longident -> mod_longident DOT LIDENT
-- On METHOD reduce production label_longident -> mod_longident DOT LIDENT
-- On MATCH reduce production label_longident -> mod_longident DOT LIDENT
-- On LPAREN reduce production label_longident -> mod_longident DOT LIDENT
-- On LOC reduce production label_longident -> mod_longident DOT LIDENT
-- On LIDENT reduce production label_longident -> mod_longident DOT LIDENT
-- On LET reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSMINUS reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSLESSGREATERGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSLESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LESSGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On LESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKETLESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKETBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACKET reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACELESS reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACEBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On LBRACE reduce production label_longident -> mod_longident DOT LIDENT
-- On LAZY reduce production label_longident -> mod_longident DOT LIDENT
-- On INT reduce production label_longident -> mod_longident DOT LIDENT
-- On INHERIT reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP4 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP3 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP2 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP1 reduce production label_longident -> mod_longident DOT LIDENT
-- On INFIXOP0 reduce production label_longident -> mod_longident DOT LIDENT
-- On IN reduce production label_longident -> mod_longident DOT LIDENT
-- On IF reduce production label_longident -> mod_longident DOT LIDENT
-- On GREATERRBRACKET reduce production label_longident -> mod_longident DOT LIDENT
-- On GREATERRBRACE reduce production label_longident -> mod_longident DOT LIDENT
-- On GREATERGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On GREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On FUNCTION reduce production label_longident -> mod_longident DOT LIDENT
-- On FUN reduce production label_longident -> mod_longident DOT LIDENT
-- On FOR reduce production label_longident -> mod_longident DOT LIDENT
-- On FLOAT reduce production label_longident -> mod_longident DOT LIDENT
-- On FALSE reduce production label_longident -> mod_longident DOT LIDENT
-- On EXTERNAL reduce production label_longident -> mod_longident DOT LIDENT
-- On EXCEPTION reduce production label_longident -> mod_longident DOT LIDENT
-- On EQUAL reduce production label_longident -> mod_longident DOT LIDENT
-- On EOF reduce production label_longident -> mod_longident DOT LIDENT
-- On END reduce production label_longident -> mod_longident DOT LIDENT
-- On ELSE reduce production label_longident -> mod_longident DOT LIDENT
-- On DOT reduce production label_longident -> mod_longident DOT LIDENT
-- On DONE reduce production label_longident -> mod_longident DOT LIDENT
-- On DEF reduce production label_longident -> mod_longident DOT LIDENT
-- On COMMA reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONGREATER reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONEQUAL reduce production label_longident -> mod_longident DOT LIDENT
-- On COLONCOLON reduce production label_longident -> mod_longident DOT LIDENT
-- On COLON reduce production label_longident -> mod_longident DOT LIDENT
-- On CLASS reduce production label_longident -> mod_longident DOT LIDENT
-- On CHAR reduce production label_longident -> mod_longident DOT LIDENT
-- On BEGIN reduce production label_longident -> mod_longident DOT LIDENT
-- On BARRBRACKET reduce production label_longident -> mod_longident DOT LIDENT
-- On BARBAR reduce production label_longident -> mod_longident DOT LIDENT
-- On BAR reduce production label_longident -> mod_longident DOT LIDENT
-- On ASSERT reduce production label_longident -> mod_longident DOT LIDENT
-- On AS reduce production label_longident -> mod_longident DOT LIDENT
-- On AND reduce production label_longident -> mod_longident DOT LIDENT
-- On AMPERSAND reduce production label_longident -> mod_longident DOT LIDENT
-- On AMPERAMPER reduce production label_longident -> mod_longident DOT LIDENT

State 338:
static_expr -> static_expr DOT label_longident . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> static_expr DOT label_longident
-- On TYPE reduce production static_expr -> static_expr DOT label_longident
-- On TO reduce production static_expr -> static_expr DOT label_longident
-- On SEMISEMI reduce production static_expr -> static_expr DOT label_longident
-- On SEMI reduce production static_expr -> static_expr DOT label_longident
-- On RBRACKET reduce production static_expr -> static_expr DOT label_longident
-- On OPEN reduce production static_expr -> static_expr DOT label_longident
-- On MODULE reduce production static_expr -> static_expr DOT label_longident
-- On LET reduce production static_expr -> static_expr DOT label_longident
-- On IN reduce production static_expr -> static_expr DOT label_longident
-- On GREATERGREATER reduce production static_expr -> static_expr DOT label_longident
-- On EXTERNAL reduce production static_expr -> static_expr DOT label_longident
-- On EXCEPTION reduce production static_expr -> static_expr DOT label_longident
-- On END reduce production static_expr -> static_expr DOT label_longident
-- On ELSE reduce production static_expr -> static_expr DOT label_longident
-- On DOT reduce production static_expr -> static_expr DOT label_longident
-- On DEF reduce production static_expr -> static_expr DOT label_longident
-- On COMMA reduce production static_expr -> static_expr DOT label_longident
-- On CLASS reduce production static_expr -> static_expr DOT label_longident
-- On BARRBRACKET reduce production static_expr -> static_expr DOT label_longident
-- On BAR reduce production static_expr -> static_expr DOT label_longident
-- On AND reduce production static_expr -> static_expr DOT label_longident

State 339:
constr_longident -> mod_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident . DOT val_ident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On DOT shift to state 340
-- On error reduce production constr_longident -> mod_longident
-- On WITH reduce production constr_longident -> mod_longident
-- On WHILE reduce production constr_longident -> mod_longident
-- On VIRTUAL reduce production constr_longident -> mod_longident
-- On VAL reduce production constr_longident -> mod_longident
-- On UIDENT reduce production constr_longident -> mod_longident
-- On TYPE reduce production constr_longident -> mod_longident
-- On TRY reduce production constr_longident -> mod_longident
-- On TRUE reduce production constr_longident -> mod_longident
-- On TO reduce production constr_longident -> mod_longident
-- On SUBTRACTIVE reduce production constr_longident -> mod_longident
-- On STRING reduce production constr_longident -> mod_longident
-- On STAR reduce production constr_longident -> mod_longident
-- On SHARP reduce production constr_longident -> mod_longident
-- On SEMISEMI reduce production constr_longident -> mod_longident
-- On SEMI reduce production constr_longident -> mod_longident
-- On RPAREN reduce production constr_longident -> mod_longident
-- On RBRACKET reduce production constr_longident -> mod_longident
-- On RBRACE reduce production constr_longident -> mod_longident
-- On QUESTION reduce production constr_longident -> mod_longident
-- On PREFIXOP reduce production constr_longident -> mod_longident
-- On PARSER reduce production constr_longident -> mod_longident
-- On OR reduce production constr_longident -> mod_longident
-- On OPEN reduce production constr_longident -> mod_longident
-- On NEW reduce production constr_longident -> mod_longident
-- On MODULE reduce production constr_longident -> mod_longident
-- On METHOD reduce production constr_longident -> mod_longident
-- On MATCH reduce production constr_longident -> mod_longident
-- On LPAREN reduce production constr_longident -> mod_longident
-- On LOC reduce production constr_longident -> mod_longident
-- On LIDENT reduce production constr_longident -> mod_longident
-- On LET reduce production constr_longident -> mod_longident
-- On LESSLESSGREATERGREATER reduce production constr_longident -> mod_longident
-- On LESSLESS reduce production constr_longident -> mod_longident
-- On LESSGREATER reduce production constr_longident -> mod_longident
-- On LESS reduce production constr_longident -> mod_longident
-- On LBRACKETLESS reduce production constr_longident -> mod_longident
-- On LBRACKETBAR reduce production constr_longident -> mod_longident
-- On LBRACKET reduce production constr_longident -> mod_longident
-- On LBRACELESS reduce production constr_longident -> mod_longident
-- On LBRACEBAR reduce production constr_longident -> mod_longident
-- On LBRACE reduce production constr_longident -> mod_longident
-- On LAZY reduce production constr_longident -> mod_longident
-- On INT reduce production constr_longident -> mod_longident
-- On INHERIT reduce production constr_longident -> mod_longident
-- On INFIXOP4 reduce production constr_longident -> mod_longident
-- On INFIXOP3 reduce production constr_longident -> mod_longident
-- On INFIXOP2 reduce production constr_longident -> mod_longident
-- On INFIXOP1 reduce production constr_longident -> mod_longident
-- On INFIXOP0 reduce production constr_longident -> mod_longident
-- On IN reduce production constr_longident -> mod_longident
-- On IF reduce production constr_longident -> mod_longident
-- On GREATERRBRACKET reduce production constr_longident -> mod_longident
-- On GREATERRBRACE reduce production constr_longident -> mod_longident
-- On GREATERGREATER reduce production constr_longident -> mod_longident
-- On GREATER reduce production constr_longident -> mod_longident
-- On FUNCTION reduce production constr_longident -> mod_longident
-- On FUN reduce production constr_longident -> mod_longident
-- On FOR reduce production constr_longident -> mod_longident
-- On FLOAT reduce production constr_longident -> mod_longident
-- On FALSE reduce production constr_longident -> mod_longident
-- On EXTERNAL reduce production constr_longident -> mod_longident
-- On EXCEPTION reduce production constr_longident -> mod_longident
-- On EQUAL reduce production constr_longident -> mod_longident
-- On EOF reduce production constr_longident -> mod_longident
-- On END reduce production constr_longident -> mod_longident
-- On ELSE reduce production constr_longident -> mod_longident
-- On DOT reduce production constr_longident -> mod_longident
-- On DONE reduce production constr_longident -> mod_longident
-- On DEF reduce production constr_longident -> mod_longident
-- On COMMA reduce production constr_longident -> mod_longident
-- On COLONGREATER reduce production constr_longident -> mod_longident
-- On COLONEQUAL reduce production constr_longident -> mod_longident
-- On COLONCOLON reduce production constr_longident -> mod_longident
-- On COLON reduce production constr_longident -> mod_longident
-- On CLASS reduce production constr_longident -> mod_longident
-- On CHAR reduce production constr_longident -> mod_longident
-- On BEGIN reduce production constr_longident -> mod_longident
-- On BARRBRACKET reduce production constr_longident -> mod_longident
-- On BARBAR reduce production constr_longident -> mod_longident
-- On BAR reduce production constr_longident -> mod_longident
-- On ASSERT reduce production constr_longident -> mod_longident
-- On AS reduce production constr_longident -> mod_longident
-- On AND reduce production constr_longident -> mod_longident
-- On AMPERSAND reduce production constr_longident -> mod_longident
-- On AMPERAMPER reduce production constr_longident -> mod_longident
** Conflict on DOT

State 340:
mod_longident -> mod_longident DOT . UIDENT [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident DOT . val_ident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 78
-- On LPAREN shift to state 88
-- On LIDENT shift to state 47
-- On val_ident shift to state 341

State 341:
val_longident -> mod_longident DOT val_ident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production val_longident -> mod_longident DOT val_ident
-- On WITH reduce production val_longident -> mod_longident DOT val_ident
-- On WHILE reduce production val_longident -> mod_longident DOT val_ident
-- On VIRTUAL reduce production val_longident -> mod_longident DOT val_ident
-- On VAL reduce production val_longident -> mod_longident DOT val_ident
-- On UIDENT reduce production val_longident -> mod_longident DOT val_ident
-- On TYPE reduce production val_longident -> mod_longident DOT val_ident
-- On TRY reduce production val_longident -> mod_longident DOT val_ident
-- On TRUE reduce production val_longident -> mod_longident DOT val_ident
-- On TO reduce production val_longident -> mod_longident DOT val_ident
-- On SUBTRACTIVE reduce production val_longident -> mod_longident DOT val_ident
-- On STRING reduce production val_longident -> mod_longident DOT val_ident
-- On STAR reduce production val_longident -> mod_longident DOT val_ident
-- On SHARP reduce production val_longident -> mod_longident DOT val_ident
-- On SEMISEMI reduce production val_longident -> mod_longident DOT val_ident
-- On SEMI reduce production val_longident -> mod_longident DOT val_ident
-- On RPAREN reduce production val_longident -> mod_longident DOT val_ident
-- On RBRACKET reduce production val_longident -> mod_longident DOT val_ident
-- On RBRACE reduce production val_longident -> mod_longident DOT val_ident
-- On QUESTION reduce production val_longident -> mod_longident DOT val_ident
-- On PREFIXOP reduce production val_longident -> mod_longident DOT val_ident
-- On PARSER reduce production val_longident -> mod_longident DOT val_ident
-- On OR reduce production val_longident -> mod_longident DOT val_ident
-- On OPEN reduce production val_longident -> mod_longident DOT val_ident
-- On NEW reduce production val_longident -> mod_longident DOT val_ident
-- On MODULE reduce production val_longident -> mod_longident DOT val_ident
-- On METHOD reduce production val_longident -> mod_longident DOT val_ident
-- On MATCH reduce production val_longident -> mod_longident DOT val_ident
-- On LPAREN reduce production val_longident -> mod_longident DOT val_ident
-- On LOC reduce production val_longident -> mod_longident DOT val_ident
-- On LIDENT reduce production val_longident -> mod_longident DOT val_ident
-- On LET reduce production val_longident -> mod_longident DOT val_ident
-- On LESSLESSGREATERGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On LESSLESS reduce production val_longident -> mod_longident DOT val_ident
-- On LESSGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On LESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKETLESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKETBAR reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKET reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACELESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACEBAR reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACE reduce production val_longident -> mod_longident DOT val_ident
-- On LAZY reduce production val_longident -> mod_longident DOT val_ident
-- On INT reduce production val_longident -> mod_longident DOT val_ident
-- On INHERIT reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP4 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP3 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP2 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP1 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP0 reduce production val_longident -> mod_longident DOT val_ident
-- On IN reduce production val_longident -> mod_longident DOT val_ident
-- On IF reduce production val_longident -> mod_longident DOT val_ident
-- On GREATERRBRACKET reduce production val_longident -> mod_longident DOT val_ident
-- On GREATERRBRACE reduce production val_longident -> mod_longident DOT val_ident
-- On GREATERGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On GREATER reduce production val_longident -> mod_longident DOT val_ident
-- On FUNCTION reduce production val_longident -> mod_longident DOT val_ident
-- On FUN reduce production val_longident -> mod_longident DOT val_ident
-- On FOR reduce production val_longident -> mod_longident DOT val_ident
-- On FLOAT reduce production val_longident -> mod_longident DOT val_ident
-- On FALSE reduce production val_longident -> mod_longident DOT val_ident
-- On EXTERNAL reduce production val_longident -> mod_longident DOT val_ident
-- On EXCEPTION reduce production val_longident -> mod_longident DOT val_ident
-- On EQUAL reduce production val_longident -> mod_longident DOT val_ident
-- On EOF reduce production val_longident -> mod_longident DOT val_ident
-- On END reduce production val_longident -> mod_longident DOT val_ident
-- On ELSE reduce production val_longident -> mod_longident DOT val_ident
-- On DOT reduce production val_longident -> mod_longident DOT val_ident
-- On DONE reduce production val_longident -> mod_longident DOT val_ident
-- On DEF reduce production val_longident -> mod_longident DOT val_ident
-- On COMMA reduce production val_longident -> mod_longident DOT val_ident
-- On COLONGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On COLONEQUAL reduce production val_longident -> mod_longident DOT val_ident
-- On COLONCOLON reduce production val_longident -> mod_longident DOT val_ident
-- On COLON reduce production val_longident -> mod_longident DOT val_ident
-- On CLASS reduce production val_longident -> mod_longident DOT val_ident
-- On CHAR reduce production val_longident -> mod_longident DOT val_ident
-- On BEGIN reduce production val_longident -> mod_longident DOT val_ident
-- On BARRBRACKET reduce production val_longident -> mod_longident DOT val_ident
-- On BARBAR reduce production val_longident -> mod_longident DOT val_ident
-- On BAR reduce production val_longident -> mod_longident DOT val_ident
-- On ASSERT reduce production val_longident -> mod_longident DOT val_ident
-- On AS reduce production val_longident -> mod_longident DOT val_ident
-- On AND reduce production val_longident -> mod_longident DOT val_ident
-- On AMPERSAND reduce production val_longident -> mod_longident DOT val_ident
-- On AMPERAMPER reduce production val_longident -> mod_longident DOT val_ident

State 342:
static_expr -> constr_longident . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> constr_longident
-- On TYPE reduce production static_expr -> constr_longident
-- On TO reduce production static_expr -> constr_longident
-- On SEMISEMI reduce production static_expr -> constr_longident
-- On SEMI reduce production static_expr -> constr_longident
-- On RBRACKET reduce production static_expr -> constr_longident
-- On OPEN reduce production static_expr -> constr_longident
-- On MODULE reduce production static_expr -> constr_longident
-- On LET reduce production static_expr -> constr_longident
-- On IN reduce production static_expr -> constr_longident
-- On GREATERGREATER reduce production static_expr -> constr_longident
-- On EXTERNAL reduce production static_expr -> constr_longident
-- On EXCEPTION reduce production static_expr -> constr_longident
-- On END reduce production static_expr -> constr_longident
-- On ELSE reduce production static_expr -> constr_longident
-- On DOT reduce production static_expr -> constr_longident
-- On DEF reduce production static_expr -> constr_longident
-- On COMMA reduce production static_expr -> constr_longident
-- On CLASS reduce production static_expr -> constr_longident
-- On BARRBRACKET reduce production static_expr -> constr_longident
-- On BAR reduce production static_expr -> constr_longident
-- On AND reduce production static_expr -> constr_longident

State 343:
static_expr -> constant . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> constant
-- On TYPE reduce production static_expr -> constant
-- On TO reduce production static_expr -> constant
-- On SEMISEMI reduce production static_expr -> constant
-- On SEMI reduce production static_expr -> constant
-- On RBRACKET reduce production static_expr -> constant
-- On OPEN reduce production static_expr -> constant
-- On MODULE reduce production static_expr -> constant
-- On LET reduce production static_expr -> constant
-- On IN reduce production static_expr -> constant
-- On GREATERGREATER reduce production static_expr -> constant
-- On EXTERNAL reduce production static_expr -> constant
-- On EXCEPTION reduce production static_expr -> constant
-- On END reduce production static_expr -> constant
-- On ELSE reduce production static_expr -> constant
-- On DOT reduce production static_expr -> constant
-- On DEF reduce production static_expr -> constant
-- On COMMA reduce production static_expr -> constant
-- On CLASS reduce production static_expr -> constant
-- On BARRBRACKET reduce production static_expr -> constant
-- On BAR reduce production static_expr -> constant
-- On AND reduce production static_expr -> constant

State 344:
static_expr -> LBRACKET static_semi_list opt_semi . RBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKET static_semi_list opt_semi . error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error shift to state 345
-- On RBRACKET shift to state 346

State 345:
static_expr -> LBRACKET static_semi_list opt_semi error . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TYPE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TO reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On SEMISEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On SEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On RBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On OPEN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On MODULE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LET reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On IN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On GREATERGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On EXTERNAL reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On EXCEPTION reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On END reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On ELSE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On DOT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On DEF reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On COMMA reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On CLASS reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On BARRBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On BAR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On AND reduce production static_expr -> LBRACKET static_semi_list opt_semi error

State 346:
static_expr -> LBRACKET static_semi_list opt_semi RBRACKET . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TYPE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TO reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On SEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On RBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On OPEN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On MODULE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LET reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On IN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On GREATERGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On END reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On ELSE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On DOT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On DEF reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On COMMA reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On CLASS reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On BARRBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On BAR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On AND reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET

State 347:
static_expr -> static_expr . DOT label_longident [ error SEMI RBRACKET DOT BARRBRACKET ]
static_semi_list -> static_expr . [ error SEMI RBRACKET BARRBRACKET ]
-- On DOT shift to state 333
-- On error reduce production static_semi_list -> static_expr
-- On SEMI reduce production static_semi_list -> static_expr
-- On RBRACKET reduce production static_semi_list -> static_expr
-- On BARRBRACKET reduce production static_semi_list -> static_expr

State 348:
static_expr -> LBRACKETBAR BARRBRACKET . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TYPE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TO reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On SEMI reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On RBRACKET reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On OPEN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On MODULE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LET reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On IN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On GREATERGREATER reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On END reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On ELSE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On DOT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On DEF reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On COMMA reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On CLASS reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On BARRBRACKET reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On BAR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On AND reduce production static_expr -> LBRACKETBAR BARRBRACKET

State 349:
static_expr -> LBRACKETBAR static_semi_list . opt_semi BARRBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKETBAR static_semi_list . opt_semi error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_semi_list -> static_semi_list . SEMI static_expr [ error SEMI BARRBRACKET ]
-- On SEMI shift to state 331
-- On opt_semi shift to state 350
-- On error reduce production opt_semi -> 
-- On BARRBRACKET reduce production opt_semi -> 

State 350:
static_expr -> LBRACKETBAR static_semi_list opt_semi . BARRBRACKET [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LBRACKETBAR static_semi_list opt_semi . error [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error shift to state 351
-- On BARRBRACKET shift to state 352

State 351:
static_expr -> LBRACKETBAR static_semi_list opt_semi error . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TYPE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TO reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On SEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On RBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On OPEN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On MODULE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On IN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On GREATERGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On END reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On ELSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On DOT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On DEF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On COMMA reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On CLASS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On BARRBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On BAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On AND reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error

State 352:
static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TYPE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TO reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On SEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On RBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On OPEN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On MODULE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On IN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On GREATERGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On END reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On ELSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On DOT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On DEF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On COMMA reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On CLASS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On BARRBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On BAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On AND reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET

State 353:
static_expr -> LBRACKET static_semi_list . opt_semi RBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKET static_semi_list . opt_semi error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_semi_list -> static_semi_list . SEMI static_expr [ error SEMI RBRACKET ]
-- On SEMI shift to state 331
-- On opt_semi shift to state 354
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 354:
static_expr -> LBRACKET static_semi_list opt_semi . RBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKET static_semi_list opt_semi . error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On error shift to state 355
-- On RBRACKET shift to state 356

State 355:
static_expr -> LBRACKET static_semi_list opt_semi error . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On UIDENT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TYPE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TRY reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TRUE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On TO reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On SUBTRACTIVE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On STRING reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On SHARP reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On SEMISEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On RPAREN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On PREFIXOP reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On PARSER reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On OPEN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On NEW reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On MODULE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On MATCH reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LPAREN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LOC reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LIDENT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LET reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LESSLESS reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACKETLESS reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACKETBAR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACELESS reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACEBAR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LBRACE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On LAZY reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On INT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On IN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On IF reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On FUNCTION reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On FUN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On FOR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On FLOAT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On FALSE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On EXTERNAL reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On EXCEPTION reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On EOF reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On END reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On ELSE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On DOT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On DEF reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On COMMA reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On COLONGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On COLON reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On CLASS reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On CHAR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On BEGIN reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On BARRBRACE reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On BAR reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On ASSERT reduce production static_expr -> LBRACKET static_semi_list opt_semi error
-- On AND reduce production static_expr -> LBRACKET static_semi_list opt_semi error

State 356:
static_expr -> LBRACKET static_semi_list opt_semi RBRACKET . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On UIDENT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TYPE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TRY reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TRUE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On TO reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On SUBTRACTIVE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On STRING reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On SHARP reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On RPAREN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On PREFIXOP reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On PARSER reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On OPEN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On NEW reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On MODULE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On MATCH reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LPAREN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LOC reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LIDENT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LET reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LESSLESSGREATERGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LESSLESS reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACKETLESS reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACKETBAR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACKET reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACELESS reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACEBAR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LBRACE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On LAZY reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On INT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On IN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On IF reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On FUNCTION reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On FUN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On FOR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On FLOAT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On FALSE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On EOF reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On END reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On ELSE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On DOT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On DEF reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On COMMA reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On COLONGREATER reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On COLON reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On CLASS reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On CHAR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On BEGIN reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On BARRBRACE reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On BAR reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On ASSERT reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET
-- On AND reduce production static_expr -> LBRACKET static_semi_list opt_semi RBRACKET

State 357:
constant -> CHAR . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production constant -> CHAR
-- On WHILE reduce production constant -> CHAR
-- On UIDENT reduce production constant -> CHAR
-- On TYPE reduce production constant -> CHAR
-- On TRY reduce production constant -> CHAR
-- On TRUE reduce production constant -> CHAR
-- On TO reduce production constant -> CHAR
-- On THEN reduce production constant -> CHAR
-- On SUBTRACTIVE reduce production constant -> CHAR
-- On STRING reduce production constant -> CHAR
-- On STAR reduce production constant -> CHAR
-- On SHARP reduce production constant -> CHAR
-- On SEMISEMI reduce production constant -> CHAR
-- On SEMI reduce production constant -> CHAR
-- On RPAREN reduce production constant -> CHAR
-- On PREFIXOP reduce production constant -> CHAR
-- On PARSER reduce production constant -> CHAR
-- On OR reduce production constant -> CHAR
-- On OPEN reduce production constant -> CHAR
-- On NEW reduce production constant -> CHAR
-- On MODULE reduce production constant -> CHAR
-- On MINUSGREATER reduce production constant -> CHAR
-- On MATCH reduce production constant -> CHAR
-- On LPAREN reduce production constant -> CHAR
-- On LOC reduce production constant -> CHAR
-- On LIDENT reduce production constant -> CHAR
-- On LET reduce production constant -> CHAR
-- On LESSLESSGREATERGREATER reduce production constant -> CHAR
-- On LESSLESS reduce production constant -> CHAR
-- On LESSGREATER reduce production constant -> CHAR
-- On LESS reduce production constant -> CHAR
-- On LBRACKETLESS reduce production constant -> CHAR
-- On LBRACKETBAR reduce production constant -> CHAR
-- On LBRACKET reduce production constant -> CHAR
-- On LBRACELESS reduce production constant -> CHAR
-- On LBRACEBAR reduce production constant -> CHAR
-- On LBRACE reduce production constant -> CHAR
-- On LAZY reduce production constant -> CHAR
-- On INT reduce production constant -> CHAR
-- On INFIXOP4 reduce production constant -> CHAR
-- On INFIXOP3 reduce production constant -> CHAR
-- On INFIXOP2 reduce production constant -> CHAR
-- On INFIXOP1 reduce production constant -> CHAR
-- On INFIXOP0 reduce production constant -> CHAR
-- On IN reduce production constant -> CHAR
-- On IF reduce production constant -> CHAR
-- On GREATER reduce production constant -> CHAR
-- On FUNCTION reduce production constant -> CHAR
-- On FUN reduce production constant -> CHAR
-- On FOR reduce production constant -> CHAR
-- On FLOAT reduce production constant -> CHAR
-- On FALSE reduce production constant -> CHAR
-- On EXTERNAL reduce production constant -> CHAR
-- On EXCEPTION reduce production constant -> CHAR
-- On EQUAL reduce production constant -> CHAR
-- On EOF reduce production constant -> CHAR
-- On END reduce production constant -> CHAR
-- On ELSE reduce production constant -> CHAR
-- On DOWNTO reduce production constant -> CHAR
-- On DOT reduce production constant -> CHAR
-- On DO reduce production constant -> CHAR
-- On DEF reduce production constant -> CHAR
-- On COMMA reduce production constant -> CHAR
-- On COLONGREATER reduce production constant -> CHAR
-- On COLONEQUAL reduce production constant -> CHAR
-- On COLONCOLON reduce production constant -> CHAR
-- On COLON reduce production constant -> CHAR
-- On CLASS reduce production constant -> CHAR
-- On CHAR reduce production constant -> CHAR
-- On BEGIN reduce production constant -> CHAR
-- On BARRBRACE reduce production constant -> CHAR
-- On BARBAR reduce production constant -> CHAR
-- On BAR reduce production constant -> CHAR
-- On ASSERT reduce production constant -> CHAR
-- On AND reduce production constant -> CHAR
-- On AMPERSAND reduce production constant -> CHAR
-- On AMPERAMPER reduce production constant -> CHAR

State 358:
static_expr -> val_longident . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> val_longident
-- On UIDENT reduce production static_expr -> val_longident
-- On TYPE reduce production static_expr -> val_longident
-- On TRY reduce production static_expr -> val_longident
-- On TRUE reduce production static_expr -> val_longident
-- On TO reduce production static_expr -> val_longident
-- On SUBTRACTIVE reduce production static_expr -> val_longident
-- On STRING reduce production static_expr -> val_longident
-- On SHARP reduce production static_expr -> val_longident
-- On SEMISEMI reduce production static_expr -> val_longident
-- On RPAREN reduce production static_expr -> val_longident
-- On PREFIXOP reduce production static_expr -> val_longident
-- On PARSER reduce production static_expr -> val_longident
-- On OPEN reduce production static_expr -> val_longident
-- On NEW reduce production static_expr -> val_longident
-- On MODULE reduce production static_expr -> val_longident
-- On MATCH reduce production static_expr -> val_longident
-- On LPAREN reduce production static_expr -> val_longident
-- On LOC reduce production static_expr -> val_longident
-- On LIDENT reduce production static_expr -> val_longident
-- On LET reduce production static_expr -> val_longident
-- On LESSLESSGREATERGREATER reduce production static_expr -> val_longident
-- On LESSLESS reduce production static_expr -> val_longident
-- On LBRACKETLESS reduce production static_expr -> val_longident
-- On LBRACKETBAR reduce production static_expr -> val_longident
-- On LBRACKET reduce production static_expr -> val_longident
-- On LBRACELESS reduce production static_expr -> val_longident
-- On LBRACEBAR reduce production static_expr -> val_longident
-- On LBRACE reduce production static_expr -> val_longident
-- On LAZY reduce production static_expr -> val_longident
-- On INT reduce production static_expr -> val_longident
-- On IN reduce production static_expr -> val_longident
-- On IF reduce production static_expr -> val_longident
-- On FUNCTION reduce production static_expr -> val_longident
-- On FUN reduce production static_expr -> val_longident
-- On FOR reduce production static_expr -> val_longident
-- On FLOAT reduce production static_expr -> val_longident
-- On FALSE reduce production static_expr -> val_longident
-- On EXTERNAL reduce production static_expr -> val_longident
-- On EXCEPTION reduce production static_expr -> val_longident
-- On EOF reduce production static_expr -> val_longident
-- On END reduce production static_expr -> val_longident
-- On ELSE reduce production static_expr -> val_longident
-- On DOT reduce production static_expr -> val_longident
-- On DEF reduce production static_expr -> val_longident
-- On COMMA reduce production static_expr -> val_longident
-- On COLONGREATER reduce production static_expr -> val_longident
-- On COLON reduce production static_expr -> val_longident
-- On CLASS reduce production static_expr -> val_longident
-- On CHAR reduce production static_expr -> val_longident
-- On BEGIN reduce production static_expr -> val_longident
-- On BARRBRACE reduce production static_expr -> val_longident
-- On BAR reduce production static_expr -> val_longident
-- On ASSERT reduce production static_expr -> val_longident
-- On AND reduce production static_expr -> val_longident

State 359:
val_longident -> val_ident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production val_longident -> val_ident
-- On WHILE reduce production val_longident -> val_ident
-- On UIDENT reduce production val_longident -> val_ident
-- On TYPE reduce production val_longident -> val_ident
-- On TRY reduce production val_longident -> val_ident
-- On TRUE reduce production val_longident -> val_ident
-- On TO reduce production val_longident -> val_ident
-- On THEN reduce production val_longident -> val_ident
-- On SUBTRACTIVE reduce production val_longident -> val_ident
-- On STRING reduce production val_longident -> val_ident
-- On STAR reduce production val_longident -> val_ident
-- On SHARP reduce production val_longident -> val_ident
-- On SEMISEMI reduce production val_longident -> val_ident
-- On SEMI reduce production val_longident -> val_ident
-- On RPAREN reduce production val_longident -> val_ident
-- On PREFIXOP reduce production val_longident -> val_ident
-- On PARSER reduce production val_longident -> val_ident
-- On OR reduce production val_longident -> val_ident
-- On OPEN reduce production val_longident -> val_ident
-- On NEW reduce production val_longident -> val_ident
-- On MODULE reduce production val_longident -> val_ident
-- On MINUSGREATER reduce production val_longident -> val_ident
-- On MATCH reduce production val_longident -> val_ident
-- On LPAREN reduce production val_longident -> val_ident
-- On LOC reduce production val_longident -> val_ident
-- On LIDENT reduce production val_longident -> val_ident
-- On LET reduce production val_longident -> val_ident
-- On LESSLESSGREATERGREATER reduce production val_longident -> val_ident
-- On LESSLESS reduce production val_longident -> val_ident
-- On LESSGREATER reduce production val_longident -> val_ident
-- On LESS reduce production val_longident -> val_ident
-- On LBRACKETLESS reduce production val_longident -> val_ident
-- On LBRACKETBAR reduce production val_longident -> val_ident
-- On LBRACKET reduce production val_longident -> val_ident
-- On LBRACELESS reduce production val_longident -> val_ident
-- On LBRACEBAR reduce production val_longident -> val_ident
-- On LBRACE reduce production val_longident -> val_ident
-- On LAZY reduce production val_longident -> val_ident
-- On INT reduce production val_longident -> val_ident
-- On INFIXOP4 reduce production val_longident -> val_ident
-- On INFIXOP3 reduce production val_longident -> val_ident
-- On INFIXOP2 reduce production val_longident -> val_ident
-- On INFIXOP1 reduce production val_longident -> val_ident
-- On INFIXOP0 reduce production val_longident -> val_ident
-- On IN reduce production val_longident -> val_ident
-- On IF reduce production val_longident -> val_ident
-- On GREATER reduce production val_longident -> val_ident
-- On FUNCTION reduce production val_longident -> val_ident
-- On FUN reduce production val_longident -> val_ident
-- On FOR reduce production val_longident -> val_ident
-- On FLOAT reduce production val_longident -> val_ident
-- On FALSE reduce production val_longident -> val_ident
-- On EXTERNAL reduce production val_longident -> val_ident
-- On EXCEPTION reduce production val_longident -> val_ident
-- On EQUAL reduce production val_longident -> val_ident
-- On EOF reduce production val_longident -> val_ident
-- On END reduce production val_longident -> val_ident
-- On ELSE reduce production val_longident -> val_ident
-- On DOWNTO reduce production val_longident -> val_ident
-- On DOT reduce production val_longident -> val_ident
-- On DO reduce production val_longident -> val_ident
-- On DEF reduce production val_longident -> val_ident
-- On COMMA reduce production val_longident -> val_ident
-- On COLONGREATER reduce production val_longident -> val_ident
-- On COLONEQUAL reduce production val_longident -> val_ident
-- On COLONCOLON reduce production val_longident -> val_ident
-- On COLON reduce production val_longident -> val_ident
-- On CLASS reduce production val_longident -> val_ident
-- On CHAR reduce production val_longident -> val_ident
-- On BEGIN reduce production val_longident -> val_ident
-- On BARRBRACE reduce production val_longident -> val_ident
-- On BARBAR reduce production val_longident -> val_ident
-- On BAR reduce production val_longident -> val_ident
-- On ASSERT reduce production val_longident -> val_ident
-- On AND reduce production val_longident -> val_ident
-- On AMPERSAND reduce production val_longident -> val_ident
-- On AMPERAMPER reduce production val_longident -> val_ident

State 360:
static_comma_list -> static_expr . [ RPAREN COMMA ]
static_expr -> static_expr . DOT label_longident [ RPAREN DOT COMMA COLONGREATER COLON ]
static_expr -> LPAREN static_expr . type_constraint RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
static_expr -> LPAREN static_expr . RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On RPAREN shift to state 361
-- On DOT shift to state 362
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On type_constraint shift to state 372
-- On RPAREN reduce production static_comma_list -> static_expr
-- On COMMA reduce production static_comma_list -> static_expr
** Conflict on RPAREN

State 361:
static_expr -> LPAREN static_expr RPAREN . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LPAREN static_expr RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_expr RPAREN
-- On TO reduce production static_expr -> LPAREN static_expr RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_expr RPAREN
-- On SEMI reduce production static_expr -> LPAREN static_expr RPAREN
-- On RBRACKET reduce production static_expr -> LPAREN static_expr RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_expr RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_expr RPAREN
-- On LET reduce production static_expr -> LPAREN static_expr RPAREN
-- On IN reduce production static_expr -> LPAREN static_expr RPAREN
-- On GREATERGREATER reduce production static_expr -> LPAREN static_expr RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_expr RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_expr RPAREN
-- On END reduce production static_expr -> LPAREN static_expr RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_expr RPAREN
-- On DOT reduce production static_expr -> LPAREN static_expr RPAREN
-- On DEF reduce production static_expr -> LPAREN static_expr RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_expr RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_expr RPAREN
-- On BARRBRACKET reduce production static_expr -> LPAREN static_expr RPAREN
-- On BAR reduce production static_expr -> LPAREN static_expr RPAREN
-- On AND reduce production static_expr -> LPAREN static_expr RPAREN

State 362:
static_expr -> static_expr DOT . label_longident [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On label_longident shift to state 363

State 363:
static_expr -> static_expr DOT label_longident . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> static_expr DOT label_longident
-- On UIDENT reduce production static_expr -> static_expr DOT label_longident
-- On TYPE reduce production static_expr -> static_expr DOT label_longident
-- On TRY reduce production static_expr -> static_expr DOT label_longident
-- On TRUE reduce production static_expr -> static_expr DOT label_longident
-- On TO reduce production static_expr -> static_expr DOT label_longident
-- On SUBTRACTIVE reduce production static_expr -> static_expr DOT label_longident
-- On STRING reduce production static_expr -> static_expr DOT label_longident
-- On SHARP reduce production static_expr -> static_expr DOT label_longident
-- On SEMISEMI reduce production static_expr -> static_expr DOT label_longident
-- On RPAREN reduce production static_expr -> static_expr DOT label_longident
-- On PREFIXOP reduce production static_expr -> static_expr DOT label_longident
-- On PARSER reduce production static_expr -> static_expr DOT label_longident
-- On OPEN reduce production static_expr -> static_expr DOT label_longident
-- On NEW reduce production static_expr -> static_expr DOT label_longident
-- On MODULE reduce production static_expr -> static_expr DOT label_longident
-- On MATCH reduce production static_expr -> static_expr DOT label_longident
-- On LPAREN reduce production static_expr -> static_expr DOT label_longident
-- On LOC reduce production static_expr -> static_expr DOT label_longident
-- On LIDENT reduce production static_expr -> static_expr DOT label_longident
-- On LET reduce production static_expr -> static_expr DOT label_longident
-- On LESSLESSGREATERGREATER reduce production static_expr -> static_expr DOT label_longident
-- On LESSLESS reduce production static_expr -> static_expr DOT label_longident
-- On LBRACKETLESS reduce production static_expr -> static_expr DOT label_longident
-- On LBRACKETBAR reduce production static_expr -> static_expr DOT label_longident
-- On LBRACKET reduce production static_expr -> static_expr DOT label_longident
-- On LBRACELESS reduce production static_expr -> static_expr DOT label_longident
-- On LBRACEBAR reduce production static_expr -> static_expr DOT label_longident
-- On LBRACE reduce production static_expr -> static_expr DOT label_longident
-- On LAZY reduce production static_expr -> static_expr DOT label_longident
-- On INT reduce production static_expr -> static_expr DOT label_longident
-- On IN reduce production static_expr -> static_expr DOT label_longident
-- On IF reduce production static_expr -> static_expr DOT label_longident
-- On FUNCTION reduce production static_expr -> static_expr DOT label_longident
-- On FUN reduce production static_expr -> static_expr DOT label_longident
-- On FOR reduce production static_expr -> static_expr DOT label_longident
-- On FLOAT reduce production static_expr -> static_expr DOT label_longident
-- On FALSE reduce production static_expr -> static_expr DOT label_longident
-- On EXTERNAL reduce production static_expr -> static_expr DOT label_longident
-- On EXCEPTION reduce production static_expr -> static_expr DOT label_longident
-- On EOF reduce production static_expr -> static_expr DOT label_longident
-- On END reduce production static_expr -> static_expr DOT label_longident
-- On ELSE reduce production static_expr -> static_expr DOT label_longident
-- On DOT reduce production static_expr -> static_expr DOT label_longident
-- On DEF reduce production static_expr -> static_expr DOT label_longident
-- On COMMA reduce production static_expr -> static_expr DOT label_longident
-- On COLONGREATER reduce production static_expr -> static_expr DOT label_longident
-- On COLON reduce production static_expr -> static_expr DOT label_longident
-- On CLASS reduce production static_expr -> static_expr DOT label_longident
-- On CHAR reduce production static_expr -> static_expr DOT label_longident
-- On BEGIN reduce production static_expr -> static_expr DOT label_longident
-- On BARRBRACE reduce production static_expr -> static_expr DOT label_longident
-- On BAR reduce production static_expr -> static_expr DOT label_longident
-- On ASSERT reduce production static_expr -> static_expr DOT label_longident
-- On AND reduce production static_expr -> static_expr DOT label_longident

State 364:
type_constraint -> COLONGREATER . core_type [ RPAREN EQUAL ]
type_constraint -> COLONGREATER . error [ RPAREN EQUAL ]
-- On error shift to state 365
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 366

State 365:
type_constraint -> COLONGREATER error . [ RPAREN EQUAL ]
-- On RPAREN reduce production type_constraint -> COLONGREATER error
-- On EQUAL reduce production type_constraint -> COLONGREATER error

State 366:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER EQUAL AS ]
type_constraint -> COLONGREATER core_type . [ RPAREN EQUAL ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On RPAREN reduce production type_constraint -> COLONGREATER core_type
-- On EQUAL reduce production type_constraint -> COLONGREATER core_type

State 367:
type_constraint -> COLON . core_type [ RPAREN EQUAL ]
type_constraint -> COLON . core_type COLONGREATER core_type [ RPAREN EQUAL ]
type_constraint -> COLON . error [ RPAREN EQUAL ]
-- On error shift to state 368
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 369

State 368:
type_constraint -> COLON error . [ RPAREN EQUAL ]
-- On RPAREN reduce production type_constraint -> COLON error
-- On EQUAL reduce production type_constraint -> COLON error

State 369:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER EQUAL COLONGREATER AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER EQUAL COLONGREATER AS ]
type_constraint -> COLON core_type . [ RPAREN EQUAL ]
type_constraint -> COLON core_type . COLONGREATER core_type [ RPAREN EQUAL ]
-- On MINUSGREATER shift to state 167
-- On COLONGREATER shift to state 370
-- On AS shift to state 169
-- On RPAREN reduce production type_constraint -> COLON core_type
-- On EQUAL reduce production type_constraint -> COLON core_type

State 370:
type_constraint -> COLON core_type COLONGREATER . core_type [ RPAREN EQUAL ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 371

State 371:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER EQUAL AS ]
type_constraint -> COLON core_type COLONGREATER core_type . [ RPAREN EQUAL ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On RPAREN reduce production type_constraint -> COLON core_type COLONGREATER core_type
-- On EQUAL reduce production type_constraint -> COLON core_type COLONGREATER core_type

State 372:
static_expr -> LPAREN static_expr type_constraint . RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On RPAREN shift to state 373

State 373:
static_expr -> LPAREN static_expr type_constraint RPAREN . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TO reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On SEMI reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On RBRACKET reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LET reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On IN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On GREATERGREATER reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On END reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On DOT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On DEF reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On BARRBRACKET reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On BAR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On AND reduce production static_expr -> LPAREN static_expr type_constraint RPAREN

State 374:
static_comma_list -> static_comma_list . COMMA static_expr [ RPAREN COMMA ]
static_expr -> LPAREN static_comma_list . RPAREN [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On RPAREN shift to state 375
-- On COMMA shift to state 376

State 375:
static_expr -> LPAREN static_comma_list RPAREN . [ error TYPE TO SEMISEMI SEMI RBRACKET OPEN MODULE LET IN GREATERGREATER EXTERNAL EXCEPTION END ELSE DOT DEF COMMA CLASS BARRBRACKET BAR AND ]
-- On error reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TO reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On SEMI reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On RBRACKET reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LET reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On IN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On GREATERGREATER reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On END reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On DOT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On DEF reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On BARRBRACKET reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On BAR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On AND reduce production static_expr -> LPAREN static_comma_list RPAREN

State 376:
static_comma_list -> static_comma_list COMMA . static_expr [ RPAREN COMMA ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 377
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 377:
static_comma_list -> static_comma_list COMMA static_expr . [ RPAREN COMMA ]
static_expr -> static_expr . DOT label_longident [ RPAREN DOT COMMA ]
-- On DOT shift to state 362
-- On RPAREN reduce production static_comma_list -> static_comma_list COMMA static_expr
-- On COMMA reduce production static_comma_list -> static_comma_list COMMA static_expr

State 378:
constr_longident -> mod_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
mod_longident -> mod_longident . DOT UIDENT [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident . DOT val_ident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On DOT shift to state 379
-- On WITH reduce production constr_longident -> mod_longident
-- On WHILE reduce production constr_longident -> mod_longident
-- On UIDENT reduce production constr_longident -> mod_longident
-- On TYPE reduce production constr_longident -> mod_longident
-- On TRY reduce production constr_longident -> mod_longident
-- On TRUE reduce production constr_longident -> mod_longident
-- On TO reduce production constr_longident -> mod_longident
-- On THEN reduce production constr_longident -> mod_longident
-- On SUBTRACTIVE reduce production constr_longident -> mod_longident
-- On STRING reduce production constr_longident -> mod_longident
-- On STAR reduce production constr_longident -> mod_longident
-- On SHARP reduce production constr_longident -> mod_longident
-- On SEMISEMI reduce production constr_longident -> mod_longident
-- On SEMI reduce production constr_longident -> mod_longident
-- On RPAREN reduce production constr_longident -> mod_longident
-- On PREFIXOP reduce production constr_longident -> mod_longident
-- On PARSER reduce production constr_longident -> mod_longident
-- On OR reduce production constr_longident -> mod_longident
-- On OPEN reduce production constr_longident -> mod_longident
-- On NEW reduce production constr_longident -> mod_longident
-- On MODULE reduce production constr_longident -> mod_longident
-- On MINUSGREATER reduce production constr_longident -> mod_longident
-- On MATCH reduce production constr_longident -> mod_longident
-- On LPAREN reduce production constr_longident -> mod_longident
-- On LOC reduce production constr_longident -> mod_longident
-- On LIDENT reduce production constr_longident -> mod_longident
-- On LET reduce production constr_longident -> mod_longident
-- On LESSLESSGREATERGREATER reduce production constr_longident -> mod_longident
-- On LESSLESS reduce production constr_longident -> mod_longident
-- On LESSGREATER reduce production constr_longident -> mod_longident
-- On LESS reduce production constr_longident -> mod_longident
-- On LBRACKETLESS reduce production constr_longident -> mod_longident
-- On LBRACKETBAR reduce production constr_longident -> mod_longident
-- On LBRACKET reduce production constr_longident -> mod_longident
-- On LBRACELESS reduce production constr_longident -> mod_longident
-- On LBRACEBAR reduce production constr_longident -> mod_longident
-- On LBRACE reduce production constr_longident -> mod_longident
-- On LAZY reduce production constr_longident -> mod_longident
-- On INT reduce production constr_longident -> mod_longident
-- On INFIXOP4 reduce production constr_longident -> mod_longident
-- On INFIXOP3 reduce production constr_longident -> mod_longident
-- On INFIXOP2 reduce production constr_longident -> mod_longident
-- On INFIXOP1 reduce production constr_longident -> mod_longident
-- On INFIXOP0 reduce production constr_longident -> mod_longident
-- On IN reduce production constr_longident -> mod_longident
-- On IF reduce production constr_longident -> mod_longident
-- On GREATER reduce production constr_longident -> mod_longident
-- On FUNCTION reduce production constr_longident -> mod_longident
-- On FUN reduce production constr_longident -> mod_longident
-- On FOR reduce production constr_longident -> mod_longident
-- On FLOAT reduce production constr_longident -> mod_longident
-- On FALSE reduce production constr_longident -> mod_longident
-- On EXTERNAL reduce production constr_longident -> mod_longident
-- On EXCEPTION reduce production constr_longident -> mod_longident
-- On EQUAL reduce production constr_longident -> mod_longident
-- On EOF reduce production constr_longident -> mod_longident
-- On END reduce production constr_longident -> mod_longident
-- On ELSE reduce production constr_longident -> mod_longident
-- On DOWNTO reduce production constr_longident -> mod_longident
-- On DOT reduce production constr_longident -> mod_longident
-- On DO reduce production constr_longident -> mod_longident
-- On DEF reduce production constr_longident -> mod_longident
-- On COMMA reduce production constr_longident -> mod_longident
-- On COLONGREATER reduce production constr_longident -> mod_longident
-- On COLONEQUAL reduce production constr_longident -> mod_longident
-- On COLONCOLON reduce production constr_longident -> mod_longident
-- On COLON reduce production constr_longident -> mod_longident
-- On CLASS reduce production constr_longident -> mod_longident
-- On CHAR reduce production constr_longident -> mod_longident
-- On BEGIN reduce production constr_longident -> mod_longident
-- On BARRBRACE reduce production constr_longident -> mod_longident
-- On BARBAR reduce production constr_longident -> mod_longident
-- On BAR reduce production constr_longident -> mod_longident
-- On ASSERT reduce production constr_longident -> mod_longident
-- On AND reduce production constr_longident -> mod_longident
-- On AMPERSAND reduce production constr_longident -> mod_longident
-- On AMPERAMPER reduce production constr_longident -> mod_longident
** Conflict on DOT

State 379:
mod_longident -> mod_longident DOT . UIDENT [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
val_longident -> mod_longident DOT . val_ident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 13
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 381

State 380:
val_ident -> LPAREN . operator RPAREN [ WITH WHILE WHEN UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 89
-- On STAR shift to state 41
-- On PREFIXOP shift to state 43
-- On OR shift to state 44
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On GREATER shift to state 95
-- On EQUAL shift to state 96
-- On COLONEQUAL shift to state 97
-- On BARBAR shift to state 98
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On operator shift to state 244

State 381:
val_longident -> mod_longident DOT val_ident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACE BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production val_longident -> mod_longident DOT val_ident
-- On WHILE reduce production val_longident -> mod_longident DOT val_ident
-- On UIDENT reduce production val_longident -> mod_longident DOT val_ident
-- On TYPE reduce production val_longident -> mod_longident DOT val_ident
-- On TRY reduce production val_longident -> mod_longident DOT val_ident
-- On TRUE reduce production val_longident -> mod_longident DOT val_ident
-- On TO reduce production val_longident -> mod_longident DOT val_ident
-- On THEN reduce production val_longident -> mod_longident DOT val_ident
-- On SUBTRACTIVE reduce production val_longident -> mod_longident DOT val_ident
-- On STRING reduce production val_longident -> mod_longident DOT val_ident
-- On STAR reduce production val_longident -> mod_longident DOT val_ident
-- On SHARP reduce production val_longident -> mod_longident DOT val_ident
-- On SEMISEMI reduce production val_longident -> mod_longident DOT val_ident
-- On SEMI reduce production val_longident -> mod_longident DOT val_ident
-- On RPAREN reduce production val_longident -> mod_longident DOT val_ident
-- On PREFIXOP reduce production val_longident -> mod_longident DOT val_ident
-- On PARSER reduce production val_longident -> mod_longident DOT val_ident
-- On OR reduce production val_longident -> mod_longident DOT val_ident
-- On OPEN reduce production val_longident -> mod_longident DOT val_ident
-- On NEW reduce production val_longident -> mod_longident DOT val_ident
-- On MODULE reduce production val_longident -> mod_longident DOT val_ident
-- On MINUSGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On MATCH reduce production val_longident -> mod_longident DOT val_ident
-- On LPAREN reduce production val_longident -> mod_longident DOT val_ident
-- On LOC reduce production val_longident -> mod_longident DOT val_ident
-- On LIDENT reduce production val_longident -> mod_longident DOT val_ident
-- On LET reduce production val_longident -> mod_longident DOT val_ident
-- On LESSLESSGREATERGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On LESSLESS reduce production val_longident -> mod_longident DOT val_ident
-- On LESSGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On LESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKETLESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKETBAR reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACKET reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACELESS reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACEBAR reduce production val_longident -> mod_longident DOT val_ident
-- On LBRACE reduce production val_longident -> mod_longident DOT val_ident
-- On LAZY reduce production val_longident -> mod_longident DOT val_ident
-- On INT reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP4 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP3 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP2 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP1 reduce production val_longident -> mod_longident DOT val_ident
-- On INFIXOP0 reduce production val_longident -> mod_longident DOT val_ident
-- On IN reduce production val_longident -> mod_longident DOT val_ident
-- On IF reduce production val_longident -> mod_longident DOT val_ident
-- On GREATER reduce production val_longident -> mod_longident DOT val_ident
-- On FUNCTION reduce production val_longident -> mod_longident DOT val_ident
-- On FUN reduce production val_longident -> mod_longident DOT val_ident
-- On FOR reduce production val_longident -> mod_longident DOT val_ident
-- On FLOAT reduce production val_longident -> mod_longident DOT val_ident
-- On FALSE reduce production val_longident -> mod_longident DOT val_ident
-- On EXTERNAL reduce production val_longident -> mod_longident DOT val_ident
-- On EXCEPTION reduce production val_longident -> mod_longident DOT val_ident
-- On EQUAL reduce production val_longident -> mod_longident DOT val_ident
-- On EOF reduce production val_longident -> mod_longident DOT val_ident
-- On END reduce production val_longident -> mod_longident DOT val_ident
-- On ELSE reduce production val_longident -> mod_longident DOT val_ident
-- On DOWNTO reduce production val_longident -> mod_longident DOT val_ident
-- On DOT reduce production val_longident -> mod_longident DOT val_ident
-- On DO reduce production val_longident -> mod_longident DOT val_ident
-- On DEF reduce production val_longident -> mod_longident DOT val_ident
-- On COMMA reduce production val_longident -> mod_longident DOT val_ident
-- On COLONGREATER reduce production val_longident -> mod_longident DOT val_ident
-- On COLONEQUAL reduce production val_longident -> mod_longident DOT val_ident
-- On COLONCOLON reduce production val_longident -> mod_longident DOT val_ident
-- On COLON reduce production val_longident -> mod_longident DOT val_ident
-- On CLASS reduce production val_longident -> mod_longident DOT val_ident
-- On CHAR reduce production val_longident -> mod_longident DOT val_ident
-- On BEGIN reduce production val_longident -> mod_longident DOT val_ident
-- On BARRBRACE reduce production val_longident -> mod_longident DOT val_ident
-- On BARBAR reduce production val_longident -> mod_longident DOT val_ident
-- On BAR reduce production val_longident -> mod_longident DOT val_ident
-- On ASSERT reduce production val_longident -> mod_longident DOT val_ident
-- On AND reduce production val_longident -> mod_longident DOT val_ident
-- On AMPERSAND reduce production val_longident -> mod_longident DOT val_ident
-- On AMPERAMPER reduce production val_longident -> mod_longident DOT val_ident

State 382:
static_expr -> constr_longident . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> constr_longident
-- On UIDENT reduce production static_expr -> constr_longident
-- On TYPE reduce production static_expr -> constr_longident
-- On TRY reduce production static_expr -> constr_longident
-- On TRUE reduce production static_expr -> constr_longident
-- On TO reduce production static_expr -> constr_longident
-- On SUBTRACTIVE reduce production static_expr -> constr_longident
-- On STRING reduce production static_expr -> constr_longident
-- On SHARP reduce production static_expr -> constr_longident
-- On SEMISEMI reduce production static_expr -> constr_longident
-- On RPAREN reduce production static_expr -> constr_longident
-- On PREFIXOP reduce production static_expr -> constr_longident
-- On PARSER reduce production static_expr -> constr_longident
-- On OPEN reduce production static_expr -> constr_longident
-- On NEW reduce production static_expr -> constr_longident
-- On MODULE reduce production static_expr -> constr_longident
-- On MATCH reduce production static_expr -> constr_longident
-- On LPAREN reduce production static_expr -> constr_longident
-- On LOC reduce production static_expr -> constr_longident
-- On LIDENT reduce production static_expr -> constr_longident
-- On LET reduce production static_expr -> constr_longident
-- On LESSLESSGREATERGREATER reduce production static_expr -> constr_longident
-- On LESSLESS reduce production static_expr -> constr_longident
-- On LBRACKETLESS reduce production static_expr -> constr_longident
-- On LBRACKETBAR reduce production static_expr -> constr_longident
-- On LBRACKET reduce production static_expr -> constr_longident
-- On LBRACELESS reduce production static_expr -> constr_longident
-- On LBRACEBAR reduce production static_expr -> constr_longident
-- On LBRACE reduce production static_expr -> constr_longident
-- On LAZY reduce production static_expr -> constr_longident
-- On INT reduce production static_expr -> constr_longident
-- On IN reduce production static_expr -> constr_longident
-- On IF reduce production static_expr -> constr_longident
-- On FUNCTION reduce production static_expr -> constr_longident
-- On FUN reduce production static_expr -> constr_longident
-- On FOR reduce production static_expr -> constr_longident
-- On FLOAT reduce production static_expr -> constr_longident
-- On FALSE reduce production static_expr -> constr_longident
-- On EXTERNAL reduce production static_expr -> constr_longident
-- On EXCEPTION reduce production static_expr -> constr_longident
-- On EOF reduce production static_expr -> constr_longident
-- On END reduce production static_expr -> constr_longident
-- On ELSE reduce production static_expr -> constr_longident
-- On DOT reduce production static_expr -> constr_longident
-- On DEF reduce production static_expr -> constr_longident
-- On COMMA reduce production static_expr -> constr_longident
-- On COLONGREATER reduce production static_expr -> constr_longident
-- On COLON reduce production static_expr -> constr_longident
-- On CLASS reduce production static_expr -> constr_longident
-- On CHAR reduce production static_expr -> constr_longident
-- On BEGIN reduce production static_expr -> constr_longident
-- On BARRBRACE reduce production static_expr -> constr_longident
-- On BAR reduce production static_expr -> constr_longident
-- On ASSERT reduce production static_expr -> constr_longident
-- On AND reduce production static_expr -> constr_longident

State 383:
static_expr -> constant . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> constant
-- On UIDENT reduce production static_expr -> constant
-- On TYPE reduce production static_expr -> constant
-- On TRY reduce production static_expr -> constant
-- On TRUE reduce production static_expr -> constant
-- On TO reduce production static_expr -> constant
-- On SUBTRACTIVE reduce production static_expr -> constant
-- On STRING reduce production static_expr -> constant
-- On SHARP reduce production static_expr -> constant
-- On SEMISEMI reduce production static_expr -> constant
-- On RPAREN reduce production static_expr -> constant
-- On PREFIXOP reduce production static_expr -> constant
-- On PARSER reduce production static_expr -> constant
-- On OPEN reduce production static_expr -> constant
-- On NEW reduce production static_expr -> constant
-- On MODULE reduce production static_expr -> constant
-- On MATCH reduce production static_expr -> constant
-- On LPAREN reduce production static_expr -> constant
-- On LOC reduce production static_expr -> constant
-- On LIDENT reduce production static_expr -> constant
-- On LET reduce production static_expr -> constant
-- On LESSLESSGREATERGREATER reduce production static_expr -> constant
-- On LESSLESS reduce production static_expr -> constant
-- On LBRACKETLESS reduce production static_expr -> constant
-- On LBRACKETBAR reduce production static_expr -> constant
-- On LBRACKET reduce production static_expr -> constant
-- On LBRACELESS reduce production static_expr -> constant
-- On LBRACEBAR reduce production static_expr -> constant
-- On LBRACE reduce production static_expr -> constant
-- On LAZY reduce production static_expr -> constant
-- On INT reduce production static_expr -> constant
-- On IN reduce production static_expr -> constant
-- On IF reduce production static_expr -> constant
-- On FUNCTION reduce production static_expr -> constant
-- On FUN reduce production static_expr -> constant
-- On FOR reduce production static_expr -> constant
-- On FLOAT reduce production static_expr -> constant
-- On FALSE reduce production static_expr -> constant
-- On EXTERNAL reduce production static_expr -> constant
-- On EXCEPTION reduce production static_expr -> constant
-- On EOF reduce production static_expr -> constant
-- On END reduce production static_expr -> constant
-- On ELSE reduce production static_expr -> constant
-- On DOT reduce production static_expr -> constant
-- On DEF reduce production static_expr -> constant
-- On COMMA reduce production static_expr -> constant
-- On COLONGREATER reduce production static_expr -> constant
-- On COLON reduce production static_expr -> constant
-- On CLASS reduce production static_expr -> constant
-- On CHAR reduce production static_expr -> constant
-- On BEGIN reduce production static_expr -> constant
-- On BARRBRACE reduce production static_expr -> constant
-- On BAR reduce production static_expr -> constant
-- On ASSERT reduce production static_expr -> constant
-- On AND reduce production static_expr -> constant

State 384:
static_expr -> LBRACKETBAR BARRBRACKET . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On UIDENT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TYPE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TRY reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TRUE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On TO reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On SUBTRACTIVE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On STRING reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On SHARP reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On RPAREN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On PREFIXOP reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On PARSER reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On OPEN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On NEW reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On MODULE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On MATCH reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LPAREN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LOC reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LIDENT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LET reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESS reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETLESS reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETBAR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKET reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACELESS reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACEBAR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On LAZY reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On INT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On IN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On IF reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On FUNCTION reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On FUN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On FOR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On FLOAT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On FALSE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On EOF reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On END reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On ELSE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On DOT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On DEF reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On COMMA reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On COLONGREATER reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On COLON reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On CLASS reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On CHAR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On BEGIN reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On BARRBRACE reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On BAR reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On ASSERT reduce production static_expr -> LBRACKETBAR BARRBRACKET
-- On AND reduce production static_expr -> LBRACKETBAR BARRBRACKET

State 385:
static_expr -> LBRACKETBAR static_semi_list . opt_semi BARRBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKETBAR static_semi_list . opt_semi error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_semi_list -> static_semi_list . SEMI static_expr [ error SEMI BARRBRACKET ]
-- On SEMI shift to state 331
-- On opt_semi shift to state 386
-- On error reduce production opt_semi -> 
-- On BARRBRACKET reduce production opt_semi -> 

State 386:
static_expr -> LBRACKETBAR static_semi_list opt_semi . BARRBRACKET [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LBRACKETBAR static_semi_list opt_semi . error [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On error shift to state 387
-- On BARRBRACKET shift to state 388

State 387:
static_expr -> LBRACKETBAR static_semi_list opt_semi error . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On UIDENT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TYPE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TRY reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TRUE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On TO reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On SUBTRACTIVE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On STRING reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On SHARP reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On RPAREN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On PREFIXOP reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On PARSER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On OPEN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On NEW reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On MODULE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On MATCH reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LPAREN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LOC reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LIDENT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LESSLESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACKETLESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACKETBAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACELESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACEBAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LBRACE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On LAZY reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On INT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On IN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On IF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On FUNCTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On FUN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On FOR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On FLOAT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On FALSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On EOF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On END reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On ELSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On DOT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On DEF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On COMMA reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On COLONGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On COLON reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On CLASS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On CHAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On BEGIN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On BARRBRACE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On BAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On ASSERT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error
-- On AND reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi error

State 388:
static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On UIDENT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TYPE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TRY reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TRUE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On TO reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On SUBTRACTIVE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On STRING reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On SHARP reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On SEMISEMI reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On RPAREN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On PREFIXOP reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On PARSER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On OPEN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On NEW reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On MODULE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On MATCH reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LPAREN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LOC reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LIDENT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LESSLESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACKETLESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACKETBAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACKET reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACELESS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACEBAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LBRACE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On LAZY reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On INT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On IN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On IF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On FUNCTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On FUN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On FOR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On FLOAT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On FALSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On EXTERNAL reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On EXCEPTION reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On EOF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On END reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On ELSE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On DOT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On DEF reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On COMMA reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On COLONGREATER reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On COLON reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On CLASS reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On CHAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On BEGIN reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On BARRBRACE reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On BAR reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On ASSERT reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET
-- On AND reduce production static_expr -> LBRACKETBAR static_semi_list opt_semi BARRBRACKET

State 389:
static_comma_list -> static_expr . [ RPAREN COMMA ]
static_expr -> static_expr . DOT label_longident [ RPAREN DOT COMMA COLONGREATER COLON ]
static_expr -> LPAREN static_expr . type_constraint RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> LPAREN static_expr . RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On RPAREN shift to state 390
-- On DOT shift to state 362
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On type_constraint shift to state 391
-- On RPAREN reduce production static_comma_list -> static_expr
-- On COMMA reduce production static_comma_list -> static_expr
** Conflict on RPAREN

State 390:
static_expr -> LPAREN static_expr RPAREN . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LPAREN static_expr RPAREN
-- On UIDENT reduce production static_expr -> LPAREN static_expr RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_expr RPAREN
-- On TRY reduce production static_expr -> LPAREN static_expr RPAREN
-- On TRUE reduce production static_expr -> LPAREN static_expr RPAREN
-- On TO reduce production static_expr -> LPAREN static_expr RPAREN
-- On SUBTRACTIVE reduce production static_expr -> LPAREN static_expr RPAREN
-- On STRING reduce production static_expr -> LPAREN static_expr RPAREN
-- On SHARP reduce production static_expr -> LPAREN static_expr RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_expr RPAREN
-- On RPAREN reduce production static_expr -> LPAREN static_expr RPAREN
-- On PREFIXOP reduce production static_expr -> LPAREN static_expr RPAREN
-- On PARSER reduce production static_expr -> LPAREN static_expr RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_expr RPAREN
-- On NEW reduce production static_expr -> LPAREN static_expr RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_expr RPAREN
-- On MATCH reduce production static_expr -> LPAREN static_expr RPAREN
-- On LPAREN reduce production static_expr -> LPAREN static_expr RPAREN
-- On LOC reduce production static_expr -> LPAREN static_expr RPAREN
-- On LIDENT reduce production static_expr -> LPAREN static_expr RPAREN
-- On LET reduce production static_expr -> LPAREN static_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production static_expr -> LPAREN static_expr RPAREN
-- On LESSLESS reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACKETLESS reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACKETBAR reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACKET reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACELESS reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACEBAR reduce production static_expr -> LPAREN static_expr RPAREN
-- On LBRACE reduce production static_expr -> LPAREN static_expr RPAREN
-- On LAZY reduce production static_expr -> LPAREN static_expr RPAREN
-- On INT reduce production static_expr -> LPAREN static_expr RPAREN
-- On IN reduce production static_expr -> LPAREN static_expr RPAREN
-- On IF reduce production static_expr -> LPAREN static_expr RPAREN
-- On FUNCTION reduce production static_expr -> LPAREN static_expr RPAREN
-- On FUN reduce production static_expr -> LPAREN static_expr RPAREN
-- On FOR reduce production static_expr -> LPAREN static_expr RPAREN
-- On FLOAT reduce production static_expr -> LPAREN static_expr RPAREN
-- On FALSE reduce production static_expr -> LPAREN static_expr RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_expr RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_expr RPAREN
-- On EOF reduce production static_expr -> LPAREN static_expr RPAREN
-- On END reduce production static_expr -> LPAREN static_expr RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_expr RPAREN
-- On DOT reduce production static_expr -> LPAREN static_expr RPAREN
-- On DEF reduce production static_expr -> LPAREN static_expr RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_expr RPAREN
-- On COLONGREATER reduce production static_expr -> LPAREN static_expr RPAREN
-- On COLON reduce production static_expr -> LPAREN static_expr RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_expr RPAREN
-- On CHAR reduce production static_expr -> LPAREN static_expr RPAREN
-- On BEGIN reduce production static_expr -> LPAREN static_expr RPAREN
-- On BARRBRACE reduce production static_expr -> LPAREN static_expr RPAREN
-- On BAR reduce production static_expr -> LPAREN static_expr RPAREN
-- On ASSERT reduce production static_expr -> LPAREN static_expr RPAREN
-- On AND reduce production static_expr -> LPAREN static_expr RPAREN

State 391:
static_expr -> LPAREN static_expr type_constraint . RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On RPAREN shift to state 392

State 392:
static_expr -> LPAREN static_expr type_constraint RPAREN . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On UIDENT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TRY reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TRUE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On TO reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On SUBTRACTIVE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On STRING reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On SHARP reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On RPAREN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On PREFIXOP reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On PARSER reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On NEW reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On MATCH reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LPAREN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LOC reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LIDENT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LET reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LESSLESSGREATERGREATER reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LESSLESS reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACKETLESS reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACKETBAR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACKET reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACELESS reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACEBAR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LBRACE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On LAZY reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On INT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On IN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On IF reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On FUNCTION reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On FUN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On FOR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On FLOAT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On FALSE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On EOF reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On END reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On DOT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On DEF reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On COLONGREATER reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On COLON reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On CHAR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On BEGIN reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On BARRBRACE reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On BAR reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On ASSERT reduce production static_expr -> LPAREN static_expr type_constraint RPAREN
-- On AND reduce production static_expr -> LPAREN static_expr type_constraint RPAREN

State 393:
static_comma_list -> static_comma_list . COMMA static_expr [ RPAREN COMMA ]
static_expr -> LPAREN static_comma_list . RPAREN [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On RPAREN shift to state 394
-- On COMMA shift to state 376

State 394:
static_expr -> LPAREN static_comma_list RPAREN . [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI RPAREN PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF COMMA COLONGREATER COLON CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On UIDENT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TYPE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TRY reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TRUE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On TO reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On SUBTRACTIVE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On STRING reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On SHARP reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On SEMISEMI reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On RPAREN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On PREFIXOP reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On PARSER reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On OPEN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On NEW reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On MODULE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On MATCH reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LPAREN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LOC reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LIDENT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LET reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LESSLESSGREATERGREATER reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LESSLESS reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACKETLESS reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACKETBAR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACKET reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACELESS reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACEBAR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LBRACE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On LAZY reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On INT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On IN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On IF reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On FUNCTION reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On FUN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On FOR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On FLOAT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On FALSE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On EXTERNAL reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On EXCEPTION reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On EOF reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On END reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On ELSE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On DOT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On DEF reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On COMMA reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On COLONGREATER reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On COLON reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On CLASS reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On CHAR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On BEGIN reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On BARRBRACE reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On BAR reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On ASSERT reduce production static_expr -> LPAREN static_comma_list RPAREN
-- On AND reduce production static_expr -> LPAREN static_comma_list RPAREN

State 395:
process0 -> REPLY static_expr . to_ident [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> static_expr . DOT label_longident [ WHILE UIDENT TYPE TRY TRUE TO SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DOT DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On TO shift to state 396
-- On DOT shift to state 362
-- On to_ident shift to state 398
-- On WHILE reduce production to_ident -> 
-- On UIDENT reduce production to_ident -> 
-- On TYPE reduce production to_ident -> 
-- On TRY reduce production to_ident -> 
-- On TRUE reduce production to_ident -> 
-- On SUBTRACTIVE reduce production to_ident -> 
-- On STRING reduce production to_ident -> 
-- On SHARP reduce production to_ident -> 
-- On SEMISEMI reduce production to_ident -> 
-- On PREFIXOP reduce production to_ident -> 
-- On PARSER reduce production to_ident -> 
-- On OPEN reduce production to_ident -> 
-- On NEW reduce production to_ident -> 
-- On MODULE reduce production to_ident -> 
-- On MATCH reduce production to_ident -> 
-- On LPAREN reduce production to_ident -> 
-- On LOC reduce production to_ident -> 
-- On LIDENT reduce production to_ident -> 
-- On LET reduce production to_ident -> 
-- On LBRACKETLESS reduce production to_ident -> 
-- On LBRACKETBAR reduce production to_ident -> 
-- On LBRACKET reduce production to_ident -> 
-- On LBRACELESS reduce production to_ident -> 
-- On LBRACEBAR reduce production to_ident -> 
-- On LBRACE reduce production to_ident -> 
-- On LAZY reduce production to_ident -> 
-- On INT reduce production to_ident -> 
-- On IN reduce production to_ident -> 
-- On IF reduce production to_ident -> 
-- On FUNCTION reduce production to_ident -> 
-- On FUN reduce production to_ident -> 
-- On FOR reduce production to_ident -> 
-- On FLOAT reduce production to_ident -> 
-- On FALSE reduce production to_ident -> 
-- On EXTERNAL reduce production to_ident -> 
-- On EXCEPTION reduce production to_ident -> 
-- On EOF reduce production to_ident -> 
-- On END reduce production to_ident -> 
-- On ELSE reduce production to_ident -> 
-- On DEF reduce production to_ident -> 
-- On CLASS reduce production to_ident -> 
-- On CHAR reduce production to_ident -> 
-- On BEGIN reduce production to_ident -> 
-- On BARRBRACE reduce production to_ident -> 
-- On BAR reduce production to_ident -> 
-- On ASSERT reduce production to_ident -> 
-- On AND reduce production to_ident -> 

State 396:
to_ident -> TO . LIDENT [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On LIDENT shift to state 397

State 397:
to_ident -> TO LIDENT . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production to_ident -> TO LIDENT
-- On UIDENT reduce production to_ident -> TO LIDENT
-- On TYPE reduce production to_ident -> TO LIDENT
-- On TRY reduce production to_ident -> TO LIDENT
-- On TRUE reduce production to_ident -> TO LIDENT
-- On SUBTRACTIVE reduce production to_ident -> TO LIDENT
-- On STRING reduce production to_ident -> TO LIDENT
-- On SHARP reduce production to_ident -> TO LIDENT
-- On SEMISEMI reduce production to_ident -> TO LIDENT
-- On PREFIXOP reduce production to_ident -> TO LIDENT
-- On PARSER reduce production to_ident -> TO LIDENT
-- On OPEN reduce production to_ident -> TO LIDENT
-- On NEW reduce production to_ident -> TO LIDENT
-- On MODULE reduce production to_ident -> TO LIDENT
-- On MATCH reduce production to_ident -> TO LIDENT
-- On LPAREN reduce production to_ident -> TO LIDENT
-- On LOC reduce production to_ident -> TO LIDENT
-- On LIDENT reduce production to_ident -> TO LIDENT
-- On LET reduce production to_ident -> TO LIDENT
-- On LBRACKETLESS reduce production to_ident -> TO LIDENT
-- On LBRACKETBAR reduce production to_ident -> TO LIDENT
-- On LBRACKET reduce production to_ident -> TO LIDENT
-- On LBRACELESS reduce production to_ident -> TO LIDENT
-- On LBRACEBAR reduce production to_ident -> TO LIDENT
-- On LBRACE reduce production to_ident -> TO LIDENT
-- On LAZY reduce production to_ident -> TO LIDENT
-- On INT reduce production to_ident -> TO LIDENT
-- On IN reduce production to_ident -> TO LIDENT
-- On IF reduce production to_ident -> TO LIDENT
-- On FUNCTION reduce production to_ident -> TO LIDENT
-- On FUN reduce production to_ident -> TO LIDENT
-- On FOR reduce production to_ident -> TO LIDENT
-- On FLOAT reduce production to_ident -> TO LIDENT
-- On FALSE reduce production to_ident -> TO LIDENT
-- On EXTERNAL reduce production to_ident -> TO LIDENT
-- On EXCEPTION reduce production to_ident -> TO LIDENT
-- On EOF reduce production to_ident -> TO LIDENT
-- On END reduce production to_ident -> TO LIDENT
-- On ELSE reduce production to_ident -> TO LIDENT
-- On DEF reduce production to_ident -> TO LIDENT
-- On CLASS reduce production to_ident -> TO LIDENT
-- On CHAR reduce production to_ident -> TO LIDENT
-- On BEGIN reduce production to_ident -> TO LIDENT
-- On BARRBRACE reduce production to_ident -> TO LIDENT
-- On BAR reduce production to_ident -> TO LIDENT
-- On ASSERT reduce production to_ident -> TO LIDENT
-- On AND reduce production to_ident -> TO LIDENT

State 398:
process0 -> REPLY static_expr to_ident . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> REPLY static_expr to_ident
-- On UIDENT reduce production process0 -> REPLY static_expr to_ident
-- On TYPE reduce production process0 -> REPLY static_expr to_ident
-- On TRY reduce production process0 -> REPLY static_expr to_ident
-- On TRUE reduce production process0 -> REPLY static_expr to_ident
-- On SUBTRACTIVE reduce production process0 -> REPLY static_expr to_ident
-- On STRING reduce production process0 -> REPLY static_expr to_ident
-- On SHARP reduce production process0 -> REPLY static_expr to_ident
-- On SEMISEMI reduce production process0 -> REPLY static_expr to_ident
-- On PREFIXOP reduce production process0 -> REPLY static_expr to_ident
-- On PARSER reduce production process0 -> REPLY static_expr to_ident
-- On OPEN reduce production process0 -> REPLY static_expr to_ident
-- On NEW reduce production process0 -> REPLY static_expr to_ident
-- On MODULE reduce production process0 -> REPLY static_expr to_ident
-- On MATCH reduce production process0 -> REPLY static_expr to_ident
-- On LPAREN reduce production process0 -> REPLY static_expr to_ident
-- On LOC reduce production process0 -> REPLY static_expr to_ident
-- On LIDENT reduce production process0 -> REPLY static_expr to_ident
-- On LET reduce production process0 -> REPLY static_expr to_ident
-- On LBRACKETLESS reduce production process0 -> REPLY static_expr to_ident
-- On LBRACKETBAR reduce production process0 -> REPLY static_expr to_ident
-- On LBRACKET reduce production process0 -> REPLY static_expr to_ident
-- On LBRACELESS reduce production process0 -> REPLY static_expr to_ident
-- On LBRACEBAR reduce production process0 -> REPLY static_expr to_ident
-- On LBRACE reduce production process0 -> REPLY static_expr to_ident
-- On LAZY reduce production process0 -> REPLY static_expr to_ident
-- On INT reduce production process0 -> REPLY static_expr to_ident
-- On IN reduce production process0 -> REPLY static_expr to_ident
-- On IF reduce production process0 -> REPLY static_expr to_ident
-- On FUNCTION reduce production process0 -> REPLY static_expr to_ident
-- On FUN reduce production process0 -> REPLY static_expr to_ident
-- On FOR reduce production process0 -> REPLY static_expr to_ident
-- On FLOAT reduce production process0 -> REPLY static_expr to_ident
-- On FALSE reduce production process0 -> REPLY static_expr to_ident
-- On EXTERNAL reduce production process0 -> REPLY static_expr to_ident
-- On EXCEPTION reduce production process0 -> REPLY static_expr to_ident
-- On EOF reduce production process0 -> REPLY static_expr to_ident
-- On END reduce production process0 -> REPLY static_expr to_ident
-- On ELSE reduce production process0 -> REPLY static_expr to_ident
-- On DEF reduce production process0 -> REPLY static_expr to_ident
-- On CLASS reduce production process0 -> REPLY static_expr to_ident
-- On CHAR reduce production process0 -> REPLY static_expr to_ident
-- On BEGIN reduce production process0 -> REPLY static_expr to_ident
-- On BARRBRACE reduce production process0 -> REPLY static_expr to_ident
-- On BAR reduce production process0 -> REPLY static_expr to_ident
-- On ASSERT reduce production process0 -> REPLY static_expr to_ident
-- On AND reduce production process0 -> REPLY static_expr to_ident

State 399:
process -> LET . rec_flag let_bindings IN process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On REC shift to state 287
-- On rec_flag shift to state 400
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 400:
process -> LET rec_flag . let_bindings IN process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 401
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 809
-- On mod_longident shift to state 303
-- On let_bindings shift to state 814
-- On let_binding shift to state 819
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 401:
let_binding -> val_ident . fun_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
simple_pattern -> val_ident . [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 402
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 803
-- On simple_pattern shift to state 806
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On fun_binding shift to state 808
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On EQUAL reduce production simple_pattern -> val_ident
-- On COMMA reduce production simple_pattern -> val_ident
-- On COLONEQUAL reduce production simple_pattern -> val_ident
-- On COLONCOLON reduce production simple_pattern -> val_ident
-- On BAR reduce production simple_pattern -> val_ident
-- On AS reduce production simple_pattern -> val_ident
** Conflict on EQUAL

State 402:
fun_binding -> EQUAL . seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 802
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 403:
expr -> LET . rec_flag let_bindings IN seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings IN error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On REC shift to state 287
-- On rec_flag shift to state 404
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 404:
expr -> LET rec_flag . let_bindings IN seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings IN error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 405
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 405:
expr -> LET rec_flag let_bindings . IN seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . IN error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error IN AND ]
-- On error shift to state 406
-- On IN shift to state 407
-- On AND shift to state 799

State 406:
expr -> LET rec_flag let_bindings error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> LET rec_flag let_bindings error
-- On WHILE reduce production expr -> LET rec_flag let_bindings error
-- On UIDENT reduce production expr -> LET rec_flag let_bindings error
-- On TYPE reduce production expr -> LET rec_flag let_bindings error
-- On TRY reduce production expr -> LET rec_flag let_bindings error
-- On TRUE reduce production expr -> LET rec_flag let_bindings error
-- On TO reduce production expr -> LET rec_flag let_bindings error
-- On THEN reduce production expr -> LET rec_flag let_bindings error
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings error
-- On STRING reduce production expr -> LET rec_flag let_bindings error
-- On STAR reduce production expr -> LET rec_flag let_bindings error
-- On SHARP reduce production expr -> LET rec_flag let_bindings error
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings error
-- On SEMI reduce production expr -> LET rec_flag let_bindings error
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings error
-- On PARSER reduce production expr -> LET rec_flag let_bindings error
-- On OR reduce production expr -> LET rec_flag let_bindings error
-- On OPEN reduce production expr -> LET rec_flag let_bindings error
-- On NEW reduce production expr -> LET rec_flag let_bindings error
-- On MODULE reduce production expr -> LET rec_flag let_bindings error
-- On MINUSGREATER reduce production expr -> LET rec_flag let_bindings error
-- On MATCH reduce production expr -> LET rec_flag let_bindings error
-- On LPAREN reduce production expr -> LET rec_flag let_bindings error
-- On LOC reduce production expr -> LET rec_flag let_bindings error
-- On LIDENT reduce production expr -> LET rec_flag let_bindings error
-- On LET reduce production expr -> LET rec_flag let_bindings error
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings error
-- On LESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings error
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings error
-- On LBRACE reduce production expr -> LET rec_flag let_bindings error
-- On LAZY reduce production expr -> LET rec_flag let_bindings error
-- On INT reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings error
-- On IN reduce production expr -> LET rec_flag let_bindings error
-- On IF reduce production expr -> LET rec_flag let_bindings error
-- On GREATER reduce production expr -> LET rec_flag let_bindings error
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings error
-- On FUN reduce production expr -> LET rec_flag let_bindings error
-- On FOR reduce production expr -> LET rec_flag let_bindings error
-- On FLOAT reduce production expr -> LET rec_flag let_bindings error
-- On FALSE reduce production expr -> LET rec_flag let_bindings error
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings error
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings error
-- On EQUAL reduce production expr -> LET rec_flag let_bindings error
-- On EOF reduce production expr -> LET rec_flag let_bindings error
-- On END reduce production expr -> LET rec_flag let_bindings error
-- On ELSE reduce production expr -> LET rec_flag let_bindings error
-- On DOWNTO reduce production expr -> LET rec_flag let_bindings error
-- On DO reduce production expr -> LET rec_flag let_bindings error
-- On DEF reduce production expr -> LET rec_flag let_bindings error
-- On COMMA reduce production expr -> LET rec_flag let_bindings error
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings error
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings error
-- On CLASS reduce production expr -> LET rec_flag let_bindings error
-- On CHAR reduce production expr -> LET rec_flag let_bindings error
-- On BEGIN reduce production expr -> LET rec_flag let_bindings error
-- On BARBAR reduce production expr -> LET rec_flag let_bindings error
-- On BAR reduce production expr -> LET rec_flag let_bindings error
-- On ASSERT reduce production expr -> LET rec_flag let_bindings error
-- On AND reduce production expr -> LET rec_flag let_bindings error
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings error
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings error

State 407:
expr -> LET rec_flag let_bindings IN . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings IN . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 408
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 798
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 408:
expr -> LET rec_flag let_bindings IN error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> LET rec_flag let_bindings IN error
-- On WHILE reduce production expr -> LET rec_flag let_bindings IN error
-- On UIDENT reduce production expr -> LET rec_flag let_bindings IN error
-- On TYPE reduce production expr -> LET rec_flag let_bindings IN error
-- On TRY reduce production expr -> LET rec_flag let_bindings IN error
-- On TRUE reduce production expr -> LET rec_flag let_bindings IN error
-- On TO reduce production expr -> LET rec_flag let_bindings IN error
-- On THEN reduce production expr -> LET rec_flag let_bindings IN error
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings IN error
-- On STRING reduce production expr -> LET rec_flag let_bindings IN error
-- On STAR reduce production expr -> LET rec_flag let_bindings IN error
-- On SHARP reduce production expr -> LET rec_flag let_bindings IN error
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings IN error
-- On SEMI reduce production expr -> LET rec_flag let_bindings IN error
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings IN error
-- On PARSER reduce production expr -> LET rec_flag let_bindings IN error
-- On OR reduce production expr -> LET rec_flag let_bindings IN error
-- On OPEN reduce production expr -> LET rec_flag let_bindings IN error
-- On NEW reduce production expr -> LET rec_flag let_bindings IN error
-- On MODULE reduce production expr -> LET rec_flag let_bindings IN error
-- On MINUSGREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On MATCH reduce production expr -> LET rec_flag let_bindings IN error
-- On LPAREN reduce production expr -> LET rec_flag let_bindings IN error
-- On LOC reduce production expr -> LET rec_flag let_bindings IN error
-- On LIDENT reduce production expr -> LET rec_flag let_bindings IN error
-- On LET reduce production expr -> LET rec_flag let_bindings IN error
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On LESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACE reduce production expr -> LET rec_flag let_bindings IN error
-- On LAZY reduce production expr -> LET rec_flag let_bindings IN error
-- On INT reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings IN error
-- On IN reduce production expr -> LET rec_flag let_bindings IN error
-- On IF reduce production expr -> LET rec_flag let_bindings IN error
-- On GREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings IN error
-- On FUN reduce production expr -> LET rec_flag let_bindings IN error
-- On FOR reduce production expr -> LET rec_flag let_bindings IN error
-- On FLOAT reduce production expr -> LET rec_flag let_bindings IN error
-- On FALSE reduce production expr -> LET rec_flag let_bindings IN error
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings IN error
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings IN error
-- On EQUAL reduce production expr -> LET rec_flag let_bindings IN error
-- On EOF reduce production expr -> LET rec_flag let_bindings IN error
-- On END reduce production expr -> LET rec_flag let_bindings IN error
-- On ELSE reduce production expr -> LET rec_flag let_bindings IN error
-- On DOWNTO reduce production expr -> LET rec_flag let_bindings IN error
-- On DO reduce production expr -> LET rec_flag let_bindings IN error
-- On DEF reduce production expr -> LET rec_flag let_bindings IN error
-- On COMMA reduce production expr -> LET rec_flag let_bindings IN error
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings IN error
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings IN error
-- On CLASS reduce production expr -> LET rec_flag let_bindings IN error
-- On CHAR reduce production expr -> LET rec_flag let_bindings IN error
-- On BEGIN reduce production expr -> LET rec_flag let_bindings IN error
-- On BARBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On BAR reduce production expr -> LET rec_flag let_bindings IN error
-- On ASSERT reduce production expr -> LET rec_flag let_bindings IN error
-- On AND reduce production expr -> LET rec_flag let_bindings IN error
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings IN error
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings IN error

State 409:
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi BARRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . expr_semi_list opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR . BARRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On BARRBRACKET shift to state 793
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_semi_list shift to state 794
-- On expr_comma_list shift to state 499
-- On expr shift to state 779
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 410:
simple_expr -> LBRACE . lbl_expr_list opt_semi RBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE . lbl_expr_list opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On lbl_expr_list shift to state 411
-- On label_longident shift to state 446

State 411:
lbl_expr_list -> lbl_expr_list . SEMI label_longident EQUAL expr [ error SEMI RBRACE ]
simple_expr -> LBRACE lbl_expr_list . opt_semi RBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE lbl_expr_list . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 412
-- On opt_semi shift to state 790
-- On error reduce production opt_semi -> 
-- On RBRACE reduce production opt_semi -> 

State 412:
lbl_expr_list -> lbl_expr_list SEMI . label_longident EQUAL expr [ error SEMI RBRACE ]
opt_semi -> SEMI . [ error RBRACE ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On label_longident shift to state 413
-- On error reduce production opt_semi -> SEMI
-- On RBRACE reduce production opt_semi -> SEMI

State 413:
lbl_expr_list -> lbl_expr_list SEMI label_longident . EQUAL expr [ error SEMI RBRACE ]
-- On EQUAL shift to state 414

State 414:
lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL . expr [ error SEMI RBRACE ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 789
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 415:
expr -> LAZY . simple_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 788
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 416:
simple_expr -> BEGIN . seq_expr END [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 785
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 417:
expr -> IF . seq_expr THEN expr ELSE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF . seq_expr THEN expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 780
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 418:
constr_longident -> LBRACKET . RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET . expr_semi_list opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On RBRACKET shift to state 248
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_semi_list shift to state 773
-- On expr_comma_list shift to state 499
-- On expr shift to state 779
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 419:
expr -> FUNCTION . opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 420
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 420:
expr -> FUNCTION opt_bar . match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 421
-- On mod_longident shift to state 303
-- On match_cases shift to state 769
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 421:
match_cases -> pattern . match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
-- On WHEN shift to state 422
-- On MINUSGREATER shift to state 433
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459
-- On match_action shift to state 768

State 422:
match_action -> WHEN . seq_expr MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 765
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 423:
simple_expr -> LBRACELESS . label_expr_list opt_semi GREATERRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS . label_expr_list opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS . GREATERRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 141
-- On GREATERRBRACE shift to state 424
-- On label_expr_list shift to state 425
-- On label shift to state 429

State 424:
simple_expr -> LBRACELESS GREATERRBRACE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On WHILE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On UIDENT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TYPE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TRY reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TRUE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On TO reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On THEN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On STRING reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On STAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SHARP reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On SEMI reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On PARSER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On OR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On OPEN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On NEW reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On MODULE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On MINUSGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On MATCH reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LPAREN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LOC reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LIDENT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSLESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACKET reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LBRACE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On LAZY reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On IN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On IF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On GREATER reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FUNCTION reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FUN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FOR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FLOAT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On FALSE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EQUAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On EOF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On END reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On ELSE reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DOWNTO reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DOT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DO reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On DEF reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COMMA reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On CLASS reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On CHAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BEGIN reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BARBAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On BAR reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On ASSERT reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AND reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACELESS GREATERRBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS GREATERRBRACE

State 425:
label_expr_list -> label_expr_list . SEMI label EQUAL expr [ error SEMI GREATERRBRACE ]
simple_expr -> LBRACELESS label_expr_list . opt_semi GREATERRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS label_expr_list . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 316
-- On opt_semi shift to state 426
-- On error reduce production opt_semi -> 
-- On GREATERRBRACE reduce production opt_semi -> 

State 426:
simple_expr -> LBRACELESS label_expr_list opt_semi . GREATERRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS label_expr_list opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 427
-- On GREATERRBRACE shift to state 428

State 427:
simple_expr -> LBRACELESS label_expr_list opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On THEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On OR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On MINUSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On IN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On IF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On END reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DOWNTO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error

State 428:
simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On WHILE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On UIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TYPE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TRY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TRUE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On THEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On STRING reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On STAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SHARP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On PARSER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On OR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On OPEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On NEW reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On MODULE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On MINUSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On MATCH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LOC reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LAZY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On IN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On IF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On GREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FUNCTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FUN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FOR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FLOAT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FALSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EOF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On END reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On ELSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DOWNTO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DOT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DO reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DEF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COMMA reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On CLASS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On CHAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BEGIN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BARBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On ASSERT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE

State 429:
label_expr_list -> label . EQUAL expr [ error SEMI GREATERRBRACE ]
-- On EQUAL shift to state 430

State 430:
label_expr_list -> label EQUAL . expr [ error SEMI GREATERRBRACE ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 764
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 431:
expr -> FUN . simple_pattern fun_def [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 432
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 432:
expr -> FUN simple_pattern . fun_def [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHEN shift to state 422
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On MINUSGREATER shift to state 433
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 760
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On match_action shift to state 761
-- On fun_def shift to state 763
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 433:
match_action -> MINUSGREATER . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 759
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 434:
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 435

State 435:
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On EQUAL shift to state 436

State 436:
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 752
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 437:
expr -> LBRACEBAR . process BARRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 750
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On BARRBRACE reduce production process -> 

State 438:
process0 -> LBRACEBARBARRBRACE . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> LBRACEBARBARRBRACE
-- On UIDENT reduce production process0 -> LBRACEBARBARRBRACE
-- On TYPE reduce production process0 -> LBRACEBARBARRBRACE
-- On TRY reduce production process0 -> LBRACEBARBARRBRACE
-- On TRUE reduce production process0 -> LBRACEBARBARRBRACE
-- On SUBTRACTIVE reduce production process0 -> LBRACEBARBARRBRACE
-- On STRING reduce production process0 -> LBRACEBARBARRBRACE
-- On SHARP reduce production process0 -> LBRACEBARBARRBRACE
-- On SEMISEMI reduce production process0 -> LBRACEBARBARRBRACE
-- On PREFIXOP reduce production process0 -> LBRACEBARBARRBRACE
-- On PARSER reduce production process0 -> LBRACEBARBARRBRACE
-- On OPEN reduce production process0 -> LBRACEBARBARRBRACE
-- On NEW reduce production process0 -> LBRACEBARBARRBRACE
-- On MODULE reduce production process0 -> LBRACEBARBARRBRACE
-- On MATCH reduce production process0 -> LBRACEBARBARRBRACE
-- On LPAREN reduce production process0 -> LBRACEBARBARRBRACE
-- On LOC reduce production process0 -> LBRACEBARBARRBRACE
-- On LIDENT reduce production process0 -> LBRACEBARBARRBRACE
-- On LET reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACKETLESS reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACKETBAR reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACKET reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACELESS reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACEBAR reduce production process0 -> LBRACEBARBARRBRACE
-- On LBRACE reduce production process0 -> LBRACEBARBARRBRACE
-- On LAZY reduce production process0 -> LBRACEBARBARRBRACE
-- On INT reduce production process0 -> LBRACEBARBARRBRACE
-- On IN reduce production process0 -> LBRACEBARBARRBRACE
-- On IF reduce production process0 -> LBRACEBARBARRBRACE
-- On FUNCTION reduce production process0 -> LBRACEBARBARRBRACE
-- On FUN reduce production process0 -> LBRACEBARBARRBRACE
-- On FOR reduce production process0 -> LBRACEBARBARRBRACE
-- On FLOAT reduce production process0 -> LBRACEBARBARRBRACE
-- On FALSE reduce production process0 -> LBRACEBARBARRBRACE
-- On EXTERNAL reduce production process0 -> LBRACEBARBARRBRACE
-- On EXCEPTION reduce production process0 -> LBRACEBARBARRBRACE
-- On EOF reduce production process0 -> LBRACEBARBARRBRACE
-- On END reduce production process0 -> LBRACEBARBARRBRACE
-- On ELSE reduce production process0 -> LBRACEBARBARRBRACE
-- On DEF reduce production process0 -> LBRACEBARBARRBRACE
-- On CLASS reduce production process0 -> LBRACEBARBARRBRACE
-- On CHAR reduce production process0 -> LBRACEBARBARRBRACE
-- On BEGIN reduce production process0 -> LBRACEBARBARRBRACE
-- On BARRBRACE reduce production process0 -> LBRACEBARBARRBRACE
-- On BAR reduce production process0 -> LBRACEBARBARRBRACE
-- On ASSERT reduce production process0 -> LBRACEBARBARRBRACE
-- On AND reduce production process0 -> LBRACEBARBARRBRACE

State 439:
process0 -> LBRACEBAR . process BARRBRACE [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 748
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On BARRBRACE reduce production process -> 

State 440:
process -> IF . expr THEN process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process0 -> IF . expr THEN process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 739
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 441:
simple_expr -> LBRACE . lbl_expr_list opt_semi RBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE . lbl_expr_list opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On lbl_expr_list shift to state 442
-- On label_longident shift to state 446

State 442:
lbl_expr_list -> lbl_expr_list . SEMI label_longident EQUAL expr [ error SEMI RBRACE ]
simple_expr -> LBRACE lbl_expr_list . opt_semi RBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE lbl_expr_list . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 412
-- On opt_semi shift to state 443
-- On error reduce production opt_semi -> 
-- On RBRACE reduce production opt_semi -> 

State 443:
simple_expr -> LBRACE lbl_expr_list opt_semi . RBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE lbl_expr_list opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 444
-- On RBRACE shift to state 445

State 444:
simple_expr -> LBRACE lbl_expr_list opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On THEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On OR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On MINUSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On IN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On IF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On END reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DOWNTO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error

State 445:
simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On WHILE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On UIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TYPE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TRY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TRUE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On THEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On STRING reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On STAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SHARP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On PARSER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On OR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On OPEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On NEW reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On MODULE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On MINUSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On MATCH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LOC reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LAZY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On IN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On IF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On GREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FUNCTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FUN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FOR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FLOAT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FALSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EOF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On END reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On ELSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DOWNTO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DOT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DO reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DEF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COMMA reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On CLASS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On CHAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BEGIN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BARBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On ASSERT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE

State 446:
lbl_expr_list -> label_longident . EQUAL expr [ error SEMI RBRACE ]
-- On EQUAL shift to state 447

State 447:
lbl_expr_list -> label_longident EQUAL . expr [ error SEMI RBRACE ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 602
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 448:
expr -> DEF . def_bindings IN seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 599
-- On def_binding shift to state 595

State 449:
join_pattern -> LIDENT . LESS join_args GREATER [ EQUAL BAR ]
join_pattern -> LIDENT . LESSGREATER [ EQUAL BAR ]
join_pattern -> LIDENT . LESSLESS join_args GREATERGREATER [ EQUAL BAR ]
join_pattern -> LIDENT . LESSLESSGREATERGREATER [ EQUAL BAR ]
-- On LESSLESSGREATERGREATER shift to state 450
-- On LESSLESS shift to state 451
-- On LESSGREATER shift to state 463
-- On LESS shift to state 464

State 450:
join_pattern -> LIDENT LESSLESSGREATERGREATER . [ EQUAL BAR ]
-- On EQUAL reduce production join_pattern -> LIDENT LESSLESSGREATERGREATER
-- On BAR reduce production join_pattern -> LIDENT LESSLESSGREATERGREATER

State 451:
join_pattern -> LIDENT LESSLESS . join_args GREATERGREATER [ EQUAL BAR ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 452
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 453
-- On pattern shift to state 454
-- On mod_longident shift to state 303
-- On join_args shift to state 461
-- On constr_longident shift to state 305
-- On constant shift to state 307
-- On GREATERGREATER reduce production join_args -> 

State 452:
join_args -> simple_pattern . [ GREATERGREATER GREATER ]
pattern -> simple_pattern . [ COMMA COLONCOLON BAR AS ]
-- On GREATERGREATER reduce production join_args -> simple_pattern
-- On GREATER reduce production join_args -> simple_pattern
-- On COMMA reduce production pattern -> simple_pattern
-- On COLONCOLON reduce production pattern -> simple_pattern
-- On BAR reduce production pattern -> simple_pattern
-- On AS reduce production pattern -> simple_pattern

State 453:
join_args -> pattern_comma_list . [ GREATERGREATER GREATER ]
pattern -> pattern_comma_list . [ COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern_comma_list . COMMA pattern [ GREATERGREATER GREATER COMMA COLONCOLON BAR AS ]
-- On COMMA shift to state 299
-- On GREATERGREATER reduce production join_args -> pattern_comma_list
-- On GREATER reduce production join_args -> pattern_comma_list
-- On COMMA reduce production pattern -> pattern_comma_list
-- On COLONCOLON reduce production pattern -> pattern_comma_list
-- On BAR reduce production pattern -> pattern_comma_list
-- On AS reduce production pattern -> pattern_comma_list
** Conflict on COMMA

State 454:
pattern -> pattern . AS val_ident [ COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ GREATERGREATER GREATER COMMA COLONCOLON BAR AS ]
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459

State 455:
pattern_comma_list -> pattern COMMA . pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 456
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 456:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern COMMA pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On COLONCOLON shift to state 301
-- On WHEN reduce production pattern_comma_list -> pattern COMMA pattern
-- On MINUSGREATER reduce production pattern_comma_list -> pattern COMMA pattern
-- On GREATERGREATER reduce production pattern_comma_list -> pattern COMMA pattern
-- On GREATER reduce production pattern_comma_list -> pattern COMMA pattern
-- On EQUAL reduce production pattern_comma_list -> pattern COMMA pattern
-- On COMMA reduce production pattern_comma_list -> pattern COMMA pattern
-- On COLONEQUAL reduce production pattern_comma_list -> pattern COMMA pattern
-- On BAR reduce production pattern_comma_list -> pattern COMMA pattern
-- On AS reduce production pattern_comma_list -> pattern COMMA pattern

State 457:
pattern -> pattern BAR . pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 458
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 458:
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern BAR pattern . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On WHEN reduce production pattern -> pattern BAR pattern
-- On MINUSGREATER reduce production pattern -> pattern BAR pattern
-- On GREATERGREATER reduce production pattern -> pattern BAR pattern
-- On GREATER reduce production pattern -> pattern BAR pattern
-- On EQUAL reduce production pattern -> pattern BAR pattern
-- On COLONEQUAL reduce production pattern -> pattern BAR pattern
-- On BAR reduce production pattern -> pattern BAR pattern
-- On AS reduce production pattern -> pattern BAR pattern

State 459:
pattern -> pattern AS . val_ident [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 460

State 460:
pattern -> pattern AS val_ident . [ WHEN MINUSGREATER GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On WHEN reduce production pattern -> pattern AS val_ident
-- On MINUSGREATER reduce production pattern -> pattern AS val_ident
-- On GREATERGREATER reduce production pattern -> pattern AS val_ident
-- On GREATER reduce production pattern -> pattern AS val_ident
-- On EQUAL reduce production pattern -> pattern AS val_ident
-- On COMMA reduce production pattern -> pattern AS val_ident
-- On COLONEQUAL reduce production pattern -> pattern AS val_ident
-- On COLONCOLON reduce production pattern -> pattern AS val_ident
-- On BAR reduce production pattern -> pattern AS val_ident
-- On AS reduce production pattern -> pattern AS val_ident

State 461:
join_pattern -> LIDENT LESSLESS join_args . GREATERGREATER [ EQUAL BAR ]
-- On GREATERGREATER shift to state 462

State 462:
join_pattern -> LIDENT LESSLESS join_args GREATERGREATER . [ EQUAL BAR ]
-- On EQUAL reduce production join_pattern -> LIDENT LESSLESS join_args GREATERGREATER
-- On BAR reduce production join_pattern -> LIDENT LESSLESS join_args GREATERGREATER

State 463:
join_pattern -> LIDENT LESSGREATER . [ EQUAL BAR ]
-- On EQUAL reduce production join_pattern -> LIDENT LESSGREATER
-- On BAR reduce production join_pattern -> LIDENT LESSGREATER

State 464:
join_pattern -> LIDENT LESS . join_args GREATER [ EQUAL BAR ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 452
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 453
-- On pattern shift to state 454
-- On mod_longident shift to state 303
-- On join_args shift to state 465
-- On constr_longident shift to state 305
-- On constant shift to state 307
-- On GREATER reduce production join_args -> 

State 465:
join_pattern -> LIDENT LESS join_args . GREATER [ EQUAL BAR ]
-- On GREATER shift to state 466

State 466:
join_pattern -> LIDENT LESS join_args GREATER . [ EQUAL BAR ]
-- On EQUAL reduce production join_pattern -> LIDENT LESS join_args GREATER
-- On BAR reduce production join_pattern -> LIDENT LESS join_args GREATER

State 467:
def_binding -> join_pattern . EQUAL process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
join_pattern -> join_pattern . BAR join_pattern [ EQUAL BAR ]
-- On EQUAL shift to state 468
-- On BAR shift to state 597

State 468:
def_binding -> join_pattern EQUAL . process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 596
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On WHILE reduce production process -> 
-- On UIDENT reduce production process -> 
-- On TYPE reduce production process -> 
-- On TRY reduce production process -> 
-- On TRUE reduce production process -> 
-- On SUBTRACTIVE reduce production process -> 
-- On STRING reduce production process -> 
-- On SHARP reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On PREFIXOP reduce production process -> 
-- On PARSER reduce production process -> 
-- On OPEN reduce production process -> 
-- On NEW reduce production process -> 
-- On MODULE reduce production process -> 
-- On MATCH reduce production process -> 
-- On LPAREN reduce production process -> 
-- On LOC reduce production process -> 
-- On LIDENT reduce production process -> 
-- On LET reduce production process -> 
-- On LBRACKETLESS reduce production process -> 
-- On LBRACKETBAR reduce production process -> 
-- On LBRACKET reduce production process -> 
-- On LBRACELESS reduce production process -> 
-- On LBRACEBAR reduce production process -> 
-- On LBRACE reduce production process -> 
-- On LAZY reduce production process -> 
-- On INT reduce production process -> 
-- On IN reduce production process -> 
-- On IF reduce production process -> 
-- On FUNCTION reduce production process -> 
-- On FUN reduce production process -> 
-- On FOR reduce production process -> 
-- On FLOAT reduce production process -> 
-- On FALSE reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On EOF reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On CHAR reduce production process -> 
-- On BEGIN reduce production process -> 
-- On ASSERT reduce production process -> 
-- On AND reduce production process -> 
** Conflict on UIDENT TRUE STRING LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACEBAR INT IF FLOAT FALSE DEF CHAR BEGIN

State 469:
process -> DEF . def_bindings IN process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 470
-- On def_binding shift to state 595

State 470:
def_bindings -> def_bindings . AND def_binding [ IN AND ]
process -> DEF def_bindings . IN process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On IN shift to state 471
-- On AND shift to state 593

State 471:
process -> DEF def_bindings IN . process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 592
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On WHILE reduce production process -> 
-- On UIDENT reduce production process -> 
-- On TYPE reduce production process -> 
-- On TRY reduce production process -> 
-- On TRUE reduce production process -> 
-- On SUBTRACTIVE reduce production process -> 
-- On STRING reduce production process -> 
-- On SHARP reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On PREFIXOP reduce production process -> 
-- On PARSER reduce production process -> 
-- On OPEN reduce production process -> 
-- On NEW reduce production process -> 
-- On MODULE reduce production process -> 
-- On MATCH reduce production process -> 
-- On LPAREN reduce production process -> 
-- On LOC reduce production process -> 
-- On LIDENT reduce production process -> 
-- On LET reduce production process -> 
-- On LBRACKETLESS reduce production process -> 
-- On LBRACKETBAR reduce production process -> 
-- On LBRACKET reduce production process -> 
-- On LBRACELESS reduce production process -> 
-- On LBRACEBAR reduce production process -> 
-- On LBRACE reduce production process -> 
-- On LAZY reduce production process -> 
-- On INT reduce production process -> 
-- On IN reduce production process -> 
-- On IF reduce production process -> 
-- On FUNCTION reduce production process -> 
-- On FUN reduce production process -> 
-- On FOR reduce production process -> 
-- On FLOAT reduce production process -> 
-- On FALSE reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On EOF reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On CHAR reduce production process -> 
-- On BEGIN reduce production process -> 
-- On BARRBRACE reduce production process -> 
-- On ASSERT reduce production process -> 
-- On AND reduce production process -> 
** Conflict on UIDENT TRUE STRING LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACEBAR INT IF FLOAT FALSE DEF CHAR BEGIN

State 472:
process -> BEGIN . seq_expr END SEMI process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process -> BEGIN . seq_expr error [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 575
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 473:
expr -> ASSERT . simple_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 475
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 474:
simple_expr -> val_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> val_longident
-- On WITH reduce production simple_expr -> val_longident
-- On WHILE reduce production simple_expr -> val_longident
-- On VIRTUAL reduce production simple_expr -> val_longident
-- On VAL reduce production simple_expr -> val_longident
-- On UIDENT reduce production simple_expr -> val_longident
-- On TYPE reduce production simple_expr -> val_longident
-- On TRY reduce production simple_expr -> val_longident
-- On TRUE reduce production simple_expr -> val_longident
-- On SUBTRACTIVE reduce production simple_expr -> val_longident
-- On STRING reduce production simple_expr -> val_longident
-- On STAR reduce production simple_expr -> val_longident
-- On SHARP reduce production simple_expr -> val_longident
-- On SEMISEMI reduce production simple_expr -> val_longident
-- On SEMI reduce production simple_expr -> val_longident
-- On RPAREN reduce production simple_expr -> val_longident
-- On RBRACKET reduce production simple_expr -> val_longident
-- On RBRACE reduce production simple_expr -> val_longident
-- On QUESTION reduce production simple_expr -> val_longident
-- On PREFIXOP reduce production simple_expr -> val_longident
-- On PARSER reduce production simple_expr -> val_longident
-- On OR reduce production simple_expr -> val_longident
-- On OPEN reduce production simple_expr -> val_longident
-- On NEW reduce production simple_expr -> val_longident
-- On MODULE reduce production simple_expr -> val_longident
-- On METHOD reduce production simple_expr -> val_longident
-- On MATCH reduce production simple_expr -> val_longident
-- On LPAREN reduce production simple_expr -> val_longident
-- On LOC reduce production simple_expr -> val_longident
-- On LIDENT reduce production simple_expr -> val_longident
-- On LET reduce production simple_expr -> val_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> val_longident
-- On LESSLESS reduce production simple_expr -> val_longident
-- On LESSGREATER reduce production simple_expr -> val_longident
-- On LESS reduce production simple_expr -> val_longident
-- On LBRACKETLESS reduce production simple_expr -> val_longident
-- On LBRACKETBAR reduce production simple_expr -> val_longident
-- On LBRACKET reduce production simple_expr -> val_longident
-- On LBRACELESS reduce production simple_expr -> val_longident
-- On LBRACEBAR reduce production simple_expr -> val_longident
-- On LBRACE reduce production simple_expr -> val_longident
-- On LAZY reduce production simple_expr -> val_longident
-- On INT reduce production simple_expr -> val_longident
-- On INHERIT reduce production simple_expr -> val_longident
-- On INFIXOP4 reduce production simple_expr -> val_longident
-- On INFIXOP3 reduce production simple_expr -> val_longident
-- On INFIXOP2 reduce production simple_expr -> val_longident
-- On INFIXOP1 reduce production simple_expr -> val_longident
-- On INFIXOP0 reduce production simple_expr -> val_longident
-- On IN reduce production simple_expr -> val_longident
-- On IF reduce production simple_expr -> val_longident
-- On GREATERRBRACKET reduce production simple_expr -> val_longident
-- On GREATERRBRACE reduce production simple_expr -> val_longident
-- On GREATERGREATER reduce production simple_expr -> val_longident
-- On GREATER reduce production simple_expr -> val_longident
-- On FUNCTION reduce production simple_expr -> val_longident
-- On FUN reduce production simple_expr -> val_longident
-- On FOR reduce production simple_expr -> val_longident
-- On FLOAT reduce production simple_expr -> val_longident
-- On FALSE reduce production simple_expr -> val_longident
-- On EXTERNAL reduce production simple_expr -> val_longident
-- On EXCEPTION reduce production simple_expr -> val_longident
-- On EQUAL reduce production simple_expr -> val_longident
-- On EOF reduce production simple_expr -> val_longident
-- On END reduce production simple_expr -> val_longident
-- On ELSE reduce production simple_expr -> val_longident
-- On DOT reduce production simple_expr -> val_longident
-- On DONE reduce production simple_expr -> val_longident
-- On DEF reduce production simple_expr -> val_longident
-- On COMMA reduce production simple_expr -> val_longident
-- On COLONGREATER reduce production simple_expr -> val_longident
-- On COLONEQUAL reduce production simple_expr -> val_longident
-- On COLONCOLON reduce production simple_expr -> val_longident
-- On COLON reduce production simple_expr -> val_longident
-- On CLASS reduce production simple_expr -> val_longident
-- On CHAR reduce production simple_expr -> val_longident
-- On BEGIN reduce production simple_expr -> val_longident
-- On BARRBRACKET reduce production simple_expr -> val_longident
-- On BARBAR reduce production simple_expr -> val_longident
-- On BAR reduce production simple_expr -> val_longident
-- On ASSERT reduce production simple_expr -> val_longident
-- On AS reduce production simple_expr -> val_longident
-- On AND reduce production simple_expr -> val_longident
-- On AMPERSAND reduce production simple_expr -> val_longident
-- On AMPERAMPER reduce production simple_expr -> val_longident

State 475:
expr -> ASSERT simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 476
-- On DOT shift to state 479
-- On error reduce production expr -> ASSERT simple_expr
-- On WITH reduce production expr -> ASSERT simple_expr
-- On WHILE reduce production expr -> ASSERT simple_expr
-- On VIRTUAL reduce production expr -> ASSERT simple_expr
-- On VAL reduce production expr -> ASSERT simple_expr
-- On UIDENT reduce production expr -> ASSERT simple_expr
-- On TYPE reduce production expr -> ASSERT simple_expr
-- On TRY reduce production expr -> ASSERT simple_expr
-- On TRUE reduce production expr -> ASSERT simple_expr
-- On SUBTRACTIVE reduce production expr -> ASSERT simple_expr
-- On STRING reduce production expr -> ASSERT simple_expr
-- On STAR reduce production expr -> ASSERT simple_expr
-- On SEMISEMI reduce production expr -> ASSERT simple_expr
-- On SEMI reduce production expr -> ASSERT simple_expr
-- On RPAREN reduce production expr -> ASSERT simple_expr
-- On RBRACKET reduce production expr -> ASSERT simple_expr
-- On RBRACE reduce production expr -> ASSERT simple_expr
-- On QUESTION reduce production expr -> ASSERT simple_expr
-- On PREFIXOP reduce production expr -> ASSERT simple_expr
-- On PARSER reduce production expr -> ASSERT simple_expr
-- On OR reduce production expr -> ASSERT simple_expr
-- On OPEN reduce production expr -> ASSERT simple_expr
-- On NEW reduce production expr -> ASSERT simple_expr
-- On MODULE reduce production expr -> ASSERT simple_expr
-- On METHOD reduce production expr -> ASSERT simple_expr
-- On MATCH reduce production expr -> ASSERT simple_expr
-- On LPAREN reduce production expr -> ASSERT simple_expr
-- On LOC reduce production expr -> ASSERT simple_expr
-- On LIDENT reduce production expr -> ASSERT simple_expr
-- On LET reduce production expr -> ASSERT simple_expr
-- On LESSGREATER reduce production expr -> ASSERT simple_expr
-- On LESS reduce production expr -> ASSERT simple_expr
-- On LBRACKETLESS reduce production expr -> ASSERT simple_expr
-- On LBRACKETBAR reduce production expr -> ASSERT simple_expr
-- On LBRACKET reduce production expr -> ASSERT simple_expr
-- On LBRACELESS reduce production expr -> ASSERT simple_expr
-- On LBRACEBAR reduce production expr -> ASSERT simple_expr
-- On LBRACE reduce production expr -> ASSERT simple_expr
-- On LAZY reduce production expr -> ASSERT simple_expr
-- On INT reduce production expr -> ASSERT simple_expr
-- On INHERIT reduce production expr -> ASSERT simple_expr
-- On INFIXOP4 reduce production expr -> ASSERT simple_expr
-- On INFIXOP3 reduce production expr -> ASSERT simple_expr
-- On INFIXOP2 reduce production expr -> ASSERT simple_expr
-- On INFIXOP1 reduce production expr -> ASSERT simple_expr
-- On INFIXOP0 reduce production expr -> ASSERT simple_expr
-- On IN reduce production expr -> ASSERT simple_expr
-- On IF reduce production expr -> ASSERT simple_expr
-- On GREATERRBRACKET reduce production expr -> ASSERT simple_expr
-- On GREATERRBRACE reduce production expr -> ASSERT simple_expr
-- On GREATERGREATER reduce production expr -> ASSERT simple_expr
-- On GREATER reduce production expr -> ASSERT simple_expr
-- On FUNCTION reduce production expr -> ASSERT simple_expr
-- On FUN reduce production expr -> ASSERT simple_expr
-- On FOR reduce production expr -> ASSERT simple_expr
-- On FLOAT reduce production expr -> ASSERT simple_expr
-- On FALSE reduce production expr -> ASSERT simple_expr
-- On EXTERNAL reduce production expr -> ASSERT simple_expr
-- On EXCEPTION reduce production expr -> ASSERT simple_expr
-- On EQUAL reduce production expr -> ASSERT simple_expr
-- On EOF reduce production expr -> ASSERT simple_expr
-- On END reduce production expr -> ASSERT simple_expr
-- On ELSE reduce production expr -> ASSERT simple_expr
-- On DONE reduce production expr -> ASSERT simple_expr
-- On DEF reduce production expr -> ASSERT simple_expr
-- On COMMA reduce production expr -> ASSERT simple_expr
-- On COLONGREATER reduce production expr -> ASSERT simple_expr
-- On COLONEQUAL reduce production expr -> ASSERT simple_expr
-- On COLONCOLON reduce production expr -> ASSERT simple_expr
-- On COLON reduce production expr -> ASSERT simple_expr
-- On CLASS reduce production expr -> ASSERT simple_expr
-- On CHAR reduce production expr -> ASSERT simple_expr
-- On BEGIN reduce production expr -> ASSERT simple_expr
-- On BARRBRACKET reduce production expr -> ASSERT simple_expr
-- On BARBAR reduce production expr -> ASSERT simple_expr
-- On BAR reduce production expr -> ASSERT simple_expr
-- On ASSERT reduce production expr -> ASSERT simple_expr
-- On AND reduce production expr -> ASSERT simple_expr
-- On AMPERSAND reduce production expr -> ASSERT simple_expr
-- On AMPERAMPER reduce production expr -> ASSERT simple_expr

State 476:
simple_expr -> simple_expr SHARP . label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 477
-- On label shift to state 478

State 477:
label -> LIDENT . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production label -> LIDENT
-- On WITH reduce production label -> LIDENT
-- On WHILE reduce production label -> LIDENT
-- On VIRTUAL reduce production label -> LIDENT
-- On VAL reduce production label -> LIDENT
-- On UIDENT reduce production label -> LIDENT
-- On TYPE reduce production label -> LIDENT
-- On TRY reduce production label -> LIDENT
-- On TRUE reduce production label -> LIDENT
-- On SUBTRACTIVE reduce production label -> LIDENT
-- On STRING reduce production label -> LIDENT
-- On STAR reduce production label -> LIDENT
-- On SHARP reduce production label -> LIDENT
-- On SEMISEMI reduce production label -> LIDENT
-- On SEMI reduce production label -> LIDENT
-- On RPAREN reduce production label -> LIDENT
-- On RBRACKET reduce production label -> LIDENT
-- On RBRACE reduce production label -> LIDENT
-- On QUESTION reduce production label -> LIDENT
-- On PREFIXOP reduce production label -> LIDENT
-- On PARSER reduce production label -> LIDENT
-- On OR reduce production label -> LIDENT
-- On OPEN reduce production label -> LIDENT
-- On NEW reduce production label -> LIDENT
-- On MODULE reduce production label -> LIDENT
-- On METHOD reduce production label -> LIDENT
-- On MATCH reduce production label -> LIDENT
-- On LPAREN reduce production label -> LIDENT
-- On LOC reduce production label -> LIDENT
-- On LIDENT reduce production label -> LIDENT
-- On LET reduce production label -> LIDENT
-- On LESSLESSGREATERGREATER reduce production label -> LIDENT
-- On LESSLESS reduce production label -> LIDENT
-- On LESSGREATER reduce production label -> LIDENT
-- On LESS reduce production label -> LIDENT
-- On LBRACKETLESS reduce production label -> LIDENT
-- On LBRACKETBAR reduce production label -> LIDENT
-- On LBRACKET reduce production label -> LIDENT
-- On LBRACELESS reduce production label -> LIDENT
-- On LBRACEBAR reduce production label -> LIDENT
-- On LBRACE reduce production label -> LIDENT
-- On LAZY reduce production label -> LIDENT
-- On INT reduce production label -> LIDENT
-- On INHERIT reduce production label -> LIDENT
-- On INFIXOP4 reduce production label -> LIDENT
-- On INFIXOP3 reduce production label -> LIDENT
-- On INFIXOP2 reduce production label -> LIDENT
-- On INFIXOP1 reduce production label -> LIDENT
-- On INFIXOP0 reduce production label -> LIDENT
-- On IN reduce production label -> LIDENT
-- On IF reduce production label -> LIDENT
-- On GREATERRBRACKET reduce production label -> LIDENT
-- On GREATERRBRACE reduce production label -> LIDENT
-- On GREATERGREATER reduce production label -> LIDENT
-- On GREATER reduce production label -> LIDENT
-- On FUNCTION reduce production label -> LIDENT
-- On FUN reduce production label -> LIDENT
-- On FOR reduce production label -> LIDENT
-- On FLOAT reduce production label -> LIDENT
-- On FALSE reduce production label -> LIDENT
-- On EXTERNAL reduce production label -> LIDENT
-- On EXCEPTION reduce production label -> LIDENT
-- On EQUAL reduce production label -> LIDENT
-- On EOF reduce production label -> LIDENT
-- On END reduce production label -> LIDENT
-- On ELSE reduce production label -> LIDENT
-- On DOT reduce production label -> LIDENT
-- On DONE reduce production label -> LIDENT
-- On DEF reduce production label -> LIDENT
-- On COMMA reduce production label -> LIDENT
-- On COLONGREATER reduce production label -> LIDENT
-- On COLONEQUAL reduce production label -> LIDENT
-- On COLONCOLON reduce production label -> LIDENT
-- On COLON reduce production label -> LIDENT
-- On CLASS reduce production label -> LIDENT
-- On CHAR reduce production label -> LIDENT
-- On BEGIN reduce production label -> LIDENT
-- On BARRBRACKET reduce production label -> LIDENT
-- On BARBAR reduce production label -> LIDENT
-- On BAR reduce production label -> LIDENT
-- On ASSERT reduce production label -> LIDENT
-- On AS reduce production label -> LIDENT
-- On AND reduce production label -> LIDENT
-- On AMPERSAND reduce production label -> LIDENT
-- On AMPERAMPER reduce production label -> LIDENT

State 478:
simple_expr -> simple_expr SHARP label . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr SHARP label
-- On WITH reduce production simple_expr -> simple_expr SHARP label
-- On WHILE reduce production simple_expr -> simple_expr SHARP label
-- On VIRTUAL reduce production simple_expr -> simple_expr SHARP label
-- On VAL reduce production simple_expr -> simple_expr SHARP label
-- On UIDENT reduce production simple_expr -> simple_expr SHARP label
-- On TYPE reduce production simple_expr -> simple_expr SHARP label
-- On TRY reduce production simple_expr -> simple_expr SHARP label
-- On TRUE reduce production simple_expr -> simple_expr SHARP label
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr SHARP label
-- On STRING reduce production simple_expr -> simple_expr SHARP label
-- On STAR reduce production simple_expr -> simple_expr SHARP label
-- On SHARP reduce production simple_expr -> simple_expr SHARP label
-- On SEMISEMI reduce production simple_expr -> simple_expr SHARP label
-- On SEMI reduce production simple_expr -> simple_expr SHARP label
-- On RPAREN reduce production simple_expr -> simple_expr SHARP label
-- On RBRACKET reduce production simple_expr -> simple_expr SHARP label
-- On RBRACE reduce production simple_expr -> simple_expr SHARP label
-- On QUESTION reduce production simple_expr -> simple_expr SHARP label
-- On PREFIXOP reduce production simple_expr -> simple_expr SHARP label
-- On PARSER reduce production simple_expr -> simple_expr SHARP label
-- On OR reduce production simple_expr -> simple_expr SHARP label
-- On OPEN reduce production simple_expr -> simple_expr SHARP label
-- On NEW reduce production simple_expr -> simple_expr SHARP label
-- On MODULE reduce production simple_expr -> simple_expr SHARP label
-- On METHOD reduce production simple_expr -> simple_expr SHARP label
-- On MATCH reduce production simple_expr -> simple_expr SHARP label
-- On LPAREN reduce production simple_expr -> simple_expr SHARP label
-- On LOC reduce production simple_expr -> simple_expr SHARP label
-- On LIDENT reduce production simple_expr -> simple_expr SHARP label
-- On LET reduce production simple_expr -> simple_expr SHARP label
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr SHARP label
-- On LESSLESS reduce production simple_expr -> simple_expr SHARP label
-- On LESSGREATER reduce production simple_expr -> simple_expr SHARP label
-- On LESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKETLESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKETBAR reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKET reduce production simple_expr -> simple_expr SHARP label
-- On LBRACELESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACEBAR reduce production simple_expr -> simple_expr SHARP label
-- On LBRACE reduce production simple_expr -> simple_expr SHARP label
-- On LAZY reduce production simple_expr -> simple_expr SHARP label
-- On INT reduce production simple_expr -> simple_expr SHARP label
-- On INHERIT reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP4 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP3 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP2 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP1 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP0 reduce production simple_expr -> simple_expr SHARP label
-- On IN reduce production simple_expr -> simple_expr SHARP label
-- On IF reduce production simple_expr -> simple_expr SHARP label
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr SHARP label
-- On GREATERRBRACE reduce production simple_expr -> simple_expr SHARP label
-- On GREATERGREATER reduce production simple_expr -> simple_expr SHARP label
-- On GREATER reduce production simple_expr -> simple_expr SHARP label
-- On FUNCTION reduce production simple_expr -> simple_expr SHARP label
-- On FUN reduce production simple_expr -> simple_expr SHARP label
-- On FOR reduce production simple_expr -> simple_expr SHARP label
-- On FLOAT reduce production simple_expr -> simple_expr SHARP label
-- On FALSE reduce production simple_expr -> simple_expr SHARP label
-- On EXTERNAL reduce production simple_expr -> simple_expr SHARP label
-- On EXCEPTION reduce production simple_expr -> simple_expr SHARP label
-- On EQUAL reduce production simple_expr -> simple_expr SHARP label
-- On EOF reduce production simple_expr -> simple_expr SHARP label
-- On END reduce production simple_expr -> simple_expr SHARP label
-- On ELSE reduce production simple_expr -> simple_expr SHARP label
-- On DOT reduce production simple_expr -> simple_expr SHARP label
-- On DONE reduce production simple_expr -> simple_expr SHARP label
-- On DEF reduce production simple_expr -> simple_expr SHARP label
-- On COMMA reduce production simple_expr -> simple_expr SHARP label
-- On COLONGREATER reduce production simple_expr -> simple_expr SHARP label
-- On COLONEQUAL reduce production simple_expr -> simple_expr SHARP label
-- On COLONCOLON reduce production simple_expr -> simple_expr SHARP label
-- On COLON reduce production simple_expr -> simple_expr SHARP label
-- On CLASS reduce production simple_expr -> simple_expr SHARP label
-- On CHAR reduce production simple_expr -> simple_expr SHARP label
-- On BEGIN reduce production simple_expr -> simple_expr SHARP label
-- On BARRBRACKET reduce production simple_expr -> simple_expr SHARP label
-- On BARBAR reduce production simple_expr -> simple_expr SHARP label
-- On BAR reduce production simple_expr -> simple_expr SHARP label
-- On ASSERT reduce production simple_expr -> simple_expr SHARP label
-- On AS reduce production simple_expr -> simple_expr SHARP label
-- On AND reduce production simple_expr -> simple_expr SHARP label
-- On AMPERSAND reduce production simple_expr -> simple_expr SHARP label
-- On AMPERAMPER reduce production simple_expr -> simple_expr SHARP label

State 479:
simple_expr -> simple_expr DOT . label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 480
-- On LIDENT shift to state 334
-- On LBRACKET shift to state 571
-- On mod_longident shift to state 335
-- On label_longident shift to state 574

State 480:
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 569
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 481:
expr -> simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . simple_expr_list [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESS list_of_exprs GREATERGREATER [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESS list_of_exprs error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESSGREATERGREATER [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT label_longident LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On SHARP shift to state 476
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LESSLESSGREATERGREATER shift to state 482
-- On LESSLESS shift to state 483
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DOT shift to state 550
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr_list shift to state 566
-- On simple_expr shift to state 568
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production expr -> simple_expr
-- On WITH reduce production expr -> simple_expr
-- On WHILE reduce production expr -> simple_expr
-- On VIRTUAL reduce production expr -> simple_expr
-- On VAL reduce production expr -> simple_expr
-- On UIDENT reduce production expr -> simple_expr
-- On TYPE reduce production expr -> simple_expr
-- On TRY reduce production expr -> simple_expr
-- On TRUE reduce production expr -> simple_expr
-- On SUBTRACTIVE reduce production expr -> simple_expr
-- On STRING reduce production expr -> simple_expr
-- On STAR reduce production expr -> simple_expr
-- On SHARP reduce production expr -> simple_expr
-- On SEMISEMI reduce production expr -> simple_expr
-- On SEMI reduce production expr -> simple_expr
-- On RPAREN reduce production expr -> simple_expr
-- On RBRACKET reduce production expr -> simple_expr
-- On RBRACE reduce production expr -> simple_expr
-- On QUESTION reduce production expr -> simple_expr
-- On PREFIXOP reduce production expr -> simple_expr
-- On PARSER reduce production expr -> simple_expr
-- On OR reduce production expr -> simple_expr
-- On OPEN reduce production expr -> simple_expr
-- On NEW reduce production expr -> simple_expr
-- On MODULE reduce production expr -> simple_expr
-- On METHOD reduce production expr -> simple_expr
-- On MATCH reduce production expr -> simple_expr
-- On LPAREN reduce production expr -> simple_expr
-- On LOC reduce production expr -> simple_expr
-- On LIDENT reduce production expr -> simple_expr
-- On LET reduce production expr -> simple_expr
-- On LESSGREATER reduce production expr -> simple_expr
-- On LESS reduce production expr -> simple_expr
-- On LBRACKETLESS reduce production expr -> simple_expr
-- On LBRACKETBAR reduce production expr -> simple_expr
-- On LBRACKET reduce production expr -> simple_expr
-- On LBRACELESS reduce production expr -> simple_expr
-- On LBRACEBAR reduce production expr -> simple_expr
-- On LBRACE reduce production expr -> simple_expr
-- On LAZY reduce production expr -> simple_expr
-- On INT reduce production expr -> simple_expr
-- On INHERIT reduce production expr -> simple_expr
-- On INFIXOP4 reduce production expr -> simple_expr
-- On INFIXOP3 reduce production expr -> simple_expr
-- On INFIXOP2 reduce production expr -> simple_expr
-- On INFIXOP1 reduce production expr -> simple_expr
-- On INFIXOP0 reduce production expr -> simple_expr
-- On IN reduce production expr -> simple_expr
-- On IF reduce production expr -> simple_expr
-- On GREATERRBRACKET reduce production expr -> simple_expr
-- On GREATERRBRACE reduce production expr -> simple_expr
-- On GREATERGREATER reduce production expr -> simple_expr
-- On GREATER reduce production expr -> simple_expr
-- On FUNCTION reduce production expr -> simple_expr
-- On FUN reduce production expr -> simple_expr
-- On FOR reduce production expr -> simple_expr
-- On FLOAT reduce production expr -> simple_expr
-- On FALSE reduce production expr -> simple_expr
-- On EXTERNAL reduce production expr -> simple_expr
-- On EXCEPTION reduce production expr -> simple_expr
-- On EQUAL reduce production expr -> simple_expr
-- On EOF reduce production expr -> simple_expr
-- On END reduce production expr -> simple_expr
-- On ELSE reduce production expr -> simple_expr
-- On DONE reduce production expr -> simple_expr
-- On DEF reduce production expr -> simple_expr
-- On COMMA reduce production expr -> simple_expr
-- On COLONGREATER reduce production expr -> simple_expr
-- On COLONEQUAL reduce production expr -> simple_expr
-- On COLONCOLON reduce production expr -> simple_expr
-- On COLON reduce production expr -> simple_expr
-- On CLASS reduce production expr -> simple_expr
-- On CHAR reduce production expr -> simple_expr
-- On BEGIN reduce production expr -> simple_expr
-- On BARRBRACKET reduce production expr -> simple_expr
-- On BARBAR reduce production expr -> simple_expr
-- On BAR reduce production expr -> simple_expr
-- On ASSERT reduce production expr -> simple_expr
-- On AND reduce production expr -> simple_expr
-- On AMPERSAND reduce production expr -> simple_expr
-- On AMPERAMPER reduce production expr -> simple_expr
** Conflict on UIDENT TRUE STRING SHARP PREFIXOP NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 482:
expr -> simple_expr LESSLESSGREATERGREATER . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On WITH reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On WHILE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On VIRTUAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On VAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On UIDENT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TYPE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TRY reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TRUE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On STRING reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On STAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SHARP reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SEMISEMI reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SEMI reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On RPAREN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On RBRACKET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On RBRACE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On QUESTION reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On PREFIXOP reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On PARSER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On OR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On OPEN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On NEW reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On MODULE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On METHOD reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On MATCH reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LPAREN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LOC reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LIDENT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LESSGREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACELESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LAZY reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INHERIT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On IN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On IF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On GREATERRBRACKET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On GREATERRBRACE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On GREATERGREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On GREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FUNCTION reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FUN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FOR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FLOAT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FALSE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EXTERNAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EXCEPTION reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EQUAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EOF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On END reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On ELSE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On DONE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On DEF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COMMA reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLONGREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLONCOLON reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLON reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On CLASS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On CHAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BEGIN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BARRBRACKET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BARBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On ASSERT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AND reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AMPERSAND reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESSGREATERGREATER

State 483:
expr -> simple_expr LESSLESS . list_of_exprs GREATERGREATER [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr LESSLESS . list_of_exprs error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 484
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On list_of_exprs shift to state 546
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 549
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 484:
constr_longident -> LPAREN . RPAREN [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
list_of_exprs -> LPAREN . expr RPAREN [ error GREATERGREATER ]
simple_expr -> LPAREN . seq_expr RPAREN [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr error [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . seq_expr type_constraint RPAREN [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN . SHARP label RPAREN [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
val_ident -> LPAREN . operator RPAREN [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER FLOAT FALSE EQUAL DOT COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 30
-- On STRING shift to state 21
-- On STAR shift to state 41
-- On SHARP shift to state 485
-- On RPAREN shift to state 46
-- On PREFIXOP shift to state 488
-- On PARSER shift to state 31
-- On OR shift to state 44
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LESSGREATER shift to state 48
-- On LESS shift to state 49
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On INFIXOP4 shift to state 90
-- On INFIXOP3 shift to state 91
-- On INFIXOP2 shift to state 92
-- On INFIXOP1 shift to state 93
-- On INFIXOP0 shift to state 94
-- On IF shift to state 417
-- On GREATER shift to state 95
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EQUAL shift to state 96
-- On DEF shift to state 448
-- On COLONEQUAL shift to state 97
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On BARBAR shift to state 98
-- On ASSERT shift to state 473
-- On AMPERSAND shift to state 99
-- On AMPERAMPER shift to state 100
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 492
-- On operator shift to state 101
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 541
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 485:
simple_expr -> LPAREN SHARP . label RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 141
-- On label shift to state 486

State 486:
simple_expr -> LPAREN SHARP label . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 487

State 487:
simple_expr -> LPAREN SHARP label RPAREN . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On WITH reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On WHILE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On VIRTUAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On VAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TYPE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TRY reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TRUE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On STRING reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On STAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SHARP reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SEMI reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On RPAREN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On RBRACKET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On RBRACE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On QUESTION reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On PARSER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On OR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On OPEN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On NEW reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On MODULE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On METHOD reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On MATCH reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LOC reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LAZY reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INHERIT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On IN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On IF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On GREATERRBRACKET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On GREATERRBRACE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On GREATERGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On GREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FUN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FOR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FALSE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EOF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On END reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On ELSE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DOT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DONE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DEF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COMMA reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLONGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLON reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On CLASS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On CHAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BARRBRACKET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AND reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN SHARP label RPAREN

State 488:
operator -> PREFIXOP . [ RPAREN ]
simple_expr -> PREFIXOP . simple_expr [ error UIDENT TRUE SUBTRACTIVE STRING STAR SHARP SEMI RPAREN PREFIXOP OR NEW LPAREN LOC LIDENT LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER FLOAT FALSE EQUAL DOT COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CHAR BEGIN BARBAR AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 489
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On RPAREN reduce production operator -> PREFIXOP

State 489:
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> PREFIXOP simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> PREFIXOP simple_expr
-- On WITH reduce production simple_expr -> PREFIXOP simple_expr
-- On WHILE reduce production simple_expr -> PREFIXOP simple_expr
-- On VIRTUAL reduce production simple_expr -> PREFIXOP simple_expr
-- On VAL reduce production simple_expr -> PREFIXOP simple_expr
-- On UIDENT reduce production simple_expr -> PREFIXOP simple_expr
-- On TYPE reduce production simple_expr -> PREFIXOP simple_expr
-- On TRY reduce production simple_expr -> PREFIXOP simple_expr
-- On TRUE reduce production simple_expr -> PREFIXOP simple_expr
-- On SUBTRACTIVE reduce production simple_expr -> PREFIXOP simple_expr
-- On STRING reduce production simple_expr -> PREFIXOP simple_expr
-- On STAR reduce production simple_expr -> PREFIXOP simple_expr
-- On SHARP reduce production simple_expr -> PREFIXOP simple_expr
-- On SEMISEMI reduce production simple_expr -> PREFIXOP simple_expr
-- On SEMI reduce production simple_expr -> PREFIXOP simple_expr
-- On RPAREN reduce production simple_expr -> PREFIXOP simple_expr
-- On RBRACKET reduce production simple_expr -> PREFIXOP simple_expr
-- On RBRACE reduce production simple_expr -> PREFIXOP simple_expr
-- On QUESTION reduce production simple_expr -> PREFIXOP simple_expr
-- On PREFIXOP reduce production simple_expr -> PREFIXOP simple_expr
-- On PARSER reduce production simple_expr -> PREFIXOP simple_expr
-- On OR reduce production simple_expr -> PREFIXOP simple_expr
-- On OPEN reduce production simple_expr -> PREFIXOP simple_expr
-- On NEW reduce production simple_expr -> PREFIXOP simple_expr
-- On MODULE reduce production simple_expr -> PREFIXOP simple_expr
-- On METHOD reduce production simple_expr -> PREFIXOP simple_expr
-- On MATCH reduce production simple_expr -> PREFIXOP simple_expr
-- On LPAREN reduce production simple_expr -> PREFIXOP simple_expr
-- On LOC reduce production simple_expr -> PREFIXOP simple_expr
-- On LIDENT reduce production simple_expr -> PREFIXOP simple_expr
-- On LET reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSLESSGREATERGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSLESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On LESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKETLESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKETBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKET reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACELESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACEBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACE reduce production simple_expr -> PREFIXOP simple_expr
-- On LAZY reduce production simple_expr -> PREFIXOP simple_expr
-- On INT reduce production simple_expr -> PREFIXOP simple_expr
-- On INHERIT reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP4 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP3 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP2 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP1 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP0 reduce production simple_expr -> PREFIXOP simple_expr
-- On IN reduce production simple_expr -> PREFIXOP simple_expr
-- On IF reduce production simple_expr -> PREFIXOP simple_expr
-- On GREATERRBRACKET reduce production simple_expr -> PREFIXOP simple_expr
-- On GREATERRBRACE reduce production simple_expr -> PREFIXOP simple_expr
-- On GREATERGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On GREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On FUNCTION reduce production simple_expr -> PREFIXOP simple_expr
-- On FUN reduce production simple_expr -> PREFIXOP simple_expr
-- On FOR reduce production simple_expr -> PREFIXOP simple_expr
-- On FLOAT reduce production simple_expr -> PREFIXOP simple_expr
-- On FALSE reduce production simple_expr -> PREFIXOP simple_expr
-- On EXTERNAL reduce production simple_expr -> PREFIXOP simple_expr
-- On EXCEPTION reduce production simple_expr -> PREFIXOP simple_expr
-- On EQUAL reduce production simple_expr -> PREFIXOP simple_expr
-- On EOF reduce production simple_expr -> PREFIXOP simple_expr
-- On END reduce production simple_expr -> PREFIXOP simple_expr
-- On ELSE reduce production simple_expr -> PREFIXOP simple_expr
-- On DOT reduce production simple_expr -> PREFIXOP simple_expr
-- On DONE reduce production simple_expr -> PREFIXOP simple_expr
-- On DEF reduce production simple_expr -> PREFIXOP simple_expr
-- On COMMA reduce production simple_expr -> PREFIXOP simple_expr
-- On COLONGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On COLONEQUAL reduce production simple_expr -> PREFIXOP simple_expr
-- On COLONCOLON reduce production simple_expr -> PREFIXOP simple_expr
-- On COLON reduce production simple_expr -> PREFIXOP simple_expr
-- On CLASS reduce production simple_expr -> PREFIXOP simple_expr
-- On CHAR reduce production simple_expr -> PREFIXOP simple_expr
-- On BEGIN reduce production simple_expr -> PREFIXOP simple_expr
-- On BARRBRACKET reduce production simple_expr -> PREFIXOP simple_expr
-- On BARBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On BAR reduce production simple_expr -> PREFIXOP simple_expr
-- On ASSERT reduce production simple_expr -> PREFIXOP simple_expr
-- On AS reduce production simple_expr -> PREFIXOP simple_expr
-- On AND reduce production simple_expr -> PREFIXOP simple_expr
-- On AMPERSAND reduce production simple_expr -> PREFIXOP simple_expr
-- On AMPERAMPER reduce production simple_expr -> PREFIXOP simple_expr

State 490:
simple_expr -> constr_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> constr_longident
-- On WITH reduce production simple_expr -> constr_longident
-- On WHILE reduce production simple_expr -> constr_longident
-- On VIRTUAL reduce production simple_expr -> constr_longident
-- On VAL reduce production simple_expr -> constr_longident
-- On UIDENT reduce production simple_expr -> constr_longident
-- On TYPE reduce production simple_expr -> constr_longident
-- On TRY reduce production simple_expr -> constr_longident
-- On TRUE reduce production simple_expr -> constr_longident
-- On SUBTRACTIVE reduce production simple_expr -> constr_longident
-- On STRING reduce production simple_expr -> constr_longident
-- On STAR reduce production simple_expr -> constr_longident
-- On SHARP reduce production simple_expr -> constr_longident
-- On SEMISEMI reduce production simple_expr -> constr_longident
-- On SEMI reduce production simple_expr -> constr_longident
-- On RPAREN reduce production simple_expr -> constr_longident
-- On RBRACKET reduce production simple_expr -> constr_longident
-- On RBRACE reduce production simple_expr -> constr_longident
-- On QUESTION reduce production simple_expr -> constr_longident
-- On PREFIXOP reduce production simple_expr -> constr_longident
-- On PARSER reduce production simple_expr -> constr_longident
-- On OR reduce production simple_expr -> constr_longident
-- On OPEN reduce production simple_expr -> constr_longident
-- On NEW reduce production simple_expr -> constr_longident
-- On MODULE reduce production simple_expr -> constr_longident
-- On METHOD reduce production simple_expr -> constr_longident
-- On MATCH reduce production simple_expr -> constr_longident
-- On LPAREN reduce production simple_expr -> constr_longident
-- On LOC reduce production simple_expr -> constr_longident
-- On LIDENT reduce production simple_expr -> constr_longident
-- On LET reduce production simple_expr -> constr_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constr_longident
-- On LESSLESS reduce production simple_expr -> constr_longident
-- On LESSGREATER reduce production simple_expr -> constr_longident
-- On LESS reduce production simple_expr -> constr_longident
-- On LBRACKETLESS reduce production simple_expr -> constr_longident
-- On LBRACKETBAR reduce production simple_expr -> constr_longident
-- On LBRACKET reduce production simple_expr -> constr_longident
-- On LBRACELESS reduce production simple_expr -> constr_longident
-- On LBRACEBAR reduce production simple_expr -> constr_longident
-- On LBRACE reduce production simple_expr -> constr_longident
-- On LAZY reduce production simple_expr -> constr_longident
-- On INT reduce production simple_expr -> constr_longident
-- On INHERIT reduce production simple_expr -> constr_longident
-- On INFIXOP4 reduce production simple_expr -> constr_longident
-- On INFIXOP3 reduce production simple_expr -> constr_longident
-- On INFIXOP2 reduce production simple_expr -> constr_longident
-- On INFIXOP1 reduce production simple_expr -> constr_longident
-- On INFIXOP0 reduce production simple_expr -> constr_longident
-- On IN reduce production simple_expr -> constr_longident
-- On IF reduce production simple_expr -> constr_longident
-- On GREATERRBRACKET reduce production simple_expr -> constr_longident
-- On GREATERRBRACE reduce production simple_expr -> constr_longident
-- On GREATERGREATER reduce production simple_expr -> constr_longident
-- On GREATER reduce production simple_expr -> constr_longident
-- On FUNCTION reduce production simple_expr -> constr_longident
-- On FUN reduce production simple_expr -> constr_longident
-- On FOR reduce production simple_expr -> constr_longident
-- On FLOAT reduce production simple_expr -> constr_longident
-- On FALSE reduce production simple_expr -> constr_longident
-- On EXTERNAL reduce production simple_expr -> constr_longident
-- On EXCEPTION reduce production simple_expr -> constr_longident
-- On EQUAL reduce production simple_expr -> constr_longident
-- On EOF reduce production simple_expr -> constr_longident
-- On END reduce production simple_expr -> constr_longident
-- On ELSE reduce production simple_expr -> constr_longident
-- On DOT reduce production simple_expr -> constr_longident
-- On DONE reduce production simple_expr -> constr_longident
-- On DEF reduce production simple_expr -> constr_longident
-- On COMMA reduce production simple_expr -> constr_longident
-- On COLONGREATER reduce production simple_expr -> constr_longident
-- On COLONEQUAL reduce production simple_expr -> constr_longident
-- On COLONCOLON reduce production simple_expr -> constr_longident
-- On COLON reduce production simple_expr -> constr_longident
-- On CLASS reduce production simple_expr -> constr_longident
-- On CHAR reduce production simple_expr -> constr_longident
-- On BEGIN reduce production simple_expr -> constr_longident
-- On BARRBRACKET reduce production simple_expr -> constr_longident
-- On BARBAR reduce production simple_expr -> constr_longident
-- On BAR reduce production simple_expr -> constr_longident
-- On ASSERT reduce production simple_expr -> constr_longident
-- On AS reduce production simple_expr -> constr_longident
-- On AND reduce production simple_expr -> constr_longident
-- On AMPERSAND reduce production simple_expr -> constr_longident
-- On AMPERAMPER reduce production simple_expr -> constr_longident

State 491:
simple_expr -> constant . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> constant
-- On WITH reduce production simple_expr -> constant
-- On WHILE reduce production simple_expr -> constant
-- On VIRTUAL reduce production simple_expr -> constant
-- On VAL reduce production simple_expr -> constant
-- On UIDENT reduce production simple_expr -> constant
-- On TYPE reduce production simple_expr -> constant
-- On TRY reduce production simple_expr -> constant
-- On TRUE reduce production simple_expr -> constant
-- On SUBTRACTIVE reduce production simple_expr -> constant
-- On STRING reduce production simple_expr -> constant
-- On STAR reduce production simple_expr -> constant
-- On SHARP reduce production simple_expr -> constant
-- On SEMISEMI reduce production simple_expr -> constant
-- On SEMI reduce production simple_expr -> constant
-- On RPAREN reduce production simple_expr -> constant
-- On RBRACKET reduce production simple_expr -> constant
-- On RBRACE reduce production simple_expr -> constant
-- On QUESTION reduce production simple_expr -> constant
-- On PREFIXOP reduce production simple_expr -> constant
-- On PARSER reduce production simple_expr -> constant
-- On OR reduce production simple_expr -> constant
-- On OPEN reduce production simple_expr -> constant
-- On NEW reduce production simple_expr -> constant
-- On MODULE reduce production simple_expr -> constant
-- On METHOD reduce production simple_expr -> constant
-- On MATCH reduce production simple_expr -> constant
-- On LPAREN reduce production simple_expr -> constant
-- On LOC reduce production simple_expr -> constant
-- On LIDENT reduce production simple_expr -> constant
-- On LET reduce production simple_expr -> constant
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constant
-- On LESSLESS reduce production simple_expr -> constant
-- On LESSGREATER reduce production simple_expr -> constant
-- On LESS reduce production simple_expr -> constant
-- On LBRACKETLESS reduce production simple_expr -> constant
-- On LBRACKETBAR reduce production simple_expr -> constant
-- On LBRACKET reduce production simple_expr -> constant
-- On LBRACELESS reduce production simple_expr -> constant
-- On LBRACEBAR reduce production simple_expr -> constant
-- On LBRACE reduce production simple_expr -> constant
-- On LAZY reduce production simple_expr -> constant
-- On INT reduce production simple_expr -> constant
-- On INHERIT reduce production simple_expr -> constant
-- On INFIXOP4 reduce production simple_expr -> constant
-- On INFIXOP3 reduce production simple_expr -> constant
-- On INFIXOP2 reduce production simple_expr -> constant
-- On INFIXOP1 reduce production simple_expr -> constant
-- On INFIXOP0 reduce production simple_expr -> constant
-- On IN reduce production simple_expr -> constant
-- On IF reduce production simple_expr -> constant
-- On GREATERRBRACKET reduce production simple_expr -> constant
-- On GREATERRBRACE reduce production simple_expr -> constant
-- On GREATERGREATER reduce production simple_expr -> constant
-- On GREATER reduce production simple_expr -> constant
-- On FUNCTION reduce production simple_expr -> constant
-- On FUN reduce production simple_expr -> constant
-- On FOR reduce production simple_expr -> constant
-- On FLOAT reduce production simple_expr -> constant
-- On FALSE reduce production simple_expr -> constant
-- On EXTERNAL reduce production simple_expr -> constant
-- On EXCEPTION reduce production simple_expr -> constant
-- On EQUAL reduce production simple_expr -> constant
-- On EOF reduce production simple_expr -> constant
-- On END reduce production simple_expr -> constant
-- On ELSE reduce production simple_expr -> constant
-- On DOT reduce production simple_expr -> constant
-- On DONE reduce production simple_expr -> constant
-- On DEF reduce production simple_expr -> constant
-- On COMMA reduce production simple_expr -> constant
-- On COLONGREATER reduce production simple_expr -> constant
-- On COLONEQUAL reduce production simple_expr -> constant
-- On COLONCOLON reduce production simple_expr -> constant
-- On COLON reduce production simple_expr -> constant
-- On CLASS reduce production simple_expr -> constant
-- On CHAR reduce production simple_expr -> constant
-- On BEGIN reduce production simple_expr -> constant
-- On BARRBRACKET reduce production simple_expr -> constant
-- On BARBAR reduce production simple_expr -> constant
-- On BAR reduce production simple_expr -> constant
-- On ASSERT reduce production simple_expr -> constant
-- On AS reduce production simple_expr -> constant
-- On AND reduce production simple_expr -> constant
-- On AMPERSAND reduce production simple_expr -> constant
-- On AMPERAMPER reduce production simple_expr -> constant

State 492:
simple_expr -> LPAREN seq_expr . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 493
-- On RPAREN shift to state 494
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On type_constraint shift to state 495

State 493:
simple_expr -> LPAREN seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LPAREN seq_expr error
-- On WITH reduce production simple_expr -> LPAREN seq_expr error
-- On WHILE reduce production simple_expr -> LPAREN seq_expr error
-- On VIRTUAL reduce production simple_expr -> LPAREN seq_expr error
-- On VAL reduce production simple_expr -> LPAREN seq_expr error
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr error
-- On TYPE reduce production simple_expr -> LPAREN seq_expr error
-- On TRY reduce production simple_expr -> LPAREN seq_expr error
-- On TRUE reduce production simple_expr -> LPAREN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr error
-- On STRING reduce production simple_expr -> LPAREN seq_expr error
-- On STAR reduce production simple_expr -> LPAREN seq_expr error
-- On SHARP reduce production simple_expr -> LPAREN seq_expr error
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr error
-- On SEMI reduce production simple_expr -> LPAREN seq_expr error
-- On RPAREN reduce production simple_expr -> LPAREN seq_expr error
-- On RBRACKET reduce production simple_expr -> LPAREN seq_expr error
-- On RBRACE reduce production simple_expr -> LPAREN seq_expr error
-- On QUESTION reduce production simple_expr -> LPAREN seq_expr error
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr error
-- On PARSER reduce production simple_expr -> LPAREN seq_expr error
-- On OR reduce production simple_expr -> LPAREN seq_expr error
-- On OPEN reduce production simple_expr -> LPAREN seq_expr error
-- On NEW reduce production simple_expr -> LPAREN seq_expr error
-- On MODULE reduce production simple_expr -> LPAREN seq_expr error
-- On METHOD reduce production simple_expr -> LPAREN seq_expr error
-- On MATCH reduce production simple_expr -> LPAREN seq_expr error
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr error
-- On LOC reduce production simple_expr -> LPAREN seq_expr error
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr error
-- On LET reduce production simple_expr -> LPAREN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr error
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On LESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr error
-- On LAZY reduce production simple_expr -> LPAREN seq_expr error
-- On INT reduce production simple_expr -> LPAREN seq_expr error
-- On INHERIT reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr error
-- On IN reduce production simple_expr -> LPAREN seq_expr error
-- On IF reduce production simple_expr -> LPAREN seq_expr error
-- On GREATERRBRACKET reduce production simple_expr -> LPAREN seq_expr error
-- On GREATERRBRACE reduce production simple_expr -> LPAREN seq_expr error
-- On GREATERGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On GREATER reduce production simple_expr -> LPAREN seq_expr error
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr error
-- On FUN reduce production simple_expr -> LPAREN seq_expr error
-- On FOR reduce production simple_expr -> LPAREN seq_expr error
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr error
-- On FALSE reduce production simple_expr -> LPAREN seq_expr error
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr error
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr error
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr error
-- On EOF reduce production simple_expr -> LPAREN seq_expr error
-- On END reduce production simple_expr -> LPAREN seq_expr error
-- On ELSE reduce production simple_expr -> LPAREN seq_expr error
-- On DOT reduce production simple_expr -> LPAREN seq_expr error
-- On DONE reduce production simple_expr -> LPAREN seq_expr error
-- On DEF reduce production simple_expr -> LPAREN seq_expr error
-- On COMMA reduce production simple_expr -> LPAREN seq_expr error
-- On COLONGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr error
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr error
-- On COLON reduce production simple_expr -> LPAREN seq_expr error
-- On CLASS reduce production simple_expr -> LPAREN seq_expr error
-- On CHAR reduce production simple_expr -> LPAREN seq_expr error
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr error
-- On BARRBRACKET reduce production simple_expr -> LPAREN seq_expr error
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr error
-- On BAR reduce production simple_expr -> LPAREN seq_expr error
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr error
-- On AS reduce production simple_expr -> LPAREN seq_expr error
-- On AND reduce production simple_expr -> LPAREN seq_expr error
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr error

State 494:
simple_expr -> LPAREN seq_expr RPAREN . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On WITH reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On VIRTUAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On VAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On RPAREN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On RBRACKET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On RBRACE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On QUESTION reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On METHOD reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INHERIT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On GREATERRBRACKET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On GREATERRBRACE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On GREATERGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DONE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLONGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLON reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BARRBRACKET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr RPAREN

State 495:
simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 496

State 496:
simple_expr -> LPAREN seq_expr type_constraint RPAREN . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On WITH reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On WHILE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On VIRTUAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On VAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TYPE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TRY reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TRUE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On STRING reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On STAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SHARP reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SEMI reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On RPAREN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On RBRACKET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On RBRACE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On QUESTION reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On PARSER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On OR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On OPEN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On NEW reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On MODULE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On METHOD reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On MATCH reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LOC reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LAZY reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INHERIT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On IN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On IF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On GREATERRBRACKET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On GREATERRBRACE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On GREATERGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On GREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FUN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FOR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FALSE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EOF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On END reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On ELSE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DOT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DONE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DEF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COMMA reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLONGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLON reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On CLASS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On CHAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BARRBRACKET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AND reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN

State 497:
expr -> label . LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 498

State 498:
expr -> label LESSMINUS . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 536
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 499:
expr -> expr_comma_list . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On COMMA shift to state 500
-- On error reduce production expr -> expr_comma_list
-- On WITH reduce production expr -> expr_comma_list
-- On WHILE reduce production expr -> expr_comma_list
-- On VIRTUAL reduce production expr -> expr_comma_list
-- On VAL reduce production expr -> expr_comma_list
-- On UIDENT reduce production expr -> expr_comma_list
-- On TYPE reduce production expr -> expr_comma_list
-- On TRY reduce production expr -> expr_comma_list
-- On TRUE reduce production expr -> expr_comma_list
-- On SUBTRACTIVE reduce production expr -> expr_comma_list
-- On STRING reduce production expr -> expr_comma_list
-- On STAR reduce production expr -> expr_comma_list
-- On SHARP reduce production expr -> expr_comma_list
-- On SEMISEMI reduce production expr -> expr_comma_list
-- On SEMI reduce production expr -> expr_comma_list
-- On RPAREN reduce production expr -> expr_comma_list
-- On RBRACKET reduce production expr -> expr_comma_list
-- On RBRACE reduce production expr -> expr_comma_list
-- On QUESTION reduce production expr -> expr_comma_list
-- On PREFIXOP reduce production expr -> expr_comma_list
-- On PARSER reduce production expr -> expr_comma_list
-- On OR reduce production expr -> expr_comma_list
-- On OPEN reduce production expr -> expr_comma_list
-- On NEW reduce production expr -> expr_comma_list
-- On MODULE reduce production expr -> expr_comma_list
-- On METHOD reduce production expr -> expr_comma_list
-- On MATCH reduce production expr -> expr_comma_list
-- On LPAREN reduce production expr -> expr_comma_list
-- On LOC reduce production expr -> expr_comma_list
-- On LIDENT reduce production expr -> expr_comma_list
-- On LET reduce production expr -> expr_comma_list
-- On LESSGREATER reduce production expr -> expr_comma_list
-- On LESS reduce production expr -> expr_comma_list
-- On LBRACKETLESS reduce production expr -> expr_comma_list
-- On LBRACKETBAR reduce production expr -> expr_comma_list
-- On LBRACKET reduce production expr -> expr_comma_list
-- On LBRACELESS reduce production expr -> expr_comma_list
-- On LBRACEBAR reduce production expr -> expr_comma_list
-- On LBRACE reduce production expr -> expr_comma_list
-- On LAZY reduce production expr -> expr_comma_list
-- On INT reduce production expr -> expr_comma_list
-- On INHERIT reduce production expr -> expr_comma_list
-- On INFIXOP4 reduce production expr -> expr_comma_list
-- On INFIXOP3 reduce production expr -> expr_comma_list
-- On INFIXOP2 reduce production expr -> expr_comma_list
-- On INFIXOP1 reduce production expr -> expr_comma_list
-- On INFIXOP0 reduce production expr -> expr_comma_list
-- On IN reduce production expr -> expr_comma_list
-- On IF reduce production expr -> expr_comma_list
-- On GREATERRBRACKET reduce production expr -> expr_comma_list
-- On GREATERRBRACE reduce production expr -> expr_comma_list
-- On GREATERGREATER reduce production expr -> expr_comma_list
-- On GREATER reduce production expr -> expr_comma_list
-- On FUNCTION reduce production expr -> expr_comma_list
-- On FUN reduce production expr -> expr_comma_list
-- On FOR reduce production expr -> expr_comma_list
-- On FLOAT reduce production expr -> expr_comma_list
-- On FALSE reduce production expr -> expr_comma_list
-- On EXTERNAL reduce production expr -> expr_comma_list
-- On EXCEPTION reduce production expr -> expr_comma_list
-- On EQUAL reduce production expr -> expr_comma_list
-- On EOF reduce production expr -> expr_comma_list
-- On END reduce production expr -> expr_comma_list
-- On ELSE reduce production expr -> expr_comma_list
-- On DONE reduce production expr -> expr_comma_list
-- On DEF reduce production expr -> expr_comma_list
-- On COMMA reduce production expr -> expr_comma_list
-- On COLONGREATER reduce production expr -> expr_comma_list
-- On COLONEQUAL reduce production expr -> expr_comma_list
-- On COLONCOLON reduce production expr -> expr_comma_list
-- On COLON reduce production expr -> expr_comma_list
-- On CLASS reduce production expr -> expr_comma_list
-- On CHAR reduce production expr -> expr_comma_list
-- On BEGIN reduce production expr -> expr_comma_list
-- On BARRBRACKET reduce production expr -> expr_comma_list
-- On BARBAR reduce production expr -> expr_comma_list
-- On BAR reduce production expr -> expr_comma_list
-- On ASSERT reduce production expr -> expr_comma_list
-- On AND reduce production expr -> expr_comma_list
-- On AMPERSAND reduce production expr -> expr_comma_list
-- On AMPERAMPER reduce production expr -> expr_comma_list
** Conflict on COMMA

State 500:
expr_comma_list -> expr_comma_list COMMA . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 501
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 501:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list COMMA expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On WITH reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On WHILE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On VIRTUAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On VAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On UIDENT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TYPE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TRY reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TRUE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On STRING reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SHARP reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SEMISEMI reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SEMI reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On RPAREN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On RBRACKET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On RBRACE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On QUESTION reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On PREFIXOP reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On PARSER reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On OPEN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On NEW reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On MODULE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On METHOD reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On MATCH reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LPAREN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LOC reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LIDENT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKETLESS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKETBAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACELESS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACEBAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LAZY reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On INT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On INHERIT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On IN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On IF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On GREATERRBRACKET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On GREATERRBRACE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On GREATERGREATER reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FUNCTION reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FUN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FOR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FLOAT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FALSE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EXTERNAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EXCEPTION reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EOF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On END reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On ELSE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On DONE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On DEF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COMMA reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COLONGREATER reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COLONEQUAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COLON reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On CLASS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On CHAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On BEGIN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On BARRBRACKET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On BAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On ASSERT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On AND reduce production expr_comma_list -> expr_comma_list COMMA expr

State 502:
expr -> expr SUBTRACTIVE . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 503
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 503:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr SUBTRACTIVE expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On error reduce production expr -> expr SUBTRACTIVE expr
-- On WITH reduce production expr -> expr SUBTRACTIVE expr
-- On WHILE reduce production expr -> expr SUBTRACTIVE expr
-- On VIRTUAL reduce production expr -> expr SUBTRACTIVE expr
-- On VAL reduce production expr -> expr SUBTRACTIVE expr
-- On UIDENT reduce production expr -> expr SUBTRACTIVE expr
-- On TYPE reduce production expr -> expr SUBTRACTIVE expr
-- On TRY reduce production expr -> expr SUBTRACTIVE expr
-- On TRUE reduce production expr -> expr SUBTRACTIVE expr
-- On SUBTRACTIVE reduce production expr -> expr SUBTRACTIVE expr
-- On STRING reduce production expr -> expr SUBTRACTIVE expr
-- On SHARP reduce production expr -> expr SUBTRACTIVE expr
-- On SEMISEMI reduce production expr -> expr SUBTRACTIVE expr
-- On SEMI reduce production expr -> expr SUBTRACTIVE expr
-- On RPAREN reduce production expr -> expr SUBTRACTIVE expr
-- On RBRACKET reduce production expr -> expr SUBTRACTIVE expr
-- On RBRACE reduce production expr -> expr SUBTRACTIVE expr
-- On QUESTION reduce production expr -> expr SUBTRACTIVE expr
-- On PREFIXOP reduce production expr -> expr SUBTRACTIVE expr
-- On PARSER reduce production expr -> expr SUBTRACTIVE expr
-- On OR reduce production expr -> expr SUBTRACTIVE expr
-- On OPEN reduce production expr -> expr SUBTRACTIVE expr
-- On NEW reduce production expr -> expr SUBTRACTIVE expr
-- On MODULE reduce production expr -> expr SUBTRACTIVE expr
-- On METHOD reduce production expr -> expr SUBTRACTIVE expr
-- On MATCH reduce production expr -> expr SUBTRACTIVE expr
-- On LPAREN reduce production expr -> expr SUBTRACTIVE expr
-- On LOC reduce production expr -> expr SUBTRACTIVE expr
-- On LIDENT reduce production expr -> expr SUBTRACTIVE expr
-- On LET reduce production expr -> expr SUBTRACTIVE expr
-- On LESSGREATER reduce production expr -> expr SUBTRACTIVE expr
-- On LESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKETLESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKETBAR reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKET reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACELESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACEBAR reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACE reduce production expr -> expr SUBTRACTIVE expr
-- On LAZY reduce production expr -> expr SUBTRACTIVE expr
-- On INT reduce production expr -> expr SUBTRACTIVE expr
-- On INHERIT reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP2 reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP1 reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP0 reduce production expr -> expr SUBTRACTIVE expr
-- On IN reduce production expr -> expr SUBTRACTIVE expr
-- On IF reduce production expr -> expr SUBTRACTIVE expr
-- On GREATERRBRACKET reduce production expr -> expr SUBTRACTIVE expr
-- On GREATERRBRACE reduce production expr -> expr SUBTRACTIVE expr
-- On GREATERGREATER reduce production expr -> expr SUBTRACTIVE expr
-- On GREATER reduce production expr -> expr SUBTRACTIVE expr
-- On FUNCTION reduce production expr -> expr SUBTRACTIVE expr
-- On FUN reduce production expr -> expr SUBTRACTIVE expr
-- On FOR reduce production expr -> expr SUBTRACTIVE expr
-- On FLOAT reduce production expr -> expr SUBTRACTIVE expr
-- On FALSE reduce production expr -> expr SUBTRACTIVE expr
-- On EXTERNAL reduce production expr -> expr SUBTRACTIVE expr
-- On EXCEPTION reduce production expr -> expr SUBTRACTIVE expr
-- On EQUAL reduce production expr -> expr SUBTRACTIVE expr
-- On EOF reduce production expr -> expr SUBTRACTIVE expr
-- On END reduce production expr -> expr SUBTRACTIVE expr
-- On ELSE reduce production expr -> expr SUBTRACTIVE expr
-- On DONE reduce production expr -> expr SUBTRACTIVE expr
-- On DEF reduce production expr -> expr SUBTRACTIVE expr
-- On COMMA reduce production expr -> expr SUBTRACTIVE expr
-- On COLONGREATER reduce production expr -> expr SUBTRACTIVE expr
-- On COLONEQUAL reduce production expr -> expr SUBTRACTIVE expr
-- On COLONCOLON reduce production expr -> expr SUBTRACTIVE expr
-- On COLON reduce production expr -> expr SUBTRACTIVE expr
-- On CLASS reduce production expr -> expr SUBTRACTIVE expr
-- On CHAR reduce production expr -> expr SUBTRACTIVE expr
-- On BEGIN reduce production expr -> expr SUBTRACTIVE expr
-- On BARRBRACKET reduce production expr -> expr SUBTRACTIVE expr
-- On BARBAR reduce production expr -> expr SUBTRACTIVE expr
-- On BAR reduce production expr -> expr SUBTRACTIVE expr
-- On ASSERT reduce production expr -> expr SUBTRACTIVE expr
-- On AND reduce production expr -> expr SUBTRACTIVE expr
-- On AMPERSAND reduce production expr -> expr SUBTRACTIVE expr
-- On AMPERAMPER reduce production expr -> expr SUBTRACTIVE expr

State 504:
expr -> expr STAR . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 505
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 505:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr STAR expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 506
-- On error reduce production expr -> expr STAR expr
-- On WITH reduce production expr -> expr STAR expr
-- On WHILE reduce production expr -> expr STAR expr
-- On VIRTUAL reduce production expr -> expr STAR expr
-- On VAL reduce production expr -> expr STAR expr
-- On UIDENT reduce production expr -> expr STAR expr
-- On TYPE reduce production expr -> expr STAR expr
-- On TRY reduce production expr -> expr STAR expr
-- On TRUE reduce production expr -> expr STAR expr
-- On SUBTRACTIVE reduce production expr -> expr STAR expr
-- On STRING reduce production expr -> expr STAR expr
-- On STAR reduce production expr -> expr STAR expr
-- On SHARP reduce production expr -> expr STAR expr
-- On SEMISEMI reduce production expr -> expr STAR expr
-- On SEMI reduce production expr -> expr STAR expr
-- On RPAREN reduce production expr -> expr STAR expr
-- On RBRACKET reduce production expr -> expr STAR expr
-- On RBRACE reduce production expr -> expr STAR expr
-- On QUESTION reduce production expr -> expr STAR expr
-- On PREFIXOP reduce production expr -> expr STAR expr
-- On PARSER reduce production expr -> expr STAR expr
-- On OR reduce production expr -> expr STAR expr
-- On OPEN reduce production expr -> expr STAR expr
-- On NEW reduce production expr -> expr STAR expr
-- On MODULE reduce production expr -> expr STAR expr
-- On METHOD reduce production expr -> expr STAR expr
-- On MATCH reduce production expr -> expr STAR expr
-- On LPAREN reduce production expr -> expr STAR expr
-- On LOC reduce production expr -> expr STAR expr
-- On LIDENT reduce production expr -> expr STAR expr
-- On LET reduce production expr -> expr STAR expr
-- On LESSGREATER reduce production expr -> expr STAR expr
-- On LESS reduce production expr -> expr STAR expr
-- On LBRACKETLESS reduce production expr -> expr STAR expr
-- On LBRACKETBAR reduce production expr -> expr STAR expr
-- On LBRACKET reduce production expr -> expr STAR expr
-- On LBRACELESS reduce production expr -> expr STAR expr
-- On LBRACEBAR reduce production expr -> expr STAR expr
-- On LBRACE reduce production expr -> expr STAR expr
-- On LAZY reduce production expr -> expr STAR expr
-- On INT reduce production expr -> expr STAR expr
-- On INHERIT reduce production expr -> expr STAR expr
-- On INFIXOP3 reduce production expr -> expr STAR expr
-- On INFIXOP2 reduce production expr -> expr STAR expr
-- On INFIXOP1 reduce production expr -> expr STAR expr
-- On INFIXOP0 reduce production expr -> expr STAR expr
-- On IN reduce production expr -> expr STAR expr
-- On IF reduce production expr -> expr STAR expr
-- On GREATERRBRACKET reduce production expr -> expr STAR expr
-- On GREATERRBRACE reduce production expr -> expr STAR expr
-- On GREATERGREATER reduce production expr -> expr STAR expr
-- On GREATER reduce production expr -> expr STAR expr
-- On FUNCTION reduce production expr -> expr STAR expr
-- On FUN reduce production expr -> expr STAR expr
-- On FOR reduce production expr -> expr STAR expr
-- On FLOAT reduce production expr -> expr STAR expr
-- On FALSE reduce production expr -> expr STAR expr
-- On EXTERNAL reduce production expr -> expr STAR expr
-- On EXCEPTION reduce production expr -> expr STAR expr
-- On EQUAL reduce production expr -> expr STAR expr
-- On EOF reduce production expr -> expr STAR expr
-- On END reduce production expr -> expr STAR expr
-- On ELSE reduce production expr -> expr STAR expr
-- On DONE reduce production expr -> expr STAR expr
-- On DEF reduce production expr -> expr STAR expr
-- On COMMA reduce production expr -> expr STAR expr
-- On COLONGREATER reduce production expr -> expr STAR expr
-- On COLONEQUAL reduce production expr -> expr STAR expr
-- On COLONCOLON reduce production expr -> expr STAR expr
-- On COLON reduce production expr -> expr STAR expr
-- On CLASS reduce production expr -> expr STAR expr
-- On CHAR reduce production expr -> expr STAR expr
-- On BEGIN reduce production expr -> expr STAR expr
-- On BARRBRACKET reduce production expr -> expr STAR expr
-- On BARBAR reduce production expr -> expr STAR expr
-- On BAR reduce production expr -> expr STAR expr
-- On ASSERT reduce production expr -> expr STAR expr
-- On AND reduce production expr -> expr STAR expr
-- On AMPERSAND reduce production expr -> expr STAR expr
-- On AMPERAMPER reduce production expr -> expr STAR expr

State 506:
expr -> expr INFIXOP4 . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 507
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 507:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP4 expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 506
-- On error reduce production expr -> expr INFIXOP4 expr
-- On WITH reduce production expr -> expr INFIXOP4 expr
-- On WHILE reduce production expr -> expr INFIXOP4 expr
-- On VIRTUAL reduce production expr -> expr INFIXOP4 expr
-- On VAL reduce production expr -> expr INFIXOP4 expr
-- On UIDENT reduce production expr -> expr INFIXOP4 expr
-- On TYPE reduce production expr -> expr INFIXOP4 expr
-- On TRY reduce production expr -> expr INFIXOP4 expr
-- On TRUE reduce production expr -> expr INFIXOP4 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP4 expr
-- On STRING reduce production expr -> expr INFIXOP4 expr
-- On STAR reduce production expr -> expr INFIXOP4 expr
-- On SHARP reduce production expr -> expr INFIXOP4 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP4 expr
-- On SEMI reduce production expr -> expr INFIXOP4 expr
-- On RPAREN reduce production expr -> expr INFIXOP4 expr
-- On RBRACKET reduce production expr -> expr INFIXOP4 expr
-- On RBRACE reduce production expr -> expr INFIXOP4 expr
-- On QUESTION reduce production expr -> expr INFIXOP4 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP4 expr
-- On PARSER reduce production expr -> expr INFIXOP4 expr
-- On OR reduce production expr -> expr INFIXOP4 expr
-- On OPEN reduce production expr -> expr INFIXOP4 expr
-- On NEW reduce production expr -> expr INFIXOP4 expr
-- On MODULE reduce production expr -> expr INFIXOP4 expr
-- On METHOD reduce production expr -> expr INFIXOP4 expr
-- On MATCH reduce production expr -> expr INFIXOP4 expr
-- On LPAREN reduce production expr -> expr INFIXOP4 expr
-- On LOC reduce production expr -> expr INFIXOP4 expr
-- On LIDENT reduce production expr -> expr INFIXOP4 expr
-- On LET reduce production expr -> expr INFIXOP4 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP4 expr
-- On LESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP4 expr
-- On LBRACKET reduce production expr -> expr INFIXOP4 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP4 expr
-- On LBRACE reduce production expr -> expr INFIXOP4 expr
-- On LAZY reduce production expr -> expr INFIXOP4 expr
-- On INT reduce production expr -> expr INFIXOP4 expr
-- On INHERIT reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP3 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP4 expr
-- On IN reduce production expr -> expr INFIXOP4 expr
-- On IF reduce production expr -> expr INFIXOP4 expr
-- On GREATERRBRACKET reduce production expr -> expr INFIXOP4 expr
-- On GREATERRBRACE reduce production expr -> expr INFIXOP4 expr
-- On GREATERGREATER reduce production expr -> expr INFIXOP4 expr
-- On GREATER reduce production expr -> expr INFIXOP4 expr
-- On FUNCTION reduce production expr -> expr INFIXOP4 expr
-- On FUN reduce production expr -> expr INFIXOP4 expr
-- On FOR reduce production expr -> expr INFIXOP4 expr
-- On FLOAT reduce production expr -> expr INFIXOP4 expr
-- On FALSE reduce production expr -> expr INFIXOP4 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP4 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP4 expr
-- On EQUAL reduce production expr -> expr INFIXOP4 expr
-- On EOF reduce production expr -> expr INFIXOP4 expr
-- On END reduce production expr -> expr INFIXOP4 expr
-- On ELSE reduce production expr -> expr INFIXOP4 expr
-- On DONE reduce production expr -> expr INFIXOP4 expr
-- On DEF reduce production expr -> expr INFIXOP4 expr
-- On COMMA reduce production expr -> expr INFIXOP4 expr
-- On COLONGREATER reduce production expr -> expr INFIXOP4 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP4 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP4 expr
-- On COLON reduce production expr -> expr INFIXOP4 expr
-- On CLASS reduce production expr -> expr INFIXOP4 expr
-- On CHAR reduce production expr -> expr INFIXOP4 expr
-- On BEGIN reduce production expr -> expr INFIXOP4 expr
-- On BARRBRACKET reduce production expr -> expr INFIXOP4 expr
-- On BARBAR reduce production expr -> expr INFIXOP4 expr
-- On BAR reduce production expr -> expr INFIXOP4 expr
-- On ASSERT reduce production expr -> expr INFIXOP4 expr
-- On AND reduce production expr -> expr INFIXOP4 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP4 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP4 expr

State 508:
expr -> constr_longident . simple_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> constr_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 509
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production simple_expr -> constr_longident
-- On WITH reduce production simple_expr -> constr_longident
-- On WHILE reduce production simple_expr -> constr_longident
-- On VIRTUAL reduce production simple_expr -> constr_longident
-- On VAL reduce production simple_expr -> constr_longident
-- On UIDENT reduce production simple_expr -> constr_longident
-- On TYPE reduce production simple_expr -> constr_longident
-- On TRY reduce production simple_expr -> constr_longident
-- On TRUE reduce production simple_expr -> constr_longident
-- On SUBTRACTIVE reduce production simple_expr -> constr_longident
-- On STRING reduce production simple_expr -> constr_longident
-- On STAR reduce production simple_expr -> constr_longident
-- On SHARP reduce production simple_expr -> constr_longident
-- On SEMISEMI reduce production simple_expr -> constr_longident
-- On SEMI reduce production simple_expr -> constr_longident
-- On RPAREN reduce production simple_expr -> constr_longident
-- On RBRACKET reduce production simple_expr -> constr_longident
-- On RBRACE reduce production simple_expr -> constr_longident
-- On QUESTION reduce production simple_expr -> constr_longident
-- On PREFIXOP reduce production simple_expr -> constr_longident
-- On PARSER reduce production simple_expr -> constr_longident
-- On OR reduce production simple_expr -> constr_longident
-- On OPEN reduce production simple_expr -> constr_longident
-- On NEW reduce production simple_expr -> constr_longident
-- On MODULE reduce production simple_expr -> constr_longident
-- On METHOD reduce production simple_expr -> constr_longident
-- On MATCH reduce production simple_expr -> constr_longident
-- On LPAREN reduce production simple_expr -> constr_longident
-- On LOC reduce production simple_expr -> constr_longident
-- On LIDENT reduce production simple_expr -> constr_longident
-- On LET reduce production simple_expr -> constr_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constr_longident
-- On LESSLESS reduce production simple_expr -> constr_longident
-- On LESSGREATER reduce production simple_expr -> constr_longident
-- On LESS reduce production simple_expr -> constr_longident
-- On LBRACKETLESS reduce production simple_expr -> constr_longident
-- On LBRACKETBAR reduce production simple_expr -> constr_longident
-- On LBRACKET reduce production simple_expr -> constr_longident
-- On LBRACELESS reduce production simple_expr -> constr_longident
-- On LBRACEBAR reduce production simple_expr -> constr_longident
-- On LBRACE reduce production simple_expr -> constr_longident
-- On LAZY reduce production simple_expr -> constr_longident
-- On INT reduce production simple_expr -> constr_longident
-- On INHERIT reduce production simple_expr -> constr_longident
-- On INFIXOP4 reduce production simple_expr -> constr_longident
-- On INFIXOP3 reduce production simple_expr -> constr_longident
-- On INFIXOP2 reduce production simple_expr -> constr_longident
-- On INFIXOP1 reduce production simple_expr -> constr_longident
-- On INFIXOP0 reduce production simple_expr -> constr_longident
-- On IN reduce production simple_expr -> constr_longident
-- On IF reduce production simple_expr -> constr_longident
-- On GREATERRBRACKET reduce production simple_expr -> constr_longident
-- On GREATERRBRACE reduce production simple_expr -> constr_longident
-- On GREATERGREATER reduce production simple_expr -> constr_longident
-- On GREATER reduce production simple_expr -> constr_longident
-- On FUNCTION reduce production simple_expr -> constr_longident
-- On FUN reduce production simple_expr -> constr_longident
-- On FOR reduce production simple_expr -> constr_longident
-- On FLOAT reduce production simple_expr -> constr_longident
-- On FALSE reduce production simple_expr -> constr_longident
-- On EXTERNAL reduce production simple_expr -> constr_longident
-- On EXCEPTION reduce production simple_expr -> constr_longident
-- On EQUAL reduce production simple_expr -> constr_longident
-- On EOF reduce production simple_expr -> constr_longident
-- On END reduce production simple_expr -> constr_longident
-- On ELSE reduce production simple_expr -> constr_longident
-- On DOT reduce production simple_expr -> constr_longident
-- On DONE reduce production simple_expr -> constr_longident
-- On DEF reduce production simple_expr -> constr_longident
-- On COMMA reduce production simple_expr -> constr_longident
-- On COLONGREATER reduce production simple_expr -> constr_longident
-- On COLONEQUAL reduce production simple_expr -> constr_longident
-- On COLONCOLON reduce production simple_expr -> constr_longident
-- On COLON reduce production simple_expr -> constr_longident
-- On CLASS reduce production simple_expr -> constr_longident
-- On CHAR reduce production simple_expr -> constr_longident
-- On BEGIN reduce production simple_expr -> constr_longident
-- On BARRBRACKET reduce production simple_expr -> constr_longident
-- On BARBAR reduce production simple_expr -> constr_longident
-- On BAR reduce production simple_expr -> constr_longident
-- On ASSERT reduce production simple_expr -> constr_longident
-- On AND reduce production simple_expr -> constr_longident
-- On AMPERSAND reduce production simple_expr -> constr_longident
-- On AMPERAMPER reduce production simple_expr -> constr_longident
** Conflict on UIDENT TRUE STRING PREFIXOP NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 509:
expr -> constr_longident simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 476
-- On DOT shift to state 479
-- On error reduce production expr -> constr_longident simple_expr
-- On WITH reduce production expr -> constr_longident simple_expr
-- On WHILE reduce production expr -> constr_longident simple_expr
-- On VIRTUAL reduce production expr -> constr_longident simple_expr
-- On VAL reduce production expr -> constr_longident simple_expr
-- On UIDENT reduce production expr -> constr_longident simple_expr
-- On TYPE reduce production expr -> constr_longident simple_expr
-- On TRY reduce production expr -> constr_longident simple_expr
-- On TRUE reduce production expr -> constr_longident simple_expr
-- On SUBTRACTIVE reduce production expr -> constr_longident simple_expr
-- On STRING reduce production expr -> constr_longident simple_expr
-- On STAR reduce production expr -> constr_longident simple_expr
-- On SEMISEMI reduce production expr -> constr_longident simple_expr
-- On SEMI reduce production expr -> constr_longident simple_expr
-- On RPAREN reduce production expr -> constr_longident simple_expr
-- On RBRACKET reduce production expr -> constr_longident simple_expr
-- On RBRACE reduce production expr -> constr_longident simple_expr
-- On QUESTION reduce production expr -> constr_longident simple_expr
-- On PREFIXOP reduce production expr -> constr_longident simple_expr
-- On PARSER reduce production expr -> constr_longident simple_expr
-- On OR reduce production expr -> constr_longident simple_expr
-- On OPEN reduce production expr -> constr_longident simple_expr
-- On NEW reduce production expr -> constr_longident simple_expr
-- On MODULE reduce production expr -> constr_longident simple_expr
-- On METHOD reduce production expr -> constr_longident simple_expr
-- On MATCH reduce production expr -> constr_longident simple_expr
-- On LPAREN reduce production expr -> constr_longident simple_expr
-- On LOC reduce production expr -> constr_longident simple_expr
-- On LIDENT reduce production expr -> constr_longident simple_expr
-- On LET reduce production expr -> constr_longident simple_expr
-- On LESSGREATER reduce production expr -> constr_longident simple_expr
-- On LESS reduce production expr -> constr_longident simple_expr
-- On LBRACKETLESS reduce production expr -> constr_longident simple_expr
-- On LBRACKETBAR reduce production expr -> constr_longident simple_expr
-- On LBRACKET reduce production expr -> constr_longident simple_expr
-- On LBRACELESS reduce production expr -> constr_longident simple_expr
-- On LBRACEBAR reduce production expr -> constr_longident simple_expr
-- On LBRACE reduce production expr -> constr_longident simple_expr
-- On LAZY reduce production expr -> constr_longident simple_expr
-- On INT reduce production expr -> constr_longident simple_expr
-- On INHERIT reduce production expr -> constr_longident simple_expr
-- On INFIXOP4 reduce production expr -> constr_longident simple_expr
-- On INFIXOP3 reduce production expr -> constr_longident simple_expr
-- On INFIXOP2 reduce production expr -> constr_longident simple_expr
-- On INFIXOP1 reduce production expr -> constr_longident simple_expr
-- On INFIXOP0 reduce production expr -> constr_longident simple_expr
-- On IN reduce production expr -> constr_longident simple_expr
-- On IF reduce production expr -> constr_longident simple_expr
-- On GREATERRBRACKET reduce production expr -> constr_longident simple_expr
-- On GREATERRBRACE reduce production expr -> constr_longident simple_expr
-- On GREATERGREATER reduce production expr -> constr_longident simple_expr
-- On GREATER reduce production expr -> constr_longident simple_expr
-- On FUNCTION reduce production expr -> constr_longident simple_expr
-- On FUN reduce production expr -> constr_longident simple_expr
-- On FOR reduce production expr -> constr_longident simple_expr
-- On FLOAT reduce production expr -> constr_longident simple_expr
-- On FALSE reduce production expr -> constr_longident simple_expr
-- On EXTERNAL reduce production expr -> constr_longident simple_expr
-- On EXCEPTION reduce production expr -> constr_longident simple_expr
-- On EQUAL reduce production expr -> constr_longident simple_expr
-- On EOF reduce production expr -> constr_longident simple_expr
-- On END reduce production expr -> constr_longident simple_expr
-- On ELSE reduce production expr -> constr_longident simple_expr
-- On DONE reduce production expr -> constr_longident simple_expr
-- On DEF reduce production expr -> constr_longident simple_expr
-- On COMMA reduce production expr -> constr_longident simple_expr
-- On COLONGREATER reduce production expr -> constr_longident simple_expr
-- On COLONEQUAL reduce production expr -> constr_longident simple_expr
-- On COLONCOLON reduce production expr -> constr_longident simple_expr
-- On COLON reduce production expr -> constr_longident simple_expr
-- On CLASS reduce production expr -> constr_longident simple_expr
-- On CHAR reduce production expr -> constr_longident simple_expr
-- On BEGIN reduce production expr -> constr_longident simple_expr
-- On BARRBRACKET reduce production expr -> constr_longident simple_expr
-- On BARBAR reduce production expr -> constr_longident simple_expr
-- On BAR reduce production expr -> constr_longident simple_expr
-- On ASSERT reduce production expr -> constr_longident simple_expr
-- On AND reduce production expr -> constr_longident simple_expr
-- On AMPERSAND reduce production expr -> constr_longident simple_expr
-- On AMPERAMPER reduce production expr -> constr_longident simple_expr

State 510:
expr -> expr INFIXOP3 . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 511
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 511:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP3 expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 506
-- On error reduce production expr -> expr INFIXOP3 expr
-- On WITH reduce production expr -> expr INFIXOP3 expr
-- On WHILE reduce production expr -> expr INFIXOP3 expr
-- On VIRTUAL reduce production expr -> expr INFIXOP3 expr
-- On VAL reduce production expr -> expr INFIXOP3 expr
-- On UIDENT reduce production expr -> expr INFIXOP3 expr
-- On TYPE reduce production expr -> expr INFIXOP3 expr
-- On TRY reduce production expr -> expr INFIXOP3 expr
-- On TRUE reduce production expr -> expr INFIXOP3 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP3 expr
-- On STRING reduce production expr -> expr INFIXOP3 expr
-- On STAR reduce production expr -> expr INFIXOP3 expr
-- On SHARP reduce production expr -> expr INFIXOP3 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP3 expr
-- On SEMI reduce production expr -> expr INFIXOP3 expr
-- On RPAREN reduce production expr -> expr INFIXOP3 expr
-- On RBRACKET reduce production expr -> expr INFIXOP3 expr
-- On RBRACE reduce production expr -> expr INFIXOP3 expr
-- On QUESTION reduce production expr -> expr INFIXOP3 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP3 expr
-- On PARSER reduce production expr -> expr INFIXOP3 expr
-- On OR reduce production expr -> expr INFIXOP3 expr
-- On OPEN reduce production expr -> expr INFIXOP3 expr
-- On NEW reduce production expr -> expr INFIXOP3 expr
-- On MODULE reduce production expr -> expr INFIXOP3 expr
-- On METHOD reduce production expr -> expr INFIXOP3 expr
-- On MATCH reduce production expr -> expr INFIXOP3 expr
-- On LPAREN reduce production expr -> expr INFIXOP3 expr
-- On LOC reduce production expr -> expr INFIXOP3 expr
-- On LIDENT reduce production expr -> expr INFIXOP3 expr
-- On LET reduce production expr -> expr INFIXOP3 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP3 expr
-- On LESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP3 expr
-- On LBRACKET reduce production expr -> expr INFIXOP3 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP3 expr
-- On LBRACE reduce production expr -> expr INFIXOP3 expr
-- On LAZY reduce production expr -> expr INFIXOP3 expr
-- On INT reduce production expr -> expr INFIXOP3 expr
-- On INHERIT reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP3 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP3 expr
-- On IN reduce production expr -> expr INFIXOP3 expr
-- On IF reduce production expr -> expr INFIXOP3 expr
-- On GREATERRBRACKET reduce production expr -> expr INFIXOP3 expr
-- On GREATERRBRACE reduce production expr -> expr INFIXOP3 expr
-- On GREATERGREATER reduce production expr -> expr INFIXOP3 expr
-- On GREATER reduce production expr -> expr INFIXOP3 expr
-- On FUNCTION reduce production expr -> expr INFIXOP3 expr
-- On FUN reduce production expr -> expr INFIXOP3 expr
-- On FOR reduce production expr -> expr INFIXOP3 expr
-- On FLOAT reduce production expr -> expr INFIXOP3 expr
-- On FALSE reduce production expr -> expr INFIXOP3 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP3 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP3 expr
-- On EQUAL reduce production expr -> expr INFIXOP3 expr
-- On EOF reduce production expr -> expr INFIXOP3 expr
-- On END reduce production expr -> expr INFIXOP3 expr
-- On ELSE reduce production expr -> expr INFIXOP3 expr
-- On DONE reduce production expr -> expr INFIXOP3 expr
-- On DEF reduce production expr -> expr INFIXOP3 expr
-- On COMMA reduce production expr -> expr INFIXOP3 expr
-- On COLONGREATER reduce production expr -> expr INFIXOP3 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP3 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP3 expr
-- On COLON reduce production expr -> expr INFIXOP3 expr
-- On CLASS reduce production expr -> expr INFIXOP3 expr
-- On CHAR reduce production expr -> expr INFIXOP3 expr
-- On BEGIN reduce production expr -> expr INFIXOP3 expr
-- On BARRBRACKET reduce production expr -> expr INFIXOP3 expr
-- On BARBAR reduce production expr -> expr INFIXOP3 expr
-- On BAR reduce production expr -> expr INFIXOP3 expr
-- On ASSERT reduce production expr -> expr INFIXOP3 expr
-- On AND reduce production expr -> expr INFIXOP3 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP3 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP3 expr

State 512:
expr -> expr OR . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 513
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 513:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr OR expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> expr OR expr
-- On WITH reduce production expr -> expr OR expr
-- On WHILE reduce production expr -> expr OR expr
-- On VIRTUAL reduce production expr -> expr OR expr
-- On VAL reduce production expr -> expr OR expr
-- On UIDENT reduce production expr -> expr OR expr
-- On TYPE reduce production expr -> expr OR expr
-- On TRY reduce production expr -> expr OR expr
-- On TRUE reduce production expr -> expr OR expr
-- On STRING reduce production expr -> expr OR expr
-- On SHARP reduce production expr -> expr OR expr
-- On SEMISEMI reduce production expr -> expr OR expr
-- On SEMI reduce production expr -> expr OR expr
-- On RPAREN reduce production expr -> expr OR expr
-- On RBRACKET reduce production expr -> expr OR expr
-- On RBRACE reduce production expr -> expr OR expr
-- On QUESTION reduce production expr -> expr OR expr
-- On PREFIXOP reduce production expr -> expr OR expr
-- On PARSER reduce production expr -> expr OR expr
-- On OPEN reduce production expr -> expr OR expr
-- On NEW reduce production expr -> expr OR expr
-- On MODULE reduce production expr -> expr OR expr
-- On METHOD reduce production expr -> expr OR expr
-- On MATCH reduce production expr -> expr OR expr
-- On LPAREN reduce production expr -> expr OR expr
-- On LOC reduce production expr -> expr OR expr
-- On LIDENT reduce production expr -> expr OR expr
-- On LET reduce production expr -> expr OR expr
-- On LBRACKETLESS reduce production expr -> expr OR expr
-- On LBRACKETBAR reduce production expr -> expr OR expr
-- On LBRACKET reduce production expr -> expr OR expr
-- On LBRACELESS reduce production expr -> expr OR expr
-- On LBRACEBAR reduce production expr -> expr OR expr
-- On LBRACE reduce production expr -> expr OR expr
-- On LAZY reduce production expr -> expr OR expr
-- On INT reduce production expr -> expr OR expr
-- On INHERIT reduce production expr -> expr OR expr
-- On IN reduce production expr -> expr OR expr
-- On IF reduce production expr -> expr OR expr
-- On GREATERRBRACKET reduce production expr -> expr OR expr
-- On GREATERRBRACE reduce production expr -> expr OR expr
-- On GREATERGREATER reduce production expr -> expr OR expr
-- On FUNCTION reduce production expr -> expr OR expr
-- On FUN reduce production expr -> expr OR expr
-- On FOR reduce production expr -> expr OR expr
-- On FLOAT reduce production expr -> expr OR expr
-- On FALSE reduce production expr -> expr OR expr
-- On EXTERNAL reduce production expr -> expr OR expr
-- On EXCEPTION reduce production expr -> expr OR expr
-- On EOF reduce production expr -> expr OR expr
-- On END reduce production expr -> expr OR expr
-- On ELSE reduce production expr -> expr OR expr
-- On DONE reduce production expr -> expr OR expr
-- On DEF reduce production expr -> expr OR expr
-- On COMMA reduce production expr -> expr OR expr
-- On COLONGREATER reduce production expr -> expr OR expr
-- On COLONEQUAL reduce production expr -> expr OR expr
-- On COLON reduce production expr -> expr OR expr
-- On CLASS reduce production expr -> expr OR expr
-- On CHAR reduce production expr -> expr OR expr
-- On BEGIN reduce production expr -> expr OR expr
-- On BARRBRACKET reduce production expr -> expr OR expr
-- On BAR reduce production expr -> expr OR expr
-- On ASSERT reduce production expr -> expr OR expr
-- On AND reduce production expr -> expr OR expr

State 514:
expr -> expr LESSGREATER . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 515
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 515:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr LESSGREATER expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr LESSGREATER expr
-- On WITH reduce production expr -> expr LESSGREATER expr
-- On WHILE reduce production expr -> expr LESSGREATER expr
-- On VIRTUAL reduce production expr -> expr LESSGREATER expr
-- On VAL reduce production expr -> expr LESSGREATER expr
-- On UIDENT reduce production expr -> expr LESSGREATER expr
-- On TYPE reduce production expr -> expr LESSGREATER expr
-- On TRY reduce production expr -> expr LESSGREATER expr
-- On TRUE reduce production expr -> expr LESSGREATER expr
-- On STRING reduce production expr -> expr LESSGREATER expr
-- On SHARP reduce production expr -> expr LESSGREATER expr
-- On SEMISEMI reduce production expr -> expr LESSGREATER expr
-- On SEMI reduce production expr -> expr LESSGREATER expr
-- On RPAREN reduce production expr -> expr LESSGREATER expr
-- On RBRACKET reduce production expr -> expr LESSGREATER expr
-- On RBRACE reduce production expr -> expr LESSGREATER expr
-- On QUESTION reduce production expr -> expr LESSGREATER expr
-- On PREFIXOP reduce production expr -> expr LESSGREATER expr
-- On PARSER reduce production expr -> expr LESSGREATER expr
-- On OR reduce production expr -> expr LESSGREATER expr
-- On OPEN reduce production expr -> expr LESSGREATER expr
-- On NEW reduce production expr -> expr LESSGREATER expr
-- On MODULE reduce production expr -> expr LESSGREATER expr
-- On METHOD reduce production expr -> expr LESSGREATER expr
-- On MATCH reduce production expr -> expr LESSGREATER expr
-- On LPAREN reduce production expr -> expr LESSGREATER expr
-- On LOC reduce production expr -> expr LESSGREATER expr
-- On LIDENT reduce production expr -> expr LESSGREATER expr
-- On LET reduce production expr -> expr LESSGREATER expr
-- On LESSGREATER reduce production expr -> expr LESSGREATER expr
-- On LESS reduce production expr -> expr LESSGREATER expr
-- On LBRACKETLESS reduce production expr -> expr LESSGREATER expr
-- On LBRACKETBAR reduce production expr -> expr LESSGREATER expr
-- On LBRACKET reduce production expr -> expr LESSGREATER expr
-- On LBRACELESS reduce production expr -> expr LESSGREATER expr
-- On LBRACEBAR reduce production expr -> expr LESSGREATER expr
-- On LBRACE reduce production expr -> expr LESSGREATER expr
-- On LAZY reduce production expr -> expr LESSGREATER expr
-- On INT reduce production expr -> expr LESSGREATER expr
-- On INHERIT reduce production expr -> expr LESSGREATER expr
-- On INFIXOP0 reduce production expr -> expr LESSGREATER expr
-- On IN reduce production expr -> expr LESSGREATER expr
-- On IF reduce production expr -> expr LESSGREATER expr
-- On GREATERRBRACKET reduce production expr -> expr LESSGREATER expr
-- On GREATERRBRACE reduce production expr -> expr LESSGREATER expr
-- On GREATERGREATER reduce production expr -> expr LESSGREATER expr
-- On GREATER reduce production expr -> expr LESSGREATER expr
-- On FUNCTION reduce production expr -> expr LESSGREATER expr
-- On FUN reduce production expr -> expr LESSGREATER expr
-- On FOR reduce production expr -> expr LESSGREATER expr
-- On FLOAT reduce production expr -> expr LESSGREATER expr
-- On FALSE reduce production expr -> expr LESSGREATER expr
-- On EXTERNAL reduce production expr -> expr LESSGREATER expr
-- On EXCEPTION reduce production expr -> expr LESSGREATER expr
-- On EQUAL reduce production expr -> expr LESSGREATER expr
-- On EOF reduce production expr -> expr LESSGREATER expr
-- On END reduce production expr -> expr LESSGREATER expr
-- On ELSE reduce production expr -> expr LESSGREATER expr
-- On DONE reduce production expr -> expr LESSGREATER expr
-- On DEF reduce production expr -> expr LESSGREATER expr
-- On COMMA reduce production expr -> expr LESSGREATER expr
-- On COLONGREATER reduce production expr -> expr LESSGREATER expr
-- On COLONEQUAL reduce production expr -> expr LESSGREATER expr
-- On COLON reduce production expr -> expr LESSGREATER expr
-- On CLASS reduce production expr -> expr LESSGREATER expr
-- On CHAR reduce production expr -> expr LESSGREATER expr
-- On BEGIN reduce production expr -> expr LESSGREATER expr
-- On BARRBRACKET reduce production expr -> expr LESSGREATER expr
-- On BARBAR reduce production expr -> expr LESSGREATER expr
-- On BAR reduce production expr -> expr LESSGREATER expr
-- On ASSERT reduce production expr -> expr LESSGREATER expr
-- On AND reduce production expr -> expr LESSGREATER expr
-- On AMPERSAND reduce production expr -> expr LESSGREATER expr
-- On AMPERAMPER reduce production expr -> expr LESSGREATER expr

State 516:
expr -> expr INFIXOP2 . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 517
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 517:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP2 expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On error reduce production expr -> expr INFIXOP2 expr
-- On WITH reduce production expr -> expr INFIXOP2 expr
-- On WHILE reduce production expr -> expr INFIXOP2 expr
-- On VIRTUAL reduce production expr -> expr INFIXOP2 expr
-- On VAL reduce production expr -> expr INFIXOP2 expr
-- On UIDENT reduce production expr -> expr INFIXOP2 expr
-- On TYPE reduce production expr -> expr INFIXOP2 expr
-- On TRY reduce production expr -> expr INFIXOP2 expr
-- On TRUE reduce production expr -> expr INFIXOP2 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP2 expr
-- On STRING reduce production expr -> expr INFIXOP2 expr
-- On SHARP reduce production expr -> expr INFIXOP2 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP2 expr
-- On SEMI reduce production expr -> expr INFIXOP2 expr
-- On RPAREN reduce production expr -> expr INFIXOP2 expr
-- On RBRACKET reduce production expr -> expr INFIXOP2 expr
-- On RBRACE reduce production expr -> expr INFIXOP2 expr
-- On QUESTION reduce production expr -> expr INFIXOP2 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP2 expr
-- On PARSER reduce production expr -> expr INFIXOP2 expr
-- On OR reduce production expr -> expr INFIXOP2 expr
-- On OPEN reduce production expr -> expr INFIXOP2 expr
-- On NEW reduce production expr -> expr INFIXOP2 expr
-- On MODULE reduce production expr -> expr INFIXOP2 expr
-- On METHOD reduce production expr -> expr INFIXOP2 expr
-- On MATCH reduce production expr -> expr INFIXOP2 expr
-- On LPAREN reduce production expr -> expr INFIXOP2 expr
-- On LOC reduce production expr -> expr INFIXOP2 expr
-- On LIDENT reduce production expr -> expr INFIXOP2 expr
-- On LET reduce production expr -> expr INFIXOP2 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP2 expr
-- On LESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP2 expr
-- On LBRACKET reduce production expr -> expr INFIXOP2 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP2 expr
-- On LBRACE reduce production expr -> expr INFIXOP2 expr
-- On LAZY reduce production expr -> expr INFIXOP2 expr
-- On INT reduce production expr -> expr INFIXOP2 expr
-- On INHERIT reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP2 expr
-- On IN reduce production expr -> expr INFIXOP2 expr
-- On IF reduce production expr -> expr INFIXOP2 expr
-- On GREATERRBRACKET reduce production expr -> expr INFIXOP2 expr
-- On GREATERRBRACE reduce production expr -> expr INFIXOP2 expr
-- On GREATERGREATER reduce production expr -> expr INFIXOP2 expr
-- On GREATER reduce production expr -> expr INFIXOP2 expr
-- On FUNCTION reduce production expr -> expr INFIXOP2 expr
-- On FUN reduce production expr -> expr INFIXOP2 expr
-- On FOR reduce production expr -> expr INFIXOP2 expr
-- On FLOAT reduce production expr -> expr INFIXOP2 expr
-- On FALSE reduce production expr -> expr INFIXOP2 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP2 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP2 expr
-- On EQUAL reduce production expr -> expr INFIXOP2 expr
-- On EOF reduce production expr -> expr INFIXOP2 expr
-- On END reduce production expr -> expr INFIXOP2 expr
-- On ELSE reduce production expr -> expr INFIXOP2 expr
-- On DONE reduce production expr -> expr INFIXOP2 expr
-- On DEF reduce production expr -> expr INFIXOP2 expr
-- On COMMA reduce production expr -> expr INFIXOP2 expr
-- On COLONGREATER reduce production expr -> expr INFIXOP2 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP2 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP2 expr
-- On COLON reduce production expr -> expr INFIXOP2 expr
-- On CLASS reduce production expr -> expr INFIXOP2 expr
-- On CHAR reduce production expr -> expr INFIXOP2 expr
-- On BEGIN reduce production expr -> expr INFIXOP2 expr
-- On BARRBRACKET reduce production expr -> expr INFIXOP2 expr
-- On BARBAR reduce production expr -> expr INFIXOP2 expr
-- On BAR reduce production expr -> expr INFIXOP2 expr
-- On ASSERT reduce production expr -> expr INFIXOP2 expr
-- On AND reduce production expr -> expr INFIXOP2 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP2 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP2 expr

State 518:
expr -> expr INFIXOP1 . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 519
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 519:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP1 expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr INFIXOP1 expr
-- On WITH reduce production expr -> expr INFIXOP1 expr
-- On WHILE reduce production expr -> expr INFIXOP1 expr
-- On VIRTUAL reduce production expr -> expr INFIXOP1 expr
-- On VAL reduce production expr -> expr INFIXOP1 expr
-- On UIDENT reduce production expr -> expr INFIXOP1 expr
-- On TYPE reduce production expr -> expr INFIXOP1 expr
-- On TRY reduce production expr -> expr INFIXOP1 expr
-- On TRUE reduce production expr -> expr INFIXOP1 expr
-- On STRING reduce production expr -> expr INFIXOP1 expr
-- On SHARP reduce production expr -> expr INFIXOP1 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP1 expr
-- On SEMI reduce production expr -> expr INFIXOP1 expr
-- On RPAREN reduce production expr -> expr INFIXOP1 expr
-- On RBRACKET reduce production expr -> expr INFIXOP1 expr
-- On RBRACE reduce production expr -> expr INFIXOP1 expr
-- On QUESTION reduce production expr -> expr INFIXOP1 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP1 expr
-- On PARSER reduce production expr -> expr INFIXOP1 expr
-- On OR reduce production expr -> expr INFIXOP1 expr
-- On OPEN reduce production expr -> expr INFIXOP1 expr
-- On NEW reduce production expr -> expr INFIXOP1 expr
-- On MODULE reduce production expr -> expr INFIXOP1 expr
-- On METHOD reduce production expr -> expr INFIXOP1 expr
-- On MATCH reduce production expr -> expr INFIXOP1 expr
-- On LPAREN reduce production expr -> expr INFIXOP1 expr
-- On LOC reduce production expr -> expr INFIXOP1 expr
-- On LIDENT reduce production expr -> expr INFIXOP1 expr
-- On LET reduce production expr -> expr INFIXOP1 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP1 expr
-- On LESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP1 expr
-- On LBRACKET reduce production expr -> expr INFIXOP1 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP1 expr
-- On LBRACE reduce production expr -> expr INFIXOP1 expr
-- On LAZY reduce production expr -> expr INFIXOP1 expr
-- On INT reduce production expr -> expr INFIXOP1 expr
-- On INHERIT reduce production expr -> expr INFIXOP1 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP1 expr
-- On IN reduce production expr -> expr INFIXOP1 expr
-- On IF reduce production expr -> expr INFIXOP1 expr
-- On GREATERRBRACKET reduce production expr -> expr INFIXOP1 expr
-- On GREATERRBRACE reduce production expr -> expr INFIXOP1 expr
-- On GREATERGREATER reduce production expr -> expr INFIXOP1 expr
-- On GREATER reduce production expr -> expr INFIXOP1 expr
-- On FUNCTION reduce production expr -> expr INFIXOP1 expr
-- On FUN reduce production expr -> expr INFIXOP1 expr
-- On FOR reduce production expr -> expr INFIXOP1 expr
-- On FLOAT reduce production expr -> expr INFIXOP1 expr
-- On FALSE reduce production expr -> expr INFIXOP1 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP1 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP1 expr
-- On EQUAL reduce production expr -> expr INFIXOP1 expr
-- On EOF reduce production expr -> expr INFIXOP1 expr
-- On END reduce production expr -> expr INFIXOP1 expr
-- On ELSE reduce production expr -> expr INFIXOP1 expr
-- On DONE reduce production expr -> expr INFIXOP1 expr
-- On DEF reduce production expr -> expr INFIXOP1 expr
-- On COMMA reduce production expr -> expr INFIXOP1 expr
-- On COLONGREATER reduce production expr -> expr INFIXOP1 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP1 expr
-- On COLON reduce production expr -> expr INFIXOP1 expr
-- On CLASS reduce production expr -> expr INFIXOP1 expr
-- On CHAR reduce production expr -> expr INFIXOP1 expr
-- On BEGIN reduce production expr -> expr INFIXOP1 expr
-- On BARRBRACKET reduce production expr -> expr INFIXOP1 expr
-- On BARBAR reduce production expr -> expr INFIXOP1 expr
-- On BAR reduce production expr -> expr INFIXOP1 expr
-- On ASSERT reduce production expr -> expr INFIXOP1 expr
-- On AND reduce production expr -> expr INFIXOP1 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP1 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP1 expr

State 520:
expr -> expr COLONCOLON . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 521
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 521:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr COLONCOLON expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr COLONCOLON expr
-- On WITH reduce production expr -> expr COLONCOLON expr
-- On WHILE reduce production expr -> expr COLONCOLON expr
-- On VIRTUAL reduce production expr -> expr COLONCOLON expr
-- On VAL reduce production expr -> expr COLONCOLON expr
-- On UIDENT reduce production expr -> expr COLONCOLON expr
-- On TYPE reduce production expr -> expr COLONCOLON expr
-- On TRY reduce production expr -> expr COLONCOLON expr
-- On TRUE reduce production expr -> expr COLONCOLON expr
-- On STRING reduce production expr -> expr COLONCOLON expr
-- On SHARP reduce production expr -> expr COLONCOLON expr
-- On SEMISEMI reduce production expr -> expr COLONCOLON expr
-- On SEMI reduce production expr -> expr COLONCOLON expr
-- On RPAREN reduce production expr -> expr COLONCOLON expr
-- On RBRACKET reduce production expr -> expr COLONCOLON expr
-- On RBRACE reduce production expr -> expr COLONCOLON expr
-- On QUESTION reduce production expr -> expr COLONCOLON expr
-- On PREFIXOP reduce production expr -> expr COLONCOLON expr
-- On PARSER reduce production expr -> expr COLONCOLON expr
-- On OR reduce production expr -> expr COLONCOLON expr
-- On OPEN reduce production expr -> expr COLONCOLON expr
-- On NEW reduce production expr -> expr COLONCOLON expr
-- On MODULE reduce production expr -> expr COLONCOLON expr
-- On METHOD reduce production expr -> expr COLONCOLON expr
-- On MATCH reduce production expr -> expr COLONCOLON expr
-- On LPAREN reduce production expr -> expr COLONCOLON expr
-- On LOC reduce production expr -> expr COLONCOLON expr
-- On LIDENT reduce production expr -> expr COLONCOLON expr
-- On LET reduce production expr -> expr COLONCOLON expr
-- On LESSGREATER reduce production expr -> expr COLONCOLON expr
-- On LESS reduce production expr -> expr COLONCOLON expr
-- On LBRACKETLESS reduce production expr -> expr COLONCOLON expr
-- On LBRACKETBAR reduce production expr -> expr COLONCOLON expr
-- On LBRACKET reduce production expr -> expr COLONCOLON expr
-- On LBRACELESS reduce production expr -> expr COLONCOLON expr
-- On LBRACEBAR reduce production expr -> expr COLONCOLON expr
-- On LBRACE reduce production expr -> expr COLONCOLON expr
-- On LAZY reduce production expr -> expr COLONCOLON expr
-- On INT reduce production expr -> expr COLONCOLON expr
-- On INHERIT reduce production expr -> expr COLONCOLON expr
-- On INFIXOP1 reduce production expr -> expr COLONCOLON expr
-- On INFIXOP0 reduce production expr -> expr COLONCOLON expr
-- On IN reduce production expr -> expr COLONCOLON expr
-- On IF reduce production expr -> expr COLONCOLON expr
-- On GREATERRBRACKET reduce production expr -> expr COLONCOLON expr
-- On GREATERRBRACE reduce production expr -> expr COLONCOLON expr
-- On GREATERGREATER reduce production expr -> expr COLONCOLON expr
-- On GREATER reduce production expr -> expr COLONCOLON expr
-- On FUNCTION reduce production expr -> expr COLONCOLON expr
-- On FUN reduce production expr -> expr COLONCOLON expr
-- On FOR reduce production expr -> expr COLONCOLON expr
-- On FLOAT reduce production expr -> expr COLONCOLON expr
-- On FALSE reduce production expr -> expr COLONCOLON expr
-- On EXTERNAL reduce production expr -> expr COLONCOLON expr
-- On EXCEPTION reduce production expr -> expr COLONCOLON expr
-- On EQUAL reduce production expr -> expr COLONCOLON expr
-- On EOF reduce production expr -> expr COLONCOLON expr
-- On END reduce production expr -> expr COLONCOLON expr
-- On ELSE reduce production expr -> expr COLONCOLON expr
-- On DONE reduce production expr -> expr COLONCOLON expr
-- On DEF reduce production expr -> expr COLONCOLON expr
-- On COMMA reduce production expr -> expr COLONCOLON expr
-- On COLONGREATER reduce production expr -> expr COLONCOLON expr
-- On COLONEQUAL reduce production expr -> expr COLONCOLON expr
-- On COLON reduce production expr -> expr COLONCOLON expr
-- On CLASS reduce production expr -> expr COLONCOLON expr
-- On CHAR reduce production expr -> expr COLONCOLON expr
-- On BEGIN reduce production expr -> expr COLONCOLON expr
-- On BARRBRACKET reduce production expr -> expr COLONCOLON expr
-- On BARBAR reduce production expr -> expr COLONCOLON expr
-- On BAR reduce production expr -> expr COLONCOLON expr
-- On ASSERT reduce production expr -> expr COLONCOLON expr
-- On AND reduce production expr -> expr COLONCOLON expr
-- On AMPERSAND reduce production expr -> expr COLONCOLON expr
-- On AMPERAMPER reduce production expr -> expr COLONCOLON expr

State 522:
expr -> expr LESS . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 523
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 523:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr LESS expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr LESS expr
-- On WITH reduce production expr -> expr LESS expr
-- On WHILE reduce production expr -> expr LESS expr
-- On VIRTUAL reduce production expr -> expr LESS expr
-- On VAL reduce production expr -> expr LESS expr
-- On UIDENT reduce production expr -> expr LESS expr
-- On TYPE reduce production expr -> expr LESS expr
-- On TRY reduce production expr -> expr LESS expr
-- On TRUE reduce production expr -> expr LESS expr
-- On STRING reduce production expr -> expr LESS expr
-- On SHARP reduce production expr -> expr LESS expr
-- On SEMISEMI reduce production expr -> expr LESS expr
-- On SEMI reduce production expr -> expr LESS expr
-- On RPAREN reduce production expr -> expr LESS expr
-- On RBRACKET reduce production expr -> expr LESS expr
-- On RBRACE reduce production expr -> expr LESS expr
-- On QUESTION reduce production expr -> expr LESS expr
-- On PREFIXOP reduce production expr -> expr LESS expr
-- On PARSER reduce production expr -> expr LESS expr
-- On OR reduce production expr -> expr LESS expr
-- On OPEN reduce production expr -> expr LESS expr
-- On NEW reduce production expr -> expr LESS expr
-- On MODULE reduce production expr -> expr LESS expr
-- On METHOD reduce production expr -> expr LESS expr
-- On MATCH reduce production expr -> expr LESS expr
-- On LPAREN reduce production expr -> expr LESS expr
-- On LOC reduce production expr -> expr LESS expr
-- On LIDENT reduce production expr -> expr LESS expr
-- On LET reduce production expr -> expr LESS expr
-- On LESSGREATER reduce production expr -> expr LESS expr
-- On LESS reduce production expr -> expr LESS expr
-- On LBRACKETLESS reduce production expr -> expr LESS expr
-- On LBRACKETBAR reduce production expr -> expr LESS expr
-- On LBRACKET reduce production expr -> expr LESS expr
-- On LBRACELESS reduce production expr -> expr LESS expr
-- On LBRACEBAR reduce production expr -> expr LESS expr
-- On LBRACE reduce production expr -> expr LESS expr
-- On LAZY reduce production expr -> expr LESS expr
-- On INT reduce production expr -> expr LESS expr
-- On INHERIT reduce production expr -> expr LESS expr
-- On INFIXOP0 reduce production expr -> expr LESS expr
-- On IN reduce production expr -> expr LESS expr
-- On IF reduce production expr -> expr LESS expr
-- On GREATERRBRACKET reduce production expr -> expr LESS expr
-- On GREATERRBRACE reduce production expr -> expr LESS expr
-- On GREATERGREATER reduce production expr -> expr LESS expr
-- On GREATER reduce production expr -> expr LESS expr
-- On FUNCTION reduce production expr -> expr LESS expr
-- On FUN reduce production expr -> expr LESS expr
-- On FOR reduce production expr -> expr LESS expr
-- On FLOAT reduce production expr -> expr LESS expr
-- On FALSE reduce production expr -> expr LESS expr
-- On EXTERNAL reduce production expr -> expr LESS expr
-- On EXCEPTION reduce production expr -> expr LESS expr
-- On EQUAL reduce production expr -> expr LESS expr
-- On EOF reduce production expr -> expr LESS expr
-- On END reduce production expr -> expr LESS expr
-- On ELSE reduce production expr -> expr LESS expr
-- On DONE reduce production expr -> expr LESS expr
-- On DEF reduce production expr -> expr LESS expr
-- On COMMA reduce production expr -> expr LESS expr
-- On COLONGREATER reduce production expr -> expr LESS expr
-- On COLONEQUAL reduce production expr -> expr LESS expr
-- On COLON reduce production expr -> expr LESS expr
-- On CLASS reduce production expr -> expr LESS expr
-- On CHAR reduce production expr -> expr LESS expr
-- On BEGIN reduce production expr -> expr LESS expr
-- On BARRBRACKET reduce production expr -> expr LESS expr
-- On BARBAR reduce production expr -> expr LESS expr
-- On BAR reduce production expr -> expr LESS expr
-- On ASSERT reduce production expr -> expr LESS expr
-- On AND reduce production expr -> expr LESS expr
-- On AMPERSAND reduce production expr -> expr LESS expr
-- On AMPERAMPER reduce production expr -> expr LESS expr

State 524:
expr -> expr INFIXOP0 . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 525
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 525:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP0 expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr INFIXOP0 expr
-- On WITH reduce production expr -> expr INFIXOP0 expr
-- On WHILE reduce production expr -> expr INFIXOP0 expr
-- On VIRTUAL reduce production expr -> expr INFIXOP0 expr
-- On VAL reduce production expr -> expr INFIXOP0 expr
-- On UIDENT reduce production expr -> expr INFIXOP0 expr
-- On TYPE reduce production expr -> expr INFIXOP0 expr
-- On TRY reduce production expr -> expr INFIXOP0 expr
-- On TRUE reduce production expr -> expr INFIXOP0 expr
-- On STRING reduce production expr -> expr INFIXOP0 expr
-- On SHARP reduce production expr -> expr INFIXOP0 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP0 expr
-- On SEMI reduce production expr -> expr INFIXOP0 expr
-- On RPAREN reduce production expr -> expr INFIXOP0 expr
-- On RBRACKET reduce production expr -> expr INFIXOP0 expr
-- On RBRACE reduce production expr -> expr INFIXOP0 expr
-- On QUESTION reduce production expr -> expr INFIXOP0 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP0 expr
-- On PARSER reduce production expr -> expr INFIXOP0 expr
-- On OR reduce production expr -> expr INFIXOP0 expr
-- On OPEN reduce production expr -> expr INFIXOP0 expr
-- On NEW reduce production expr -> expr INFIXOP0 expr
-- On MODULE reduce production expr -> expr INFIXOP0 expr
-- On METHOD reduce production expr -> expr INFIXOP0 expr
-- On MATCH reduce production expr -> expr INFIXOP0 expr
-- On LPAREN reduce production expr -> expr INFIXOP0 expr
-- On LOC reduce production expr -> expr INFIXOP0 expr
-- On LIDENT reduce production expr -> expr INFIXOP0 expr
-- On LET reduce production expr -> expr INFIXOP0 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP0 expr
-- On LESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP0 expr
-- On LBRACKET reduce production expr -> expr INFIXOP0 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP0 expr
-- On LBRACE reduce production expr -> expr INFIXOP0 expr
-- On LAZY reduce production expr -> expr INFIXOP0 expr
-- On INT reduce production expr -> expr INFIXOP0 expr
-- On INHERIT reduce production expr -> expr INFIXOP0 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP0 expr
-- On IN reduce production expr -> expr INFIXOP0 expr
-- On IF reduce production expr -> expr INFIXOP0 expr
-- On GREATERRBRACKET reduce production expr -> expr INFIXOP0 expr
-- On GREATERRBRACE reduce production expr -> expr INFIXOP0 expr
-- On GREATERGREATER reduce production expr -> expr INFIXOP0 expr
-- On GREATER reduce production expr -> expr INFIXOP0 expr
-- On FUNCTION reduce production expr -> expr INFIXOP0 expr
-- On FUN reduce production expr -> expr INFIXOP0 expr
-- On FOR reduce production expr -> expr INFIXOP0 expr
-- On FLOAT reduce production expr -> expr INFIXOP0 expr
-- On FALSE reduce production expr -> expr INFIXOP0 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP0 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP0 expr
-- On EQUAL reduce production expr -> expr INFIXOP0 expr
-- On EOF reduce production expr -> expr INFIXOP0 expr
-- On END reduce production expr -> expr INFIXOP0 expr
-- On ELSE reduce production expr -> expr INFIXOP0 expr
-- On DONE reduce production expr -> expr INFIXOP0 expr
-- On DEF reduce production expr -> expr INFIXOP0 expr
-- On COMMA reduce production expr -> expr INFIXOP0 expr
-- On COLONGREATER reduce production expr -> expr INFIXOP0 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP0 expr
-- On COLON reduce production expr -> expr INFIXOP0 expr
-- On CLASS reduce production expr -> expr INFIXOP0 expr
-- On CHAR reduce production expr -> expr INFIXOP0 expr
-- On BEGIN reduce production expr -> expr INFIXOP0 expr
-- On BARRBRACKET reduce production expr -> expr INFIXOP0 expr
-- On BARBAR reduce production expr -> expr INFIXOP0 expr
-- On BAR reduce production expr -> expr INFIXOP0 expr
-- On ASSERT reduce production expr -> expr INFIXOP0 expr
-- On AND reduce production expr -> expr INFIXOP0 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP0 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP0 expr

State 526:
expr -> expr GREATER . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 527
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 527:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr GREATER expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr GREATER expr
-- On WITH reduce production expr -> expr GREATER expr
-- On WHILE reduce production expr -> expr GREATER expr
-- On VIRTUAL reduce production expr -> expr GREATER expr
-- On VAL reduce production expr -> expr GREATER expr
-- On UIDENT reduce production expr -> expr GREATER expr
-- On TYPE reduce production expr -> expr GREATER expr
-- On TRY reduce production expr -> expr GREATER expr
-- On TRUE reduce production expr -> expr GREATER expr
-- On STRING reduce production expr -> expr GREATER expr
-- On SHARP reduce production expr -> expr GREATER expr
-- On SEMISEMI reduce production expr -> expr GREATER expr
-- On SEMI reduce production expr -> expr GREATER expr
-- On RPAREN reduce production expr -> expr GREATER expr
-- On RBRACKET reduce production expr -> expr GREATER expr
-- On RBRACE reduce production expr -> expr GREATER expr
-- On QUESTION reduce production expr -> expr GREATER expr
-- On PREFIXOP reduce production expr -> expr GREATER expr
-- On PARSER reduce production expr -> expr GREATER expr
-- On OR reduce production expr -> expr GREATER expr
-- On OPEN reduce production expr -> expr GREATER expr
-- On NEW reduce production expr -> expr GREATER expr
-- On MODULE reduce production expr -> expr GREATER expr
-- On METHOD reduce production expr -> expr GREATER expr
-- On MATCH reduce production expr -> expr GREATER expr
-- On LPAREN reduce production expr -> expr GREATER expr
-- On LOC reduce production expr -> expr GREATER expr
-- On LIDENT reduce production expr -> expr GREATER expr
-- On LET reduce production expr -> expr GREATER expr
-- On LESSGREATER reduce production expr -> expr GREATER expr
-- On LESS reduce production expr -> expr GREATER expr
-- On LBRACKETLESS reduce production expr -> expr GREATER expr
-- On LBRACKETBAR reduce production expr -> expr GREATER expr
-- On LBRACKET reduce production expr -> expr GREATER expr
-- On LBRACELESS reduce production expr -> expr GREATER expr
-- On LBRACEBAR reduce production expr -> expr GREATER expr
-- On LBRACE reduce production expr -> expr GREATER expr
-- On LAZY reduce production expr -> expr GREATER expr
-- On INT reduce production expr -> expr GREATER expr
-- On INHERIT reduce production expr -> expr GREATER expr
-- On INFIXOP0 reduce production expr -> expr GREATER expr
-- On IN reduce production expr -> expr GREATER expr
-- On IF reduce production expr -> expr GREATER expr
-- On GREATERRBRACKET reduce production expr -> expr GREATER expr
-- On GREATERRBRACE reduce production expr -> expr GREATER expr
-- On GREATERGREATER reduce production expr -> expr GREATER expr
-- On GREATER reduce production expr -> expr GREATER expr
-- On FUNCTION reduce production expr -> expr GREATER expr
-- On FUN reduce production expr -> expr GREATER expr
-- On FOR reduce production expr -> expr GREATER expr
-- On FLOAT reduce production expr -> expr GREATER expr
-- On FALSE reduce production expr -> expr GREATER expr
-- On EXTERNAL reduce production expr -> expr GREATER expr
-- On EXCEPTION reduce production expr -> expr GREATER expr
-- On EQUAL reduce production expr -> expr GREATER expr
-- On EOF reduce production expr -> expr GREATER expr
-- On END reduce production expr -> expr GREATER expr
-- On ELSE reduce production expr -> expr GREATER expr
-- On DONE reduce production expr -> expr GREATER expr
-- On DEF reduce production expr -> expr GREATER expr
-- On COMMA reduce production expr -> expr GREATER expr
-- On COLONGREATER reduce production expr -> expr GREATER expr
-- On COLONEQUAL reduce production expr -> expr GREATER expr
-- On COLON reduce production expr -> expr GREATER expr
-- On CLASS reduce production expr -> expr GREATER expr
-- On CHAR reduce production expr -> expr GREATER expr
-- On BEGIN reduce production expr -> expr GREATER expr
-- On BARRBRACKET reduce production expr -> expr GREATER expr
-- On BARBAR reduce production expr -> expr GREATER expr
-- On BAR reduce production expr -> expr GREATER expr
-- On ASSERT reduce production expr -> expr GREATER expr
-- On AND reduce production expr -> expr GREATER expr
-- On AMPERSAND reduce production expr -> expr GREATER expr
-- On AMPERAMPER reduce production expr -> expr GREATER expr

State 528:
expr -> expr EQUAL . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 529
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 529:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr EQUAL expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On COLONCOLON shift to state 520
-- On error reduce production expr -> expr EQUAL expr
-- On WITH reduce production expr -> expr EQUAL expr
-- On WHILE reduce production expr -> expr EQUAL expr
-- On VIRTUAL reduce production expr -> expr EQUAL expr
-- On VAL reduce production expr -> expr EQUAL expr
-- On UIDENT reduce production expr -> expr EQUAL expr
-- On TYPE reduce production expr -> expr EQUAL expr
-- On TRY reduce production expr -> expr EQUAL expr
-- On TRUE reduce production expr -> expr EQUAL expr
-- On STRING reduce production expr -> expr EQUAL expr
-- On SHARP reduce production expr -> expr EQUAL expr
-- On SEMISEMI reduce production expr -> expr EQUAL expr
-- On SEMI reduce production expr -> expr EQUAL expr
-- On RPAREN reduce production expr -> expr EQUAL expr
-- On RBRACKET reduce production expr -> expr EQUAL expr
-- On RBRACE reduce production expr -> expr EQUAL expr
-- On QUESTION reduce production expr -> expr EQUAL expr
-- On PREFIXOP reduce production expr -> expr EQUAL expr
-- On PARSER reduce production expr -> expr EQUAL expr
-- On OR reduce production expr -> expr EQUAL expr
-- On OPEN reduce production expr -> expr EQUAL expr
-- On NEW reduce production expr -> expr EQUAL expr
-- On MODULE reduce production expr -> expr EQUAL expr
-- On METHOD reduce production expr -> expr EQUAL expr
-- On MATCH reduce production expr -> expr EQUAL expr
-- On LPAREN reduce production expr -> expr EQUAL expr
-- On LOC reduce production expr -> expr EQUAL expr
-- On LIDENT reduce production expr -> expr EQUAL expr
-- On LET reduce production expr -> expr EQUAL expr
-- On LESSGREATER reduce production expr -> expr EQUAL expr
-- On LESS reduce production expr -> expr EQUAL expr
-- On LBRACKETLESS reduce production expr -> expr EQUAL expr
-- On LBRACKETBAR reduce production expr -> expr EQUAL expr
-- On LBRACKET reduce production expr -> expr EQUAL expr
-- On LBRACELESS reduce production expr -> expr EQUAL expr
-- On LBRACEBAR reduce production expr -> expr EQUAL expr
-- On LBRACE reduce production expr -> expr EQUAL expr
-- On LAZY reduce production expr -> expr EQUAL expr
-- On INT reduce production expr -> expr EQUAL expr
-- On INHERIT reduce production expr -> expr EQUAL expr
-- On INFIXOP0 reduce production expr -> expr EQUAL expr
-- On IN reduce production expr -> expr EQUAL expr
-- On IF reduce production expr -> expr EQUAL expr
-- On GREATERRBRACKET reduce production expr -> expr EQUAL expr
-- On GREATERRBRACE reduce production expr -> expr EQUAL expr
-- On GREATERGREATER reduce production expr -> expr EQUAL expr
-- On GREATER reduce production expr -> expr EQUAL expr
-- On FUNCTION reduce production expr -> expr EQUAL expr
-- On FUN reduce production expr -> expr EQUAL expr
-- On FOR reduce production expr -> expr EQUAL expr
-- On FLOAT reduce production expr -> expr EQUAL expr
-- On FALSE reduce production expr -> expr EQUAL expr
-- On EXTERNAL reduce production expr -> expr EQUAL expr
-- On EXCEPTION reduce production expr -> expr EQUAL expr
-- On EQUAL reduce production expr -> expr EQUAL expr
-- On EOF reduce production expr -> expr EQUAL expr
-- On END reduce production expr -> expr EQUAL expr
-- On ELSE reduce production expr -> expr EQUAL expr
-- On DONE reduce production expr -> expr EQUAL expr
-- On DEF reduce production expr -> expr EQUAL expr
-- On COMMA reduce production expr -> expr EQUAL expr
-- On COLONGREATER reduce production expr -> expr EQUAL expr
-- On COLONEQUAL reduce production expr -> expr EQUAL expr
-- On COLON reduce production expr -> expr EQUAL expr
-- On CLASS reduce production expr -> expr EQUAL expr
-- On CHAR reduce production expr -> expr EQUAL expr
-- On BEGIN reduce production expr -> expr EQUAL expr
-- On BARRBRACKET reduce production expr -> expr EQUAL expr
-- On BARBAR reduce production expr -> expr EQUAL expr
-- On BAR reduce production expr -> expr EQUAL expr
-- On ASSERT reduce production expr -> expr EQUAL expr
-- On AND reduce production expr -> expr EQUAL expr
-- On AMPERSAND reduce production expr -> expr EQUAL expr
-- On AMPERAMPER reduce production expr -> expr EQUAL expr

State 530:
expr -> expr BARBAR . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 531
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 531:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr BARBAR expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> expr BARBAR expr
-- On WITH reduce production expr -> expr BARBAR expr
-- On WHILE reduce production expr -> expr BARBAR expr
-- On VIRTUAL reduce production expr -> expr BARBAR expr
-- On VAL reduce production expr -> expr BARBAR expr
-- On UIDENT reduce production expr -> expr BARBAR expr
-- On TYPE reduce production expr -> expr BARBAR expr
-- On TRY reduce production expr -> expr BARBAR expr
-- On TRUE reduce production expr -> expr BARBAR expr
-- On STRING reduce production expr -> expr BARBAR expr
-- On SHARP reduce production expr -> expr BARBAR expr
-- On SEMISEMI reduce production expr -> expr BARBAR expr
-- On SEMI reduce production expr -> expr BARBAR expr
-- On RPAREN reduce production expr -> expr BARBAR expr
-- On RBRACKET reduce production expr -> expr BARBAR expr
-- On RBRACE reduce production expr -> expr BARBAR expr
-- On QUESTION reduce production expr -> expr BARBAR expr
-- On PREFIXOP reduce production expr -> expr BARBAR expr
-- On PARSER reduce production expr -> expr BARBAR expr
-- On OPEN reduce production expr -> expr BARBAR expr
-- On NEW reduce production expr -> expr BARBAR expr
-- On MODULE reduce production expr -> expr BARBAR expr
-- On METHOD reduce production expr -> expr BARBAR expr
-- On MATCH reduce production expr -> expr BARBAR expr
-- On LPAREN reduce production expr -> expr BARBAR expr
-- On LOC reduce production expr -> expr BARBAR expr
-- On LIDENT reduce production expr -> expr BARBAR expr
-- On LET reduce production expr -> expr BARBAR expr
-- On LBRACKETLESS reduce production expr -> expr BARBAR expr
-- On LBRACKETBAR reduce production expr -> expr BARBAR expr
-- On LBRACKET reduce production expr -> expr BARBAR expr
-- On LBRACELESS reduce production expr -> expr BARBAR expr
-- On LBRACEBAR reduce production expr -> expr BARBAR expr
-- On LBRACE reduce production expr -> expr BARBAR expr
-- On LAZY reduce production expr -> expr BARBAR expr
-- On INT reduce production expr -> expr BARBAR expr
-- On INHERIT reduce production expr -> expr BARBAR expr
-- On IN reduce production expr -> expr BARBAR expr
-- On IF reduce production expr -> expr BARBAR expr
-- On GREATERRBRACKET reduce production expr -> expr BARBAR expr
-- On GREATERRBRACE reduce production expr -> expr BARBAR expr
-- On GREATERGREATER reduce production expr -> expr BARBAR expr
-- On FUNCTION reduce production expr -> expr BARBAR expr
-- On FUN reduce production expr -> expr BARBAR expr
-- On FOR reduce production expr -> expr BARBAR expr
-- On FLOAT reduce production expr -> expr BARBAR expr
-- On FALSE reduce production expr -> expr BARBAR expr
-- On EXTERNAL reduce production expr -> expr BARBAR expr
-- On EXCEPTION reduce production expr -> expr BARBAR expr
-- On EOF reduce production expr -> expr BARBAR expr
-- On END reduce production expr -> expr BARBAR expr
-- On ELSE reduce production expr -> expr BARBAR expr
-- On DONE reduce production expr -> expr BARBAR expr
-- On DEF reduce production expr -> expr BARBAR expr
-- On COMMA reduce production expr -> expr BARBAR expr
-- On COLONGREATER reduce production expr -> expr BARBAR expr
-- On COLONEQUAL reduce production expr -> expr BARBAR expr
-- On COLON reduce production expr -> expr BARBAR expr
-- On CLASS reduce production expr -> expr BARBAR expr
-- On CHAR reduce production expr -> expr BARBAR expr
-- On BEGIN reduce production expr -> expr BARBAR expr
-- On BARRBRACKET reduce production expr -> expr BARBAR expr
-- On BAR reduce production expr -> expr BARBAR expr
-- On ASSERT reduce production expr -> expr BARBAR expr
-- On AND reduce production expr -> expr BARBAR expr

State 532:
expr -> expr AMPERSAND . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 533
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 533:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERSAND expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> expr AMPERSAND expr
-- On WITH reduce production expr -> expr AMPERSAND expr
-- On WHILE reduce production expr -> expr AMPERSAND expr
-- On VIRTUAL reduce production expr -> expr AMPERSAND expr
-- On VAL reduce production expr -> expr AMPERSAND expr
-- On UIDENT reduce production expr -> expr AMPERSAND expr
-- On TYPE reduce production expr -> expr AMPERSAND expr
-- On TRY reduce production expr -> expr AMPERSAND expr
-- On TRUE reduce production expr -> expr AMPERSAND expr
-- On STRING reduce production expr -> expr AMPERSAND expr
-- On SHARP reduce production expr -> expr AMPERSAND expr
-- On SEMISEMI reduce production expr -> expr AMPERSAND expr
-- On SEMI reduce production expr -> expr AMPERSAND expr
-- On RPAREN reduce production expr -> expr AMPERSAND expr
-- On RBRACKET reduce production expr -> expr AMPERSAND expr
-- On RBRACE reduce production expr -> expr AMPERSAND expr
-- On QUESTION reduce production expr -> expr AMPERSAND expr
-- On PREFIXOP reduce production expr -> expr AMPERSAND expr
-- On PARSER reduce production expr -> expr AMPERSAND expr
-- On OR reduce production expr -> expr AMPERSAND expr
-- On OPEN reduce production expr -> expr AMPERSAND expr
-- On NEW reduce production expr -> expr AMPERSAND expr
-- On MODULE reduce production expr -> expr AMPERSAND expr
-- On METHOD reduce production expr -> expr AMPERSAND expr
-- On MATCH reduce production expr -> expr AMPERSAND expr
-- On LPAREN reduce production expr -> expr AMPERSAND expr
-- On LOC reduce production expr -> expr AMPERSAND expr
-- On LIDENT reduce production expr -> expr AMPERSAND expr
-- On LET reduce production expr -> expr AMPERSAND expr
-- On LBRACKETLESS reduce production expr -> expr AMPERSAND expr
-- On LBRACKETBAR reduce production expr -> expr AMPERSAND expr
-- On LBRACKET reduce production expr -> expr AMPERSAND expr
-- On LBRACELESS reduce production expr -> expr AMPERSAND expr
-- On LBRACEBAR reduce production expr -> expr AMPERSAND expr
-- On LBRACE reduce production expr -> expr AMPERSAND expr
-- On LAZY reduce production expr -> expr AMPERSAND expr
-- On INT reduce production expr -> expr AMPERSAND expr
-- On INHERIT reduce production expr -> expr AMPERSAND expr
-- On IN reduce production expr -> expr AMPERSAND expr
-- On IF reduce production expr -> expr AMPERSAND expr
-- On GREATERRBRACKET reduce production expr -> expr AMPERSAND expr
-- On GREATERRBRACE reduce production expr -> expr AMPERSAND expr
-- On GREATERGREATER reduce production expr -> expr AMPERSAND expr
-- On FUNCTION reduce production expr -> expr AMPERSAND expr
-- On FUN reduce production expr -> expr AMPERSAND expr
-- On FOR reduce production expr -> expr AMPERSAND expr
-- On FLOAT reduce production expr -> expr AMPERSAND expr
-- On FALSE reduce production expr -> expr AMPERSAND expr
-- On EXTERNAL reduce production expr -> expr AMPERSAND expr
-- On EXCEPTION reduce production expr -> expr AMPERSAND expr
-- On EOF reduce production expr -> expr AMPERSAND expr
-- On END reduce production expr -> expr AMPERSAND expr
-- On ELSE reduce production expr -> expr AMPERSAND expr
-- On DONE reduce production expr -> expr AMPERSAND expr
-- On DEF reduce production expr -> expr AMPERSAND expr
-- On COMMA reduce production expr -> expr AMPERSAND expr
-- On COLONGREATER reduce production expr -> expr AMPERSAND expr
-- On COLONEQUAL reduce production expr -> expr AMPERSAND expr
-- On COLON reduce production expr -> expr AMPERSAND expr
-- On CLASS reduce production expr -> expr AMPERSAND expr
-- On CHAR reduce production expr -> expr AMPERSAND expr
-- On BEGIN reduce production expr -> expr AMPERSAND expr
-- On BARRBRACKET reduce production expr -> expr AMPERSAND expr
-- On BARBAR reduce production expr -> expr AMPERSAND expr
-- On BAR reduce production expr -> expr AMPERSAND expr
-- On ASSERT reduce production expr -> expr AMPERSAND expr
-- On AND reduce production expr -> expr AMPERSAND expr

State 534:
expr -> expr AMPERAMPER . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 535
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 535:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERAMPER expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> expr AMPERAMPER expr
-- On WITH reduce production expr -> expr AMPERAMPER expr
-- On WHILE reduce production expr -> expr AMPERAMPER expr
-- On VIRTUAL reduce production expr -> expr AMPERAMPER expr
-- On VAL reduce production expr -> expr AMPERAMPER expr
-- On UIDENT reduce production expr -> expr AMPERAMPER expr
-- On TYPE reduce production expr -> expr AMPERAMPER expr
-- On TRY reduce production expr -> expr AMPERAMPER expr
-- On TRUE reduce production expr -> expr AMPERAMPER expr
-- On STRING reduce production expr -> expr AMPERAMPER expr
-- On SHARP reduce production expr -> expr AMPERAMPER expr
-- On SEMISEMI reduce production expr -> expr AMPERAMPER expr
-- On SEMI reduce production expr -> expr AMPERAMPER expr
-- On RPAREN reduce production expr -> expr AMPERAMPER expr
-- On RBRACKET reduce production expr -> expr AMPERAMPER expr
-- On RBRACE reduce production expr -> expr AMPERAMPER expr
-- On QUESTION reduce production expr -> expr AMPERAMPER expr
-- On PREFIXOP reduce production expr -> expr AMPERAMPER expr
-- On PARSER reduce production expr -> expr AMPERAMPER expr
-- On OR reduce production expr -> expr AMPERAMPER expr
-- On OPEN reduce production expr -> expr AMPERAMPER expr
-- On NEW reduce production expr -> expr AMPERAMPER expr
-- On MODULE reduce production expr -> expr AMPERAMPER expr
-- On METHOD reduce production expr -> expr AMPERAMPER expr
-- On MATCH reduce production expr -> expr AMPERAMPER expr
-- On LPAREN reduce production expr -> expr AMPERAMPER expr
-- On LOC reduce production expr -> expr AMPERAMPER expr
-- On LIDENT reduce production expr -> expr AMPERAMPER expr
-- On LET reduce production expr -> expr AMPERAMPER expr
-- On LBRACKETLESS reduce production expr -> expr AMPERAMPER expr
-- On LBRACKETBAR reduce production expr -> expr AMPERAMPER expr
-- On LBRACKET reduce production expr -> expr AMPERAMPER expr
-- On LBRACELESS reduce production expr -> expr AMPERAMPER expr
-- On LBRACEBAR reduce production expr -> expr AMPERAMPER expr
-- On LBRACE reduce production expr -> expr AMPERAMPER expr
-- On LAZY reduce production expr -> expr AMPERAMPER expr
-- On INT reduce production expr -> expr AMPERAMPER expr
-- On INHERIT reduce production expr -> expr AMPERAMPER expr
-- On IN reduce production expr -> expr AMPERAMPER expr
-- On IF reduce production expr -> expr AMPERAMPER expr
-- On GREATERRBRACKET reduce production expr -> expr AMPERAMPER expr
-- On GREATERRBRACE reduce production expr -> expr AMPERAMPER expr
-- On GREATERGREATER reduce production expr -> expr AMPERAMPER expr
-- On FUNCTION reduce production expr -> expr AMPERAMPER expr
-- On FUN reduce production expr -> expr AMPERAMPER expr
-- On FOR reduce production expr -> expr AMPERAMPER expr
-- On FLOAT reduce production expr -> expr AMPERAMPER expr
-- On FALSE reduce production expr -> expr AMPERAMPER expr
-- On EXTERNAL reduce production expr -> expr AMPERAMPER expr
-- On EXCEPTION reduce production expr -> expr AMPERAMPER expr
-- On EOF reduce production expr -> expr AMPERAMPER expr
-- On END reduce production expr -> expr AMPERAMPER expr
-- On ELSE reduce production expr -> expr AMPERAMPER expr
-- On DONE reduce production expr -> expr AMPERAMPER expr
-- On DEF reduce production expr -> expr AMPERAMPER expr
-- On COMMA reduce production expr -> expr AMPERAMPER expr
-- On COLONGREATER reduce production expr -> expr AMPERAMPER expr
-- On COLONEQUAL reduce production expr -> expr AMPERAMPER expr
-- On COLON reduce production expr -> expr AMPERAMPER expr
-- On CLASS reduce production expr -> expr AMPERAMPER expr
-- On CHAR reduce production expr -> expr AMPERAMPER expr
-- On BEGIN reduce production expr -> expr AMPERAMPER expr
-- On BARRBRACKET reduce production expr -> expr AMPERAMPER expr
-- On BARBAR reduce production expr -> expr AMPERAMPER expr
-- On BAR reduce production expr -> expr AMPERAMPER expr
-- On ASSERT reduce production expr -> expr AMPERAMPER expr
-- On AND reduce production expr -> expr AMPERAMPER expr

State 536:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> label LESSMINUS expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> label LESSMINUS expr
-- On WITH reduce production expr -> label LESSMINUS expr
-- On WHILE reduce production expr -> label LESSMINUS expr
-- On VIRTUAL reduce production expr -> label LESSMINUS expr
-- On VAL reduce production expr -> label LESSMINUS expr
-- On UIDENT reduce production expr -> label LESSMINUS expr
-- On TYPE reduce production expr -> label LESSMINUS expr
-- On TRY reduce production expr -> label LESSMINUS expr
-- On TRUE reduce production expr -> label LESSMINUS expr
-- On STRING reduce production expr -> label LESSMINUS expr
-- On SHARP reduce production expr -> label LESSMINUS expr
-- On SEMISEMI reduce production expr -> label LESSMINUS expr
-- On SEMI reduce production expr -> label LESSMINUS expr
-- On RPAREN reduce production expr -> label LESSMINUS expr
-- On RBRACKET reduce production expr -> label LESSMINUS expr
-- On RBRACE reduce production expr -> label LESSMINUS expr
-- On QUESTION reduce production expr -> label LESSMINUS expr
-- On PREFIXOP reduce production expr -> label LESSMINUS expr
-- On PARSER reduce production expr -> label LESSMINUS expr
-- On OPEN reduce production expr -> label LESSMINUS expr
-- On NEW reduce production expr -> label LESSMINUS expr
-- On MODULE reduce production expr -> label LESSMINUS expr
-- On METHOD reduce production expr -> label LESSMINUS expr
-- On MATCH reduce production expr -> label LESSMINUS expr
-- On LPAREN reduce production expr -> label LESSMINUS expr
-- On LOC reduce production expr -> label LESSMINUS expr
-- On LIDENT reduce production expr -> label LESSMINUS expr
-- On LET reduce production expr -> label LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> label LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> label LESSMINUS expr
-- On LBRACKET reduce production expr -> label LESSMINUS expr
-- On LBRACELESS reduce production expr -> label LESSMINUS expr
-- On LBRACEBAR reduce production expr -> label LESSMINUS expr
-- On LBRACE reduce production expr -> label LESSMINUS expr
-- On LAZY reduce production expr -> label LESSMINUS expr
-- On INT reduce production expr -> label LESSMINUS expr
-- On INHERIT reduce production expr -> label LESSMINUS expr
-- On IN reduce production expr -> label LESSMINUS expr
-- On IF reduce production expr -> label LESSMINUS expr
-- On GREATERRBRACKET reduce production expr -> label LESSMINUS expr
-- On GREATERRBRACE reduce production expr -> label LESSMINUS expr
-- On GREATERGREATER reduce production expr -> label LESSMINUS expr
-- On FUNCTION reduce production expr -> label LESSMINUS expr
-- On FUN reduce production expr -> label LESSMINUS expr
-- On FOR reduce production expr -> label LESSMINUS expr
-- On FLOAT reduce production expr -> label LESSMINUS expr
-- On FALSE reduce production expr -> label LESSMINUS expr
-- On EXTERNAL reduce production expr -> label LESSMINUS expr
-- On EXCEPTION reduce production expr -> label LESSMINUS expr
-- On EOF reduce production expr -> label LESSMINUS expr
-- On END reduce production expr -> label LESSMINUS expr
-- On ELSE reduce production expr -> label LESSMINUS expr
-- On DONE reduce production expr -> label LESSMINUS expr
-- On DEF reduce production expr -> label LESSMINUS expr
-- On COLONGREATER reduce production expr -> label LESSMINUS expr
-- On COLON reduce production expr -> label LESSMINUS expr
-- On CLASS reduce production expr -> label LESSMINUS expr
-- On CHAR reduce production expr -> label LESSMINUS expr
-- On BEGIN reduce production expr -> label LESSMINUS expr
-- On BARRBRACKET reduce production expr -> label LESSMINUS expr
-- On BAR reduce production expr -> label LESSMINUS expr
-- On ASSERT reduce production expr -> label LESSMINUS expr
-- On AND reduce production expr -> label LESSMINUS expr

State 537:
expr_comma_list -> expr COMMA . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 538
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 538:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr_comma_list -> expr COMMA expr
-- On WITH reduce production expr_comma_list -> expr COMMA expr
-- On WHILE reduce production expr_comma_list -> expr COMMA expr
-- On VIRTUAL reduce production expr_comma_list -> expr COMMA expr
-- On VAL reduce production expr_comma_list -> expr COMMA expr
-- On UIDENT reduce production expr_comma_list -> expr COMMA expr
-- On TYPE reduce production expr_comma_list -> expr COMMA expr
-- On TRY reduce production expr_comma_list -> expr COMMA expr
-- On TRUE reduce production expr_comma_list -> expr COMMA expr
-- On STRING reduce production expr_comma_list -> expr COMMA expr
-- On SHARP reduce production expr_comma_list -> expr COMMA expr
-- On SEMISEMI reduce production expr_comma_list -> expr COMMA expr
-- On SEMI reduce production expr_comma_list -> expr COMMA expr
-- On RPAREN reduce production expr_comma_list -> expr COMMA expr
-- On RBRACKET reduce production expr_comma_list -> expr COMMA expr
-- On RBRACE reduce production expr_comma_list -> expr COMMA expr
-- On QUESTION reduce production expr_comma_list -> expr COMMA expr
-- On PREFIXOP reduce production expr_comma_list -> expr COMMA expr
-- On PARSER reduce production expr_comma_list -> expr COMMA expr
-- On OPEN reduce production expr_comma_list -> expr COMMA expr
-- On NEW reduce production expr_comma_list -> expr COMMA expr
-- On MODULE reduce production expr_comma_list -> expr COMMA expr
-- On METHOD reduce production expr_comma_list -> expr COMMA expr
-- On MATCH reduce production expr_comma_list -> expr COMMA expr
-- On LPAREN reduce production expr_comma_list -> expr COMMA expr
-- On LOC reduce production expr_comma_list -> expr COMMA expr
-- On LIDENT reduce production expr_comma_list -> expr COMMA expr
-- On LET reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKETLESS reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKETBAR reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKET reduce production expr_comma_list -> expr COMMA expr
-- On LBRACELESS reduce production expr_comma_list -> expr COMMA expr
-- On LBRACEBAR reduce production expr_comma_list -> expr COMMA expr
-- On LBRACE reduce production expr_comma_list -> expr COMMA expr
-- On LAZY reduce production expr_comma_list -> expr COMMA expr
-- On INT reduce production expr_comma_list -> expr COMMA expr
-- On INHERIT reduce production expr_comma_list -> expr COMMA expr
-- On IN reduce production expr_comma_list -> expr COMMA expr
-- On IF reduce production expr_comma_list -> expr COMMA expr
-- On GREATERRBRACKET reduce production expr_comma_list -> expr COMMA expr
-- On GREATERRBRACE reduce production expr_comma_list -> expr COMMA expr
-- On GREATERGREATER reduce production expr_comma_list -> expr COMMA expr
-- On FUNCTION reduce production expr_comma_list -> expr COMMA expr
-- On FUN reduce production expr_comma_list -> expr COMMA expr
-- On FOR reduce production expr_comma_list -> expr COMMA expr
-- On FLOAT reduce production expr_comma_list -> expr COMMA expr
-- On FALSE reduce production expr_comma_list -> expr COMMA expr
-- On EXTERNAL reduce production expr_comma_list -> expr COMMA expr
-- On EXCEPTION reduce production expr_comma_list -> expr COMMA expr
-- On EOF reduce production expr_comma_list -> expr COMMA expr
-- On END reduce production expr_comma_list -> expr COMMA expr
-- On ELSE reduce production expr_comma_list -> expr COMMA expr
-- On DONE reduce production expr_comma_list -> expr COMMA expr
-- On DEF reduce production expr_comma_list -> expr COMMA expr
-- On COMMA reduce production expr_comma_list -> expr COMMA expr
-- On COLONGREATER reduce production expr_comma_list -> expr COMMA expr
-- On COLONEQUAL reduce production expr_comma_list -> expr COMMA expr
-- On COLON reduce production expr_comma_list -> expr COMMA expr
-- On CLASS reduce production expr_comma_list -> expr COMMA expr
-- On CHAR reduce production expr_comma_list -> expr COMMA expr
-- On BEGIN reduce production expr_comma_list -> expr COMMA expr
-- On BARRBRACKET reduce production expr_comma_list -> expr COMMA expr
-- On BAR reduce production expr_comma_list -> expr COMMA expr
-- On ASSERT reduce production expr_comma_list -> expr COMMA expr
-- On AND reduce production expr_comma_list -> expr COMMA expr

State 539:
expr -> expr COLONEQUAL . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 540
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 540:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr COLONEQUAL expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> expr COLONEQUAL expr
-- On WITH reduce production expr -> expr COLONEQUAL expr
-- On WHILE reduce production expr -> expr COLONEQUAL expr
-- On VIRTUAL reduce production expr -> expr COLONEQUAL expr
-- On VAL reduce production expr -> expr COLONEQUAL expr
-- On UIDENT reduce production expr -> expr COLONEQUAL expr
-- On TYPE reduce production expr -> expr COLONEQUAL expr
-- On TRY reduce production expr -> expr COLONEQUAL expr
-- On TRUE reduce production expr -> expr COLONEQUAL expr
-- On STRING reduce production expr -> expr COLONEQUAL expr
-- On SHARP reduce production expr -> expr COLONEQUAL expr
-- On SEMISEMI reduce production expr -> expr COLONEQUAL expr
-- On SEMI reduce production expr -> expr COLONEQUAL expr
-- On RPAREN reduce production expr -> expr COLONEQUAL expr
-- On RBRACKET reduce production expr -> expr COLONEQUAL expr
-- On RBRACE reduce production expr -> expr COLONEQUAL expr
-- On QUESTION reduce production expr -> expr COLONEQUAL expr
-- On PREFIXOP reduce production expr -> expr COLONEQUAL expr
-- On PARSER reduce production expr -> expr COLONEQUAL expr
-- On OPEN reduce production expr -> expr COLONEQUAL expr
-- On NEW reduce production expr -> expr COLONEQUAL expr
-- On MODULE reduce production expr -> expr COLONEQUAL expr
-- On METHOD reduce production expr -> expr COLONEQUAL expr
-- On MATCH reduce production expr -> expr COLONEQUAL expr
-- On LPAREN reduce production expr -> expr COLONEQUAL expr
-- On LOC reduce production expr -> expr COLONEQUAL expr
-- On LIDENT reduce production expr -> expr COLONEQUAL expr
-- On LET reduce production expr -> expr COLONEQUAL expr
-- On LBRACKETLESS reduce production expr -> expr COLONEQUAL expr
-- On LBRACKETBAR reduce production expr -> expr COLONEQUAL expr
-- On LBRACKET reduce production expr -> expr COLONEQUAL expr
-- On LBRACELESS reduce production expr -> expr COLONEQUAL expr
-- On LBRACEBAR reduce production expr -> expr COLONEQUAL expr
-- On LBRACE reduce production expr -> expr COLONEQUAL expr
-- On LAZY reduce production expr -> expr COLONEQUAL expr
-- On INT reduce production expr -> expr COLONEQUAL expr
-- On INHERIT reduce production expr -> expr COLONEQUAL expr
-- On IN reduce production expr -> expr COLONEQUAL expr
-- On IF reduce production expr -> expr COLONEQUAL expr
-- On GREATERRBRACKET reduce production expr -> expr COLONEQUAL expr
-- On GREATERRBRACE reduce production expr -> expr COLONEQUAL expr
-- On GREATERGREATER reduce production expr -> expr COLONEQUAL expr
-- On FUNCTION reduce production expr -> expr COLONEQUAL expr
-- On FUN reduce production expr -> expr COLONEQUAL expr
-- On FOR reduce production expr -> expr COLONEQUAL expr
-- On FLOAT reduce production expr -> expr COLONEQUAL expr
-- On FALSE reduce production expr -> expr COLONEQUAL expr
-- On EXTERNAL reduce production expr -> expr COLONEQUAL expr
-- On EXCEPTION reduce production expr -> expr COLONEQUAL expr
-- On EOF reduce production expr -> expr COLONEQUAL expr
-- On END reduce production expr -> expr COLONEQUAL expr
-- On ELSE reduce production expr -> expr COLONEQUAL expr
-- On DONE reduce production expr -> expr COLONEQUAL expr
-- On DEF reduce production expr -> expr COLONEQUAL expr
-- On COLONGREATER reduce production expr -> expr COLONEQUAL expr
-- On COLON reduce production expr -> expr COLONEQUAL expr
-- On CLASS reduce production expr -> expr COLONEQUAL expr
-- On CHAR reduce production expr -> expr COLONEQUAL expr
-- On BEGIN reduce production expr -> expr COLONEQUAL expr
-- On BARRBRACKET reduce production expr -> expr COLONEQUAL expr
-- On BAR reduce production expr -> expr COLONEQUAL expr
-- On ASSERT reduce production expr -> expr COLONEQUAL expr
-- On AND reduce production expr -> expr COLONEQUAL expr

State 541:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI RPAREN OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONGREATER COLONEQUAL COLONCOLON COLON BARBAR AMPERSAND AMPERAMPER ]
list_of_exprs -> LPAREN expr . RPAREN [ error GREATERGREATER ]
seq_expr -> expr . [ error RPAREN COLONGREATER COLON ]
seq_expr -> expr . SEMI [ error RPAREN COLONGREATER COLON ]
seq_expr -> expr . SEMI seq_expr [ error RPAREN COLONGREATER COLON ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On SEMI shift to state 542
-- On RPAREN shift to state 545
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production seq_expr -> expr
-- On RPAREN reduce production seq_expr -> expr
-- On COLONGREATER reduce production seq_expr -> expr
-- On COLON reduce production seq_expr -> expr
** Conflict on RPAREN

State 542:
seq_expr -> expr SEMI . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 543
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production seq_expr -> expr SEMI
-- On WITH reduce production seq_expr -> expr SEMI
-- On WHILE reduce production seq_expr -> expr SEMI
-- On VIRTUAL reduce production seq_expr -> expr SEMI
-- On VAL reduce production seq_expr -> expr SEMI
-- On UIDENT reduce production seq_expr -> expr SEMI
-- On TYPE reduce production seq_expr -> expr SEMI
-- On TRY reduce production seq_expr -> expr SEMI
-- On TRUE reduce production seq_expr -> expr SEMI
-- On STRING reduce production seq_expr -> expr SEMI
-- On STAR reduce production seq_expr -> expr SEMI
-- On SHARP reduce production seq_expr -> expr SEMI
-- On SEMISEMI reduce production seq_expr -> expr SEMI
-- On SEMI reduce production seq_expr -> expr SEMI
-- On RPAREN reduce production seq_expr -> expr SEMI
-- On RBRACKET reduce production seq_expr -> expr SEMI
-- On RBRACE reduce production seq_expr -> expr SEMI
-- On QUESTION reduce production seq_expr -> expr SEMI
-- On PARSER reduce production seq_expr -> expr SEMI
-- On OR reduce production seq_expr -> expr SEMI
-- On OPEN reduce production seq_expr -> expr SEMI
-- On NEW reduce production seq_expr -> expr SEMI
-- On MODULE reduce production seq_expr -> expr SEMI
-- On METHOD reduce production seq_expr -> expr SEMI
-- On MATCH reduce production seq_expr -> expr SEMI
-- On LPAREN reduce production seq_expr -> expr SEMI
-- On LOC reduce production seq_expr -> expr SEMI
-- On LIDENT reduce production seq_expr -> expr SEMI
-- On LET reduce production seq_expr -> expr SEMI
-- On LESSGREATER reduce production seq_expr -> expr SEMI
-- On LESS reduce production seq_expr -> expr SEMI
-- On LBRACKETLESS reduce production seq_expr -> expr SEMI
-- On LBRACKETBAR reduce production seq_expr -> expr SEMI
-- On LBRACKET reduce production seq_expr -> expr SEMI
-- On LBRACELESS reduce production seq_expr -> expr SEMI
-- On LBRACEBAR reduce production seq_expr -> expr SEMI
-- On LBRACE reduce production seq_expr -> expr SEMI
-- On LAZY reduce production seq_expr -> expr SEMI
-- On INT reduce production seq_expr -> expr SEMI
-- On INHERIT reduce production seq_expr -> expr SEMI
-- On INFIXOP4 reduce production seq_expr -> expr SEMI
-- On INFIXOP3 reduce production seq_expr -> expr SEMI
-- On INFIXOP2 reduce production seq_expr -> expr SEMI
-- On INFIXOP1 reduce production seq_expr -> expr SEMI
-- On INFIXOP0 reduce production seq_expr -> expr SEMI
-- On IN reduce production seq_expr -> expr SEMI
-- On IF reduce production seq_expr -> expr SEMI
-- On GREATERRBRACKET reduce production seq_expr -> expr SEMI
-- On GREATERRBRACE reduce production seq_expr -> expr SEMI
-- On GREATERGREATER reduce production seq_expr -> expr SEMI
-- On GREATER reduce production seq_expr -> expr SEMI
-- On FUNCTION reduce production seq_expr -> expr SEMI
-- On FUN reduce production seq_expr -> expr SEMI
-- On FOR reduce production seq_expr -> expr SEMI
-- On FLOAT reduce production seq_expr -> expr SEMI
-- On FALSE reduce production seq_expr -> expr SEMI
-- On EXTERNAL reduce production seq_expr -> expr SEMI
-- On EXCEPTION reduce production seq_expr -> expr SEMI
-- On EQUAL reduce production seq_expr -> expr SEMI
-- On EOF reduce production seq_expr -> expr SEMI
-- On END reduce production seq_expr -> expr SEMI
-- On ELSE reduce production seq_expr -> expr SEMI
-- On DONE reduce production seq_expr -> expr SEMI
-- On DEF reduce production seq_expr -> expr SEMI
-- On COMMA reduce production seq_expr -> expr SEMI
-- On COLONGREATER reduce production seq_expr -> expr SEMI
-- On COLONEQUAL reduce production seq_expr -> expr SEMI
-- On COLONCOLON reduce production seq_expr -> expr SEMI
-- On COLON reduce production seq_expr -> expr SEMI
-- On CLASS reduce production seq_expr -> expr SEMI
-- On CHAR reduce production seq_expr -> expr SEMI
-- On BEGIN reduce production seq_expr -> expr SEMI
-- On BARRBRACKET reduce production seq_expr -> expr SEMI
-- On BARBAR reduce production seq_expr -> expr SEMI
-- On BAR reduce production seq_expr -> expr SEMI
-- On ASSERT reduce production seq_expr -> expr SEMI
-- On AND reduce production seq_expr -> expr SEMI
-- On AMPERSAND reduce production seq_expr -> expr SEMI
-- On AMPERAMPER reduce production seq_expr -> expr SEMI
** Conflict on WHILE UIDENT TRY TRUE STRING PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 543:
seq_expr -> expr SEMI seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production seq_expr -> expr SEMI seq_expr
-- On WITH reduce production seq_expr -> expr SEMI seq_expr
-- On WHILE reduce production seq_expr -> expr SEMI seq_expr
-- On VIRTUAL reduce production seq_expr -> expr SEMI seq_expr
-- On VAL reduce production seq_expr -> expr SEMI seq_expr
-- On UIDENT reduce production seq_expr -> expr SEMI seq_expr
-- On TYPE reduce production seq_expr -> expr SEMI seq_expr
-- On TRY reduce production seq_expr -> expr SEMI seq_expr
-- On TRUE reduce production seq_expr -> expr SEMI seq_expr
-- On SUBTRACTIVE reduce production seq_expr -> expr SEMI seq_expr
-- On STRING reduce production seq_expr -> expr SEMI seq_expr
-- On STAR reduce production seq_expr -> expr SEMI seq_expr
-- On SHARP reduce production seq_expr -> expr SEMI seq_expr
-- On SEMISEMI reduce production seq_expr -> expr SEMI seq_expr
-- On SEMI reduce production seq_expr -> expr SEMI seq_expr
-- On RPAREN reduce production seq_expr -> expr SEMI seq_expr
-- On RBRACKET reduce production seq_expr -> expr SEMI seq_expr
-- On RBRACE reduce production seq_expr -> expr SEMI seq_expr
-- On QUESTION reduce production seq_expr -> expr SEMI seq_expr
-- On PREFIXOP reduce production seq_expr -> expr SEMI seq_expr
-- On PARSER reduce production seq_expr -> expr SEMI seq_expr
-- On OR reduce production seq_expr -> expr SEMI seq_expr
-- On OPEN reduce production seq_expr -> expr SEMI seq_expr
-- On NEW reduce production seq_expr -> expr SEMI seq_expr
-- On MODULE reduce production seq_expr -> expr SEMI seq_expr
-- On METHOD reduce production seq_expr -> expr SEMI seq_expr
-- On MATCH reduce production seq_expr -> expr SEMI seq_expr
-- On LPAREN reduce production seq_expr -> expr SEMI seq_expr
-- On LOC reduce production seq_expr -> expr SEMI seq_expr
-- On LIDENT reduce production seq_expr -> expr SEMI seq_expr
-- On LET reduce production seq_expr -> expr SEMI seq_expr
-- On LESSGREATER reduce production seq_expr -> expr SEMI seq_expr
-- On LESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKETLESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKETBAR reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKET reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACELESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACEBAR reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACE reduce production seq_expr -> expr SEMI seq_expr
-- On LAZY reduce production seq_expr -> expr SEMI seq_expr
-- On INT reduce production seq_expr -> expr SEMI seq_expr
-- On INHERIT reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP4 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP3 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP2 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP1 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP0 reduce production seq_expr -> expr SEMI seq_expr
-- On IN reduce production seq_expr -> expr SEMI seq_expr
-- On IF reduce production seq_expr -> expr SEMI seq_expr
-- On GREATERRBRACKET reduce production seq_expr -> expr SEMI seq_expr
-- On GREATERRBRACE reduce production seq_expr -> expr SEMI seq_expr
-- On GREATERGREATER reduce production seq_expr -> expr SEMI seq_expr
-- On GREATER reduce production seq_expr -> expr SEMI seq_expr
-- On FUNCTION reduce production seq_expr -> expr SEMI seq_expr
-- On FUN reduce production seq_expr -> expr SEMI seq_expr
-- On FOR reduce production seq_expr -> expr SEMI seq_expr
-- On FLOAT reduce production seq_expr -> expr SEMI seq_expr
-- On FALSE reduce production seq_expr -> expr SEMI seq_expr
-- On EXTERNAL reduce production seq_expr -> expr SEMI seq_expr
-- On EXCEPTION reduce production seq_expr -> expr SEMI seq_expr
-- On EQUAL reduce production seq_expr -> expr SEMI seq_expr
-- On EOF reduce production seq_expr -> expr SEMI seq_expr
-- On END reduce production seq_expr -> expr SEMI seq_expr
-- On ELSE reduce production seq_expr -> expr SEMI seq_expr
-- On DONE reduce production seq_expr -> expr SEMI seq_expr
-- On DEF reduce production seq_expr -> expr SEMI seq_expr
-- On COMMA reduce production seq_expr -> expr SEMI seq_expr
-- On COLONGREATER reduce production seq_expr -> expr SEMI seq_expr
-- On COLONEQUAL reduce production seq_expr -> expr SEMI seq_expr
-- On COLONCOLON reduce production seq_expr -> expr SEMI seq_expr
-- On COLON reduce production seq_expr -> expr SEMI seq_expr
-- On CLASS reduce production seq_expr -> expr SEMI seq_expr
-- On CHAR reduce production seq_expr -> expr SEMI seq_expr
-- On BEGIN reduce production seq_expr -> expr SEMI seq_expr
-- On BARRBRACKET reduce production seq_expr -> expr SEMI seq_expr
-- On BARBAR reduce production seq_expr -> expr SEMI seq_expr
-- On BAR reduce production seq_expr -> expr SEMI seq_expr
-- On ASSERT reduce production seq_expr -> expr SEMI seq_expr
-- On AND reduce production seq_expr -> expr SEMI seq_expr
-- On AMPERSAND reduce production seq_expr -> expr SEMI seq_expr
-- On AMPERAMPER reduce production seq_expr -> expr SEMI seq_expr

State 544:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On SEMI shift to state 542
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production seq_expr -> expr
-- On WITH reduce production seq_expr -> expr
-- On WHILE reduce production seq_expr -> expr
-- On VIRTUAL reduce production seq_expr -> expr
-- On VAL reduce production seq_expr -> expr
-- On UIDENT reduce production seq_expr -> expr
-- On TYPE reduce production seq_expr -> expr
-- On TRY reduce production seq_expr -> expr
-- On TRUE reduce production seq_expr -> expr
-- On SUBTRACTIVE reduce production seq_expr -> expr
-- On STRING reduce production seq_expr -> expr
-- On STAR reduce production seq_expr -> expr
-- On SHARP reduce production seq_expr -> expr
-- On SEMISEMI reduce production seq_expr -> expr
-- On SEMI reduce production seq_expr -> expr
-- On RPAREN reduce production seq_expr -> expr
-- On RBRACKET reduce production seq_expr -> expr
-- On RBRACE reduce production seq_expr -> expr
-- On QUESTION reduce production seq_expr -> expr
-- On PREFIXOP reduce production seq_expr -> expr
-- On PARSER reduce production seq_expr -> expr
-- On OR reduce production seq_expr -> expr
-- On OPEN reduce production seq_expr -> expr
-- On NEW reduce production seq_expr -> expr
-- On MODULE reduce production seq_expr -> expr
-- On METHOD reduce production seq_expr -> expr
-- On MATCH reduce production seq_expr -> expr
-- On LPAREN reduce production seq_expr -> expr
-- On LOC reduce production seq_expr -> expr
-- On LIDENT reduce production seq_expr -> expr
-- On LET reduce production seq_expr -> expr
-- On LESSGREATER reduce production seq_expr -> expr
-- On LESS reduce production seq_expr -> expr
-- On LBRACKETLESS reduce production seq_expr -> expr
-- On LBRACKETBAR reduce production seq_expr -> expr
-- On LBRACKET reduce production seq_expr -> expr
-- On LBRACELESS reduce production seq_expr -> expr
-- On LBRACEBAR reduce production seq_expr -> expr
-- On LBRACE reduce production seq_expr -> expr
-- On LAZY reduce production seq_expr -> expr
-- On INT reduce production seq_expr -> expr
-- On INHERIT reduce production seq_expr -> expr
-- On INFIXOP4 reduce production seq_expr -> expr
-- On INFIXOP3 reduce production seq_expr -> expr
-- On INFIXOP2 reduce production seq_expr -> expr
-- On INFIXOP1 reduce production seq_expr -> expr
-- On INFIXOP0 reduce production seq_expr -> expr
-- On IN reduce production seq_expr -> expr
-- On IF reduce production seq_expr -> expr
-- On GREATERRBRACKET reduce production seq_expr -> expr
-- On GREATERRBRACE reduce production seq_expr -> expr
-- On GREATERGREATER reduce production seq_expr -> expr
-- On GREATER reduce production seq_expr -> expr
-- On FUNCTION reduce production seq_expr -> expr
-- On FUN reduce production seq_expr -> expr
-- On FOR reduce production seq_expr -> expr
-- On FLOAT reduce production seq_expr -> expr
-- On FALSE reduce production seq_expr -> expr
-- On EXTERNAL reduce production seq_expr -> expr
-- On EXCEPTION reduce production seq_expr -> expr
-- On EQUAL reduce production seq_expr -> expr
-- On EOF reduce production seq_expr -> expr
-- On END reduce production seq_expr -> expr
-- On ELSE reduce production seq_expr -> expr
-- On DONE reduce production seq_expr -> expr
-- On DEF reduce production seq_expr -> expr
-- On COMMA reduce production seq_expr -> expr
-- On COLONGREATER reduce production seq_expr -> expr
-- On COLONEQUAL reduce production seq_expr -> expr
-- On COLONCOLON reduce production seq_expr -> expr
-- On COLON reduce production seq_expr -> expr
-- On CLASS reduce production seq_expr -> expr
-- On CHAR reduce production seq_expr -> expr
-- On BEGIN reduce production seq_expr -> expr
-- On BARRBRACKET reduce production seq_expr -> expr
-- On BARBAR reduce production seq_expr -> expr
-- On BAR reduce production seq_expr -> expr
-- On ASSERT reduce production seq_expr -> expr
-- On AND reduce production seq_expr -> expr
-- On AMPERSAND reduce production seq_expr -> expr
-- On AMPERAMPER reduce production seq_expr -> expr
** Conflict on SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER

State 545:
list_of_exprs -> LPAREN expr RPAREN . [ error GREATERGREATER ]
-- On error reduce production list_of_exprs -> LPAREN expr RPAREN
-- On GREATERGREATER reduce production list_of_exprs -> LPAREN expr RPAREN

State 546:
expr -> simple_expr LESSLESS list_of_exprs . GREATERGREATER [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr LESSLESS list_of_exprs . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 547
-- On GREATERGREATER shift to state 548

State 547:
expr -> simple_expr LESSLESS list_of_exprs error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On WITH reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On WHILE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On VIRTUAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On VAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On UIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TYPE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TRY reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TRUE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On STRING reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On STAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SHARP reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SEMISEMI reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SEMI reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On RPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On RBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On RBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On QUESTION reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On PREFIXOP reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On PARSER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On OR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On OPEN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On NEW reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On MODULE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On METHOD reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On MATCH reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LOC reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LESSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACELESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LAZY reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INHERIT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On IN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On IF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On GREATERRBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On GREATERRBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On GREATERGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On GREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FUNCTION reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FUN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FOR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FLOAT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FALSE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EXTERNAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EXCEPTION reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EOF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On END reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On ELSE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On DONE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On DEF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COMMA reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLONGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLONCOLON reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLON reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On CLASS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On CHAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BEGIN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BARRBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BARBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On ASSERT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AND reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AMPERSAND reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESS list_of_exprs error

State 548:
expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On WITH reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On WHILE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On VIRTUAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On VAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On UIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TYPE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TRY reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TRUE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On STRING reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On STAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SHARP reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SEMISEMI reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SEMI reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On RPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On RBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On RBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On QUESTION reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On PREFIXOP reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On PARSER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On OR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On OPEN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On NEW reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On MODULE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On METHOD reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On MATCH reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LOC reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LESSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACELESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LAZY reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INHERIT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On IN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On IF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On GREATERRBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On GREATERRBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On GREATERGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On GREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FUNCTION reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FUN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FOR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FLOAT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FALSE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EXTERNAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EXCEPTION reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EOF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On END reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On ELSE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On DONE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On DEF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COMMA reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLONGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLONCOLON reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLON reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On CLASS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On CHAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BEGIN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BARRBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BARBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On ASSERT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AND reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AMPERSAND reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER

State 549:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERGREATER GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
list_of_exprs -> expr . [ error GREATERGREATER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production list_of_exprs -> expr
-- On GREATERGREATER reduce production list_of_exprs -> expr

State 550:
expr -> simple_expr DOT . label_longident LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 551
-- On LIDENT shift to state 334
-- On LBRACKET shift to state 557
-- On mod_longident shift to state 335
-- On label_longident shift to state 563

State 551:
expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 552
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 552:
expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 553
-- On RPAREN shift to state 554

State 553:
simple_expr -> simple_expr DOT LPAREN seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On VAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On RPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On RBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On QUESTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On METHOD reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INHERIT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DONE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error

State 554:
expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 555
-- On error reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On VAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On QUESTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On METHOD reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INHERIT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DONE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 555:
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 556
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 556:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On WITH reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On VIRTUAL reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On VAL reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On RPAREN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On RBRACKET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On RBRACE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On QUESTION reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On METHOD reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On INHERIT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On GREATERRBRACKET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On GREATERRBRACE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On GREATERGREATER reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On DONE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On COLONGREATER reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On COLON reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On BARRBRACKET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr

State 557:
expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 558
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 558:
expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 559
-- On RBRACKET shift to state 560

State 559:
simple_expr -> simple_expr DOT LBRACKET seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On VAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On RPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On RBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On QUESTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On METHOD reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INHERIT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DONE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error

State 560:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 561
-- On error reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On VAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On QUESTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On METHOD reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INHERIT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DONE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 561:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 562
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 562:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On WITH reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On VIRTUAL reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On VAL reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On RPAREN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On RBRACKET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On RBRACE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On QUESTION reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On METHOD reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On INHERIT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On GREATERRBRACKET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On GREATERRBRACE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On GREATERGREATER reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On DONE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On COLONGREATER reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On COLON reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On BARRBRACKET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr

State 563:
expr -> simple_expr DOT label_longident . LESSMINUS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT label_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 564
-- On error reduce production simple_expr -> simple_expr DOT label_longident
-- On WITH reduce production simple_expr -> simple_expr DOT label_longident
-- On WHILE reduce production simple_expr -> simple_expr DOT label_longident
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On VAL reduce production simple_expr -> simple_expr DOT label_longident
-- On UIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On TYPE reduce production simple_expr -> simple_expr DOT label_longident
-- On TRY reduce production simple_expr -> simple_expr DOT label_longident
-- On TRUE reduce production simple_expr -> simple_expr DOT label_longident
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT label_longident
-- On STRING reduce production simple_expr -> simple_expr DOT label_longident
-- On STAR reduce production simple_expr -> simple_expr DOT label_longident
-- On SHARP reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On RPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On RBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On RBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On QUESTION reduce production simple_expr -> simple_expr DOT label_longident
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT label_longident
-- On PARSER reduce production simple_expr -> simple_expr DOT label_longident
-- On OR reduce production simple_expr -> simple_expr DOT label_longident
-- On OPEN reduce production simple_expr -> simple_expr DOT label_longident
-- On NEW reduce production simple_expr -> simple_expr DOT label_longident
-- On MODULE reduce production simple_expr -> simple_expr DOT label_longident
-- On METHOD reduce production simple_expr -> simple_expr DOT label_longident
-- On MATCH reduce production simple_expr -> simple_expr DOT label_longident
-- On LPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On LOC reduce production simple_expr -> simple_expr DOT label_longident
-- On LIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On LET reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On LAZY reduce production simple_expr -> simple_expr DOT label_longident
-- On INT reduce production simple_expr -> simple_expr DOT label_longident
-- On INHERIT reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT label_longident
-- On IN reduce production simple_expr -> simple_expr DOT label_longident
-- On IF reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On FUNCTION reduce production simple_expr -> simple_expr DOT label_longident
-- On FUN reduce production simple_expr -> simple_expr DOT label_longident
-- On FOR reduce production simple_expr -> simple_expr DOT label_longident
-- On FLOAT reduce production simple_expr -> simple_expr DOT label_longident
-- On FALSE reduce production simple_expr -> simple_expr DOT label_longident
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT label_longident
-- On EQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EOF reduce production simple_expr -> simple_expr DOT label_longident
-- On END reduce production simple_expr -> simple_expr DOT label_longident
-- On ELSE reduce production simple_expr -> simple_expr DOT label_longident
-- On DOT reduce production simple_expr -> simple_expr DOT label_longident
-- On DONE reduce production simple_expr -> simple_expr DOT label_longident
-- On DEF reduce production simple_expr -> simple_expr DOT label_longident
-- On COMMA reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT label_longident
-- On COLON reduce production simple_expr -> simple_expr DOT label_longident
-- On CLASS reduce production simple_expr -> simple_expr DOT label_longident
-- On CHAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BEGIN reduce production simple_expr -> simple_expr DOT label_longident
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On BARBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BAR reduce production simple_expr -> simple_expr DOT label_longident
-- On ASSERT reduce production simple_expr -> simple_expr DOT label_longident
-- On AND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT label_longident

State 564:
expr -> simple_expr DOT label_longident LESSMINUS . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 565
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 565:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT label_longident LESSMINUS expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On WITH reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On VIRTUAL reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On VAL reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On RPAREN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On RBRACKET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On RBRACE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On QUESTION reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On METHOD reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On INHERIT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On GREATERRBRACKET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On GREATERRBRACE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On GREATERGREATER reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On DONE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On COLONGREATER reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On COLON reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On BARRBRACKET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT label_longident LESSMINUS expr

State 566:
expr -> simple_expr simple_expr_list . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list . simple_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 567
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production expr -> simple_expr simple_expr_list
-- On WITH reduce production expr -> simple_expr simple_expr_list
-- On WHILE reduce production expr -> simple_expr simple_expr_list
-- On VIRTUAL reduce production expr -> simple_expr simple_expr_list
-- On VAL reduce production expr -> simple_expr simple_expr_list
-- On UIDENT reduce production expr -> simple_expr simple_expr_list
-- On TYPE reduce production expr -> simple_expr simple_expr_list
-- On TRY reduce production expr -> simple_expr simple_expr_list
-- On TRUE reduce production expr -> simple_expr simple_expr_list
-- On SUBTRACTIVE reduce production expr -> simple_expr simple_expr_list
-- On STRING reduce production expr -> simple_expr simple_expr_list
-- On STAR reduce production expr -> simple_expr simple_expr_list
-- On SHARP reduce production expr -> simple_expr simple_expr_list
-- On SEMISEMI reduce production expr -> simple_expr simple_expr_list
-- On SEMI reduce production expr -> simple_expr simple_expr_list
-- On RPAREN reduce production expr -> simple_expr simple_expr_list
-- On RBRACKET reduce production expr -> simple_expr simple_expr_list
-- On RBRACE reduce production expr -> simple_expr simple_expr_list
-- On QUESTION reduce production expr -> simple_expr simple_expr_list
-- On PARSER reduce production expr -> simple_expr simple_expr_list
-- On OR reduce production expr -> simple_expr simple_expr_list
-- On OPEN reduce production expr -> simple_expr simple_expr_list
-- On NEW reduce production expr -> simple_expr simple_expr_list
-- On MODULE reduce production expr -> simple_expr simple_expr_list
-- On METHOD reduce production expr -> simple_expr simple_expr_list
-- On MATCH reduce production expr -> simple_expr simple_expr_list
-- On LPAREN reduce production expr -> simple_expr simple_expr_list
-- On LOC reduce production expr -> simple_expr simple_expr_list
-- On LIDENT reduce production expr -> simple_expr simple_expr_list
-- On LET reduce production expr -> simple_expr simple_expr_list
-- On LESSGREATER reduce production expr -> simple_expr simple_expr_list
-- On LESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACKETLESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACKETBAR reduce production expr -> simple_expr simple_expr_list
-- On LBRACKET reduce production expr -> simple_expr simple_expr_list
-- On LBRACELESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACEBAR reduce production expr -> simple_expr simple_expr_list
-- On LBRACE reduce production expr -> simple_expr simple_expr_list
-- On LAZY reduce production expr -> simple_expr simple_expr_list
-- On INT reduce production expr -> simple_expr simple_expr_list
-- On INHERIT reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP4 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP3 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP2 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP1 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP0 reduce production expr -> simple_expr simple_expr_list
-- On IN reduce production expr -> simple_expr simple_expr_list
-- On IF reduce production expr -> simple_expr simple_expr_list
-- On GREATERRBRACKET reduce production expr -> simple_expr simple_expr_list
-- On GREATERRBRACE reduce production expr -> simple_expr simple_expr_list
-- On GREATERGREATER reduce production expr -> simple_expr simple_expr_list
-- On GREATER reduce production expr -> simple_expr simple_expr_list
-- On FUNCTION reduce production expr -> simple_expr simple_expr_list
-- On FUN reduce production expr -> simple_expr simple_expr_list
-- On FOR reduce production expr -> simple_expr simple_expr_list
-- On FLOAT reduce production expr -> simple_expr simple_expr_list
-- On FALSE reduce production expr -> simple_expr simple_expr_list
-- On EXTERNAL reduce production expr -> simple_expr simple_expr_list
-- On EXCEPTION reduce production expr -> simple_expr simple_expr_list
-- On EQUAL reduce production expr -> simple_expr simple_expr_list
-- On EOF reduce production expr -> simple_expr simple_expr_list
-- On END reduce production expr -> simple_expr simple_expr_list
-- On ELSE reduce production expr -> simple_expr simple_expr_list
-- On DONE reduce production expr -> simple_expr simple_expr_list
-- On DEF reduce production expr -> simple_expr simple_expr_list
-- On COMMA reduce production expr -> simple_expr simple_expr_list
-- On COLONGREATER reduce production expr -> simple_expr simple_expr_list
-- On COLONEQUAL reduce production expr -> simple_expr simple_expr_list
-- On COLONCOLON reduce production expr -> simple_expr simple_expr_list
-- On COLON reduce production expr -> simple_expr simple_expr_list
-- On CLASS reduce production expr -> simple_expr simple_expr_list
-- On CHAR reduce production expr -> simple_expr simple_expr_list
-- On BEGIN reduce production expr -> simple_expr simple_expr_list
-- On BARRBRACKET reduce production expr -> simple_expr simple_expr_list
-- On BARBAR reduce production expr -> simple_expr simple_expr_list
-- On BAR reduce production expr -> simple_expr simple_expr_list
-- On ASSERT reduce production expr -> simple_expr simple_expr_list
-- On AND reduce production expr -> simple_expr simple_expr_list
-- On AMPERSAND reduce production expr -> simple_expr simple_expr_list
-- On AMPERAMPER reduce production expr -> simple_expr simple_expr_list
** Conflict on UIDENT TRUE STRING NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 567:
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 476
-- On DOT shift to state 479
-- On error reduce production simple_expr_list -> simple_expr_list simple_expr
-- On WITH reduce production simple_expr_list -> simple_expr_list simple_expr
-- On WHILE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On VIRTUAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On VAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On UIDENT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TYPE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TRY reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TRUE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SUBTRACTIVE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On STRING reduce production simple_expr_list -> simple_expr_list simple_expr
-- On STAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SHARP reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SEMISEMI reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SEMI reduce production simple_expr_list -> simple_expr_list simple_expr
-- On RPAREN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On RBRACKET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On RBRACE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On QUESTION reduce production simple_expr_list -> simple_expr_list simple_expr
-- On PREFIXOP reduce production simple_expr_list -> simple_expr_list simple_expr
-- On PARSER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On OR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On OPEN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On NEW reduce production simple_expr_list -> simple_expr_list simple_expr
-- On MODULE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On METHOD reduce production simple_expr_list -> simple_expr_list simple_expr
-- On MATCH reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LPAREN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LOC reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LIDENT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LESSGREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKETLESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKETBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACELESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACEBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LAZY reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INHERIT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP4 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP3 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP2 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP1 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP0 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On IN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On IF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On GREATERRBRACKET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On GREATERRBRACE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On GREATERGREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On GREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FUNCTION reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FUN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FOR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FLOAT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FALSE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EXTERNAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EXCEPTION reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EQUAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EOF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On END reduce production simple_expr_list -> simple_expr_list simple_expr
-- On ELSE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On DONE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On DEF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COMMA reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLONGREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLONEQUAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLONCOLON reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLON reduce production simple_expr_list -> simple_expr_list simple_expr
-- On CLASS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On CHAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BEGIN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BARRBRACKET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BARBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On ASSERT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AND reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AMPERSAND reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AMPERAMPER reduce production simple_expr_list -> simple_expr_list simple_expr
** Conflict on SHARP

State 568:
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 476
-- On DOT shift to state 479
-- On error reduce production simple_expr_list -> simple_expr
-- On WITH reduce production simple_expr_list -> simple_expr
-- On WHILE reduce production simple_expr_list -> simple_expr
-- On VIRTUAL reduce production simple_expr_list -> simple_expr
-- On VAL reduce production simple_expr_list -> simple_expr
-- On UIDENT reduce production simple_expr_list -> simple_expr
-- On TYPE reduce production simple_expr_list -> simple_expr
-- On TRY reduce production simple_expr_list -> simple_expr
-- On TRUE reduce production simple_expr_list -> simple_expr
-- On SUBTRACTIVE reduce production simple_expr_list -> simple_expr
-- On STRING reduce production simple_expr_list -> simple_expr
-- On STAR reduce production simple_expr_list -> simple_expr
-- On SHARP reduce production simple_expr_list -> simple_expr
-- On SEMISEMI reduce production simple_expr_list -> simple_expr
-- On SEMI reduce production simple_expr_list -> simple_expr
-- On RPAREN reduce production simple_expr_list -> simple_expr
-- On RBRACKET reduce production simple_expr_list -> simple_expr
-- On RBRACE reduce production simple_expr_list -> simple_expr
-- On QUESTION reduce production simple_expr_list -> simple_expr
-- On PREFIXOP reduce production simple_expr_list -> simple_expr
-- On PARSER reduce production simple_expr_list -> simple_expr
-- On OR reduce production simple_expr_list -> simple_expr
-- On OPEN reduce production simple_expr_list -> simple_expr
-- On NEW reduce production simple_expr_list -> simple_expr
-- On MODULE reduce production simple_expr_list -> simple_expr
-- On METHOD reduce production simple_expr_list -> simple_expr
-- On MATCH reduce production simple_expr_list -> simple_expr
-- On LPAREN reduce production simple_expr_list -> simple_expr
-- On LOC reduce production simple_expr_list -> simple_expr
-- On LIDENT reduce production simple_expr_list -> simple_expr
-- On LET reduce production simple_expr_list -> simple_expr
-- On LESSGREATER reduce production simple_expr_list -> simple_expr
-- On LESS reduce production simple_expr_list -> simple_expr
-- On LBRACKETLESS reduce production simple_expr_list -> simple_expr
-- On LBRACKETBAR reduce production simple_expr_list -> simple_expr
-- On LBRACKET reduce production simple_expr_list -> simple_expr
-- On LBRACELESS reduce production simple_expr_list -> simple_expr
-- On LBRACEBAR reduce production simple_expr_list -> simple_expr
-- On LBRACE reduce production simple_expr_list -> simple_expr
-- On LAZY reduce production simple_expr_list -> simple_expr
-- On INT reduce production simple_expr_list -> simple_expr
-- On INHERIT reduce production simple_expr_list -> simple_expr
-- On INFIXOP4 reduce production simple_expr_list -> simple_expr
-- On INFIXOP3 reduce production simple_expr_list -> simple_expr
-- On INFIXOP2 reduce production simple_expr_list -> simple_expr
-- On INFIXOP1 reduce production simple_expr_list -> simple_expr
-- On INFIXOP0 reduce production simple_expr_list -> simple_expr
-- On IN reduce production simple_expr_list -> simple_expr
-- On IF reduce production simple_expr_list -> simple_expr
-- On GREATERRBRACKET reduce production simple_expr_list -> simple_expr
-- On GREATERRBRACE reduce production simple_expr_list -> simple_expr
-- On GREATERGREATER reduce production simple_expr_list -> simple_expr
-- On GREATER reduce production simple_expr_list -> simple_expr
-- On FUNCTION reduce production simple_expr_list -> simple_expr
-- On FUN reduce production simple_expr_list -> simple_expr
-- On FOR reduce production simple_expr_list -> simple_expr
-- On FLOAT reduce production simple_expr_list -> simple_expr
-- On FALSE reduce production simple_expr_list -> simple_expr
-- On EXTERNAL reduce production simple_expr_list -> simple_expr
-- On EXCEPTION reduce production simple_expr_list -> simple_expr
-- On EQUAL reduce production simple_expr_list -> simple_expr
-- On EOF reduce production simple_expr_list -> simple_expr
-- On END reduce production simple_expr_list -> simple_expr
-- On ELSE reduce production simple_expr_list -> simple_expr
-- On DONE reduce production simple_expr_list -> simple_expr
-- On DEF reduce production simple_expr_list -> simple_expr
-- On COMMA reduce production simple_expr_list -> simple_expr
-- On COLONGREATER reduce production simple_expr_list -> simple_expr
-- On COLONEQUAL reduce production simple_expr_list -> simple_expr
-- On COLONCOLON reduce production simple_expr_list -> simple_expr
-- On COLON reduce production simple_expr_list -> simple_expr
-- On CLASS reduce production simple_expr_list -> simple_expr
-- On CHAR reduce production simple_expr_list -> simple_expr
-- On BEGIN reduce production simple_expr_list -> simple_expr
-- On BARRBRACKET reduce production simple_expr_list -> simple_expr
-- On BARBAR reduce production simple_expr_list -> simple_expr
-- On BAR reduce production simple_expr_list -> simple_expr
-- On ASSERT reduce production simple_expr_list -> simple_expr
-- On AS reduce production simple_expr_list -> simple_expr
-- On AND reduce production simple_expr_list -> simple_expr
-- On AMPERSAND reduce production simple_expr_list -> simple_expr
-- On AMPERAMPER reduce production simple_expr_list -> simple_expr
** Conflict on SHARP

State 569:
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 553
-- On RPAREN shift to state 570

State 570:
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On VAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On RBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On QUESTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On METHOD reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INHERIT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DONE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 571:
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 572
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 572:
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 559
-- On RBRACKET shift to state 573

State 573:
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On VAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On RBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On QUESTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On METHOD reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INHERIT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DONE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 574:
simple_expr -> simple_expr DOT label_longident . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> simple_expr DOT label_longident
-- On WITH reduce production simple_expr -> simple_expr DOT label_longident
-- On WHILE reduce production simple_expr -> simple_expr DOT label_longident
-- On VIRTUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On VAL reduce production simple_expr -> simple_expr DOT label_longident
-- On UIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On TYPE reduce production simple_expr -> simple_expr DOT label_longident
-- On TRY reduce production simple_expr -> simple_expr DOT label_longident
-- On TRUE reduce production simple_expr -> simple_expr DOT label_longident
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT label_longident
-- On STRING reduce production simple_expr -> simple_expr DOT label_longident
-- On STAR reduce production simple_expr -> simple_expr DOT label_longident
-- On SHARP reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On RPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On RBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On RBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On QUESTION reduce production simple_expr -> simple_expr DOT label_longident
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT label_longident
-- On PARSER reduce production simple_expr -> simple_expr DOT label_longident
-- On OR reduce production simple_expr -> simple_expr DOT label_longident
-- On OPEN reduce production simple_expr -> simple_expr DOT label_longident
-- On NEW reduce production simple_expr -> simple_expr DOT label_longident
-- On MODULE reduce production simple_expr -> simple_expr DOT label_longident
-- On METHOD reduce production simple_expr -> simple_expr DOT label_longident
-- On MATCH reduce production simple_expr -> simple_expr DOT label_longident
-- On LPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On LOC reduce production simple_expr -> simple_expr DOT label_longident
-- On LIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On LET reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On LAZY reduce production simple_expr -> simple_expr DOT label_longident
-- On INT reduce production simple_expr -> simple_expr DOT label_longident
-- On INHERIT reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT label_longident
-- On IN reduce production simple_expr -> simple_expr DOT label_longident
-- On IF reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERRBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERRBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On FUNCTION reduce production simple_expr -> simple_expr DOT label_longident
-- On FUN reduce production simple_expr -> simple_expr DOT label_longident
-- On FOR reduce production simple_expr -> simple_expr DOT label_longident
-- On FLOAT reduce production simple_expr -> simple_expr DOT label_longident
-- On FALSE reduce production simple_expr -> simple_expr DOT label_longident
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT label_longident
-- On EQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EOF reduce production simple_expr -> simple_expr DOT label_longident
-- On END reduce production simple_expr -> simple_expr DOT label_longident
-- On ELSE reduce production simple_expr -> simple_expr DOT label_longident
-- On DOT reduce production simple_expr -> simple_expr DOT label_longident
-- On DONE reduce production simple_expr -> simple_expr DOT label_longident
-- On DEF reduce production simple_expr -> simple_expr DOT label_longident
-- On COMMA reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT label_longident
-- On COLON reduce production simple_expr -> simple_expr DOT label_longident
-- On CLASS reduce production simple_expr -> simple_expr DOT label_longident
-- On CHAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BEGIN reduce production simple_expr -> simple_expr DOT label_longident
-- On BARRBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On BARBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BAR reduce production simple_expr -> simple_expr DOT label_longident
-- On ASSERT reduce production simple_expr -> simple_expr DOT label_longident
-- On AS reduce production simple_expr -> simple_expr DOT label_longident
-- On AND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT label_longident

State 575:
process -> BEGIN seq_expr . END SEMI process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process -> BEGIN seq_expr . error [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On error shift to state 576
-- On END shift to state 577

State 576:
process -> BEGIN seq_expr error . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE reduce production process -> BEGIN seq_expr error
-- On UIDENT reduce production process -> BEGIN seq_expr error
-- On TYPE reduce production process -> BEGIN seq_expr error
-- On TRY reduce production process -> BEGIN seq_expr error
-- On TRUE reduce production process -> BEGIN seq_expr error
-- On SUBTRACTIVE reduce production process -> BEGIN seq_expr error
-- On STRING reduce production process -> BEGIN seq_expr error
-- On SHARP reduce production process -> BEGIN seq_expr error
-- On SEMISEMI reduce production process -> BEGIN seq_expr error
-- On PREFIXOP reduce production process -> BEGIN seq_expr error
-- On PARSER reduce production process -> BEGIN seq_expr error
-- On OPEN reduce production process -> BEGIN seq_expr error
-- On NEW reduce production process -> BEGIN seq_expr error
-- On MODULE reduce production process -> BEGIN seq_expr error
-- On MATCH reduce production process -> BEGIN seq_expr error
-- On LPAREN reduce production process -> BEGIN seq_expr error
-- On LOC reduce production process -> BEGIN seq_expr error
-- On LIDENT reduce production process -> BEGIN seq_expr error
-- On LET reduce production process -> BEGIN seq_expr error
-- On LBRACKETLESS reduce production process -> BEGIN seq_expr error
-- On LBRACKETBAR reduce production process -> BEGIN seq_expr error
-- On LBRACKET reduce production process -> BEGIN seq_expr error
-- On LBRACELESS reduce production process -> BEGIN seq_expr error
-- On LBRACEBAR reduce production process -> BEGIN seq_expr error
-- On LBRACE reduce production process -> BEGIN seq_expr error
-- On LAZY reduce production process -> BEGIN seq_expr error
-- On INT reduce production process -> BEGIN seq_expr error
-- On IN reduce production process -> BEGIN seq_expr error
-- On IF reduce production process -> BEGIN seq_expr error
-- On FUNCTION reduce production process -> BEGIN seq_expr error
-- On FUN reduce production process -> BEGIN seq_expr error
-- On FOR reduce production process -> BEGIN seq_expr error
-- On FLOAT reduce production process -> BEGIN seq_expr error
-- On FALSE reduce production process -> BEGIN seq_expr error
-- On EXTERNAL reduce production process -> BEGIN seq_expr error
-- On EXCEPTION reduce production process -> BEGIN seq_expr error
-- On EOF reduce production process -> BEGIN seq_expr error
-- On END reduce production process -> BEGIN seq_expr error
-- On DEF reduce production process -> BEGIN seq_expr error
-- On CLASS reduce production process -> BEGIN seq_expr error
-- On CHAR reduce production process -> BEGIN seq_expr error
-- On BEGIN reduce production process -> BEGIN seq_expr error
-- On BARRBRACE reduce production process -> BEGIN seq_expr error
-- On ASSERT reduce production process -> BEGIN seq_expr error
-- On AND reduce production process -> BEGIN seq_expr error

State 577:
process -> BEGIN seq_expr END . SEMI process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On SEMI shift to state 578

State 578:
process -> BEGIN seq_expr END SEMI . process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 591
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On WHILE reduce production process -> 
-- On UIDENT reduce production process -> 
-- On TYPE reduce production process -> 
-- On TRY reduce production process -> 
-- On TRUE reduce production process -> 
-- On SUBTRACTIVE reduce production process -> 
-- On STRING reduce production process -> 
-- On SHARP reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On PREFIXOP reduce production process -> 
-- On PARSER reduce production process -> 
-- On OPEN reduce production process -> 
-- On NEW reduce production process -> 
-- On MODULE reduce production process -> 
-- On MATCH reduce production process -> 
-- On LPAREN reduce production process -> 
-- On LOC reduce production process -> 
-- On LIDENT reduce production process -> 
-- On LET reduce production process -> 
-- On LBRACKETLESS reduce production process -> 
-- On LBRACKETBAR reduce production process -> 
-- On LBRACKET reduce production process -> 
-- On LBRACELESS reduce production process -> 
-- On LBRACEBAR reduce production process -> 
-- On LBRACE reduce production process -> 
-- On LAZY reduce production process -> 
-- On INT reduce production process -> 
-- On IN reduce production process -> 
-- On IF reduce production process -> 
-- On FUNCTION reduce production process -> 
-- On FUN reduce production process -> 
-- On FOR reduce production process -> 
-- On FLOAT reduce production process -> 
-- On FALSE reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On EOF reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On CHAR reduce production process -> 
-- On BEGIN reduce production process -> 
-- On BARRBRACE reduce production process -> 
-- On ASSERT reduce production process -> 
-- On AND reduce production process -> 
** Conflict on UIDENT TRUE STRING LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACEBAR INT IF FLOAT FALSE DEF CHAR BEGIN

State 579:
process0 -> static_expr . LESSLESSGREATERGREATER [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
process0 -> static_expr . LESSLESS static_comma_list GREATERGREATER [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
process0 -> static_expr . LESSLESS static_comma_list error [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_expr -> static_expr . DOT label_longident [ LESSLESSGREATERGREATER LESSLESS DOT ]
-- On LESSLESSGREATERGREATER shift to state 580
-- On LESSLESS shift to state 581
-- On DOT shift to state 362

State 580:
process0 -> static_expr LESSLESSGREATERGREATER . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On UIDENT reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On TYPE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On TRY reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On TRUE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On SUBTRACTIVE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On STRING reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On SHARP reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On SEMISEMI reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On PREFIXOP reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On PARSER reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On OPEN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On NEW reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On MODULE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On MATCH reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LPAREN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LOC reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LIDENT reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LET reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACKETLESS reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACKETBAR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACKET reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACELESS reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACEBAR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LBRACE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LAZY reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On INT reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On IN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On IF reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On FUNCTION reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On FUN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On FOR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On FLOAT reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On FALSE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On EXTERNAL reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On EXCEPTION reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On EOF reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On END reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On ELSE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On DEF reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On CLASS reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On CHAR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On BEGIN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On BARRBRACE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On BAR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On ASSERT reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On AND reduce production process0 -> static_expr LESSLESSGREATERGREATER

State 581:
process0 -> static_expr LESSLESS . static_comma_list GREATERGREATER [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
process0 -> static_expr LESSLESS . static_comma_list error [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_expr shift to state 582
-- On static_comma_list shift to state 583
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 582:
static_comma_list -> static_expr . [ error GREATERGREATER COMMA ]
static_expr -> static_expr . DOT label_longident [ error GREATERGREATER DOT COMMA ]
-- On DOT shift to state 333
-- On error reduce production static_comma_list -> static_expr
-- On GREATERGREATER reduce production static_comma_list -> static_expr
-- On COMMA reduce production static_comma_list -> static_expr

State 583:
process0 -> static_expr LESSLESS static_comma_list . GREATERGREATER [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
process0 -> static_expr LESSLESS static_comma_list . error [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
static_comma_list -> static_comma_list . COMMA static_expr [ error GREATERGREATER COMMA ]
-- On error shift to state 584
-- On GREATERGREATER shift to state 585
-- On COMMA shift to state 586

State 584:
process0 -> static_expr LESSLESS static_comma_list error . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On UIDENT reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On TYPE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On TRY reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On TRUE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On SUBTRACTIVE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On STRING reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On SHARP reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On SEMISEMI reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On PREFIXOP reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On PARSER reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On OPEN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On NEW reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On MODULE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On MATCH reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LPAREN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LOC reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LIDENT reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LET reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACKETLESS reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACKETBAR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACKET reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACELESS reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACEBAR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LBRACE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LAZY reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On INT reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On IN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On IF reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On FUNCTION reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On FUN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On FOR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On FLOAT reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On FALSE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On EXTERNAL reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On EXCEPTION reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On EOF reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On END reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On ELSE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On DEF reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On CLASS reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On CHAR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On BEGIN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On BARRBRACE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On BAR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On ASSERT reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On AND reduce production process0 -> static_expr LESSLESS static_comma_list error

State 585:
process0 -> static_expr LESSLESS static_comma_list GREATERGREATER . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On UIDENT reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On TYPE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On TRY reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On TRUE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On SUBTRACTIVE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On STRING reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On SHARP reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On SEMISEMI reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On PREFIXOP reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On PARSER reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On OPEN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On NEW reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On MODULE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On MATCH reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LPAREN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LOC reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LIDENT reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LET reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACKETLESS reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACKETBAR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACKET reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACELESS reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACEBAR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LBRACE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LAZY reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On INT reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On IN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On IF reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On FUNCTION reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On FUN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On FOR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On FLOAT reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On FALSE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On EXTERNAL reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On EXCEPTION reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On EOF reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On END reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On ELSE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On DEF reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On CLASS reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On CHAR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On BEGIN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On BARRBRACE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On BAR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On ASSERT reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On AND reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER

State 586:
static_comma_list -> static_comma_list COMMA . static_expr [ error GREATERGREATER COMMA ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_expr shift to state 587
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 587:
static_comma_list -> static_comma_list COMMA static_expr . [ error GREATERGREATER COMMA ]
static_expr -> static_expr . DOT label_longident [ error GREATERGREATER DOT COMMA ]
-- On DOT shift to state 333
-- On error reduce production static_comma_list -> static_comma_list COMMA static_expr
-- On GREATERGREATER reduce production static_comma_list -> static_comma_list COMMA static_expr
-- On COMMA reduce production static_comma_list -> static_comma_list COMMA static_expr

State 588:
process -> process0 . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process -> process0 . BAR process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On BAR shift to state 589
-- On WHILE reduce production process -> process0
-- On UIDENT reduce production process -> process0
-- On TYPE reduce production process -> process0
-- On TRY reduce production process -> process0
-- On TRUE reduce production process -> process0
-- On SUBTRACTIVE reduce production process -> process0
-- On STRING reduce production process -> process0
-- On SHARP reduce production process -> process0
-- On SEMISEMI reduce production process -> process0
-- On PREFIXOP reduce production process -> process0
-- On PARSER reduce production process -> process0
-- On OPEN reduce production process -> process0
-- On NEW reduce production process -> process0
-- On MODULE reduce production process -> process0
-- On MATCH reduce production process -> process0
-- On LPAREN reduce production process -> process0
-- On LOC reduce production process -> process0
-- On LIDENT reduce production process -> process0
-- On LET reduce production process -> process0
-- On LBRACKETLESS reduce production process -> process0
-- On LBRACKETBAR reduce production process -> process0
-- On LBRACKET reduce production process -> process0
-- On LBRACELESS reduce production process -> process0
-- On LBRACEBAR reduce production process -> process0
-- On LBRACE reduce production process -> process0
-- On LAZY reduce production process -> process0
-- On INT reduce production process -> process0
-- On IN reduce production process -> process0
-- On IF reduce production process -> process0
-- On FUNCTION reduce production process -> process0
-- On FUN reduce production process -> process0
-- On FOR reduce production process -> process0
-- On FLOAT reduce production process -> process0
-- On FALSE reduce production process -> process0
-- On EXTERNAL reduce production process -> process0
-- On EXCEPTION reduce production process -> process0
-- On EOF reduce production process -> process0
-- On END reduce production process -> process0
-- On DEF reduce production process -> process0
-- On CLASS reduce production process -> process0
-- On CHAR reduce production process -> process0
-- On BEGIN reduce production process -> process0
-- On BARRBRACE reduce production process -> process0
-- On ASSERT reduce production process -> process0
-- On AND reduce production process -> process0

State 589:
process -> process0 BAR . process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 590
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On WHILE reduce production process -> 
-- On UIDENT reduce production process -> 
-- On TYPE reduce production process -> 
-- On TRY reduce production process -> 
-- On TRUE reduce production process -> 
-- On SUBTRACTIVE reduce production process -> 
-- On STRING reduce production process -> 
-- On SHARP reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On PREFIXOP reduce production process -> 
-- On PARSER reduce production process -> 
-- On OPEN reduce production process -> 
-- On NEW reduce production process -> 
-- On MODULE reduce production process -> 
-- On MATCH reduce production process -> 
-- On LPAREN reduce production process -> 
-- On LOC reduce production process -> 
-- On LIDENT reduce production process -> 
-- On LET reduce production process -> 
-- On LBRACKETLESS reduce production process -> 
-- On LBRACKETBAR reduce production process -> 
-- On LBRACKET reduce production process -> 
-- On LBRACELESS reduce production process -> 
-- On LBRACEBAR reduce production process -> 
-- On LBRACE reduce production process -> 
-- On LAZY reduce production process -> 
-- On INT reduce production process -> 
-- On IN reduce production process -> 
-- On IF reduce production process -> 
-- On FUNCTION reduce production process -> 
-- On FUN reduce production process -> 
-- On FOR reduce production process -> 
-- On FLOAT reduce production process -> 
-- On FALSE reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On EOF reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On CHAR reduce production process -> 
-- On BEGIN reduce production process -> 
-- On BARRBRACE reduce production process -> 
-- On ASSERT reduce production process -> 
-- On AND reduce production process -> 
** Conflict on UIDENT TRUE STRING LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACEBAR INT IF FLOAT FALSE DEF CHAR BEGIN

State 590:
process -> process0 BAR process . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE reduce production process -> process0 BAR process
-- On UIDENT reduce production process -> process0 BAR process
-- On TYPE reduce production process -> process0 BAR process
-- On TRY reduce production process -> process0 BAR process
-- On TRUE reduce production process -> process0 BAR process
-- On SUBTRACTIVE reduce production process -> process0 BAR process
-- On STRING reduce production process -> process0 BAR process
-- On SHARP reduce production process -> process0 BAR process
-- On SEMISEMI reduce production process -> process0 BAR process
-- On PREFIXOP reduce production process -> process0 BAR process
-- On PARSER reduce production process -> process0 BAR process
-- On OPEN reduce production process -> process0 BAR process
-- On NEW reduce production process -> process0 BAR process
-- On MODULE reduce production process -> process0 BAR process
-- On MATCH reduce production process -> process0 BAR process
-- On LPAREN reduce production process -> process0 BAR process
-- On LOC reduce production process -> process0 BAR process
-- On LIDENT reduce production process -> process0 BAR process
-- On LET reduce production process -> process0 BAR process
-- On LBRACKETLESS reduce production process -> process0 BAR process
-- On LBRACKETBAR reduce production process -> process0 BAR process
-- On LBRACKET reduce production process -> process0 BAR process
-- On LBRACELESS reduce production process -> process0 BAR process
-- On LBRACEBAR reduce production process -> process0 BAR process
-- On LBRACE reduce production process -> process0 BAR process
-- On LAZY reduce production process -> process0 BAR process
-- On INT reduce production process -> process0 BAR process
-- On IN reduce production process -> process0 BAR process
-- On IF reduce production process -> process0 BAR process
-- On FUNCTION reduce production process -> process0 BAR process
-- On FUN reduce production process -> process0 BAR process
-- On FOR reduce production process -> process0 BAR process
-- On FLOAT reduce production process -> process0 BAR process
-- On FALSE reduce production process -> process0 BAR process
-- On EXTERNAL reduce production process -> process0 BAR process
-- On EXCEPTION reduce production process -> process0 BAR process
-- On EOF reduce production process -> process0 BAR process
-- On END reduce production process -> process0 BAR process
-- On DEF reduce production process -> process0 BAR process
-- On CLASS reduce production process -> process0 BAR process
-- On CHAR reduce production process -> process0 BAR process
-- On BEGIN reduce production process -> process0 BAR process
-- On BARRBRACE reduce production process -> process0 BAR process
-- On ASSERT reduce production process -> process0 BAR process
-- On AND reduce production process -> process0 BAR process

State 591:
process -> BEGIN seq_expr END SEMI process . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE reduce production process -> BEGIN seq_expr END SEMI process
-- On UIDENT reduce production process -> BEGIN seq_expr END SEMI process
-- On TYPE reduce production process -> BEGIN seq_expr END SEMI process
-- On TRY reduce production process -> BEGIN seq_expr END SEMI process
-- On TRUE reduce production process -> BEGIN seq_expr END SEMI process
-- On SUBTRACTIVE reduce production process -> BEGIN seq_expr END SEMI process
-- On STRING reduce production process -> BEGIN seq_expr END SEMI process
-- On SHARP reduce production process -> BEGIN seq_expr END SEMI process
-- On SEMISEMI reduce production process -> BEGIN seq_expr END SEMI process
-- On PREFIXOP reduce production process -> BEGIN seq_expr END SEMI process
-- On PARSER reduce production process -> BEGIN seq_expr END SEMI process
-- On OPEN reduce production process -> BEGIN seq_expr END SEMI process
-- On NEW reduce production process -> BEGIN seq_expr END SEMI process
-- On MODULE reduce production process -> BEGIN seq_expr END SEMI process
-- On MATCH reduce production process -> BEGIN seq_expr END SEMI process
-- On LPAREN reduce production process -> BEGIN seq_expr END SEMI process
-- On LOC reduce production process -> BEGIN seq_expr END SEMI process
-- On LIDENT reduce production process -> BEGIN seq_expr END SEMI process
-- On LET reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACKETLESS reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACKETBAR reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACKET reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACELESS reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACEBAR reduce production process -> BEGIN seq_expr END SEMI process
-- On LBRACE reduce production process -> BEGIN seq_expr END SEMI process
-- On LAZY reduce production process -> BEGIN seq_expr END SEMI process
-- On INT reduce production process -> BEGIN seq_expr END SEMI process
-- On IN reduce production process -> BEGIN seq_expr END SEMI process
-- On IF reduce production process -> BEGIN seq_expr END SEMI process
-- On FUNCTION reduce production process -> BEGIN seq_expr END SEMI process
-- On FUN reduce production process -> BEGIN seq_expr END SEMI process
-- On FOR reduce production process -> BEGIN seq_expr END SEMI process
-- On FLOAT reduce production process -> BEGIN seq_expr END SEMI process
-- On FALSE reduce production process -> BEGIN seq_expr END SEMI process
-- On EXTERNAL reduce production process -> BEGIN seq_expr END SEMI process
-- On EXCEPTION reduce production process -> BEGIN seq_expr END SEMI process
-- On EOF reduce production process -> BEGIN seq_expr END SEMI process
-- On END reduce production process -> BEGIN seq_expr END SEMI process
-- On DEF reduce production process -> BEGIN seq_expr END SEMI process
-- On CLASS reduce production process -> BEGIN seq_expr END SEMI process
-- On CHAR reduce production process -> BEGIN seq_expr END SEMI process
-- On BEGIN reduce production process -> BEGIN seq_expr END SEMI process
-- On BARRBRACE reduce production process -> BEGIN seq_expr END SEMI process
-- On ASSERT reduce production process -> BEGIN seq_expr END SEMI process
-- On AND reduce production process -> BEGIN seq_expr END SEMI process

State 592:
process -> DEF def_bindings IN process . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE reduce production process -> DEF def_bindings IN process
-- On UIDENT reduce production process -> DEF def_bindings IN process
-- On TYPE reduce production process -> DEF def_bindings IN process
-- On TRY reduce production process -> DEF def_bindings IN process
-- On TRUE reduce production process -> DEF def_bindings IN process
-- On SUBTRACTIVE reduce production process -> DEF def_bindings IN process
-- On STRING reduce production process -> DEF def_bindings IN process
-- On SHARP reduce production process -> DEF def_bindings IN process
-- On SEMISEMI reduce production process -> DEF def_bindings IN process
-- On PREFIXOP reduce production process -> DEF def_bindings IN process
-- On PARSER reduce production process -> DEF def_bindings IN process
-- On OPEN reduce production process -> DEF def_bindings IN process
-- On NEW reduce production process -> DEF def_bindings IN process
-- On MODULE reduce production process -> DEF def_bindings IN process
-- On MATCH reduce production process -> DEF def_bindings IN process
-- On LPAREN reduce production process -> DEF def_bindings IN process
-- On LOC reduce production process -> DEF def_bindings IN process
-- On LIDENT reduce production process -> DEF def_bindings IN process
-- On LET reduce production process -> DEF def_bindings IN process
-- On LBRACKETLESS reduce production process -> DEF def_bindings IN process
-- On LBRACKETBAR reduce production process -> DEF def_bindings IN process
-- On LBRACKET reduce production process -> DEF def_bindings IN process
-- On LBRACELESS reduce production process -> DEF def_bindings IN process
-- On LBRACEBAR reduce production process -> DEF def_bindings IN process
-- On LBRACE reduce production process -> DEF def_bindings IN process
-- On LAZY reduce production process -> DEF def_bindings IN process
-- On INT reduce production process -> DEF def_bindings IN process
-- On IN reduce production process -> DEF def_bindings IN process
-- On IF reduce production process -> DEF def_bindings IN process
-- On FUNCTION reduce production process -> DEF def_bindings IN process
-- On FUN reduce production process -> DEF def_bindings IN process
-- On FOR reduce production process -> DEF def_bindings IN process
-- On FLOAT reduce production process -> DEF def_bindings IN process
-- On FALSE reduce production process -> DEF def_bindings IN process
-- On EXTERNAL reduce production process -> DEF def_bindings IN process
-- On EXCEPTION reduce production process -> DEF def_bindings IN process
-- On EOF reduce production process -> DEF def_bindings IN process
-- On END reduce production process -> DEF def_bindings IN process
-- On DEF reduce production process -> DEF def_bindings IN process
-- On CLASS reduce production process -> DEF def_bindings IN process
-- On CHAR reduce production process -> DEF def_bindings IN process
-- On BEGIN reduce production process -> DEF def_bindings IN process
-- On BARRBRACE reduce production process -> DEF def_bindings IN process
-- On ASSERT reduce production process -> DEF def_bindings IN process
-- On AND reduce production process -> DEF def_bindings IN process

State 593:
def_bindings -> def_bindings AND . def_binding [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_binding shift to state 594

State 594:
def_bindings -> def_bindings AND def_binding . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE reduce production def_bindings -> def_bindings AND def_binding
-- On UIDENT reduce production def_bindings -> def_bindings AND def_binding
-- On TYPE reduce production def_bindings -> def_bindings AND def_binding
-- On TRY reduce production def_bindings -> def_bindings AND def_binding
-- On TRUE reduce production def_bindings -> def_bindings AND def_binding
-- On SUBTRACTIVE reduce production def_bindings -> def_bindings AND def_binding
-- On STRING reduce production def_bindings -> def_bindings AND def_binding
-- On SHARP reduce production def_bindings -> def_bindings AND def_binding
-- On SEMISEMI reduce production def_bindings -> def_bindings AND def_binding
-- On PREFIXOP reduce production def_bindings -> def_bindings AND def_binding
-- On PARSER reduce production def_bindings -> def_bindings AND def_binding
-- On OPEN reduce production def_bindings -> def_bindings AND def_binding
-- On NEW reduce production def_bindings -> def_bindings AND def_binding
-- On MODULE reduce production def_bindings -> def_bindings AND def_binding
-- On MATCH reduce production def_bindings -> def_bindings AND def_binding
-- On LPAREN reduce production def_bindings -> def_bindings AND def_binding
-- On LOC reduce production def_bindings -> def_bindings AND def_binding
-- On LIDENT reduce production def_bindings -> def_bindings AND def_binding
-- On LET reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACKETLESS reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACKETBAR reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACKET reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACELESS reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACEBAR reduce production def_bindings -> def_bindings AND def_binding
-- On LBRACE reduce production def_bindings -> def_bindings AND def_binding
-- On LAZY reduce production def_bindings -> def_bindings AND def_binding
-- On INT reduce production def_bindings -> def_bindings AND def_binding
-- On IN reduce production def_bindings -> def_bindings AND def_binding
-- On IF reduce production def_bindings -> def_bindings AND def_binding
-- On FUNCTION reduce production def_bindings -> def_bindings AND def_binding
-- On FUN reduce production def_bindings -> def_bindings AND def_binding
-- On FOR reduce production def_bindings -> def_bindings AND def_binding
-- On FLOAT reduce production def_bindings -> def_bindings AND def_binding
-- On FALSE reduce production def_bindings -> def_bindings AND def_binding
-- On EXTERNAL reduce production def_bindings -> def_bindings AND def_binding
-- On EXCEPTION reduce production def_bindings -> def_bindings AND def_binding
-- On EOF reduce production def_bindings -> def_bindings AND def_binding
-- On END reduce production def_bindings -> def_bindings AND def_binding
-- On DEF reduce production def_bindings -> def_bindings AND def_binding
-- On CLASS reduce production def_bindings -> def_bindings AND def_binding
-- On CHAR reduce production def_bindings -> def_bindings AND def_binding
-- On BEGIN reduce production def_bindings -> def_bindings AND def_binding
-- On ASSERT reduce production def_bindings -> def_bindings AND def_binding
-- On AND reduce production def_bindings -> def_bindings AND def_binding

State 595:
def_bindings -> def_binding . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE reduce production def_bindings -> def_binding
-- On UIDENT reduce production def_bindings -> def_binding
-- On TYPE reduce production def_bindings -> def_binding
-- On TRY reduce production def_bindings -> def_binding
-- On TRUE reduce production def_bindings -> def_binding
-- On SUBTRACTIVE reduce production def_bindings -> def_binding
-- On STRING reduce production def_bindings -> def_binding
-- On SHARP reduce production def_bindings -> def_binding
-- On SEMISEMI reduce production def_bindings -> def_binding
-- On PREFIXOP reduce production def_bindings -> def_binding
-- On PARSER reduce production def_bindings -> def_binding
-- On OPEN reduce production def_bindings -> def_binding
-- On NEW reduce production def_bindings -> def_binding
-- On MODULE reduce production def_bindings -> def_binding
-- On MATCH reduce production def_bindings -> def_binding
-- On LPAREN reduce production def_bindings -> def_binding
-- On LOC reduce production def_bindings -> def_binding
-- On LIDENT reduce production def_bindings -> def_binding
-- On LET reduce production def_bindings -> def_binding
-- On LBRACKETLESS reduce production def_bindings -> def_binding
-- On LBRACKETBAR reduce production def_bindings -> def_binding
-- On LBRACKET reduce production def_bindings -> def_binding
-- On LBRACELESS reduce production def_bindings -> def_binding
-- On LBRACEBAR reduce production def_bindings -> def_binding
-- On LBRACE reduce production def_bindings -> def_binding
-- On LAZY reduce production def_bindings -> def_binding
-- On INT reduce production def_bindings -> def_binding
-- On IN reduce production def_bindings -> def_binding
-- On IF reduce production def_bindings -> def_binding
-- On FUNCTION reduce production def_bindings -> def_binding
-- On FUN reduce production def_bindings -> def_binding
-- On FOR reduce production def_bindings -> def_binding
-- On FLOAT reduce production def_bindings -> def_binding
-- On FALSE reduce production def_bindings -> def_binding
-- On EXTERNAL reduce production def_bindings -> def_binding
-- On EXCEPTION reduce production def_bindings -> def_binding
-- On EOF reduce production def_bindings -> def_binding
-- On END reduce production def_bindings -> def_binding
-- On DEF reduce production def_bindings -> def_binding
-- On CLASS reduce production def_bindings -> def_binding
-- On CHAR reduce production def_bindings -> def_binding
-- On BEGIN reduce production def_bindings -> def_binding
-- On ASSERT reduce production def_bindings -> def_binding
-- On AND reduce production def_bindings -> def_binding

State 596:
def_binding -> join_pattern EQUAL process . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE reduce production def_binding -> join_pattern EQUAL process
-- On UIDENT reduce production def_binding -> join_pattern EQUAL process
-- On TYPE reduce production def_binding -> join_pattern EQUAL process
-- On TRY reduce production def_binding -> join_pattern EQUAL process
-- On TRUE reduce production def_binding -> join_pattern EQUAL process
-- On SUBTRACTIVE reduce production def_binding -> join_pattern EQUAL process
-- On STRING reduce production def_binding -> join_pattern EQUAL process
-- On SHARP reduce production def_binding -> join_pattern EQUAL process
-- On SEMISEMI reduce production def_binding -> join_pattern EQUAL process
-- On PREFIXOP reduce production def_binding -> join_pattern EQUAL process
-- On PARSER reduce production def_binding -> join_pattern EQUAL process
-- On OPEN reduce production def_binding -> join_pattern EQUAL process
-- On NEW reduce production def_binding -> join_pattern EQUAL process
-- On MODULE reduce production def_binding -> join_pattern EQUAL process
-- On MATCH reduce production def_binding -> join_pattern EQUAL process
-- On LPAREN reduce production def_binding -> join_pattern EQUAL process
-- On LOC reduce production def_binding -> join_pattern EQUAL process
-- On LIDENT reduce production def_binding -> join_pattern EQUAL process
-- On LET reduce production def_binding -> join_pattern EQUAL process
-- On LBRACKETLESS reduce production def_binding -> join_pattern EQUAL process
-- On LBRACKETBAR reduce production def_binding -> join_pattern EQUAL process
-- On LBRACKET reduce production def_binding -> join_pattern EQUAL process
-- On LBRACELESS reduce production def_binding -> join_pattern EQUAL process
-- On LBRACEBAR reduce production def_binding -> join_pattern EQUAL process
-- On LBRACE reduce production def_binding -> join_pattern EQUAL process
-- On LAZY reduce production def_binding -> join_pattern EQUAL process
-- On INT reduce production def_binding -> join_pattern EQUAL process
-- On IN reduce production def_binding -> join_pattern EQUAL process
-- On IF reduce production def_binding -> join_pattern EQUAL process
-- On FUNCTION reduce production def_binding -> join_pattern EQUAL process
-- On FUN reduce production def_binding -> join_pattern EQUAL process
-- On FOR reduce production def_binding -> join_pattern EQUAL process
-- On FLOAT reduce production def_binding -> join_pattern EQUAL process
-- On FALSE reduce production def_binding -> join_pattern EQUAL process
-- On EXTERNAL reduce production def_binding -> join_pattern EQUAL process
-- On EXCEPTION reduce production def_binding -> join_pattern EQUAL process
-- On EOF reduce production def_binding -> join_pattern EQUAL process
-- On END reduce production def_binding -> join_pattern EQUAL process
-- On DEF reduce production def_binding -> join_pattern EQUAL process
-- On CLASS reduce production def_binding -> join_pattern EQUAL process
-- On CHAR reduce production def_binding -> join_pattern EQUAL process
-- On BEGIN reduce production def_binding -> join_pattern EQUAL process
-- On ASSERT reduce production def_binding -> join_pattern EQUAL process
-- On AND reduce production def_binding -> join_pattern EQUAL process

State 597:
join_pattern -> join_pattern BAR . join_pattern [ EQUAL BAR ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 598

State 598:
join_pattern -> join_pattern . BAR join_pattern [ EQUAL BAR ]
join_pattern -> join_pattern BAR join_pattern . [ EQUAL BAR ]
-- On EQUAL reduce production join_pattern -> join_pattern BAR join_pattern
-- On BAR reduce production join_pattern -> join_pattern BAR join_pattern

State 599:
def_bindings -> def_bindings . AND def_binding [ IN AND ]
expr -> DEF def_bindings . IN seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On IN shift to state 600
-- On AND shift to state 593

State 600:
expr -> DEF def_bindings IN . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 601
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 601:
expr -> DEF def_bindings IN seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> DEF def_bindings IN seq_expr
-- On WITH reduce production expr -> DEF def_bindings IN seq_expr
-- On WHILE reduce production expr -> DEF def_bindings IN seq_expr
-- On VIRTUAL reduce production expr -> DEF def_bindings IN seq_expr
-- On VAL reduce production expr -> DEF def_bindings IN seq_expr
-- On UIDENT reduce production expr -> DEF def_bindings IN seq_expr
-- On TYPE reduce production expr -> DEF def_bindings IN seq_expr
-- On TRY reduce production expr -> DEF def_bindings IN seq_expr
-- On TRUE reduce production expr -> DEF def_bindings IN seq_expr
-- On SUBTRACTIVE reduce production expr -> DEF def_bindings IN seq_expr
-- On STRING reduce production expr -> DEF def_bindings IN seq_expr
-- On STAR reduce production expr -> DEF def_bindings IN seq_expr
-- On SHARP reduce production expr -> DEF def_bindings IN seq_expr
-- On SEMISEMI reduce production expr -> DEF def_bindings IN seq_expr
-- On SEMI reduce production expr -> DEF def_bindings IN seq_expr
-- On RPAREN reduce production expr -> DEF def_bindings IN seq_expr
-- On RBRACKET reduce production expr -> DEF def_bindings IN seq_expr
-- On RBRACE reduce production expr -> DEF def_bindings IN seq_expr
-- On QUESTION reduce production expr -> DEF def_bindings IN seq_expr
-- On PREFIXOP reduce production expr -> DEF def_bindings IN seq_expr
-- On PARSER reduce production expr -> DEF def_bindings IN seq_expr
-- On OR reduce production expr -> DEF def_bindings IN seq_expr
-- On OPEN reduce production expr -> DEF def_bindings IN seq_expr
-- On NEW reduce production expr -> DEF def_bindings IN seq_expr
-- On MODULE reduce production expr -> DEF def_bindings IN seq_expr
-- On METHOD reduce production expr -> DEF def_bindings IN seq_expr
-- On MATCH reduce production expr -> DEF def_bindings IN seq_expr
-- On LPAREN reduce production expr -> DEF def_bindings IN seq_expr
-- On LOC reduce production expr -> DEF def_bindings IN seq_expr
-- On LIDENT reduce production expr -> DEF def_bindings IN seq_expr
-- On LET reduce production expr -> DEF def_bindings IN seq_expr
-- On LESSGREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On LESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKETLESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKETBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKET reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACELESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACEBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACE reduce production expr -> DEF def_bindings IN seq_expr
-- On LAZY reduce production expr -> DEF def_bindings IN seq_expr
-- On INT reduce production expr -> DEF def_bindings IN seq_expr
-- On INHERIT reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP4 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP3 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP2 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP1 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP0 reduce production expr -> DEF def_bindings IN seq_expr
-- On IN reduce production expr -> DEF def_bindings IN seq_expr
-- On IF reduce production expr -> DEF def_bindings IN seq_expr
-- On GREATERRBRACKET reduce production expr -> DEF def_bindings IN seq_expr
-- On GREATERRBRACE reduce production expr -> DEF def_bindings IN seq_expr
-- On GREATERGREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On GREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On FUNCTION reduce production expr -> DEF def_bindings IN seq_expr
-- On FUN reduce production expr -> DEF def_bindings IN seq_expr
-- On FOR reduce production expr -> DEF def_bindings IN seq_expr
-- On FLOAT reduce production expr -> DEF def_bindings IN seq_expr
-- On FALSE reduce production expr -> DEF def_bindings IN seq_expr
-- On EXTERNAL reduce production expr -> DEF def_bindings IN seq_expr
-- On EXCEPTION reduce production expr -> DEF def_bindings IN seq_expr
-- On EQUAL reduce production expr -> DEF def_bindings IN seq_expr
-- On EOF reduce production expr -> DEF def_bindings IN seq_expr
-- On END reduce production expr -> DEF def_bindings IN seq_expr
-- On ELSE reduce production expr -> DEF def_bindings IN seq_expr
-- On DONE reduce production expr -> DEF def_bindings IN seq_expr
-- On DEF reduce production expr -> DEF def_bindings IN seq_expr
-- On COMMA reduce production expr -> DEF def_bindings IN seq_expr
-- On COLONGREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On COLONEQUAL reduce production expr -> DEF def_bindings IN seq_expr
-- On COLONCOLON reduce production expr -> DEF def_bindings IN seq_expr
-- On COLON reduce production expr -> DEF def_bindings IN seq_expr
-- On CLASS reduce production expr -> DEF def_bindings IN seq_expr
-- On CHAR reduce production expr -> DEF def_bindings IN seq_expr
-- On BEGIN reduce production expr -> DEF def_bindings IN seq_expr
-- On BARRBRACKET reduce production expr -> DEF def_bindings IN seq_expr
-- On BARBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On BAR reduce production expr -> DEF def_bindings IN seq_expr
-- On ASSERT reduce production expr -> DEF def_bindings IN seq_expr
-- On AND reduce production expr -> DEF def_bindings IN seq_expr
-- On AMPERSAND reduce production expr -> DEF def_bindings IN seq_expr
-- On AMPERAMPER reduce production expr -> DEF def_bindings IN seq_expr

State 602:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
lbl_expr_list -> label_longident EQUAL expr . [ error SEMI RBRACE ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production lbl_expr_list -> label_longident EQUAL expr
-- On SEMI reduce production lbl_expr_list -> label_longident EQUAL expr
-- On RBRACE reduce production lbl_expr_list -> label_longident EQUAL expr

State 603:
expr -> LAZY . simple_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 609
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623

State 604:
simple_expr -> BEGIN . seq_expr END [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 605
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 605:
simple_expr -> BEGIN seq_expr . END [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 606
-- On END shift to state 607

State 606:
simple_expr -> BEGIN seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> BEGIN seq_expr error
-- On WHILE reduce production simple_expr -> BEGIN seq_expr error
-- On UIDENT reduce production simple_expr -> BEGIN seq_expr error
-- On TYPE reduce production simple_expr -> BEGIN seq_expr error
-- On TRY reduce production simple_expr -> BEGIN seq_expr error
-- On TRUE reduce production simple_expr -> BEGIN seq_expr error
-- On TO reduce production simple_expr -> BEGIN seq_expr error
-- On THEN reduce production simple_expr -> BEGIN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> BEGIN seq_expr error
-- On STRING reduce production simple_expr -> BEGIN seq_expr error
-- On STAR reduce production simple_expr -> BEGIN seq_expr error
-- On SHARP reduce production simple_expr -> BEGIN seq_expr error
-- On SEMISEMI reduce production simple_expr -> BEGIN seq_expr error
-- On SEMI reduce production simple_expr -> BEGIN seq_expr error
-- On PREFIXOP reduce production simple_expr -> BEGIN seq_expr error
-- On PARSER reduce production simple_expr -> BEGIN seq_expr error
-- On OR reduce production simple_expr -> BEGIN seq_expr error
-- On OPEN reduce production simple_expr -> BEGIN seq_expr error
-- On NEW reduce production simple_expr -> BEGIN seq_expr error
-- On MODULE reduce production simple_expr -> BEGIN seq_expr error
-- On MINUSGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On MATCH reduce production simple_expr -> BEGIN seq_expr error
-- On LPAREN reduce production simple_expr -> BEGIN seq_expr error
-- On LOC reduce production simple_expr -> BEGIN seq_expr error
-- On LIDENT reduce production simple_expr -> BEGIN seq_expr error
-- On LET reduce production simple_expr -> BEGIN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On LESSLESS reduce production simple_expr -> BEGIN seq_expr error
-- On LESSGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On LESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKET reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACELESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACE reduce production simple_expr -> BEGIN seq_expr error
-- On LAZY reduce production simple_expr -> BEGIN seq_expr error
-- On INT reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> BEGIN seq_expr error
-- On IN reduce production simple_expr -> BEGIN seq_expr error
-- On IF reduce production simple_expr -> BEGIN seq_expr error
-- On GREATER reduce production simple_expr -> BEGIN seq_expr error
-- On FUNCTION reduce production simple_expr -> BEGIN seq_expr error
-- On FUN reduce production simple_expr -> BEGIN seq_expr error
-- On FOR reduce production simple_expr -> BEGIN seq_expr error
-- On FLOAT reduce production simple_expr -> BEGIN seq_expr error
-- On FALSE reduce production simple_expr -> BEGIN seq_expr error
-- On EXTERNAL reduce production simple_expr -> BEGIN seq_expr error
-- On EXCEPTION reduce production simple_expr -> BEGIN seq_expr error
-- On EQUAL reduce production simple_expr -> BEGIN seq_expr error
-- On EOF reduce production simple_expr -> BEGIN seq_expr error
-- On END reduce production simple_expr -> BEGIN seq_expr error
-- On ELSE reduce production simple_expr -> BEGIN seq_expr error
-- On DOWNTO reduce production simple_expr -> BEGIN seq_expr error
-- On DOT reduce production simple_expr -> BEGIN seq_expr error
-- On DO reduce production simple_expr -> BEGIN seq_expr error
-- On DEF reduce production simple_expr -> BEGIN seq_expr error
-- On COMMA reduce production simple_expr -> BEGIN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> BEGIN seq_expr error
-- On COLONCOLON reduce production simple_expr -> BEGIN seq_expr error
-- On CLASS reduce production simple_expr -> BEGIN seq_expr error
-- On CHAR reduce production simple_expr -> BEGIN seq_expr error
-- On BEGIN reduce production simple_expr -> BEGIN seq_expr error
-- On BARBAR reduce production simple_expr -> BEGIN seq_expr error
-- On BAR reduce production simple_expr -> BEGIN seq_expr error
-- On ASSERT reduce production simple_expr -> BEGIN seq_expr error
-- On AND reduce production simple_expr -> BEGIN seq_expr error
-- On AMPERSAND reduce production simple_expr -> BEGIN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> BEGIN seq_expr error

State 607:
simple_expr -> BEGIN seq_expr END . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> BEGIN seq_expr END
-- On WHILE reduce production simple_expr -> BEGIN seq_expr END
-- On UIDENT reduce production simple_expr -> BEGIN seq_expr END
-- On TYPE reduce production simple_expr -> BEGIN seq_expr END
-- On TRY reduce production simple_expr -> BEGIN seq_expr END
-- On TRUE reduce production simple_expr -> BEGIN seq_expr END
-- On TO reduce production simple_expr -> BEGIN seq_expr END
-- On THEN reduce production simple_expr -> BEGIN seq_expr END
-- On SUBTRACTIVE reduce production simple_expr -> BEGIN seq_expr END
-- On STRING reduce production simple_expr -> BEGIN seq_expr END
-- On STAR reduce production simple_expr -> BEGIN seq_expr END
-- On SHARP reduce production simple_expr -> BEGIN seq_expr END
-- On SEMISEMI reduce production simple_expr -> BEGIN seq_expr END
-- On SEMI reduce production simple_expr -> BEGIN seq_expr END
-- On PREFIXOP reduce production simple_expr -> BEGIN seq_expr END
-- On PARSER reduce production simple_expr -> BEGIN seq_expr END
-- On OR reduce production simple_expr -> BEGIN seq_expr END
-- On OPEN reduce production simple_expr -> BEGIN seq_expr END
-- On NEW reduce production simple_expr -> BEGIN seq_expr END
-- On MODULE reduce production simple_expr -> BEGIN seq_expr END
-- On MINUSGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On MATCH reduce production simple_expr -> BEGIN seq_expr END
-- On LPAREN reduce production simple_expr -> BEGIN seq_expr END
-- On LOC reduce production simple_expr -> BEGIN seq_expr END
-- On LIDENT reduce production simple_expr -> BEGIN seq_expr END
-- On LET reduce production simple_expr -> BEGIN seq_expr END
-- On LESSLESSGREATERGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On LESSLESS reduce production simple_expr -> BEGIN seq_expr END
-- On LESSGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On LESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKETLESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKETBAR reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKET reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACELESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACEBAR reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACE reduce production simple_expr -> BEGIN seq_expr END
-- On LAZY reduce production simple_expr -> BEGIN seq_expr END
-- On INT reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP4 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP3 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP2 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP1 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP0 reduce production simple_expr -> BEGIN seq_expr END
-- On IN reduce production simple_expr -> BEGIN seq_expr END
-- On IF reduce production simple_expr -> BEGIN seq_expr END
-- On GREATER reduce production simple_expr -> BEGIN seq_expr END
-- On FUNCTION reduce production simple_expr -> BEGIN seq_expr END
-- On FUN reduce production simple_expr -> BEGIN seq_expr END
-- On FOR reduce production simple_expr -> BEGIN seq_expr END
-- On FLOAT reduce production simple_expr -> BEGIN seq_expr END
-- On FALSE reduce production simple_expr -> BEGIN seq_expr END
-- On EXTERNAL reduce production simple_expr -> BEGIN seq_expr END
-- On EXCEPTION reduce production simple_expr -> BEGIN seq_expr END
-- On EQUAL reduce production simple_expr -> BEGIN seq_expr END
-- On EOF reduce production simple_expr -> BEGIN seq_expr END
-- On END reduce production simple_expr -> BEGIN seq_expr END
-- On ELSE reduce production simple_expr -> BEGIN seq_expr END
-- On DOWNTO reduce production simple_expr -> BEGIN seq_expr END
-- On DOT reduce production simple_expr -> BEGIN seq_expr END
-- On DO reduce production simple_expr -> BEGIN seq_expr END
-- On DEF reduce production simple_expr -> BEGIN seq_expr END
-- On COMMA reduce production simple_expr -> BEGIN seq_expr END
-- On COLONEQUAL reduce production simple_expr -> BEGIN seq_expr END
-- On COLONCOLON reduce production simple_expr -> BEGIN seq_expr END
-- On CLASS reduce production simple_expr -> BEGIN seq_expr END
-- On CHAR reduce production simple_expr -> BEGIN seq_expr END
-- On BEGIN reduce production simple_expr -> BEGIN seq_expr END
-- On BARBAR reduce production simple_expr -> BEGIN seq_expr END
-- On BAR reduce production simple_expr -> BEGIN seq_expr END
-- On ASSERT reduce production simple_expr -> BEGIN seq_expr END
-- On AND reduce production simple_expr -> BEGIN seq_expr END
-- On AMPERSAND reduce production simple_expr -> BEGIN seq_expr END
-- On AMPERAMPER reduce production simple_expr -> BEGIN seq_expr END

State 608:
simple_expr -> val_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> val_longident
-- On WHILE reduce production simple_expr -> val_longident
-- On UIDENT reduce production simple_expr -> val_longident
-- On TYPE reduce production simple_expr -> val_longident
-- On TRY reduce production simple_expr -> val_longident
-- On TRUE reduce production simple_expr -> val_longident
-- On TO reduce production simple_expr -> val_longident
-- On THEN reduce production simple_expr -> val_longident
-- On SUBTRACTIVE reduce production simple_expr -> val_longident
-- On STRING reduce production simple_expr -> val_longident
-- On STAR reduce production simple_expr -> val_longident
-- On SHARP reduce production simple_expr -> val_longident
-- On SEMISEMI reduce production simple_expr -> val_longident
-- On SEMI reduce production simple_expr -> val_longident
-- On PREFIXOP reduce production simple_expr -> val_longident
-- On PARSER reduce production simple_expr -> val_longident
-- On OR reduce production simple_expr -> val_longident
-- On OPEN reduce production simple_expr -> val_longident
-- On NEW reduce production simple_expr -> val_longident
-- On MODULE reduce production simple_expr -> val_longident
-- On MINUSGREATER reduce production simple_expr -> val_longident
-- On MATCH reduce production simple_expr -> val_longident
-- On LPAREN reduce production simple_expr -> val_longident
-- On LOC reduce production simple_expr -> val_longident
-- On LIDENT reduce production simple_expr -> val_longident
-- On LET reduce production simple_expr -> val_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> val_longident
-- On LESSLESS reduce production simple_expr -> val_longident
-- On LESSGREATER reduce production simple_expr -> val_longident
-- On LESS reduce production simple_expr -> val_longident
-- On LBRACKETLESS reduce production simple_expr -> val_longident
-- On LBRACKETBAR reduce production simple_expr -> val_longident
-- On LBRACKET reduce production simple_expr -> val_longident
-- On LBRACELESS reduce production simple_expr -> val_longident
-- On LBRACEBAR reduce production simple_expr -> val_longident
-- On LBRACE reduce production simple_expr -> val_longident
-- On LAZY reduce production simple_expr -> val_longident
-- On INT reduce production simple_expr -> val_longident
-- On INFIXOP4 reduce production simple_expr -> val_longident
-- On INFIXOP3 reduce production simple_expr -> val_longident
-- On INFIXOP2 reduce production simple_expr -> val_longident
-- On INFIXOP1 reduce production simple_expr -> val_longident
-- On INFIXOP0 reduce production simple_expr -> val_longident
-- On IN reduce production simple_expr -> val_longident
-- On IF reduce production simple_expr -> val_longident
-- On GREATER reduce production simple_expr -> val_longident
-- On FUNCTION reduce production simple_expr -> val_longident
-- On FUN reduce production simple_expr -> val_longident
-- On FOR reduce production simple_expr -> val_longident
-- On FLOAT reduce production simple_expr -> val_longident
-- On FALSE reduce production simple_expr -> val_longident
-- On EXTERNAL reduce production simple_expr -> val_longident
-- On EXCEPTION reduce production simple_expr -> val_longident
-- On EQUAL reduce production simple_expr -> val_longident
-- On EOF reduce production simple_expr -> val_longident
-- On END reduce production simple_expr -> val_longident
-- On ELSE reduce production simple_expr -> val_longident
-- On DOWNTO reduce production simple_expr -> val_longident
-- On DOT reduce production simple_expr -> val_longident
-- On DO reduce production simple_expr -> val_longident
-- On DEF reduce production simple_expr -> val_longident
-- On COMMA reduce production simple_expr -> val_longident
-- On COLONEQUAL reduce production simple_expr -> val_longident
-- On COLONCOLON reduce production simple_expr -> val_longident
-- On CLASS reduce production simple_expr -> val_longident
-- On CHAR reduce production simple_expr -> val_longident
-- On BEGIN reduce production simple_expr -> val_longident
-- On BARBAR reduce production simple_expr -> val_longident
-- On BAR reduce production simple_expr -> val_longident
-- On ASSERT reduce production simple_expr -> val_longident
-- On AND reduce production simple_expr -> val_longident
-- On AMPERSAND reduce production simple_expr -> val_longident
-- On AMPERAMPER reduce production simple_expr -> val_longident

State 609:
expr -> LAZY simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 610
-- On DOT shift to state 612
-- On WITH reduce production expr -> LAZY simple_expr
-- On WHILE reduce production expr -> LAZY simple_expr
-- On UIDENT reduce production expr -> LAZY simple_expr
-- On TYPE reduce production expr -> LAZY simple_expr
-- On TRY reduce production expr -> LAZY simple_expr
-- On TRUE reduce production expr -> LAZY simple_expr
-- On TO reduce production expr -> LAZY simple_expr
-- On THEN reduce production expr -> LAZY simple_expr
-- On SUBTRACTIVE reduce production expr -> LAZY simple_expr
-- On STRING reduce production expr -> LAZY simple_expr
-- On STAR reduce production expr -> LAZY simple_expr
-- On SEMISEMI reduce production expr -> LAZY simple_expr
-- On SEMI reduce production expr -> LAZY simple_expr
-- On PREFIXOP reduce production expr -> LAZY simple_expr
-- On PARSER reduce production expr -> LAZY simple_expr
-- On OR reduce production expr -> LAZY simple_expr
-- On OPEN reduce production expr -> LAZY simple_expr
-- On NEW reduce production expr -> LAZY simple_expr
-- On MODULE reduce production expr -> LAZY simple_expr
-- On MINUSGREATER reduce production expr -> LAZY simple_expr
-- On MATCH reduce production expr -> LAZY simple_expr
-- On LPAREN reduce production expr -> LAZY simple_expr
-- On LOC reduce production expr -> LAZY simple_expr
-- On LIDENT reduce production expr -> LAZY simple_expr
-- On LET reduce production expr -> LAZY simple_expr
-- On LESSGREATER reduce production expr -> LAZY simple_expr
-- On LESS reduce production expr -> LAZY simple_expr
-- On LBRACKETLESS reduce production expr -> LAZY simple_expr
-- On LBRACKETBAR reduce production expr -> LAZY simple_expr
-- On LBRACKET reduce production expr -> LAZY simple_expr
-- On LBRACELESS reduce production expr -> LAZY simple_expr
-- On LBRACEBAR reduce production expr -> LAZY simple_expr
-- On LBRACE reduce production expr -> LAZY simple_expr
-- On LAZY reduce production expr -> LAZY simple_expr
-- On INT reduce production expr -> LAZY simple_expr
-- On INFIXOP4 reduce production expr -> LAZY simple_expr
-- On INFIXOP3 reduce production expr -> LAZY simple_expr
-- On INFIXOP2 reduce production expr -> LAZY simple_expr
-- On INFIXOP1 reduce production expr -> LAZY simple_expr
-- On INFIXOP0 reduce production expr -> LAZY simple_expr
-- On IN reduce production expr -> LAZY simple_expr
-- On IF reduce production expr -> LAZY simple_expr
-- On GREATER reduce production expr -> LAZY simple_expr
-- On FUNCTION reduce production expr -> LAZY simple_expr
-- On FUN reduce production expr -> LAZY simple_expr
-- On FOR reduce production expr -> LAZY simple_expr
-- On FLOAT reduce production expr -> LAZY simple_expr
-- On FALSE reduce production expr -> LAZY simple_expr
-- On EXTERNAL reduce production expr -> LAZY simple_expr
-- On EXCEPTION reduce production expr -> LAZY simple_expr
-- On EQUAL reduce production expr -> LAZY simple_expr
-- On EOF reduce production expr -> LAZY simple_expr
-- On END reduce production expr -> LAZY simple_expr
-- On ELSE reduce production expr -> LAZY simple_expr
-- On DOWNTO reduce production expr -> LAZY simple_expr
-- On DO reduce production expr -> LAZY simple_expr
-- On DEF reduce production expr -> LAZY simple_expr
-- On COMMA reduce production expr -> LAZY simple_expr
-- On COLONEQUAL reduce production expr -> LAZY simple_expr
-- On COLONCOLON reduce production expr -> LAZY simple_expr
-- On CLASS reduce production expr -> LAZY simple_expr
-- On CHAR reduce production expr -> LAZY simple_expr
-- On BEGIN reduce production expr -> LAZY simple_expr
-- On BARBAR reduce production expr -> LAZY simple_expr
-- On BAR reduce production expr -> LAZY simple_expr
-- On ASSERT reduce production expr -> LAZY simple_expr
-- On AND reduce production expr -> LAZY simple_expr
-- On AMPERSAND reduce production expr -> LAZY simple_expr
-- On AMPERAMPER reduce production expr -> LAZY simple_expr

State 610:
simple_expr -> simple_expr SHARP . label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 141
-- On label shift to state 611

State 611:
simple_expr -> simple_expr SHARP label . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr SHARP label
-- On WHILE reduce production simple_expr -> simple_expr SHARP label
-- On UIDENT reduce production simple_expr -> simple_expr SHARP label
-- On TYPE reduce production simple_expr -> simple_expr SHARP label
-- On TRY reduce production simple_expr -> simple_expr SHARP label
-- On TRUE reduce production simple_expr -> simple_expr SHARP label
-- On TO reduce production simple_expr -> simple_expr SHARP label
-- On THEN reduce production simple_expr -> simple_expr SHARP label
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr SHARP label
-- On STRING reduce production simple_expr -> simple_expr SHARP label
-- On STAR reduce production simple_expr -> simple_expr SHARP label
-- On SHARP reduce production simple_expr -> simple_expr SHARP label
-- On SEMISEMI reduce production simple_expr -> simple_expr SHARP label
-- On SEMI reduce production simple_expr -> simple_expr SHARP label
-- On PREFIXOP reduce production simple_expr -> simple_expr SHARP label
-- On PARSER reduce production simple_expr -> simple_expr SHARP label
-- On OR reduce production simple_expr -> simple_expr SHARP label
-- On OPEN reduce production simple_expr -> simple_expr SHARP label
-- On NEW reduce production simple_expr -> simple_expr SHARP label
-- On MODULE reduce production simple_expr -> simple_expr SHARP label
-- On MINUSGREATER reduce production simple_expr -> simple_expr SHARP label
-- On MATCH reduce production simple_expr -> simple_expr SHARP label
-- On LPAREN reduce production simple_expr -> simple_expr SHARP label
-- On LOC reduce production simple_expr -> simple_expr SHARP label
-- On LIDENT reduce production simple_expr -> simple_expr SHARP label
-- On LET reduce production simple_expr -> simple_expr SHARP label
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr SHARP label
-- On LESSLESS reduce production simple_expr -> simple_expr SHARP label
-- On LESSGREATER reduce production simple_expr -> simple_expr SHARP label
-- On LESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKETLESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKETBAR reduce production simple_expr -> simple_expr SHARP label
-- On LBRACKET reduce production simple_expr -> simple_expr SHARP label
-- On LBRACELESS reduce production simple_expr -> simple_expr SHARP label
-- On LBRACEBAR reduce production simple_expr -> simple_expr SHARP label
-- On LBRACE reduce production simple_expr -> simple_expr SHARP label
-- On LAZY reduce production simple_expr -> simple_expr SHARP label
-- On INT reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP4 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP3 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP2 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP1 reduce production simple_expr -> simple_expr SHARP label
-- On INFIXOP0 reduce production simple_expr -> simple_expr SHARP label
-- On IN reduce production simple_expr -> simple_expr SHARP label
-- On IF reduce production simple_expr -> simple_expr SHARP label
-- On GREATER reduce production simple_expr -> simple_expr SHARP label
-- On FUNCTION reduce production simple_expr -> simple_expr SHARP label
-- On FUN reduce production simple_expr -> simple_expr SHARP label
-- On FOR reduce production simple_expr -> simple_expr SHARP label
-- On FLOAT reduce production simple_expr -> simple_expr SHARP label
-- On FALSE reduce production simple_expr -> simple_expr SHARP label
-- On EXTERNAL reduce production simple_expr -> simple_expr SHARP label
-- On EXCEPTION reduce production simple_expr -> simple_expr SHARP label
-- On EQUAL reduce production simple_expr -> simple_expr SHARP label
-- On EOF reduce production simple_expr -> simple_expr SHARP label
-- On END reduce production simple_expr -> simple_expr SHARP label
-- On ELSE reduce production simple_expr -> simple_expr SHARP label
-- On DOWNTO reduce production simple_expr -> simple_expr SHARP label
-- On DOT reduce production simple_expr -> simple_expr SHARP label
-- On DO reduce production simple_expr -> simple_expr SHARP label
-- On DEF reduce production simple_expr -> simple_expr SHARP label
-- On COMMA reduce production simple_expr -> simple_expr SHARP label
-- On COLONEQUAL reduce production simple_expr -> simple_expr SHARP label
-- On COLONCOLON reduce production simple_expr -> simple_expr SHARP label
-- On CLASS reduce production simple_expr -> simple_expr SHARP label
-- On CHAR reduce production simple_expr -> simple_expr SHARP label
-- On BEGIN reduce production simple_expr -> simple_expr SHARP label
-- On BARBAR reduce production simple_expr -> simple_expr SHARP label
-- On BAR reduce production simple_expr -> simple_expr SHARP label
-- On ASSERT reduce production simple_expr -> simple_expr SHARP label
-- On AND reduce production simple_expr -> simple_expr SHARP label
-- On AMPERSAND reduce production simple_expr -> simple_expr SHARP label
-- On AMPERAMPER reduce production simple_expr -> simple_expr SHARP label

State 612:
simple_expr -> simple_expr DOT . label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 613
-- On LIDENT shift to state 54
-- On LBRACKET shift to state 617
-- On mod_longident shift to state 55
-- On label_longident shift to state 621

State 613:
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 614
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 614:
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 615
-- On RPAREN shift to state 616

State 615:
simple_expr -> simple_expr DOT LPAREN seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On TO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On THEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr error

State 616:
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On THEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 617:
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 618
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 618:
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 619
-- On RBRACKET shift to state 620

State 619:
simple_expr -> simple_expr DOT LBRACKET seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On TO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On THEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr error

State 620:
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On THEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 621:
simple_expr -> simple_expr DOT label_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> simple_expr DOT label_longident
-- On WHILE reduce production simple_expr -> simple_expr DOT label_longident
-- On UIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On TYPE reduce production simple_expr -> simple_expr DOT label_longident
-- On TRY reduce production simple_expr -> simple_expr DOT label_longident
-- On TRUE reduce production simple_expr -> simple_expr DOT label_longident
-- On TO reduce production simple_expr -> simple_expr DOT label_longident
-- On THEN reduce production simple_expr -> simple_expr DOT label_longident
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT label_longident
-- On STRING reduce production simple_expr -> simple_expr DOT label_longident
-- On STAR reduce production simple_expr -> simple_expr DOT label_longident
-- On SHARP reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT label_longident
-- On PARSER reduce production simple_expr -> simple_expr DOT label_longident
-- On OR reduce production simple_expr -> simple_expr DOT label_longident
-- On OPEN reduce production simple_expr -> simple_expr DOT label_longident
-- On NEW reduce production simple_expr -> simple_expr DOT label_longident
-- On MODULE reduce production simple_expr -> simple_expr DOT label_longident
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On MATCH reduce production simple_expr -> simple_expr DOT label_longident
-- On LPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On LOC reduce production simple_expr -> simple_expr DOT label_longident
-- On LIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On LET reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On LAZY reduce production simple_expr -> simple_expr DOT label_longident
-- On INT reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT label_longident
-- On IN reduce production simple_expr -> simple_expr DOT label_longident
-- On IF reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On FUNCTION reduce production simple_expr -> simple_expr DOT label_longident
-- On FUN reduce production simple_expr -> simple_expr DOT label_longident
-- On FOR reduce production simple_expr -> simple_expr DOT label_longident
-- On FLOAT reduce production simple_expr -> simple_expr DOT label_longident
-- On FALSE reduce production simple_expr -> simple_expr DOT label_longident
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT label_longident
-- On EQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EOF reduce production simple_expr -> simple_expr DOT label_longident
-- On END reduce production simple_expr -> simple_expr DOT label_longident
-- On ELSE reduce production simple_expr -> simple_expr DOT label_longident
-- On DOWNTO reduce production simple_expr -> simple_expr DOT label_longident
-- On DOT reduce production simple_expr -> simple_expr DOT label_longident
-- On DO reduce production simple_expr -> simple_expr DOT label_longident
-- On DEF reduce production simple_expr -> simple_expr DOT label_longident
-- On COMMA reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT label_longident
-- On CLASS reduce production simple_expr -> simple_expr DOT label_longident
-- On CHAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BEGIN reduce production simple_expr -> simple_expr DOT label_longident
-- On BARBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BAR reduce production simple_expr -> simple_expr DOT label_longident
-- On ASSERT reduce production simple_expr -> simple_expr DOT label_longident
-- On AND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT label_longident

State 622:
simple_expr -> constr_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> constr_longident
-- On WHILE reduce production simple_expr -> constr_longident
-- On UIDENT reduce production simple_expr -> constr_longident
-- On TYPE reduce production simple_expr -> constr_longident
-- On TRY reduce production simple_expr -> constr_longident
-- On TRUE reduce production simple_expr -> constr_longident
-- On TO reduce production simple_expr -> constr_longident
-- On THEN reduce production simple_expr -> constr_longident
-- On SUBTRACTIVE reduce production simple_expr -> constr_longident
-- On STRING reduce production simple_expr -> constr_longident
-- On STAR reduce production simple_expr -> constr_longident
-- On SHARP reduce production simple_expr -> constr_longident
-- On SEMISEMI reduce production simple_expr -> constr_longident
-- On SEMI reduce production simple_expr -> constr_longident
-- On PREFIXOP reduce production simple_expr -> constr_longident
-- On PARSER reduce production simple_expr -> constr_longident
-- On OR reduce production simple_expr -> constr_longident
-- On OPEN reduce production simple_expr -> constr_longident
-- On NEW reduce production simple_expr -> constr_longident
-- On MODULE reduce production simple_expr -> constr_longident
-- On MINUSGREATER reduce production simple_expr -> constr_longident
-- On MATCH reduce production simple_expr -> constr_longident
-- On LPAREN reduce production simple_expr -> constr_longident
-- On LOC reduce production simple_expr -> constr_longident
-- On LIDENT reduce production simple_expr -> constr_longident
-- On LET reduce production simple_expr -> constr_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constr_longident
-- On LESSLESS reduce production simple_expr -> constr_longident
-- On LESSGREATER reduce production simple_expr -> constr_longident
-- On LESS reduce production simple_expr -> constr_longident
-- On LBRACKETLESS reduce production simple_expr -> constr_longident
-- On LBRACKETBAR reduce production simple_expr -> constr_longident
-- On LBRACKET reduce production simple_expr -> constr_longident
-- On LBRACELESS reduce production simple_expr -> constr_longident
-- On LBRACEBAR reduce production simple_expr -> constr_longident
-- On LBRACE reduce production simple_expr -> constr_longident
-- On LAZY reduce production simple_expr -> constr_longident
-- On INT reduce production simple_expr -> constr_longident
-- On INFIXOP4 reduce production simple_expr -> constr_longident
-- On INFIXOP3 reduce production simple_expr -> constr_longident
-- On INFIXOP2 reduce production simple_expr -> constr_longident
-- On INFIXOP1 reduce production simple_expr -> constr_longident
-- On INFIXOP0 reduce production simple_expr -> constr_longident
-- On IN reduce production simple_expr -> constr_longident
-- On IF reduce production simple_expr -> constr_longident
-- On GREATER reduce production simple_expr -> constr_longident
-- On FUNCTION reduce production simple_expr -> constr_longident
-- On FUN reduce production simple_expr -> constr_longident
-- On FOR reduce production simple_expr -> constr_longident
-- On FLOAT reduce production simple_expr -> constr_longident
-- On FALSE reduce production simple_expr -> constr_longident
-- On EXTERNAL reduce production simple_expr -> constr_longident
-- On EXCEPTION reduce production simple_expr -> constr_longident
-- On EQUAL reduce production simple_expr -> constr_longident
-- On EOF reduce production simple_expr -> constr_longident
-- On END reduce production simple_expr -> constr_longident
-- On ELSE reduce production simple_expr -> constr_longident
-- On DOWNTO reduce production simple_expr -> constr_longident
-- On DOT reduce production simple_expr -> constr_longident
-- On DO reduce production simple_expr -> constr_longident
-- On DEF reduce production simple_expr -> constr_longident
-- On COMMA reduce production simple_expr -> constr_longident
-- On COLONEQUAL reduce production simple_expr -> constr_longident
-- On COLONCOLON reduce production simple_expr -> constr_longident
-- On CLASS reduce production simple_expr -> constr_longident
-- On CHAR reduce production simple_expr -> constr_longident
-- On BEGIN reduce production simple_expr -> constr_longident
-- On BARBAR reduce production simple_expr -> constr_longident
-- On BAR reduce production simple_expr -> constr_longident
-- On ASSERT reduce production simple_expr -> constr_longident
-- On AND reduce production simple_expr -> constr_longident
-- On AMPERSAND reduce production simple_expr -> constr_longident
-- On AMPERAMPER reduce production simple_expr -> constr_longident

State 623:
simple_expr -> constant . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> constant
-- On WHILE reduce production simple_expr -> constant
-- On UIDENT reduce production simple_expr -> constant
-- On TYPE reduce production simple_expr -> constant
-- On TRY reduce production simple_expr -> constant
-- On TRUE reduce production simple_expr -> constant
-- On TO reduce production simple_expr -> constant
-- On THEN reduce production simple_expr -> constant
-- On SUBTRACTIVE reduce production simple_expr -> constant
-- On STRING reduce production simple_expr -> constant
-- On STAR reduce production simple_expr -> constant
-- On SHARP reduce production simple_expr -> constant
-- On SEMISEMI reduce production simple_expr -> constant
-- On SEMI reduce production simple_expr -> constant
-- On PREFIXOP reduce production simple_expr -> constant
-- On PARSER reduce production simple_expr -> constant
-- On OR reduce production simple_expr -> constant
-- On OPEN reduce production simple_expr -> constant
-- On NEW reduce production simple_expr -> constant
-- On MODULE reduce production simple_expr -> constant
-- On MINUSGREATER reduce production simple_expr -> constant
-- On MATCH reduce production simple_expr -> constant
-- On LPAREN reduce production simple_expr -> constant
-- On LOC reduce production simple_expr -> constant
-- On LIDENT reduce production simple_expr -> constant
-- On LET reduce production simple_expr -> constant
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constant
-- On LESSLESS reduce production simple_expr -> constant
-- On LESSGREATER reduce production simple_expr -> constant
-- On LESS reduce production simple_expr -> constant
-- On LBRACKETLESS reduce production simple_expr -> constant
-- On LBRACKETBAR reduce production simple_expr -> constant
-- On LBRACKET reduce production simple_expr -> constant
-- On LBRACELESS reduce production simple_expr -> constant
-- On LBRACEBAR reduce production simple_expr -> constant
-- On LBRACE reduce production simple_expr -> constant
-- On LAZY reduce production simple_expr -> constant
-- On INT reduce production simple_expr -> constant
-- On INFIXOP4 reduce production simple_expr -> constant
-- On INFIXOP3 reduce production simple_expr -> constant
-- On INFIXOP2 reduce production simple_expr -> constant
-- On INFIXOP1 reduce production simple_expr -> constant
-- On INFIXOP0 reduce production simple_expr -> constant
-- On IN reduce production simple_expr -> constant
-- On IF reduce production simple_expr -> constant
-- On GREATER reduce production simple_expr -> constant
-- On FUNCTION reduce production simple_expr -> constant
-- On FUN reduce production simple_expr -> constant
-- On FOR reduce production simple_expr -> constant
-- On FLOAT reduce production simple_expr -> constant
-- On FALSE reduce production simple_expr -> constant
-- On EXTERNAL reduce production simple_expr -> constant
-- On EXCEPTION reduce production simple_expr -> constant
-- On EQUAL reduce production simple_expr -> constant
-- On EOF reduce production simple_expr -> constant
-- On END reduce production simple_expr -> constant
-- On ELSE reduce production simple_expr -> constant
-- On DOWNTO reduce production simple_expr -> constant
-- On DOT reduce production simple_expr -> constant
-- On DO reduce production simple_expr -> constant
-- On DEF reduce production simple_expr -> constant
-- On COMMA reduce production simple_expr -> constant
-- On COLONEQUAL reduce production simple_expr -> constant
-- On COLONCOLON reduce production simple_expr -> constant
-- On CLASS reduce production simple_expr -> constant
-- On CHAR reduce production simple_expr -> constant
-- On BEGIN reduce production simple_expr -> constant
-- On BARBAR reduce production simple_expr -> constant
-- On BAR reduce production simple_expr -> constant
-- On ASSERT reduce production simple_expr -> constant
-- On AND reduce production simple_expr -> constant
-- On AMPERSAND reduce production simple_expr -> constant
-- On AMPERAMPER reduce production simple_expr -> constant

State 624:
expr -> IF . seq_expr THEN expr ELSE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF . seq_expr THEN expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 734
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 625:
expr -> FUNCTION . opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 626
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 626:
expr -> FUNCTION opt_bar . match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 627
-- On mod_longident shift to state 303
-- On match_cases shift to state 730
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 627:
match_cases -> pattern . match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
-- On WHEN shift to state 628
-- On MINUSGREATER shift to state 631
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459
-- On match_action shift to state 729

State 628:
match_action -> WHEN . seq_expr MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 726
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 629:
expr -> FUN . simple_pattern fun_def [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 630
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 630:
expr -> FUN simple_pattern . fun_def [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHEN shift to state 628
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On MINUSGREATER shift to state 631
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 721
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On match_action shift to state 722
-- On fun_def shift to state 725
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 631:
match_action -> MINUSGREATER . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 720
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 632:
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR . val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 633

State 633:
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident . EQUAL seq_expr direction_flag seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On EQUAL shift to state 634

State 634:
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL . seq_expr direction_flag seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 711
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 635:
expr -> DEF . def_bindings IN seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 636
-- On def_binding shift to state 595

State 636:
def_bindings -> def_bindings . AND def_binding [ IN AND ]
expr -> DEF def_bindings . IN seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On IN shift to state 637
-- On AND shift to state 593

State 637:
expr -> DEF def_bindings IN . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 707
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 638:
expr -> ASSERT . simple_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 639
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623

State 639:
expr -> ASSERT simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 610
-- On DOT shift to state 612
-- On WITH reduce production expr -> ASSERT simple_expr
-- On WHILE reduce production expr -> ASSERT simple_expr
-- On UIDENT reduce production expr -> ASSERT simple_expr
-- On TYPE reduce production expr -> ASSERT simple_expr
-- On TRY reduce production expr -> ASSERT simple_expr
-- On TRUE reduce production expr -> ASSERT simple_expr
-- On TO reduce production expr -> ASSERT simple_expr
-- On THEN reduce production expr -> ASSERT simple_expr
-- On SUBTRACTIVE reduce production expr -> ASSERT simple_expr
-- On STRING reduce production expr -> ASSERT simple_expr
-- On STAR reduce production expr -> ASSERT simple_expr
-- On SEMISEMI reduce production expr -> ASSERT simple_expr
-- On SEMI reduce production expr -> ASSERT simple_expr
-- On PREFIXOP reduce production expr -> ASSERT simple_expr
-- On PARSER reduce production expr -> ASSERT simple_expr
-- On OR reduce production expr -> ASSERT simple_expr
-- On OPEN reduce production expr -> ASSERT simple_expr
-- On NEW reduce production expr -> ASSERT simple_expr
-- On MODULE reduce production expr -> ASSERT simple_expr
-- On MINUSGREATER reduce production expr -> ASSERT simple_expr
-- On MATCH reduce production expr -> ASSERT simple_expr
-- On LPAREN reduce production expr -> ASSERT simple_expr
-- On LOC reduce production expr -> ASSERT simple_expr
-- On LIDENT reduce production expr -> ASSERT simple_expr
-- On LET reduce production expr -> ASSERT simple_expr
-- On LESSGREATER reduce production expr -> ASSERT simple_expr
-- On LESS reduce production expr -> ASSERT simple_expr
-- On LBRACKETLESS reduce production expr -> ASSERT simple_expr
-- On LBRACKETBAR reduce production expr -> ASSERT simple_expr
-- On LBRACKET reduce production expr -> ASSERT simple_expr
-- On LBRACELESS reduce production expr -> ASSERT simple_expr
-- On LBRACEBAR reduce production expr -> ASSERT simple_expr
-- On LBRACE reduce production expr -> ASSERT simple_expr
-- On LAZY reduce production expr -> ASSERT simple_expr
-- On INT reduce production expr -> ASSERT simple_expr
-- On INFIXOP4 reduce production expr -> ASSERT simple_expr
-- On INFIXOP3 reduce production expr -> ASSERT simple_expr
-- On INFIXOP2 reduce production expr -> ASSERT simple_expr
-- On INFIXOP1 reduce production expr -> ASSERT simple_expr
-- On INFIXOP0 reduce production expr -> ASSERT simple_expr
-- On IN reduce production expr -> ASSERT simple_expr
-- On IF reduce production expr -> ASSERT simple_expr
-- On GREATER reduce production expr -> ASSERT simple_expr
-- On FUNCTION reduce production expr -> ASSERT simple_expr
-- On FUN reduce production expr -> ASSERT simple_expr
-- On FOR reduce production expr -> ASSERT simple_expr
-- On FLOAT reduce production expr -> ASSERT simple_expr
-- On FALSE reduce production expr -> ASSERT simple_expr
-- On EXTERNAL reduce production expr -> ASSERT simple_expr
-- On EXCEPTION reduce production expr -> ASSERT simple_expr
-- On EQUAL reduce production expr -> ASSERT simple_expr
-- On EOF reduce production expr -> ASSERT simple_expr
-- On END reduce production expr -> ASSERT simple_expr
-- On ELSE reduce production expr -> ASSERT simple_expr
-- On DOWNTO reduce production expr -> ASSERT simple_expr
-- On DO reduce production expr -> ASSERT simple_expr
-- On DEF reduce production expr -> ASSERT simple_expr
-- On COMMA reduce production expr -> ASSERT simple_expr
-- On COLONEQUAL reduce production expr -> ASSERT simple_expr
-- On COLONCOLON reduce production expr -> ASSERT simple_expr
-- On CLASS reduce production expr -> ASSERT simple_expr
-- On CHAR reduce production expr -> ASSERT simple_expr
-- On BEGIN reduce production expr -> ASSERT simple_expr
-- On BARBAR reduce production expr -> ASSERT simple_expr
-- On BAR reduce production expr -> ASSERT simple_expr
-- On ASSERT reduce production expr -> ASSERT simple_expr
-- On AND reduce production expr -> ASSERT simple_expr
-- On AMPERSAND reduce production expr -> ASSERT simple_expr
-- On AMPERAMPER reduce production expr -> ASSERT simple_expr

State 640:
expr -> simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . simple_expr_list [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESS list_of_exprs GREATERGREATER [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESS list_of_exprs error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . LESSLESSGREATERGREATER [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT label_longident LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LPAREN seq_expr RPAREN LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On SHARP shift to state 610
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LESSLESSGREATERGREATER shift to state 641
-- On LESSLESS shift to state 642
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DOT shift to state 646
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr_list shift to state 704
-- On simple_expr shift to state 706
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623
-- On WITH reduce production expr -> simple_expr
-- On WHILE reduce production expr -> simple_expr
-- On UIDENT reduce production expr -> simple_expr
-- On TYPE reduce production expr -> simple_expr
-- On TRY reduce production expr -> simple_expr
-- On TRUE reduce production expr -> simple_expr
-- On TO reduce production expr -> simple_expr
-- On THEN reduce production expr -> simple_expr
-- On SUBTRACTIVE reduce production expr -> simple_expr
-- On STRING reduce production expr -> simple_expr
-- On STAR reduce production expr -> simple_expr
-- On SHARP reduce production expr -> simple_expr
-- On SEMISEMI reduce production expr -> simple_expr
-- On SEMI reduce production expr -> simple_expr
-- On PREFIXOP reduce production expr -> simple_expr
-- On PARSER reduce production expr -> simple_expr
-- On OR reduce production expr -> simple_expr
-- On OPEN reduce production expr -> simple_expr
-- On NEW reduce production expr -> simple_expr
-- On MODULE reduce production expr -> simple_expr
-- On MINUSGREATER reduce production expr -> simple_expr
-- On MATCH reduce production expr -> simple_expr
-- On LPAREN reduce production expr -> simple_expr
-- On LOC reduce production expr -> simple_expr
-- On LIDENT reduce production expr -> simple_expr
-- On LET reduce production expr -> simple_expr
-- On LESSGREATER reduce production expr -> simple_expr
-- On LESS reduce production expr -> simple_expr
-- On LBRACKETLESS reduce production expr -> simple_expr
-- On LBRACKETBAR reduce production expr -> simple_expr
-- On LBRACKET reduce production expr -> simple_expr
-- On LBRACELESS reduce production expr -> simple_expr
-- On LBRACEBAR reduce production expr -> simple_expr
-- On LBRACE reduce production expr -> simple_expr
-- On LAZY reduce production expr -> simple_expr
-- On INT reduce production expr -> simple_expr
-- On INFIXOP4 reduce production expr -> simple_expr
-- On INFIXOP3 reduce production expr -> simple_expr
-- On INFIXOP2 reduce production expr -> simple_expr
-- On INFIXOP1 reduce production expr -> simple_expr
-- On INFIXOP0 reduce production expr -> simple_expr
-- On IN reduce production expr -> simple_expr
-- On IF reduce production expr -> simple_expr
-- On GREATER reduce production expr -> simple_expr
-- On FUNCTION reduce production expr -> simple_expr
-- On FUN reduce production expr -> simple_expr
-- On FOR reduce production expr -> simple_expr
-- On FLOAT reduce production expr -> simple_expr
-- On FALSE reduce production expr -> simple_expr
-- On EXTERNAL reduce production expr -> simple_expr
-- On EXCEPTION reduce production expr -> simple_expr
-- On EQUAL reduce production expr -> simple_expr
-- On EOF reduce production expr -> simple_expr
-- On END reduce production expr -> simple_expr
-- On ELSE reduce production expr -> simple_expr
-- On DOWNTO reduce production expr -> simple_expr
-- On DO reduce production expr -> simple_expr
-- On DEF reduce production expr -> simple_expr
-- On COMMA reduce production expr -> simple_expr
-- On COLONEQUAL reduce production expr -> simple_expr
-- On COLONCOLON reduce production expr -> simple_expr
-- On CLASS reduce production expr -> simple_expr
-- On CHAR reduce production expr -> simple_expr
-- On BEGIN reduce production expr -> simple_expr
-- On BARBAR reduce production expr -> simple_expr
-- On BAR reduce production expr -> simple_expr
-- On ASSERT reduce production expr -> simple_expr
-- On AND reduce production expr -> simple_expr
-- On AMPERSAND reduce production expr -> simple_expr
-- On AMPERAMPER reduce production expr -> simple_expr
** Conflict on UIDENT TRUE STRING SHARP PREFIXOP NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 641:
expr -> simple_expr LESSLESSGREATERGREATER . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On WHILE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On UIDENT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TYPE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TRY reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TRUE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On TO reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On THEN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On STRING reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On STAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SHARP reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SEMISEMI reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On SEMI reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On PREFIXOP reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On PARSER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On OR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On OPEN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On NEW reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On MODULE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On MINUSGREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On MATCH reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LPAREN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LOC reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LIDENT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LESSGREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACKET reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACELESS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LBRACE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On LAZY reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On IN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On IF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On GREATER reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FUNCTION reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FUN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FOR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FLOAT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On FALSE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EXTERNAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EXCEPTION reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EQUAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On EOF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On END reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On ELSE reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On DOWNTO reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On DO reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On DEF reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COMMA reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On COLONCOLON reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On CLASS reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On CHAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BEGIN reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BARBAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On BAR reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On ASSERT reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AND reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AMPERSAND reduce production expr -> simple_expr LESSLESSGREATERGREATER
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESSGREATERGREATER

State 642:
expr -> simple_expr LESSLESS . list_of_exprs GREATERGREATER [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr LESSLESS . list_of_exprs error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 484
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On list_of_exprs shift to state 643
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 549
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 643:
expr -> simple_expr LESSLESS list_of_exprs . GREATERGREATER [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr LESSLESS list_of_exprs . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 644
-- On GREATERGREATER shift to state 645

State 644:
expr -> simple_expr LESSLESS list_of_exprs error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On WHILE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On UIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TYPE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TRY reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TRUE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On TO reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On THEN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On STRING reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On STAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SHARP reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SEMISEMI reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On SEMI reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On PREFIXOP reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On PARSER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On OR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On OPEN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On NEW reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On MODULE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On MINUSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On MATCH reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LOC reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LESSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACELESS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On LAZY reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On IN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On IF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On GREATER reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FUNCTION reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FUN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FOR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FLOAT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On FALSE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EXTERNAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EXCEPTION reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On EOF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On END reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On ELSE reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On DOWNTO reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On DO reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On DEF reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COMMA reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On COLONCOLON reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On CLASS reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On CHAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BEGIN reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BARBAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On BAR reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On ASSERT reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AND reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AMPERSAND reduce production expr -> simple_expr LESSLESS list_of_exprs error
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESS list_of_exprs error

State 645:
expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On WHILE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On UIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TYPE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TRY reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TRUE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On TO reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On THEN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SUBTRACTIVE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On STRING reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On STAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SHARP reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SEMISEMI reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On SEMI reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On PREFIXOP reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On PARSER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On OR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On OPEN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On NEW reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On MODULE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On MINUSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On MATCH reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LPAREN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LOC reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LIDENT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LESSGREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKETLESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKETBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACKET reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACELESS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACEBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LBRACE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On LAZY reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP4 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP3 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP2 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP1 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On INFIXOP0 reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On IN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On IF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On GREATER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FUNCTION reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FUN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FOR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FLOAT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On FALSE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EXTERNAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EXCEPTION reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On EOF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On END reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On ELSE reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On DOWNTO reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On DO reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On DEF reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COMMA reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLONEQUAL reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On COLONCOLON reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On CLASS reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On CHAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BEGIN reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BARBAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On BAR reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On ASSERT reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AND reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AMPERSAND reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER
-- On AMPERAMPER reduce production expr -> simple_expr LESSLESS list_of_exprs GREATERGREATER

State 646:
expr -> simple_expr DOT . label_longident LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LPAREN seq_expr RPAREN LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT . LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 647
-- On LIDENT shift to state 54
-- On LBRACKET shift to state 696
-- On mod_longident shift to state 55
-- On label_longident shift to state 701

State 647:
expr -> simple_expr DOT LPAREN . seq_expr RPAREN LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 648
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 648:
expr -> simple_expr DOT LPAREN seq_expr . RPAREN LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 615
-- On RPAREN shift to state 649

State 649:
expr -> simple_expr DOT LPAREN seq_expr RPAREN . LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 650
-- On WITH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On TO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On THEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DO reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LPAREN seq_expr RPAREN

State 650:
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 695
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 651:
expr -> label . LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 652

State 652:
expr -> label LESSMINUS . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 690
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 653:
expr -> expr_comma_list . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On COMMA shift to state 654
-- On WITH reduce production expr -> expr_comma_list
-- On WHILE reduce production expr -> expr_comma_list
-- On UIDENT reduce production expr -> expr_comma_list
-- On TYPE reduce production expr -> expr_comma_list
-- On TRY reduce production expr -> expr_comma_list
-- On TRUE reduce production expr -> expr_comma_list
-- On TO reduce production expr -> expr_comma_list
-- On THEN reduce production expr -> expr_comma_list
-- On SUBTRACTIVE reduce production expr -> expr_comma_list
-- On STRING reduce production expr -> expr_comma_list
-- On STAR reduce production expr -> expr_comma_list
-- On SHARP reduce production expr -> expr_comma_list
-- On SEMISEMI reduce production expr -> expr_comma_list
-- On SEMI reduce production expr -> expr_comma_list
-- On PREFIXOP reduce production expr -> expr_comma_list
-- On PARSER reduce production expr -> expr_comma_list
-- On OR reduce production expr -> expr_comma_list
-- On OPEN reduce production expr -> expr_comma_list
-- On NEW reduce production expr -> expr_comma_list
-- On MODULE reduce production expr -> expr_comma_list
-- On MINUSGREATER reduce production expr -> expr_comma_list
-- On MATCH reduce production expr -> expr_comma_list
-- On LPAREN reduce production expr -> expr_comma_list
-- On LOC reduce production expr -> expr_comma_list
-- On LIDENT reduce production expr -> expr_comma_list
-- On LET reduce production expr -> expr_comma_list
-- On LESSGREATER reduce production expr -> expr_comma_list
-- On LESS reduce production expr -> expr_comma_list
-- On LBRACKETLESS reduce production expr -> expr_comma_list
-- On LBRACKETBAR reduce production expr -> expr_comma_list
-- On LBRACKET reduce production expr -> expr_comma_list
-- On LBRACELESS reduce production expr -> expr_comma_list
-- On LBRACEBAR reduce production expr -> expr_comma_list
-- On LBRACE reduce production expr -> expr_comma_list
-- On LAZY reduce production expr -> expr_comma_list
-- On INT reduce production expr -> expr_comma_list
-- On INFIXOP4 reduce production expr -> expr_comma_list
-- On INFIXOP3 reduce production expr -> expr_comma_list
-- On INFIXOP2 reduce production expr -> expr_comma_list
-- On INFIXOP1 reduce production expr -> expr_comma_list
-- On INFIXOP0 reduce production expr -> expr_comma_list
-- On IN reduce production expr -> expr_comma_list
-- On IF reduce production expr -> expr_comma_list
-- On GREATER reduce production expr -> expr_comma_list
-- On FUNCTION reduce production expr -> expr_comma_list
-- On FUN reduce production expr -> expr_comma_list
-- On FOR reduce production expr -> expr_comma_list
-- On FLOAT reduce production expr -> expr_comma_list
-- On FALSE reduce production expr -> expr_comma_list
-- On EXTERNAL reduce production expr -> expr_comma_list
-- On EXCEPTION reduce production expr -> expr_comma_list
-- On EQUAL reduce production expr -> expr_comma_list
-- On EOF reduce production expr -> expr_comma_list
-- On END reduce production expr -> expr_comma_list
-- On ELSE reduce production expr -> expr_comma_list
-- On DOWNTO reduce production expr -> expr_comma_list
-- On DO reduce production expr -> expr_comma_list
-- On DEF reduce production expr -> expr_comma_list
-- On COMMA reduce production expr -> expr_comma_list
-- On COLONEQUAL reduce production expr -> expr_comma_list
-- On COLONCOLON reduce production expr -> expr_comma_list
-- On CLASS reduce production expr -> expr_comma_list
-- On CHAR reduce production expr -> expr_comma_list
-- On BEGIN reduce production expr -> expr_comma_list
-- On BARBAR reduce production expr -> expr_comma_list
-- On BAR reduce production expr -> expr_comma_list
-- On ASSERT reduce production expr -> expr_comma_list
-- On AND reduce production expr -> expr_comma_list
-- On AMPERSAND reduce production expr -> expr_comma_list
-- On AMPERAMPER reduce production expr -> expr_comma_list
** Conflict on COMMA

State 654:
expr_comma_list -> expr_comma_list COMMA . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 655
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 655:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr_comma_list COMMA expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On WHILE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On UIDENT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TYPE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TRY reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TRUE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On TO reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On THEN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On STRING reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SHARP reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SEMISEMI reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On SEMI reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On PREFIXOP reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On PARSER reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On OPEN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On NEW reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On MODULE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On MINUSGREATER reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On MATCH reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LPAREN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LOC reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LIDENT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKETLESS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKETBAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACKET reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACELESS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACEBAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LBRACE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On LAZY reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On INT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On IN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On IF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FUNCTION reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FUN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FOR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FLOAT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On FALSE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EXTERNAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EXCEPTION reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On EOF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On END reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On ELSE reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On DOWNTO reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On DO reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On DEF reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COMMA reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On COLONEQUAL reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On CLASS reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On CHAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On BEGIN reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On BAR reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On ASSERT reduce production expr_comma_list -> expr_comma_list COMMA expr
-- On AND reduce production expr_comma_list -> expr_comma_list COMMA expr

State 656:
expr -> expr SUBTRACTIVE . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 657
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 657:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr SUBTRACTIVE expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On WITH reduce production expr -> expr SUBTRACTIVE expr
-- On WHILE reduce production expr -> expr SUBTRACTIVE expr
-- On UIDENT reduce production expr -> expr SUBTRACTIVE expr
-- On TYPE reduce production expr -> expr SUBTRACTIVE expr
-- On TRY reduce production expr -> expr SUBTRACTIVE expr
-- On TRUE reduce production expr -> expr SUBTRACTIVE expr
-- On TO reduce production expr -> expr SUBTRACTIVE expr
-- On THEN reduce production expr -> expr SUBTRACTIVE expr
-- On SUBTRACTIVE reduce production expr -> expr SUBTRACTIVE expr
-- On STRING reduce production expr -> expr SUBTRACTIVE expr
-- On SHARP reduce production expr -> expr SUBTRACTIVE expr
-- On SEMISEMI reduce production expr -> expr SUBTRACTIVE expr
-- On SEMI reduce production expr -> expr SUBTRACTIVE expr
-- On PREFIXOP reduce production expr -> expr SUBTRACTIVE expr
-- On PARSER reduce production expr -> expr SUBTRACTIVE expr
-- On OR reduce production expr -> expr SUBTRACTIVE expr
-- On OPEN reduce production expr -> expr SUBTRACTIVE expr
-- On NEW reduce production expr -> expr SUBTRACTIVE expr
-- On MODULE reduce production expr -> expr SUBTRACTIVE expr
-- On MINUSGREATER reduce production expr -> expr SUBTRACTIVE expr
-- On MATCH reduce production expr -> expr SUBTRACTIVE expr
-- On LPAREN reduce production expr -> expr SUBTRACTIVE expr
-- On LOC reduce production expr -> expr SUBTRACTIVE expr
-- On LIDENT reduce production expr -> expr SUBTRACTIVE expr
-- On LET reduce production expr -> expr SUBTRACTIVE expr
-- On LESSGREATER reduce production expr -> expr SUBTRACTIVE expr
-- On LESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKETLESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKETBAR reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACKET reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACELESS reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACEBAR reduce production expr -> expr SUBTRACTIVE expr
-- On LBRACE reduce production expr -> expr SUBTRACTIVE expr
-- On LAZY reduce production expr -> expr SUBTRACTIVE expr
-- On INT reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP2 reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP1 reduce production expr -> expr SUBTRACTIVE expr
-- On INFIXOP0 reduce production expr -> expr SUBTRACTIVE expr
-- On IN reduce production expr -> expr SUBTRACTIVE expr
-- On IF reduce production expr -> expr SUBTRACTIVE expr
-- On GREATER reduce production expr -> expr SUBTRACTIVE expr
-- On FUNCTION reduce production expr -> expr SUBTRACTIVE expr
-- On FUN reduce production expr -> expr SUBTRACTIVE expr
-- On FOR reduce production expr -> expr SUBTRACTIVE expr
-- On FLOAT reduce production expr -> expr SUBTRACTIVE expr
-- On FALSE reduce production expr -> expr SUBTRACTIVE expr
-- On EXTERNAL reduce production expr -> expr SUBTRACTIVE expr
-- On EXCEPTION reduce production expr -> expr SUBTRACTIVE expr
-- On EQUAL reduce production expr -> expr SUBTRACTIVE expr
-- On EOF reduce production expr -> expr SUBTRACTIVE expr
-- On END reduce production expr -> expr SUBTRACTIVE expr
-- On ELSE reduce production expr -> expr SUBTRACTIVE expr
-- On DOWNTO reduce production expr -> expr SUBTRACTIVE expr
-- On DO reduce production expr -> expr SUBTRACTIVE expr
-- On DEF reduce production expr -> expr SUBTRACTIVE expr
-- On COMMA reduce production expr -> expr SUBTRACTIVE expr
-- On COLONEQUAL reduce production expr -> expr SUBTRACTIVE expr
-- On COLONCOLON reduce production expr -> expr SUBTRACTIVE expr
-- On CLASS reduce production expr -> expr SUBTRACTIVE expr
-- On CHAR reduce production expr -> expr SUBTRACTIVE expr
-- On BEGIN reduce production expr -> expr SUBTRACTIVE expr
-- On BARBAR reduce production expr -> expr SUBTRACTIVE expr
-- On BAR reduce production expr -> expr SUBTRACTIVE expr
-- On ASSERT reduce production expr -> expr SUBTRACTIVE expr
-- On AND reduce production expr -> expr SUBTRACTIVE expr
-- On AMPERSAND reduce production expr -> expr SUBTRACTIVE expr
-- On AMPERAMPER reduce production expr -> expr SUBTRACTIVE expr

State 658:
expr -> expr STAR . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 659
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 659:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr STAR expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 660
-- On WITH reduce production expr -> expr STAR expr
-- On WHILE reduce production expr -> expr STAR expr
-- On UIDENT reduce production expr -> expr STAR expr
-- On TYPE reduce production expr -> expr STAR expr
-- On TRY reduce production expr -> expr STAR expr
-- On TRUE reduce production expr -> expr STAR expr
-- On TO reduce production expr -> expr STAR expr
-- On THEN reduce production expr -> expr STAR expr
-- On SUBTRACTIVE reduce production expr -> expr STAR expr
-- On STRING reduce production expr -> expr STAR expr
-- On STAR reduce production expr -> expr STAR expr
-- On SHARP reduce production expr -> expr STAR expr
-- On SEMISEMI reduce production expr -> expr STAR expr
-- On SEMI reduce production expr -> expr STAR expr
-- On PREFIXOP reduce production expr -> expr STAR expr
-- On PARSER reduce production expr -> expr STAR expr
-- On OR reduce production expr -> expr STAR expr
-- On OPEN reduce production expr -> expr STAR expr
-- On NEW reduce production expr -> expr STAR expr
-- On MODULE reduce production expr -> expr STAR expr
-- On MINUSGREATER reduce production expr -> expr STAR expr
-- On MATCH reduce production expr -> expr STAR expr
-- On LPAREN reduce production expr -> expr STAR expr
-- On LOC reduce production expr -> expr STAR expr
-- On LIDENT reduce production expr -> expr STAR expr
-- On LET reduce production expr -> expr STAR expr
-- On LESSGREATER reduce production expr -> expr STAR expr
-- On LESS reduce production expr -> expr STAR expr
-- On LBRACKETLESS reduce production expr -> expr STAR expr
-- On LBRACKETBAR reduce production expr -> expr STAR expr
-- On LBRACKET reduce production expr -> expr STAR expr
-- On LBRACELESS reduce production expr -> expr STAR expr
-- On LBRACEBAR reduce production expr -> expr STAR expr
-- On LBRACE reduce production expr -> expr STAR expr
-- On LAZY reduce production expr -> expr STAR expr
-- On INT reduce production expr -> expr STAR expr
-- On INFIXOP3 reduce production expr -> expr STAR expr
-- On INFIXOP2 reduce production expr -> expr STAR expr
-- On INFIXOP1 reduce production expr -> expr STAR expr
-- On INFIXOP0 reduce production expr -> expr STAR expr
-- On IN reduce production expr -> expr STAR expr
-- On IF reduce production expr -> expr STAR expr
-- On GREATER reduce production expr -> expr STAR expr
-- On FUNCTION reduce production expr -> expr STAR expr
-- On FUN reduce production expr -> expr STAR expr
-- On FOR reduce production expr -> expr STAR expr
-- On FLOAT reduce production expr -> expr STAR expr
-- On FALSE reduce production expr -> expr STAR expr
-- On EXTERNAL reduce production expr -> expr STAR expr
-- On EXCEPTION reduce production expr -> expr STAR expr
-- On EQUAL reduce production expr -> expr STAR expr
-- On EOF reduce production expr -> expr STAR expr
-- On END reduce production expr -> expr STAR expr
-- On ELSE reduce production expr -> expr STAR expr
-- On DOWNTO reduce production expr -> expr STAR expr
-- On DO reduce production expr -> expr STAR expr
-- On DEF reduce production expr -> expr STAR expr
-- On COMMA reduce production expr -> expr STAR expr
-- On COLONEQUAL reduce production expr -> expr STAR expr
-- On COLONCOLON reduce production expr -> expr STAR expr
-- On CLASS reduce production expr -> expr STAR expr
-- On CHAR reduce production expr -> expr STAR expr
-- On BEGIN reduce production expr -> expr STAR expr
-- On BARBAR reduce production expr -> expr STAR expr
-- On BAR reduce production expr -> expr STAR expr
-- On ASSERT reduce production expr -> expr STAR expr
-- On AND reduce production expr -> expr STAR expr
-- On AMPERSAND reduce production expr -> expr STAR expr
-- On AMPERAMPER reduce production expr -> expr STAR expr

State 660:
expr -> expr INFIXOP4 . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 661
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 661:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP4 expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 660
-- On WITH reduce production expr -> expr INFIXOP4 expr
-- On WHILE reduce production expr -> expr INFIXOP4 expr
-- On UIDENT reduce production expr -> expr INFIXOP4 expr
-- On TYPE reduce production expr -> expr INFIXOP4 expr
-- On TRY reduce production expr -> expr INFIXOP4 expr
-- On TRUE reduce production expr -> expr INFIXOP4 expr
-- On TO reduce production expr -> expr INFIXOP4 expr
-- On THEN reduce production expr -> expr INFIXOP4 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP4 expr
-- On STRING reduce production expr -> expr INFIXOP4 expr
-- On STAR reduce production expr -> expr INFIXOP4 expr
-- On SHARP reduce production expr -> expr INFIXOP4 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP4 expr
-- On SEMI reduce production expr -> expr INFIXOP4 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP4 expr
-- On PARSER reduce production expr -> expr INFIXOP4 expr
-- On OR reduce production expr -> expr INFIXOP4 expr
-- On OPEN reduce production expr -> expr INFIXOP4 expr
-- On NEW reduce production expr -> expr INFIXOP4 expr
-- On MODULE reduce production expr -> expr INFIXOP4 expr
-- On MINUSGREATER reduce production expr -> expr INFIXOP4 expr
-- On MATCH reduce production expr -> expr INFIXOP4 expr
-- On LPAREN reduce production expr -> expr INFIXOP4 expr
-- On LOC reduce production expr -> expr INFIXOP4 expr
-- On LIDENT reduce production expr -> expr INFIXOP4 expr
-- On LET reduce production expr -> expr INFIXOP4 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP4 expr
-- On LESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP4 expr
-- On LBRACKET reduce production expr -> expr INFIXOP4 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP4 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP4 expr
-- On LBRACE reduce production expr -> expr INFIXOP4 expr
-- On LAZY reduce production expr -> expr INFIXOP4 expr
-- On INT reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP3 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP4 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP4 expr
-- On IN reduce production expr -> expr INFIXOP4 expr
-- On IF reduce production expr -> expr INFIXOP4 expr
-- On GREATER reduce production expr -> expr INFIXOP4 expr
-- On FUNCTION reduce production expr -> expr INFIXOP4 expr
-- On FUN reduce production expr -> expr INFIXOP4 expr
-- On FOR reduce production expr -> expr INFIXOP4 expr
-- On FLOAT reduce production expr -> expr INFIXOP4 expr
-- On FALSE reduce production expr -> expr INFIXOP4 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP4 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP4 expr
-- On EQUAL reduce production expr -> expr INFIXOP4 expr
-- On EOF reduce production expr -> expr INFIXOP4 expr
-- On END reduce production expr -> expr INFIXOP4 expr
-- On ELSE reduce production expr -> expr INFIXOP4 expr
-- On DOWNTO reduce production expr -> expr INFIXOP4 expr
-- On DO reduce production expr -> expr INFIXOP4 expr
-- On DEF reduce production expr -> expr INFIXOP4 expr
-- On COMMA reduce production expr -> expr INFIXOP4 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP4 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP4 expr
-- On CLASS reduce production expr -> expr INFIXOP4 expr
-- On CHAR reduce production expr -> expr INFIXOP4 expr
-- On BEGIN reduce production expr -> expr INFIXOP4 expr
-- On BARBAR reduce production expr -> expr INFIXOP4 expr
-- On BAR reduce production expr -> expr INFIXOP4 expr
-- On ASSERT reduce production expr -> expr INFIXOP4 expr
-- On AND reduce production expr -> expr INFIXOP4 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP4 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP4 expr

State 662:
expr -> constr_longident . simple_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> constr_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 663
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623
-- On WITH reduce production simple_expr -> constr_longident
-- On WHILE reduce production simple_expr -> constr_longident
-- On UIDENT reduce production simple_expr -> constr_longident
-- On TYPE reduce production simple_expr -> constr_longident
-- On TRY reduce production simple_expr -> constr_longident
-- On TRUE reduce production simple_expr -> constr_longident
-- On TO reduce production simple_expr -> constr_longident
-- On THEN reduce production simple_expr -> constr_longident
-- On SUBTRACTIVE reduce production simple_expr -> constr_longident
-- On STRING reduce production simple_expr -> constr_longident
-- On STAR reduce production simple_expr -> constr_longident
-- On SHARP reduce production simple_expr -> constr_longident
-- On SEMISEMI reduce production simple_expr -> constr_longident
-- On SEMI reduce production simple_expr -> constr_longident
-- On PREFIXOP reduce production simple_expr -> constr_longident
-- On PARSER reduce production simple_expr -> constr_longident
-- On OR reduce production simple_expr -> constr_longident
-- On OPEN reduce production simple_expr -> constr_longident
-- On NEW reduce production simple_expr -> constr_longident
-- On MODULE reduce production simple_expr -> constr_longident
-- On MINUSGREATER reduce production simple_expr -> constr_longident
-- On MATCH reduce production simple_expr -> constr_longident
-- On LPAREN reduce production simple_expr -> constr_longident
-- On LOC reduce production simple_expr -> constr_longident
-- On LIDENT reduce production simple_expr -> constr_longident
-- On LET reduce production simple_expr -> constr_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> constr_longident
-- On LESSLESS reduce production simple_expr -> constr_longident
-- On LESSGREATER reduce production simple_expr -> constr_longident
-- On LESS reduce production simple_expr -> constr_longident
-- On LBRACKETLESS reduce production simple_expr -> constr_longident
-- On LBRACKETBAR reduce production simple_expr -> constr_longident
-- On LBRACKET reduce production simple_expr -> constr_longident
-- On LBRACELESS reduce production simple_expr -> constr_longident
-- On LBRACEBAR reduce production simple_expr -> constr_longident
-- On LBRACE reduce production simple_expr -> constr_longident
-- On LAZY reduce production simple_expr -> constr_longident
-- On INT reduce production simple_expr -> constr_longident
-- On INFIXOP4 reduce production simple_expr -> constr_longident
-- On INFIXOP3 reduce production simple_expr -> constr_longident
-- On INFIXOP2 reduce production simple_expr -> constr_longident
-- On INFIXOP1 reduce production simple_expr -> constr_longident
-- On INFIXOP0 reduce production simple_expr -> constr_longident
-- On IN reduce production simple_expr -> constr_longident
-- On IF reduce production simple_expr -> constr_longident
-- On GREATER reduce production simple_expr -> constr_longident
-- On FUNCTION reduce production simple_expr -> constr_longident
-- On FUN reduce production simple_expr -> constr_longident
-- On FOR reduce production simple_expr -> constr_longident
-- On FLOAT reduce production simple_expr -> constr_longident
-- On FALSE reduce production simple_expr -> constr_longident
-- On EXTERNAL reduce production simple_expr -> constr_longident
-- On EXCEPTION reduce production simple_expr -> constr_longident
-- On EQUAL reduce production simple_expr -> constr_longident
-- On EOF reduce production simple_expr -> constr_longident
-- On END reduce production simple_expr -> constr_longident
-- On ELSE reduce production simple_expr -> constr_longident
-- On DOWNTO reduce production simple_expr -> constr_longident
-- On DOT reduce production simple_expr -> constr_longident
-- On DO reduce production simple_expr -> constr_longident
-- On DEF reduce production simple_expr -> constr_longident
-- On COMMA reduce production simple_expr -> constr_longident
-- On COLONEQUAL reduce production simple_expr -> constr_longident
-- On COLONCOLON reduce production simple_expr -> constr_longident
-- On CLASS reduce production simple_expr -> constr_longident
-- On CHAR reduce production simple_expr -> constr_longident
-- On BEGIN reduce production simple_expr -> constr_longident
-- On BARBAR reduce production simple_expr -> constr_longident
-- On BAR reduce production simple_expr -> constr_longident
-- On ASSERT reduce production simple_expr -> constr_longident
-- On AND reduce production simple_expr -> constr_longident
-- On AMPERSAND reduce production simple_expr -> constr_longident
-- On AMPERAMPER reduce production simple_expr -> constr_longident
** Conflict on UIDENT TRUE STRING PREFIXOP NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 663:
expr -> constr_longident simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 610
-- On DOT shift to state 612
-- On WITH reduce production expr -> constr_longident simple_expr
-- On WHILE reduce production expr -> constr_longident simple_expr
-- On UIDENT reduce production expr -> constr_longident simple_expr
-- On TYPE reduce production expr -> constr_longident simple_expr
-- On TRY reduce production expr -> constr_longident simple_expr
-- On TRUE reduce production expr -> constr_longident simple_expr
-- On TO reduce production expr -> constr_longident simple_expr
-- On THEN reduce production expr -> constr_longident simple_expr
-- On SUBTRACTIVE reduce production expr -> constr_longident simple_expr
-- On STRING reduce production expr -> constr_longident simple_expr
-- On STAR reduce production expr -> constr_longident simple_expr
-- On SEMISEMI reduce production expr -> constr_longident simple_expr
-- On SEMI reduce production expr -> constr_longident simple_expr
-- On PREFIXOP reduce production expr -> constr_longident simple_expr
-- On PARSER reduce production expr -> constr_longident simple_expr
-- On OR reduce production expr -> constr_longident simple_expr
-- On OPEN reduce production expr -> constr_longident simple_expr
-- On NEW reduce production expr -> constr_longident simple_expr
-- On MODULE reduce production expr -> constr_longident simple_expr
-- On MINUSGREATER reduce production expr -> constr_longident simple_expr
-- On MATCH reduce production expr -> constr_longident simple_expr
-- On LPAREN reduce production expr -> constr_longident simple_expr
-- On LOC reduce production expr -> constr_longident simple_expr
-- On LIDENT reduce production expr -> constr_longident simple_expr
-- On LET reduce production expr -> constr_longident simple_expr
-- On LESSGREATER reduce production expr -> constr_longident simple_expr
-- On LESS reduce production expr -> constr_longident simple_expr
-- On LBRACKETLESS reduce production expr -> constr_longident simple_expr
-- On LBRACKETBAR reduce production expr -> constr_longident simple_expr
-- On LBRACKET reduce production expr -> constr_longident simple_expr
-- On LBRACELESS reduce production expr -> constr_longident simple_expr
-- On LBRACEBAR reduce production expr -> constr_longident simple_expr
-- On LBRACE reduce production expr -> constr_longident simple_expr
-- On LAZY reduce production expr -> constr_longident simple_expr
-- On INT reduce production expr -> constr_longident simple_expr
-- On INFIXOP4 reduce production expr -> constr_longident simple_expr
-- On INFIXOP3 reduce production expr -> constr_longident simple_expr
-- On INFIXOP2 reduce production expr -> constr_longident simple_expr
-- On INFIXOP1 reduce production expr -> constr_longident simple_expr
-- On INFIXOP0 reduce production expr -> constr_longident simple_expr
-- On IN reduce production expr -> constr_longident simple_expr
-- On IF reduce production expr -> constr_longident simple_expr
-- On GREATER reduce production expr -> constr_longident simple_expr
-- On FUNCTION reduce production expr -> constr_longident simple_expr
-- On FUN reduce production expr -> constr_longident simple_expr
-- On FOR reduce production expr -> constr_longident simple_expr
-- On FLOAT reduce production expr -> constr_longident simple_expr
-- On FALSE reduce production expr -> constr_longident simple_expr
-- On EXTERNAL reduce production expr -> constr_longident simple_expr
-- On EXCEPTION reduce production expr -> constr_longident simple_expr
-- On EQUAL reduce production expr -> constr_longident simple_expr
-- On EOF reduce production expr -> constr_longident simple_expr
-- On END reduce production expr -> constr_longident simple_expr
-- On ELSE reduce production expr -> constr_longident simple_expr
-- On DOWNTO reduce production expr -> constr_longident simple_expr
-- On DO reduce production expr -> constr_longident simple_expr
-- On DEF reduce production expr -> constr_longident simple_expr
-- On COMMA reduce production expr -> constr_longident simple_expr
-- On COLONEQUAL reduce production expr -> constr_longident simple_expr
-- On COLONCOLON reduce production expr -> constr_longident simple_expr
-- On CLASS reduce production expr -> constr_longident simple_expr
-- On CHAR reduce production expr -> constr_longident simple_expr
-- On BEGIN reduce production expr -> constr_longident simple_expr
-- On BARBAR reduce production expr -> constr_longident simple_expr
-- On BAR reduce production expr -> constr_longident simple_expr
-- On ASSERT reduce production expr -> constr_longident simple_expr
-- On AND reduce production expr -> constr_longident simple_expr
-- On AMPERSAND reduce production expr -> constr_longident simple_expr
-- On AMPERAMPER reduce production expr -> constr_longident simple_expr

State 664:
expr -> expr INFIXOP3 . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 665
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 665:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP3 expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On INFIXOP4 shift to state 660
-- On WITH reduce production expr -> expr INFIXOP3 expr
-- On WHILE reduce production expr -> expr INFIXOP3 expr
-- On UIDENT reduce production expr -> expr INFIXOP3 expr
-- On TYPE reduce production expr -> expr INFIXOP3 expr
-- On TRY reduce production expr -> expr INFIXOP3 expr
-- On TRUE reduce production expr -> expr INFIXOP3 expr
-- On TO reduce production expr -> expr INFIXOP3 expr
-- On THEN reduce production expr -> expr INFIXOP3 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP3 expr
-- On STRING reduce production expr -> expr INFIXOP3 expr
-- On STAR reduce production expr -> expr INFIXOP3 expr
-- On SHARP reduce production expr -> expr INFIXOP3 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP3 expr
-- On SEMI reduce production expr -> expr INFIXOP3 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP3 expr
-- On PARSER reduce production expr -> expr INFIXOP3 expr
-- On OR reduce production expr -> expr INFIXOP3 expr
-- On OPEN reduce production expr -> expr INFIXOP3 expr
-- On NEW reduce production expr -> expr INFIXOP3 expr
-- On MODULE reduce production expr -> expr INFIXOP3 expr
-- On MINUSGREATER reduce production expr -> expr INFIXOP3 expr
-- On MATCH reduce production expr -> expr INFIXOP3 expr
-- On LPAREN reduce production expr -> expr INFIXOP3 expr
-- On LOC reduce production expr -> expr INFIXOP3 expr
-- On LIDENT reduce production expr -> expr INFIXOP3 expr
-- On LET reduce production expr -> expr INFIXOP3 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP3 expr
-- On LESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP3 expr
-- On LBRACKET reduce production expr -> expr INFIXOP3 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP3 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP3 expr
-- On LBRACE reduce production expr -> expr INFIXOP3 expr
-- On LAZY reduce production expr -> expr INFIXOP3 expr
-- On INT reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP3 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP3 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP3 expr
-- On IN reduce production expr -> expr INFIXOP3 expr
-- On IF reduce production expr -> expr INFIXOP3 expr
-- On GREATER reduce production expr -> expr INFIXOP3 expr
-- On FUNCTION reduce production expr -> expr INFIXOP3 expr
-- On FUN reduce production expr -> expr INFIXOP3 expr
-- On FOR reduce production expr -> expr INFIXOP3 expr
-- On FLOAT reduce production expr -> expr INFIXOP3 expr
-- On FALSE reduce production expr -> expr INFIXOP3 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP3 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP3 expr
-- On EQUAL reduce production expr -> expr INFIXOP3 expr
-- On EOF reduce production expr -> expr INFIXOP3 expr
-- On END reduce production expr -> expr INFIXOP3 expr
-- On ELSE reduce production expr -> expr INFIXOP3 expr
-- On DOWNTO reduce production expr -> expr INFIXOP3 expr
-- On DO reduce production expr -> expr INFIXOP3 expr
-- On DEF reduce production expr -> expr INFIXOP3 expr
-- On COMMA reduce production expr -> expr INFIXOP3 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP3 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP3 expr
-- On CLASS reduce production expr -> expr INFIXOP3 expr
-- On CHAR reduce production expr -> expr INFIXOP3 expr
-- On BEGIN reduce production expr -> expr INFIXOP3 expr
-- On BARBAR reduce production expr -> expr INFIXOP3 expr
-- On BAR reduce production expr -> expr INFIXOP3 expr
-- On ASSERT reduce production expr -> expr INFIXOP3 expr
-- On AND reduce production expr -> expr INFIXOP3 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP3 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP3 expr

State 666:
expr -> expr OR . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 667
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 667:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr OR expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> expr OR expr
-- On WHILE reduce production expr -> expr OR expr
-- On UIDENT reduce production expr -> expr OR expr
-- On TYPE reduce production expr -> expr OR expr
-- On TRY reduce production expr -> expr OR expr
-- On TRUE reduce production expr -> expr OR expr
-- On TO reduce production expr -> expr OR expr
-- On THEN reduce production expr -> expr OR expr
-- On STRING reduce production expr -> expr OR expr
-- On SHARP reduce production expr -> expr OR expr
-- On SEMISEMI reduce production expr -> expr OR expr
-- On SEMI reduce production expr -> expr OR expr
-- On PREFIXOP reduce production expr -> expr OR expr
-- On PARSER reduce production expr -> expr OR expr
-- On OPEN reduce production expr -> expr OR expr
-- On NEW reduce production expr -> expr OR expr
-- On MODULE reduce production expr -> expr OR expr
-- On MINUSGREATER reduce production expr -> expr OR expr
-- On MATCH reduce production expr -> expr OR expr
-- On LPAREN reduce production expr -> expr OR expr
-- On LOC reduce production expr -> expr OR expr
-- On LIDENT reduce production expr -> expr OR expr
-- On LET reduce production expr -> expr OR expr
-- On LBRACKETLESS reduce production expr -> expr OR expr
-- On LBRACKETBAR reduce production expr -> expr OR expr
-- On LBRACKET reduce production expr -> expr OR expr
-- On LBRACELESS reduce production expr -> expr OR expr
-- On LBRACEBAR reduce production expr -> expr OR expr
-- On LBRACE reduce production expr -> expr OR expr
-- On LAZY reduce production expr -> expr OR expr
-- On INT reduce production expr -> expr OR expr
-- On IN reduce production expr -> expr OR expr
-- On IF reduce production expr -> expr OR expr
-- On FUNCTION reduce production expr -> expr OR expr
-- On FUN reduce production expr -> expr OR expr
-- On FOR reduce production expr -> expr OR expr
-- On FLOAT reduce production expr -> expr OR expr
-- On FALSE reduce production expr -> expr OR expr
-- On EXTERNAL reduce production expr -> expr OR expr
-- On EXCEPTION reduce production expr -> expr OR expr
-- On EOF reduce production expr -> expr OR expr
-- On END reduce production expr -> expr OR expr
-- On ELSE reduce production expr -> expr OR expr
-- On DOWNTO reduce production expr -> expr OR expr
-- On DO reduce production expr -> expr OR expr
-- On DEF reduce production expr -> expr OR expr
-- On COMMA reduce production expr -> expr OR expr
-- On COLONEQUAL reduce production expr -> expr OR expr
-- On CLASS reduce production expr -> expr OR expr
-- On CHAR reduce production expr -> expr OR expr
-- On BEGIN reduce production expr -> expr OR expr
-- On BAR reduce production expr -> expr OR expr
-- On ASSERT reduce production expr -> expr OR expr
-- On AND reduce production expr -> expr OR expr

State 668:
expr -> expr LESSGREATER . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 669
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 669:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr LESSGREATER expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr LESSGREATER expr
-- On WHILE reduce production expr -> expr LESSGREATER expr
-- On UIDENT reduce production expr -> expr LESSGREATER expr
-- On TYPE reduce production expr -> expr LESSGREATER expr
-- On TRY reduce production expr -> expr LESSGREATER expr
-- On TRUE reduce production expr -> expr LESSGREATER expr
-- On TO reduce production expr -> expr LESSGREATER expr
-- On THEN reduce production expr -> expr LESSGREATER expr
-- On STRING reduce production expr -> expr LESSGREATER expr
-- On SHARP reduce production expr -> expr LESSGREATER expr
-- On SEMISEMI reduce production expr -> expr LESSGREATER expr
-- On SEMI reduce production expr -> expr LESSGREATER expr
-- On PREFIXOP reduce production expr -> expr LESSGREATER expr
-- On PARSER reduce production expr -> expr LESSGREATER expr
-- On OR reduce production expr -> expr LESSGREATER expr
-- On OPEN reduce production expr -> expr LESSGREATER expr
-- On NEW reduce production expr -> expr LESSGREATER expr
-- On MODULE reduce production expr -> expr LESSGREATER expr
-- On MINUSGREATER reduce production expr -> expr LESSGREATER expr
-- On MATCH reduce production expr -> expr LESSGREATER expr
-- On LPAREN reduce production expr -> expr LESSGREATER expr
-- On LOC reduce production expr -> expr LESSGREATER expr
-- On LIDENT reduce production expr -> expr LESSGREATER expr
-- On LET reduce production expr -> expr LESSGREATER expr
-- On LESSGREATER reduce production expr -> expr LESSGREATER expr
-- On LESS reduce production expr -> expr LESSGREATER expr
-- On LBRACKETLESS reduce production expr -> expr LESSGREATER expr
-- On LBRACKETBAR reduce production expr -> expr LESSGREATER expr
-- On LBRACKET reduce production expr -> expr LESSGREATER expr
-- On LBRACELESS reduce production expr -> expr LESSGREATER expr
-- On LBRACEBAR reduce production expr -> expr LESSGREATER expr
-- On LBRACE reduce production expr -> expr LESSGREATER expr
-- On LAZY reduce production expr -> expr LESSGREATER expr
-- On INT reduce production expr -> expr LESSGREATER expr
-- On INFIXOP0 reduce production expr -> expr LESSGREATER expr
-- On IN reduce production expr -> expr LESSGREATER expr
-- On IF reduce production expr -> expr LESSGREATER expr
-- On GREATER reduce production expr -> expr LESSGREATER expr
-- On FUNCTION reduce production expr -> expr LESSGREATER expr
-- On FUN reduce production expr -> expr LESSGREATER expr
-- On FOR reduce production expr -> expr LESSGREATER expr
-- On FLOAT reduce production expr -> expr LESSGREATER expr
-- On FALSE reduce production expr -> expr LESSGREATER expr
-- On EXTERNAL reduce production expr -> expr LESSGREATER expr
-- On EXCEPTION reduce production expr -> expr LESSGREATER expr
-- On EQUAL reduce production expr -> expr LESSGREATER expr
-- On EOF reduce production expr -> expr LESSGREATER expr
-- On END reduce production expr -> expr LESSGREATER expr
-- On ELSE reduce production expr -> expr LESSGREATER expr
-- On DOWNTO reduce production expr -> expr LESSGREATER expr
-- On DO reduce production expr -> expr LESSGREATER expr
-- On DEF reduce production expr -> expr LESSGREATER expr
-- On COMMA reduce production expr -> expr LESSGREATER expr
-- On COLONEQUAL reduce production expr -> expr LESSGREATER expr
-- On CLASS reduce production expr -> expr LESSGREATER expr
-- On CHAR reduce production expr -> expr LESSGREATER expr
-- On BEGIN reduce production expr -> expr LESSGREATER expr
-- On BARBAR reduce production expr -> expr LESSGREATER expr
-- On BAR reduce production expr -> expr LESSGREATER expr
-- On ASSERT reduce production expr -> expr LESSGREATER expr
-- On AND reduce production expr -> expr LESSGREATER expr
-- On AMPERSAND reduce production expr -> expr LESSGREATER expr
-- On AMPERAMPER reduce production expr -> expr LESSGREATER expr

State 670:
expr -> expr INFIXOP2 . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 671
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 671:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP2 expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On WITH reduce production expr -> expr INFIXOP2 expr
-- On WHILE reduce production expr -> expr INFIXOP2 expr
-- On UIDENT reduce production expr -> expr INFIXOP2 expr
-- On TYPE reduce production expr -> expr INFIXOP2 expr
-- On TRY reduce production expr -> expr INFIXOP2 expr
-- On TRUE reduce production expr -> expr INFIXOP2 expr
-- On TO reduce production expr -> expr INFIXOP2 expr
-- On THEN reduce production expr -> expr INFIXOP2 expr
-- On SUBTRACTIVE reduce production expr -> expr INFIXOP2 expr
-- On STRING reduce production expr -> expr INFIXOP2 expr
-- On SHARP reduce production expr -> expr INFIXOP2 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP2 expr
-- On SEMI reduce production expr -> expr INFIXOP2 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP2 expr
-- On PARSER reduce production expr -> expr INFIXOP2 expr
-- On OR reduce production expr -> expr INFIXOP2 expr
-- On OPEN reduce production expr -> expr INFIXOP2 expr
-- On NEW reduce production expr -> expr INFIXOP2 expr
-- On MODULE reduce production expr -> expr INFIXOP2 expr
-- On MINUSGREATER reduce production expr -> expr INFIXOP2 expr
-- On MATCH reduce production expr -> expr INFIXOP2 expr
-- On LPAREN reduce production expr -> expr INFIXOP2 expr
-- On LOC reduce production expr -> expr INFIXOP2 expr
-- On LIDENT reduce production expr -> expr INFIXOP2 expr
-- On LET reduce production expr -> expr INFIXOP2 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP2 expr
-- On LESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP2 expr
-- On LBRACKET reduce production expr -> expr INFIXOP2 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP2 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP2 expr
-- On LBRACE reduce production expr -> expr INFIXOP2 expr
-- On LAZY reduce production expr -> expr INFIXOP2 expr
-- On INT reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP2 reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP1 reduce production expr -> expr INFIXOP2 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP2 expr
-- On IN reduce production expr -> expr INFIXOP2 expr
-- On IF reduce production expr -> expr INFIXOP2 expr
-- On GREATER reduce production expr -> expr INFIXOP2 expr
-- On FUNCTION reduce production expr -> expr INFIXOP2 expr
-- On FUN reduce production expr -> expr INFIXOP2 expr
-- On FOR reduce production expr -> expr INFIXOP2 expr
-- On FLOAT reduce production expr -> expr INFIXOP2 expr
-- On FALSE reduce production expr -> expr INFIXOP2 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP2 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP2 expr
-- On EQUAL reduce production expr -> expr INFIXOP2 expr
-- On EOF reduce production expr -> expr INFIXOP2 expr
-- On END reduce production expr -> expr INFIXOP2 expr
-- On ELSE reduce production expr -> expr INFIXOP2 expr
-- On DOWNTO reduce production expr -> expr INFIXOP2 expr
-- On DO reduce production expr -> expr INFIXOP2 expr
-- On DEF reduce production expr -> expr INFIXOP2 expr
-- On COMMA reduce production expr -> expr INFIXOP2 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP2 expr
-- On COLONCOLON reduce production expr -> expr INFIXOP2 expr
-- On CLASS reduce production expr -> expr INFIXOP2 expr
-- On CHAR reduce production expr -> expr INFIXOP2 expr
-- On BEGIN reduce production expr -> expr INFIXOP2 expr
-- On BARBAR reduce production expr -> expr INFIXOP2 expr
-- On BAR reduce production expr -> expr INFIXOP2 expr
-- On ASSERT reduce production expr -> expr INFIXOP2 expr
-- On AND reduce production expr -> expr INFIXOP2 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP2 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP2 expr

State 672:
expr -> expr INFIXOP1 . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 673
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 673:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP1 expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr INFIXOP1 expr
-- On WHILE reduce production expr -> expr INFIXOP1 expr
-- On UIDENT reduce production expr -> expr INFIXOP1 expr
-- On TYPE reduce production expr -> expr INFIXOP1 expr
-- On TRY reduce production expr -> expr INFIXOP1 expr
-- On TRUE reduce production expr -> expr INFIXOP1 expr
-- On TO reduce production expr -> expr INFIXOP1 expr
-- On THEN reduce production expr -> expr INFIXOP1 expr
-- On STRING reduce production expr -> expr INFIXOP1 expr
-- On SHARP reduce production expr -> expr INFIXOP1 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP1 expr
-- On SEMI reduce production expr -> expr INFIXOP1 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP1 expr
-- On PARSER reduce production expr -> expr INFIXOP1 expr
-- On OR reduce production expr -> expr INFIXOP1 expr
-- On OPEN reduce production expr -> expr INFIXOP1 expr
-- On NEW reduce production expr -> expr INFIXOP1 expr
-- On MODULE reduce production expr -> expr INFIXOP1 expr
-- On MINUSGREATER reduce production expr -> expr INFIXOP1 expr
-- On MATCH reduce production expr -> expr INFIXOP1 expr
-- On LPAREN reduce production expr -> expr INFIXOP1 expr
-- On LOC reduce production expr -> expr INFIXOP1 expr
-- On LIDENT reduce production expr -> expr INFIXOP1 expr
-- On LET reduce production expr -> expr INFIXOP1 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP1 expr
-- On LESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP1 expr
-- On LBRACKET reduce production expr -> expr INFIXOP1 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP1 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP1 expr
-- On LBRACE reduce production expr -> expr INFIXOP1 expr
-- On LAZY reduce production expr -> expr INFIXOP1 expr
-- On INT reduce production expr -> expr INFIXOP1 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP1 expr
-- On IN reduce production expr -> expr INFIXOP1 expr
-- On IF reduce production expr -> expr INFIXOP1 expr
-- On GREATER reduce production expr -> expr INFIXOP1 expr
-- On FUNCTION reduce production expr -> expr INFIXOP1 expr
-- On FUN reduce production expr -> expr INFIXOP1 expr
-- On FOR reduce production expr -> expr INFIXOP1 expr
-- On FLOAT reduce production expr -> expr INFIXOP1 expr
-- On FALSE reduce production expr -> expr INFIXOP1 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP1 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP1 expr
-- On EQUAL reduce production expr -> expr INFIXOP1 expr
-- On EOF reduce production expr -> expr INFIXOP1 expr
-- On END reduce production expr -> expr INFIXOP1 expr
-- On ELSE reduce production expr -> expr INFIXOP1 expr
-- On DOWNTO reduce production expr -> expr INFIXOP1 expr
-- On DO reduce production expr -> expr INFIXOP1 expr
-- On DEF reduce production expr -> expr INFIXOP1 expr
-- On COMMA reduce production expr -> expr INFIXOP1 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP1 expr
-- On CLASS reduce production expr -> expr INFIXOP1 expr
-- On CHAR reduce production expr -> expr INFIXOP1 expr
-- On BEGIN reduce production expr -> expr INFIXOP1 expr
-- On BARBAR reduce production expr -> expr INFIXOP1 expr
-- On BAR reduce production expr -> expr INFIXOP1 expr
-- On ASSERT reduce production expr -> expr INFIXOP1 expr
-- On AND reduce production expr -> expr INFIXOP1 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP1 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP1 expr

State 674:
expr -> expr COLONCOLON . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 675
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 675:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr COLONCOLON expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr COLONCOLON expr
-- On WHILE reduce production expr -> expr COLONCOLON expr
-- On UIDENT reduce production expr -> expr COLONCOLON expr
-- On TYPE reduce production expr -> expr COLONCOLON expr
-- On TRY reduce production expr -> expr COLONCOLON expr
-- On TRUE reduce production expr -> expr COLONCOLON expr
-- On TO reduce production expr -> expr COLONCOLON expr
-- On THEN reduce production expr -> expr COLONCOLON expr
-- On STRING reduce production expr -> expr COLONCOLON expr
-- On SHARP reduce production expr -> expr COLONCOLON expr
-- On SEMISEMI reduce production expr -> expr COLONCOLON expr
-- On SEMI reduce production expr -> expr COLONCOLON expr
-- On PREFIXOP reduce production expr -> expr COLONCOLON expr
-- On PARSER reduce production expr -> expr COLONCOLON expr
-- On OR reduce production expr -> expr COLONCOLON expr
-- On OPEN reduce production expr -> expr COLONCOLON expr
-- On NEW reduce production expr -> expr COLONCOLON expr
-- On MODULE reduce production expr -> expr COLONCOLON expr
-- On MINUSGREATER reduce production expr -> expr COLONCOLON expr
-- On MATCH reduce production expr -> expr COLONCOLON expr
-- On LPAREN reduce production expr -> expr COLONCOLON expr
-- On LOC reduce production expr -> expr COLONCOLON expr
-- On LIDENT reduce production expr -> expr COLONCOLON expr
-- On LET reduce production expr -> expr COLONCOLON expr
-- On LESSGREATER reduce production expr -> expr COLONCOLON expr
-- On LESS reduce production expr -> expr COLONCOLON expr
-- On LBRACKETLESS reduce production expr -> expr COLONCOLON expr
-- On LBRACKETBAR reduce production expr -> expr COLONCOLON expr
-- On LBRACKET reduce production expr -> expr COLONCOLON expr
-- On LBRACELESS reduce production expr -> expr COLONCOLON expr
-- On LBRACEBAR reduce production expr -> expr COLONCOLON expr
-- On LBRACE reduce production expr -> expr COLONCOLON expr
-- On LAZY reduce production expr -> expr COLONCOLON expr
-- On INT reduce production expr -> expr COLONCOLON expr
-- On INFIXOP1 reduce production expr -> expr COLONCOLON expr
-- On INFIXOP0 reduce production expr -> expr COLONCOLON expr
-- On IN reduce production expr -> expr COLONCOLON expr
-- On IF reduce production expr -> expr COLONCOLON expr
-- On GREATER reduce production expr -> expr COLONCOLON expr
-- On FUNCTION reduce production expr -> expr COLONCOLON expr
-- On FUN reduce production expr -> expr COLONCOLON expr
-- On FOR reduce production expr -> expr COLONCOLON expr
-- On FLOAT reduce production expr -> expr COLONCOLON expr
-- On FALSE reduce production expr -> expr COLONCOLON expr
-- On EXTERNAL reduce production expr -> expr COLONCOLON expr
-- On EXCEPTION reduce production expr -> expr COLONCOLON expr
-- On EQUAL reduce production expr -> expr COLONCOLON expr
-- On EOF reduce production expr -> expr COLONCOLON expr
-- On END reduce production expr -> expr COLONCOLON expr
-- On ELSE reduce production expr -> expr COLONCOLON expr
-- On DOWNTO reduce production expr -> expr COLONCOLON expr
-- On DO reduce production expr -> expr COLONCOLON expr
-- On DEF reduce production expr -> expr COLONCOLON expr
-- On COMMA reduce production expr -> expr COLONCOLON expr
-- On COLONEQUAL reduce production expr -> expr COLONCOLON expr
-- On CLASS reduce production expr -> expr COLONCOLON expr
-- On CHAR reduce production expr -> expr COLONCOLON expr
-- On BEGIN reduce production expr -> expr COLONCOLON expr
-- On BARBAR reduce production expr -> expr COLONCOLON expr
-- On BAR reduce production expr -> expr COLONCOLON expr
-- On ASSERT reduce production expr -> expr COLONCOLON expr
-- On AND reduce production expr -> expr COLONCOLON expr
-- On AMPERSAND reduce production expr -> expr COLONCOLON expr
-- On AMPERAMPER reduce production expr -> expr COLONCOLON expr

State 676:
expr -> expr LESS . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 677
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 677:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr LESS expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr LESS expr
-- On WHILE reduce production expr -> expr LESS expr
-- On UIDENT reduce production expr -> expr LESS expr
-- On TYPE reduce production expr -> expr LESS expr
-- On TRY reduce production expr -> expr LESS expr
-- On TRUE reduce production expr -> expr LESS expr
-- On TO reduce production expr -> expr LESS expr
-- On THEN reduce production expr -> expr LESS expr
-- On STRING reduce production expr -> expr LESS expr
-- On SHARP reduce production expr -> expr LESS expr
-- On SEMISEMI reduce production expr -> expr LESS expr
-- On SEMI reduce production expr -> expr LESS expr
-- On PREFIXOP reduce production expr -> expr LESS expr
-- On PARSER reduce production expr -> expr LESS expr
-- On OR reduce production expr -> expr LESS expr
-- On OPEN reduce production expr -> expr LESS expr
-- On NEW reduce production expr -> expr LESS expr
-- On MODULE reduce production expr -> expr LESS expr
-- On MINUSGREATER reduce production expr -> expr LESS expr
-- On MATCH reduce production expr -> expr LESS expr
-- On LPAREN reduce production expr -> expr LESS expr
-- On LOC reduce production expr -> expr LESS expr
-- On LIDENT reduce production expr -> expr LESS expr
-- On LET reduce production expr -> expr LESS expr
-- On LESSGREATER reduce production expr -> expr LESS expr
-- On LESS reduce production expr -> expr LESS expr
-- On LBRACKETLESS reduce production expr -> expr LESS expr
-- On LBRACKETBAR reduce production expr -> expr LESS expr
-- On LBRACKET reduce production expr -> expr LESS expr
-- On LBRACELESS reduce production expr -> expr LESS expr
-- On LBRACEBAR reduce production expr -> expr LESS expr
-- On LBRACE reduce production expr -> expr LESS expr
-- On LAZY reduce production expr -> expr LESS expr
-- On INT reduce production expr -> expr LESS expr
-- On INFIXOP0 reduce production expr -> expr LESS expr
-- On IN reduce production expr -> expr LESS expr
-- On IF reduce production expr -> expr LESS expr
-- On GREATER reduce production expr -> expr LESS expr
-- On FUNCTION reduce production expr -> expr LESS expr
-- On FUN reduce production expr -> expr LESS expr
-- On FOR reduce production expr -> expr LESS expr
-- On FLOAT reduce production expr -> expr LESS expr
-- On FALSE reduce production expr -> expr LESS expr
-- On EXTERNAL reduce production expr -> expr LESS expr
-- On EXCEPTION reduce production expr -> expr LESS expr
-- On EQUAL reduce production expr -> expr LESS expr
-- On EOF reduce production expr -> expr LESS expr
-- On END reduce production expr -> expr LESS expr
-- On ELSE reduce production expr -> expr LESS expr
-- On DOWNTO reduce production expr -> expr LESS expr
-- On DO reduce production expr -> expr LESS expr
-- On DEF reduce production expr -> expr LESS expr
-- On COMMA reduce production expr -> expr LESS expr
-- On COLONEQUAL reduce production expr -> expr LESS expr
-- On CLASS reduce production expr -> expr LESS expr
-- On CHAR reduce production expr -> expr LESS expr
-- On BEGIN reduce production expr -> expr LESS expr
-- On BARBAR reduce production expr -> expr LESS expr
-- On BAR reduce production expr -> expr LESS expr
-- On ASSERT reduce production expr -> expr LESS expr
-- On AND reduce production expr -> expr LESS expr
-- On AMPERSAND reduce production expr -> expr LESS expr
-- On AMPERAMPER reduce production expr -> expr LESS expr

State 678:
expr -> expr INFIXOP0 . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 679
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 679:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr INFIXOP0 expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr INFIXOP0 expr
-- On WHILE reduce production expr -> expr INFIXOP0 expr
-- On UIDENT reduce production expr -> expr INFIXOP0 expr
-- On TYPE reduce production expr -> expr INFIXOP0 expr
-- On TRY reduce production expr -> expr INFIXOP0 expr
-- On TRUE reduce production expr -> expr INFIXOP0 expr
-- On TO reduce production expr -> expr INFIXOP0 expr
-- On THEN reduce production expr -> expr INFIXOP0 expr
-- On STRING reduce production expr -> expr INFIXOP0 expr
-- On SHARP reduce production expr -> expr INFIXOP0 expr
-- On SEMISEMI reduce production expr -> expr INFIXOP0 expr
-- On SEMI reduce production expr -> expr INFIXOP0 expr
-- On PREFIXOP reduce production expr -> expr INFIXOP0 expr
-- On PARSER reduce production expr -> expr INFIXOP0 expr
-- On OR reduce production expr -> expr INFIXOP0 expr
-- On OPEN reduce production expr -> expr INFIXOP0 expr
-- On NEW reduce production expr -> expr INFIXOP0 expr
-- On MODULE reduce production expr -> expr INFIXOP0 expr
-- On MINUSGREATER reduce production expr -> expr INFIXOP0 expr
-- On MATCH reduce production expr -> expr INFIXOP0 expr
-- On LPAREN reduce production expr -> expr INFIXOP0 expr
-- On LOC reduce production expr -> expr INFIXOP0 expr
-- On LIDENT reduce production expr -> expr INFIXOP0 expr
-- On LET reduce production expr -> expr INFIXOP0 expr
-- On LESSGREATER reduce production expr -> expr INFIXOP0 expr
-- On LESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACKETLESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACKETBAR reduce production expr -> expr INFIXOP0 expr
-- On LBRACKET reduce production expr -> expr INFIXOP0 expr
-- On LBRACELESS reduce production expr -> expr INFIXOP0 expr
-- On LBRACEBAR reduce production expr -> expr INFIXOP0 expr
-- On LBRACE reduce production expr -> expr INFIXOP0 expr
-- On LAZY reduce production expr -> expr INFIXOP0 expr
-- On INT reduce production expr -> expr INFIXOP0 expr
-- On INFIXOP0 reduce production expr -> expr INFIXOP0 expr
-- On IN reduce production expr -> expr INFIXOP0 expr
-- On IF reduce production expr -> expr INFIXOP0 expr
-- On GREATER reduce production expr -> expr INFIXOP0 expr
-- On FUNCTION reduce production expr -> expr INFIXOP0 expr
-- On FUN reduce production expr -> expr INFIXOP0 expr
-- On FOR reduce production expr -> expr INFIXOP0 expr
-- On FLOAT reduce production expr -> expr INFIXOP0 expr
-- On FALSE reduce production expr -> expr INFIXOP0 expr
-- On EXTERNAL reduce production expr -> expr INFIXOP0 expr
-- On EXCEPTION reduce production expr -> expr INFIXOP0 expr
-- On EQUAL reduce production expr -> expr INFIXOP0 expr
-- On EOF reduce production expr -> expr INFIXOP0 expr
-- On END reduce production expr -> expr INFIXOP0 expr
-- On ELSE reduce production expr -> expr INFIXOP0 expr
-- On DOWNTO reduce production expr -> expr INFIXOP0 expr
-- On DO reduce production expr -> expr INFIXOP0 expr
-- On DEF reduce production expr -> expr INFIXOP0 expr
-- On COMMA reduce production expr -> expr INFIXOP0 expr
-- On COLONEQUAL reduce production expr -> expr INFIXOP0 expr
-- On CLASS reduce production expr -> expr INFIXOP0 expr
-- On CHAR reduce production expr -> expr INFIXOP0 expr
-- On BEGIN reduce production expr -> expr INFIXOP0 expr
-- On BARBAR reduce production expr -> expr INFIXOP0 expr
-- On BAR reduce production expr -> expr INFIXOP0 expr
-- On ASSERT reduce production expr -> expr INFIXOP0 expr
-- On AND reduce production expr -> expr INFIXOP0 expr
-- On AMPERSAND reduce production expr -> expr INFIXOP0 expr
-- On AMPERAMPER reduce production expr -> expr INFIXOP0 expr

State 680:
expr -> expr GREATER . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 681
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 681:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr GREATER expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr GREATER expr
-- On WHILE reduce production expr -> expr GREATER expr
-- On UIDENT reduce production expr -> expr GREATER expr
-- On TYPE reduce production expr -> expr GREATER expr
-- On TRY reduce production expr -> expr GREATER expr
-- On TRUE reduce production expr -> expr GREATER expr
-- On TO reduce production expr -> expr GREATER expr
-- On THEN reduce production expr -> expr GREATER expr
-- On STRING reduce production expr -> expr GREATER expr
-- On SHARP reduce production expr -> expr GREATER expr
-- On SEMISEMI reduce production expr -> expr GREATER expr
-- On SEMI reduce production expr -> expr GREATER expr
-- On PREFIXOP reduce production expr -> expr GREATER expr
-- On PARSER reduce production expr -> expr GREATER expr
-- On OR reduce production expr -> expr GREATER expr
-- On OPEN reduce production expr -> expr GREATER expr
-- On NEW reduce production expr -> expr GREATER expr
-- On MODULE reduce production expr -> expr GREATER expr
-- On MINUSGREATER reduce production expr -> expr GREATER expr
-- On MATCH reduce production expr -> expr GREATER expr
-- On LPAREN reduce production expr -> expr GREATER expr
-- On LOC reduce production expr -> expr GREATER expr
-- On LIDENT reduce production expr -> expr GREATER expr
-- On LET reduce production expr -> expr GREATER expr
-- On LESSGREATER reduce production expr -> expr GREATER expr
-- On LESS reduce production expr -> expr GREATER expr
-- On LBRACKETLESS reduce production expr -> expr GREATER expr
-- On LBRACKETBAR reduce production expr -> expr GREATER expr
-- On LBRACKET reduce production expr -> expr GREATER expr
-- On LBRACELESS reduce production expr -> expr GREATER expr
-- On LBRACEBAR reduce production expr -> expr GREATER expr
-- On LBRACE reduce production expr -> expr GREATER expr
-- On LAZY reduce production expr -> expr GREATER expr
-- On INT reduce production expr -> expr GREATER expr
-- On INFIXOP0 reduce production expr -> expr GREATER expr
-- On IN reduce production expr -> expr GREATER expr
-- On IF reduce production expr -> expr GREATER expr
-- On GREATER reduce production expr -> expr GREATER expr
-- On FUNCTION reduce production expr -> expr GREATER expr
-- On FUN reduce production expr -> expr GREATER expr
-- On FOR reduce production expr -> expr GREATER expr
-- On FLOAT reduce production expr -> expr GREATER expr
-- On FALSE reduce production expr -> expr GREATER expr
-- On EXTERNAL reduce production expr -> expr GREATER expr
-- On EXCEPTION reduce production expr -> expr GREATER expr
-- On EQUAL reduce production expr -> expr GREATER expr
-- On EOF reduce production expr -> expr GREATER expr
-- On END reduce production expr -> expr GREATER expr
-- On ELSE reduce production expr -> expr GREATER expr
-- On DOWNTO reduce production expr -> expr GREATER expr
-- On DO reduce production expr -> expr GREATER expr
-- On DEF reduce production expr -> expr GREATER expr
-- On COMMA reduce production expr -> expr GREATER expr
-- On COLONEQUAL reduce production expr -> expr GREATER expr
-- On CLASS reduce production expr -> expr GREATER expr
-- On CHAR reduce production expr -> expr GREATER expr
-- On BEGIN reduce production expr -> expr GREATER expr
-- On BARBAR reduce production expr -> expr GREATER expr
-- On BAR reduce production expr -> expr GREATER expr
-- On ASSERT reduce production expr -> expr GREATER expr
-- On AND reduce production expr -> expr GREATER expr
-- On AMPERSAND reduce production expr -> expr GREATER expr
-- On AMPERAMPER reduce production expr -> expr GREATER expr

State 682:
expr -> expr EQUAL . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 683
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 683:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr EQUAL expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On COLONCOLON shift to state 674
-- On WITH reduce production expr -> expr EQUAL expr
-- On WHILE reduce production expr -> expr EQUAL expr
-- On UIDENT reduce production expr -> expr EQUAL expr
-- On TYPE reduce production expr -> expr EQUAL expr
-- On TRY reduce production expr -> expr EQUAL expr
-- On TRUE reduce production expr -> expr EQUAL expr
-- On TO reduce production expr -> expr EQUAL expr
-- On THEN reduce production expr -> expr EQUAL expr
-- On STRING reduce production expr -> expr EQUAL expr
-- On SHARP reduce production expr -> expr EQUAL expr
-- On SEMISEMI reduce production expr -> expr EQUAL expr
-- On SEMI reduce production expr -> expr EQUAL expr
-- On PREFIXOP reduce production expr -> expr EQUAL expr
-- On PARSER reduce production expr -> expr EQUAL expr
-- On OR reduce production expr -> expr EQUAL expr
-- On OPEN reduce production expr -> expr EQUAL expr
-- On NEW reduce production expr -> expr EQUAL expr
-- On MODULE reduce production expr -> expr EQUAL expr
-- On MINUSGREATER reduce production expr -> expr EQUAL expr
-- On MATCH reduce production expr -> expr EQUAL expr
-- On LPAREN reduce production expr -> expr EQUAL expr
-- On LOC reduce production expr -> expr EQUAL expr
-- On LIDENT reduce production expr -> expr EQUAL expr
-- On LET reduce production expr -> expr EQUAL expr
-- On LESSGREATER reduce production expr -> expr EQUAL expr
-- On LESS reduce production expr -> expr EQUAL expr
-- On LBRACKETLESS reduce production expr -> expr EQUAL expr
-- On LBRACKETBAR reduce production expr -> expr EQUAL expr
-- On LBRACKET reduce production expr -> expr EQUAL expr
-- On LBRACELESS reduce production expr -> expr EQUAL expr
-- On LBRACEBAR reduce production expr -> expr EQUAL expr
-- On LBRACE reduce production expr -> expr EQUAL expr
-- On LAZY reduce production expr -> expr EQUAL expr
-- On INT reduce production expr -> expr EQUAL expr
-- On INFIXOP0 reduce production expr -> expr EQUAL expr
-- On IN reduce production expr -> expr EQUAL expr
-- On IF reduce production expr -> expr EQUAL expr
-- On GREATER reduce production expr -> expr EQUAL expr
-- On FUNCTION reduce production expr -> expr EQUAL expr
-- On FUN reduce production expr -> expr EQUAL expr
-- On FOR reduce production expr -> expr EQUAL expr
-- On FLOAT reduce production expr -> expr EQUAL expr
-- On FALSE reduce production expr -> expr EQUAL expr
-- On EXTERNAL reduce production expr -> expr EQUAL expr
-- On EXCEPTION reduce production expr -> expr EQUAL expr
-- On EQUAL reduce production expr -> expr EQUAL expr
-- On EOF reduce production expr -> expr EQUAL expr
-- On END reduce production expr -> expr EQUAL expr
-- On ELSE reduce production expr -> expr EQUAL expr
-- On DOWNTO reduce production expr -> expr EQUAL expr
-- On DO reduce production expr -> expr EQUAL expr
-- On DEF reduce production expr -> expr EQUAL expr
-- On COMMA reduce production expr -> expr EQUAL expr
-- On COLONEQUAL reduce production expr -> expr EQUAL expr
-- On CLASS reduce production expr -> expr EQUAL expr
-- On CHAR reduce production expr -> expr EQUAL expr
-- On BEGIN reduce production expr -> expr EQUAL expr
-- On BARBAR reduce production expr -> expr EQUAL expr
-- On BAR reduce production expr -> expr EQUAL expr
-- On ASSERT reduce production expr -> expr EQUAL expr
-- On AND reduce production expr -> expr EQUAL expr
-- On AMPERSAND reduce production expr -> expr EQUAL expr
-- On AMPERAMPER reduce production expr -> expr EQUAL expr

State 684:
expr -> expr BARBAR . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 685
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 685:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr BARBAR expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> expr BARBAR expr
-- On WHILE reduce production expr -> expr BARBAR expr
-- On UIDENT reduce production expr -> expr BARBAR expr
-- On TYPE reduce production expr -> expr BARBAR expr
-- On TRY reduce production expr -> expr BARBAR expr
-- On TRUE reduce production expr -> expr BARBAR expr
-- On TO reduce production expr -> expr BARBAR expr
-- On THEN reduce production expr -> expr BARBAR expr
-- On STRING reduce production expr -> expr BARBAR expr
-- On SHARP reduce production expr -> expr BARBAR expr
-- On SEMISEMI reduce production expr -> expr BARBAR expr
-- On SEMI reduce production expr -> expr BARBAR expr
-- On PREFIXOP reduce production expr -> expr BARBAR expr
-- On PARSER reduce production expr -> expr BARBAR expr
-- On OPEN reduce production expr -> expr BARBAR expr
-- On NEW reduce production expr -> expr BARBAR expr
-- On MODULE reduce production expr -> expr BARBAR expr
-- On MINUSGREATER reduce production expr -> expr BARBAR expr
-- On MATCH reduce production expr -> expr BARBAR expr
-- On LPAREN reduce production expr -> expr BARBAR expr
-- On LOC reduce production expr -> expr BARBAR expr
-- On LIDENT reduce production expr -> expr BARBAR expr
-- On LET reduce production expr -> expr BARBAR expr
-- On LBRACKETLESS reduce production expr -> expr BARBAR expr
-- On LBRACKETBAR reduce production expr -> expr BARBAR expr
-- On LBRACKET reduce production expr -> expr BARBAR expr
-- On LBRACELESS reduce production expr -> expr BARBAR expr
-- On LBRACEBAR reduce production expr -> expr BARBAR expr
-- On LBRACE reduce production expr -> expr BARBAR expr
-- On LAZY reduce production expr -> expr BARBAR expr
-- On INT reduce production expr -> expr BARBAR expr
-- On IN reduce production expr -> expr BARBAR expr
-- On IF reduce production expr -> expr BARBAR expr
-- On FUNCTION reduce production expr -> expr BARBAR expr
-- On FUN reduce production expr -> expr BARBAR expr
-- On FOR reduce production expr -> expr BARBAR expr
-- On FLOAT reduce production expr -> expr BARBAR expr
-- On FALSE reduce production expr -> expr BARBAR expr
-- On EXTERNAL reduce production expr -> expr BARBAR expr
-- On EXCEPTION reduce production expr -> expr BARBAR expr
-- On EOF reduce production expr -> expr BARBAR expr
-- On END reduce production expr -> expr BARBAR expr
-- On ELSE reduce production expr -> expr BARBAR expr
-- On DOWNTO reduce production expr -> expr BARBAR expr
-- On DO reduce production expr -> expr BARBAR expr
-- On DEF reduce production expr -> expr BARBAR expr
-- On COMMA reduce production expr -> expr BARBAR expr
-- On COLONEQUAL reduce production expr -> expr BARBAR expr
-- On CLASS reduce production expr -> expr BARBAR expr
-- On CHAR reduce production expr -> expr BARBAR expr
-- On BEGIN reduce production expr -> expr BARBAR expr
-- On BAR reduce production expr -> expr BARBAR expr
-- On ASSERT reduce production expr -> expr BARBAR expr
-- On AND reduce production expr -> expr BARBAR expr

State 686:
expr -> expr AMPERSAND . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 687
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 687:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERSAND expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> expr AMPERSAND expr
-- On WHILE reduce production expr -> expr AMPERSAND expr
-- On UIDENT reduce production expr -> expr AMPERSAND expr
-- On TYPE reduce production expr -> expr AMPERSAND expr
-- On TRY reduce production expr -> expr AMPERSAND expr
-- On TRUE reduce production expr -> expr AMPERSAND expr
-- On TO reduce production expr -> expr AMPERSAND expr
-- On THEN reduce production expr -> expr AMPERSAND expr
-- On STRING reduce production expr -> expr AMPERSAND expr
-- On SHARP reduce production expr -> expr AMPERSAND expr
-- On SEMISEMI reduce production expr -> expr AMPERSAND expr
-- On SEMI reduce production expr -> expr AMPERSAND expr
-- On PREFIXOP reduce production expr -> expr AMPERSAND expr
-- On PARSER reduce production expr -> expr AMPERSAND expr
-- On OR reduce production expr -> expr AMPERSAND expr
-- On OPEN reduce production expr -> expr AMPERSAND expr
-- On NEW reduce production expr -> expr AMPERSAND expr
-- On MODULE reduce production expr -> expr AMPERSAND expr
-- On MINUSGREATER reduce production expr -> expr AMPERSAND expr
-- On MATCH reduce production expr -> expr AMPERSAND expr
-- On LPAREN reduce production expr -> expr AMPERSAND expr
-- On LOC reduce production expr -> expr AMPERSAND expr
-- On LIDENT reduce production expr -> expr AMPERSAND expr
-- On LET reduce production expr -> expr AMPERSAND expr
-- On LBRACKETLESS reduce production expr -> expr AMPERSAND expr
-- On LBRACKETBAR reduce production expr -> expr AMPERSAND expr
-- On LBRACKET reduce production expr -> expr AMPERSAND expr
-- On LBRACELESS reduce production expr -> expr AMPERSAND expr
-- On LBRACEBAR reduce production expr -> expr AMPERSAND expr
-- On LBRACE reduce production expr -> expr AMPERSAND expr
-- On LAZY reduce production expr -> expr AMPERSAND expr
-- On INT reduce production expr -> expr AMPERSAND expr
-- On IN reduce production expr -> expr AMPERSAND expr
-- On IF reduce production expr -> expr AMPERSAND expr
-- On FUNCTION reduce production expr -> expr AMPERSAND expr
-- On FUN reduce production expr -> expr AMPERSAND expr
-- On FOR reduce production expr -> expr AMPERSAND expr
-- On FLOAT reduce production expr -> expr AMPERSAND expr
-- On FALSE reduce production expr -> expr AMPERSAND expr
-- On EXTERNAL reduce production expr -> expr AMPERSAND expr
-- On EXCEPTION reduce production expr -> expr AMPERSAND expr
-- On EOF reduce production expr -> expr AMPERSAND expr
-- On END reduce production expr -> expr AMPERSAND expr
-- On ELSE reduce production expr -> expr AMPERSAND expr
-- On DOWNTO reduce production expr -> expr AMPERSAND expr
-- On DO reduce production expr -> expr AMPERSAND expr
-- On DEF reduce production expr -> expr AMPERSAND expr
-- On COMMA reduce production expr -> expr AMPERSAND expr
-- On COLONEQUAL reduce production expr -> expr AMPERSAND expr
-- On CLASS reduce production expr -> expr AMPERSAND expr
-- On CHAR reduce production expr -> expr AMPERSAND expr
-- On BEGIN reduce production expr -> expr AMPERSAND expr
-- On BARBAR reduce production expr -> expr AMPERSAND expr
-- On BAR reduce production expr -> expr AMPERSAND expr
-- On ASSERT reduce production expr -> expr AMPERSAND expr
-- On AND reduce production expr -> expr AMPERSAND expr

State 688:
expr -> expr AMPERAMPER . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 689
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 689:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr AMPERAMPER expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> expr AMPERAMPER expr
-- On WHILE reduce production expr -> expr AMPERAMPER expr
-- On UIDENT reduce production expr -> expr AMPERAMPER expr
-- On TYPE reduce production expr -> expr AMPERAMPER expr
-- On TRY reduce production expr -> expr AMPERAMPER expr
-- On TRUE reduce production expr -> expr AMPERAMPER expr
-- On TO reduce production expr -> expr AMPERAMPER expr
-- On THEN reduce production expr -> expr AMPERAMPER expr
-- On STRING reduce production expr -> expr AMPERAMPER expr
-- On SHARP reduce production expr -> expr AMPERAMPER expr
-- On SEMISEMI reduce production expr -> expr AMPERAMPER expr
-- On SEMI reduce production expr -> expr AMPERAMPER expr
-- On PREFIXOP reduce production expr -> expr AMPERAMPER expr
-- On PARSER reduce production expr -> expr AMPERAMPER expr
-- On OR reduce production expr -> expr AMPERAMPER expr
-- On OPEN reduce production expr -> expr AMPERAMPER expr
-- On NEW reduce production expr -> expr AMPERAMPER expr
-- On MODULE reduce production expr -> expr AMPERAMPER expr
-- On MINUSGREATER reduce production expr -> expr AMPERAMPER expr
-- On MATCH reduce production expr -> expr AMPERAMPER expr
-- On LPAREN reduce production expr -> expr AMPERAMPER expr
-- On LOC reduce production expr -> expr AMPERAMPER expr
-- On LIDENT reduce production expr -> expr AMPERAMPER expr
-- On LET reduce production expr -> expr AMPERAMPER expr
-- On LBRACKETLESS reduce production expr -> expr AMPERAMPER expr
-- On LBRACKETBAR reduce production expr -> expr AMPERAMPER expr
-- On LBRACKET reduce production expr -> expr AMPERAMPER expr
-- On LBRACELESS reduce production expr -> expr AMPERAMPER expr
-- On LBRACEBAR reduce production expr -> expr AMPERAMPER expr
-- On LBRACE reduce production expr -> expr AMPERAMPER expr
-- On LAZY reduce production expr -> expr AMPERAMPER expr
-- On INT reduce production expr -> expr AMPERAMPER expr
-- On IN reduce production expr -> expr AMPERAMPER expr
-- On IF reduce production expr -> expr AMPERAMPER expr
-- On FUNCTION reduce production expr -> expr AMPERAMPER expr
-- On FUN reduce production expr -> expr AMPERAMPER expr
-- On FOR reduce production expr -> expr AMPERAMPER expr
-- On FLOAT reduce production expr -> expr AMPERAMPER expr
-- On FALSE reduce production expr -> expr AMPERAMPER expr
-- On EXTERNAL reduce production expr -> expr AMPERAMPER expr
-- On EXCEPTION reduce production expr -> expr AMPERAMPER expr
-- On EOF reduce production expr -> expr AMPERAMPER expr
-- On END reduce production expr -> expr AMPERAMPER expr
-- On ELSE reduce production expr -> expr AMPERAMPER expr
-- On DOWNTO reduce production expr -> expr AMPERAMPER expr
-- On DO reduce production expr -> expr AMPERAMPER expr
-- On DEF reduce production expr -> expr AMPERAMPER expr
-- On COMMA reduce production expr -> expr AMPERAMPER expr
-- On COLONEQUAL reduce production expr -> expr AMPERAMPER expr
-- On CLASS reduce production expr -> expr AMPERAMPER expr
-- On CHAR reduce production expr -> expr AMPERAMPER expr
-- On BEGIN reduce production expr -> expr AMPERAMPER expr
-- On BARBAR reduce production expr -> expr AMPERAMPER expr
-- On BAR reduce production expr -> expr AMPERAMPER expr
-- On ASSERT reduce production expr -> expr AMPERAMPER expr
-- On AND reduce production expr -> expr AMPERAMPER expr

State 690:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> label LESSMINUS expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> label LESSMINUS expr
-- On WHILE reduce production expr -> label LESSMINUS expr
-- On UIDENT reduce production expr -> label LESSMINUS expr
-- On TYPE reduce production expr -> label LESSMINUS expr
-- On TRY reduce production expr -> label LESSMINUS expr
-- On TRUE reduce production expr -> label LESSMINUS expr
-- On TO reduce production expr -> label LESSMINUS expr
-- On THEN reduce production expr -> label LESSMINUS expr
-- On STRING reduce production expr -> label LESSMINUS expr
-- On SHARP reduce production expr -> label LESSMINUS expr
-- On SEMISEMI reduce production expr -> label LESSMINUS expr
-- On SEMI reduce production expr -> label LESSMINUS expr
-- On PREFIXOP reduce production expr -> label LESSMINUS expr
-- On PARSER reduce production expr -> label LESSMINUS expr
-- On OPEN reduce production expr -> label LESSMINUS expr
-- On NEW reduce production expr -> label LESSMINUS expr
-- On MODULE reduce production expr -> label LESSMINUS expr
-- On MINUSGREATER reduce production expr -> label LESSMINUS expr
-- On MATCH reduce production expr -> label LESSMINUS expr
-- On LPAREN reduce production expr -> label LESSMINUS expr
-- On LOC reduce production expr -> label LESSMINUS expr
-- On LIDENT reduce production expr -> label LESSMINUS expr
-- On LET reduce production expr -> label LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> label LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> label LESSMINUS expr
-- On LBRACKET reduce production expr -> label LESSMINUS expr
-- On LBRACELESS reduce production expr -> label LESSMINUS expr
-- On LBRACEBAR reduce production expr -> label LESSMINUS expr
-- On LBRACE reduce production expr -> label LESSMINUS expr
-- On LAZY reduce production expr -> label LESSMINUS expr
-- On INT reduce production expr -> label LESSMINUS expr
-- On IN reduce production expr -> label LESSMINUS expr
-- On IF reduce production expr -> label LESSMINUS expr
-- On FUNCTION reduce production expr -> label LESSMINUS expr
-- On FUN reduce production expr -> label LESSMINUS expr
-- On FOR reduce production expr -> label LESSMINUS expr
-- On FLOAT reduce production expr -> label LESSMINUS expr
-- On FALSE reduce production expr -> label LESSMINUS expr
-- On EXTERNAL reduce production expr -> label LESSMINUS expr
-- On EXCEPTION reduce production expr -> label LESSMINUS expr
-- On EOF reduce production expr -> label LESSMINUS expr
-- On END reduce production expr -> label LESSMINUS expr
-- On ELSE reduce production expr -> label LESSMINUS expr
-- On DOWNTO reduce production expr -> label LESSMINUS expr
-- On DO reduce production expr -> label LESSMINUS expr
-- On DEF reduce production expr -> label LESSMINUS expr
-- On CLASS reduce production expr -> label LESSMINUS expr
-- On CHAR reduce production expr -> label LESSMINUS expr
-- On BEGIN reduce production expr -> label LESSMINUS expr
-- On BAR reduce production expr -> label LESSMINUS expr
-- On ASSERT reduce production expr -> label LESSMINUS expr
-- On AND reduce production expr -> label LESSMINUS expr

State 691:
expr_comma_list -> expr COMMA . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 692
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 692:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr COMMA expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr_comma_list -> expr COMMA expr
-- On WHILE reduce production expr_comma_list -> expr COMMA expr
-- On UIDENT reduce production expr_comma_list -> expr COMMA expr
-- On TYPE reduce production expr_comma_list -> expr COMMA expr
-- On TRY reduce production expr_comma_list -> expr COMMA expr
-- On TRUE reduce production expr_comma_list -> expr COMMA expr
-- On TO reduce production expr_comma_list -> expr COMMA expr
-- On THEN reduce production expr_comma_list -> expr COMMA expr
-- On STRING reduce production expr_comma_list -> expr COMMA expr
-- On SHARP reduce production expr_comma_list -> expr COMMA expr
-- On SEMISEMI reduce production expr_comma_list -> expr COMMA expr
-- On SEMI reduce production expr_comma_list -> expr COMMA expr
-- On PREFIXOP reduce production expr_comma_list -> expr COMMA expr
-- On PARSER reduce production expr_comma_list -> expr COMMA expr
-- On OPEN reduce production expr_comma_list -> expr COMMA expr
-- On NEW reduce production expr_comma_list -> expr COMMA expr
-- On MODULE reduce production expr_comma_list -> expr COMMA expr
-- On MINUSGREATER reduce production expr_comma_list -> expr COMMA expr
-- On MATCH reduce production expr_comma_list -> expr COMMA expr
-- On LPAREN reduce production expr_comma_list -> expr COMMA expr
-- On LOC reduce production expr_comma_list -> expr COMMA expr
-- On LIDENT reduce production expr_comma_list -> expr COMMA expr
-- On LET reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKETLESS reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKETBAR reduce production expr_comma_list -> expr COMMA expr
-- On LBRACKET reduce production expr_comma_list -> expr COMMA expr
-- On LBRACELESS reduce production expr_comma_list -> expr COMMA expr
-- On LBRACEBAR reduce production expr_comma_list -> expr COMMA expr
-- On LBRACE reduce production expr_comma_list -> expr COMMA expr
-- On LAZY reduce production expr_comma_list -> expr COMMA expr
-- On INT reduce production expr_comma_list -> expr COMMA expr
-- On IN reduce production expr_comma_list -> expr COMMA expr
-- On IF reduce production expr_comma_list -> expr COMMA expr
-- On FUNCTION reduce production expr_comma_list -> expr COMMA expr
-- On FUN reduce production expr_comma_list -> expr COMMA expr
-- On FOR reduce production expr_comma_list -> expr COMMA expr
-- On FLOAT reduce production expr_comma_list -> expr COMMA expr
-- On FALSE reduce production expr_comma_list -> expr COMMA expr
-- On EXTERNAL reduce production expr_comma_list -> expr COMMA expr
-- On EXCEPTION reduce production expr_comma_list -> expr COMMA expr
-- On EOF reduce production expr_comma_list -> expr COMMA expr
-- On END reduce production expr_comma_list -> expr COMMA expr
-- On ELSE reduce production expr_comma_list -> expr COMMA expr
-- On DOWNTO reduce production expr_comma_list -> expr COMMA expr
-- On DO reduce production expr_comma_list -> expr COMMA expr
-- On DEF reduce production expr_comma_list -> expr COMMA expr
-- On COMMA reduce production expr_comma_list -> expr COMMA expr
-- On COLONEQUAL reduce production expr_comma_list -> expr COMMA expr
-- On CLASS reduce production expr_comma_list -> expr COMMA expr
-- On CHAR reduce production expr_comma_list -> expr COMMA expr
-- On BEGIN reduce production expr_comma_list -> expr COMMA expr
-- On BAR reduce production expr_comma_list -> expr COMMA expr
-- On ASSERT reduce production expr_comma_list -> expr COMMA expr
-- On AND reduce production expr_comma_list -> expr COMMA expr

State 693:
expr -> expr COLONEQUAL . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 694
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 694:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr COLONEQUAL expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> expr COLONEQUAL expr
-- On WHILE reduce production expr -> expr COLONEQUAL expr
-- On UIDENT reduce production expr -> expr COLONEQUAL expr
-- On TYPE reduce production expr -> expr COLONEQUAL expr
-- On TRY reduce production expr -> expr COLONEQUAL expr
-- On TRUE reduce production expr -> expr COLONEQUAL expr
-- On TO reduce production expr -> expr COLONEQUAL expr
-- On THEN reduce production expr -> expr COLONEQUAL expr
-- On STRING reduce production expr -> expr COLONEQUAL expr
-- On SHARP reduce production expr -> expr COLONEQUAL expr
-- On SEMISEMI reduce production expr -> expr COLONEQUAL expr
-- On SEMI reduce production expr -> expr COLONEQUAL expr
-- On PREFIXOP reduce production expr -> expr COLONEQUAL expr
-- On PARSER reduce production expr -> expr COLONEQUAL expr
-- On OPEN reduce production expr -> expr COLONEQUAL expr
-- On NEW reduce production expr -> expr COLONEQUAL expr
-- On MODULE reduce production expr -> expr COLONEQUAL expr
-- On MINUSGREATER reduce production expr -> expr COLONEQUAL expr
-- On MATCH reduce production expr -> expr COLONEQUAL expr
-- On LPAREN reduce production expr -> expr COLONEQUAL expr
-- On LOC reduce production expr -> expr COLONEQUAL expr
-- On LIDENT reduce production expr -> expr COLONEQUAL expr
-- On LET reduce production expr -> expr COLONEQUAL expr
-- On LBRACKETLESS reduce production expr -> expr COLONEQUAL expr
-- On LBRACKETBAR reduce production expr -> expr COLONEQUAL expr
-- On LBRACKET reduce production expr -> expr COLONEQUAL expr
-- On LBRACELESS reduce production expr -> expr COLONEQUAL expr
-- On LBRACEBAR reduce production expr -> expr COLONEQUAL expr
-- On LBRACE reduce production expr -> expr COLONEQUAL expr
-- On LAZY reduce production expr -> expr COLONEQUAL expr
-- On INT reduce production expr -> expr COLONEQUAL expr
-- On IN reduce production expr -> expr COLONEQUAL expr
-- On IF reduce production expr -> expr COLONEQUAL expr
-- On FUNCTION reduce production expr -> expr COLONEQUAL expr
-- On FUN reduce production expr -> expr COLONEQUAL expr
-- On FOR reduce production expr -> expr COLONEQUAL expr
-- On FLOAT reduce production expr -> expr COLONEQUAL expr
-- On FALSE reduce production expr -> expr COLONEQUAL expr
-- On EXTERNAL reduce production expr -> expr COLONEQUAL expr
-- On EXCEPTION reduce production expr -> expr COLONEQUAL expr
-- On EOF reduce production expr -> expr COLONEQUAL expr
-- On END reduce production expr -> expr COLONEQUAL expr
-- On ELSE reduce production expr -> expr COLONEQUAL expr
-- On DOWNTO reduce production expr -> expr COLONEQUAL expr
-- On DO reduce production expr -> expr COLONEQUAL expr
-- On DEF reduce production expr -> expr COLONEQUAL expr
-- On CLASS reduce production expr -> expr COLONEQUAL expr
-- On CHAR reduce production expr -> expr COLONEQUAL expr
-- On BEGIN reduce production expr -> expr COLONEQUAL expr
-- On BAR reduce production expr -> expr COLONEQUAL expr
-- On ASSERT reduce production expr -> expr COLONEQUAL expr
-- On AND reduce production expr -> expr COLONEQUAL expr

State 695:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On TO reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On THEN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On MINUSGREATER reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On DOWNTO reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On DO reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT LPAREN seq_expr RPAREN LESSMINUS expr

State 696:
expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 697
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 697:
expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 619
-- On RBRACKET shift to state 698

State 698:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 699
-- On WITH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On WHILE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On UIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TYPE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TRUE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On TO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On THEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STRING reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On STAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SHARP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On SEMI reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On PARSER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On OPEN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On NEW reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MODULE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On MATCH reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LPAREN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LOC reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LIDENT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACKET reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LBRACE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On LAZY reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On IF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On GREATER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUNCTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FUN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FOR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FLOAT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On FALSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On EOF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On END reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ELSE reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOWNTO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DOT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DO reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On DEF reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COMMA reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CLASS reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On CHAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BEGIN reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BARBAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On BAR reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On ASSERT reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT LBRACKET seq_expr RBRACKET

State 699:
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 700
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 700:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On TO reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On THEN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On MINUSGREATER reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On DOWNTO reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On DO reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT LBRACKET seq_expr RBRACKET LESSMINUS expr

State 701:
expr -> simple_expr DOT label_longident . LESSMINUS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr DOT label_longident . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LESSMINUS shift to state 702
-- On WITH reduce production simple_expr -> simple_expr DOT label_longident
-- On WHILE reduce production simple_expr -> simple_expr DOT label_longident
-- On UIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On TYPE reduce production simple_expr -> simple_expr DOT label_longident
-- On TRY reduce production simple_expr -> simple_expr DOT label_longident
-- On TRUE reduce production simple_expr -> simple_expr DOT label_longident
-- On TO reduce production simple_expr -> simple_expr DOT label_longident
-- On THEN reduce production simple_expr -> simple_expr DOT label_longident
-- On SUBTRACTIVE reduce production simple_expr -> simple_expr DOT label_longident
-- On STRING reduce production simple_expr -> simple_expr DOT label_longident
-- On STAR reduce production simple_expr -> simple_expr DOT label_longident
-- On SHARP reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMISEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On SEMI reduce production simple_expr -> simple_expr DOT label_longident
-- On PREFIXOP reduce production simple_expr -> simple_expr DOT label_longident
-- On PARSER reduce production simple_expr -> simple_expr DOT label_longident
-- On OR reduce production simple_expr -> simple_expr DOT label_longident
-- On OPEN reduce production simple_expr -> simple_expr DOT label_longident
-- On NEW reduce production simple_expr -> simple_expr DOT label_longident
-- On MODULE reduce production simple_expr -> simple_expr DOT label_longident
-- On MINUSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On MATCH reduce production simple_expr -> simple_expr DOT label_longident
-- On LPAREN reduce production simple_expr -> simple_expr DOT label_longident
-- On LOC reduce production simple_expr -> simple_expr DOT label_longident
-- On LIDENT reduce production simple_expr -> simple_expr DOT label_longident
-- On LET reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESSGREATERGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LESSGREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On LESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETLESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKETBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACKET reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACELESS reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACEBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On LBRACE reduce production simple_expr -> simple_expr DOT label_longident
-- On LAZY reduce production simple_expr -> simple_expr DOT label_longident
-- On INT reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP4 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP3 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP2 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP1 reduce production simple_expr -> simple_expr DOT label_longident
-- On INFIXOP0 reduce production simple_expr -> simple_expr DOT label_longident
-- On IN reduce production simple_expr -> simple_expr DOT label_longident
-- On IF reduce production simple_expr -> simple_expr DOT label_longident
-- On GREATER reduce production simple_expr -> simple_expr DOT label_longident
-- On FUNCTION reduce production simple_expr -> simple_expr DOT label_longident
-- On FUN reduce production simple_expr -> simple_expr DOT label_longident
-- On FOR reduce production simple_expr -> simple_expr DOT label_longident
-- On FLOAT reduce production simple_expr -> simple_expr DOT label_longident
-- On FALSE reduce production simple_expr -> simple_expr DOT label_longident
-- On EXTERNAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EXCEPTION reduce production simple_expr -> simple_expr DOT label_longident
-- On EQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On EOF reduce production simple_expr -> simple_expr DOT label_longident
-- On END reduce production simple_expr -> simple_expr DOT label_longident
-- On ELSE reduce production simple_expr -> simple_expr DOT label_longident
-- On DOWNTO reduce production simple_expr -> simple_expr DOT label_longident
-- On DOT reduce production simple_expr -> simple_expr DOT label_longident
-- On DO reduce production simple_expr -> simple_expr DOT label_longident
-- On DEF reduce production simple_expr -> simple_expr DOT label_longident
-- On COMMA reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONEQUAL reduce production simple_expr -> simple_expr DOT label_longident
-- On COLONCOLON reduce production simple_expr -> simple_expr DOT label_longident
-- On CLASS reduce production simple_expr -> simple_expr DOT label_longident
-- On CHAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BEGIN reduce production simple_expr -> simple_expr DOT label_longident
-- On BARBAR reduce production simple_expr -> simple_expr DOT label_longident
-- On BAR reduce production simple_expr -> simple_expr DOT label_longident
-- On ASSERT reduce production simple_expr -> simple_expr DOT label_longident
-- On AND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERSAND reduce production simple_expr -> simple_expr DOT label_longident
-- On AMPERAMPER reduce production simple_expr -> simple_expr DOT label_longident

State 702:
expr -> simple_expr DOT label_longident LESSMINUS . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 703
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 703:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> simple_expr DOT label_longident LESSMINUS expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On WHILE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On UIDENT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TYPE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TRY reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TRUE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On TO reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On THEN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On STRING reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SHARP reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SEMISEMI reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On SEMI reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On PREFIXOP reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On PARSER reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On OPEN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On NEW reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On MODULE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On MINUSGREATER reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On MATCH reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LPAREN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LOC reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LIDENT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKETLESS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKETBAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACKET reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACELESS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACEBAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LBRACE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On LAZY reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On INT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On IN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On IF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FUNCTION reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FUN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FOR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FLOAT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On FALSE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EXTERNAL reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EXCEPTION reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On EOF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On END reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On ELSE reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On DOWNTO reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On DO reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On DEF reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On CLASS reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On CHAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On BEGIN reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On BAR reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On ASSERT reduce production expr -> simple_expr DOT label_longident LESSMINUS expr
-- On AND reduce production expr -> simple_expr DOT label_longident LESSMINUS expr

State 704:
expr -> simple_expr simple_expr_list . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list . simple_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On NEW shift to state 9
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 246
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACE shift to state 441
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 705
-- On mod_longident shift to state 378
-- On constr_longident shift to state 622
-- On constant shift to state 623
-- On WITH reduce production expr -> simple_expr simple_expr_list
-- On WHILE reduce production expr -> simple_expr simple_expr_list
-- On UIDENT reduce production expr -> simple_expr simple_expr_list
-- On TYPE reduce production expr -> simple_expr simple_expr_list
-- On TRY reduce production expr -> simple_expr simple_expr_list
-- On TRUE reduce production expr -> simple_expr simple_expr_list
-- On TO reduce production expr -> simple_expr simple_expr_list
-- On THEN reduce production expr -> simple_expr simple_expr_list
-- On SUBTRACTIVE reduce production expr -> simple_expr simple_expr_list
-- On STRING reduce production expr -> simple_expr simple_expr_list
-- On STAR reduce production expr -> simple_expr simple_expr_list
-- On SHARP reduce production expr -> simple_expr simple_expr_list
-- On SEMISEMI reduce production expr -> simple_expr simple_expr_list
-- On SEMI reduce production expr -> simple_expr simple_expr_list
-- On PARSER reduce production expr -> simple_expr simple_expr_list
-- On OR reduce production expr -> simple_expr simple_expr_list
-- On OPEN reduce production expr -> simple_expr simple_expr_list
-- On NEW reduce production expr -> simple_expr simple_expr_list
-- On MODULE reduce production expr -> simple_expr simple_expr_list
-- On MINUSGREATER reduce production expr -> simple_expr simple_expr_list
-- On MATCH reduce production expr -> simple_expr simple_expr_list
-- On LPAREN reduce production expr -> simple_expr simple_expr_list
-- On LOC reduce production expr -> simple_expr simple_expr_list
-- On LIDENT reduce production expr -> simple_expr simple_expr_list
-- On LET reduce production expr -> simple_expr simple_expr_list
-- On LESSGREATER reduce production expr -> simple_expr simple_expr_list
-- On LESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACKETLESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACKETBAR reduce production expr -> simple_expr simple_expr_list
-- On LBRACKET reduce production expr -> simple_expr simple_expr_list
-- On LBRACELESS reduce production expr -> simple_expr simple_expr_list
-- On LBRACEBAR reduce production expr -> simple_expr simple_expr_list
-- On LBRACE reduce production expr -> simple_expr simple_expr_list
-- On LAZY reduce production expr -> simple_expr simple_expr_list
-- On INT reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP4 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP3 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP2 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP1 reduce production expr -> simple_expr simple_expr_list
-- On INFIXOP0 reduce production expr -> simple_expr simple_expr_list
-- On IN reduce production expr -> simple_expr simple_expr_list
-- On IF reduce production expr -> simple_expr simple_expr_list
-- On GREATER reduce production expr -> simple_expr simple_expr_list
-- On FUNCTION reduce production expr -> simple_expr simple_expr_list
-- On FUN reduce production expr -> simple_expr simple_expr_list
-- On FOR reduce production expr -> simple_expr simple_expr_list
-- On FLOAT reduce production expr -> simple_expr simple_expr_list
-- On FALSE reduce production expr -> simple_expr simple_expr_list
-- On EXTERNAL reduce production expr -> simple_expr simple_expr_list
-- On EXCEPTION reduce production expr -> simple_expr simple_expr_list
-- On EQUAL reduce production expr -> simple_expr simple_expr_list
-- On EOF reduce production expr -> simple_expr simple_expr_list
-- On END reduce production expr -> simple_expr simple_expr_list
-- On ELSE reduce production expr -> simple_expr simple_expr_list
-- On DOWNTO reduce production expr -> simple_expr simple_expr_list
-- On DO reduce production expr -> simple_expr simple_expr_list
-- On DEF reduce production expr -> simple_expr simple_expr_list
-- On COMMA reduce production expr -> simple_expr simple_expr_list
-- On COLONEQUAL reduce production expr -> simple_expr simple_expr_list
-- On COLONCOLON reduce production expr -> simple_expr simple_expr_list
-- On CLASS reduce production expr -> simple_expr simple_expr_list
-- On CHAR reduce production expr -> simple_expr simple_expr_list
-- On BEGIN reduce production expr -> simple_expr simple_expr_list
-- On BARBAR reduce production expr -> simple_expr simple_expr_list
-- On BAR reduce production expr -> simple_expr simple_expr_list
-- On ASSERT reduce production expr -> simple_expr simple_expr_list
-- On AND reduce production expr -> simple_expr simple_expr_list
-- On AMPERSAND reduce production expr -> simple_expr simple_expr_list
-- On AMPERAMPER reduce production expr -> simple_expr simple_expr_list
** Conflict on UIDENT TRUE STRING NEW LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT FLOAT FALSE CHAR BEGIN

State 705:
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr_list simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 610
-- On DOT shift to state 612
-- On WITH reduce production simple_expr_list -> simple_expr_list simple_expr
-- On WHILE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On UIDENT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TYPE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TRY reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TRUE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On TO reduce production simple_expr_list -> simple_expr_list simple_expr
-- On THEN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SUBTRACTIVE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On STRING reduce production simple_expr_list -> simple_expr_list simple_expr
-- On STAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SHARP reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SEMISEMI reduce production simple_expr_list -> simple_expr_list simple_expr
-- On SEMI reduce production simple_expr_list -> simple_expr_list simple_expr
-- On PREFIXOP reduce production simple_expr_list -> simple_expr_list simple_expr
-- On PARSER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On OR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On OPEN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On NEW reduce production simple_expr_list -> simple_expr_list simple_expr
-- On MODULE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On MINUSGREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On MATCH reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LPAREN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LOC reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LIDENT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LESSGREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKETLESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKETBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACKET reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACELESS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACEBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LBRACE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On LAZY reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP4 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP3 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP2 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP1 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On INFIXOP0 reduce production simple_expr_list -> simple_expr_list simple_expr
-- On IN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On IF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On GREATER reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FUNCTION reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FUN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FOR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FLOAT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On FALSE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EXTERNAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EXCEPTION reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EQUAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On EOF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On END reduce production simple_expr_list -> simple_expr_list simple_expr
-- On ELSE reduce production simple_expr_list -> simple_expr_list simple_expr
-- On DOWNTO reduce production simple_expr_list -> simple_expr_list simple_expr
-- On DO reduce production simple_expr_list -> simple_expr_list simple_expr
-- On DEF reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COMMA reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLONEQUAL reduce production simple_expr_list -> simple_expr_list simple_expr
-- On COLONCOLON reduce production simple_expr_list -> simple_expr_list simple_expr
-- On CLASS reduce production simple_expr_list -> simple_expr_list simple_expr
-- On CHAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BEGIN reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BARBAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On BAR reduce production simple_expr_list -> simple_expr_list simple_expr
-- On ASSERT reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AND reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AMPERSAND reduce production simple_expr_list -> simple_expr_list simple_expr
-- On AMPERAMPER reduce production simple_expr_list -> simple_expr_list simple_expr
** Conflict on SHARP

State 706:
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr_list -> simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 610
-- On DOT shift to state 612
-- On WITH reduce production simple_expr_list -> simple_expr
-- On WHILE reduce production simple_expr_list -> simple_expr
-- On UIDENT reduce production simple_expr_list -> simple_expr
-- On TYPE reduce production simple_expr_list -> simple_expr
-- On TRY reduce production simple_expr_list -> simple_expr
-- On TRUE reduce production simple_expr_list -> simple_expr
-- On TO reduce production simple_expr_list -> simple_expr
-- On THEN reduce production simple_expr_list -> simple_expr
-- On SUBTRACTIVE reduce production simple_expr_list -> simple_expr
-- On STRING reduce production simple_expr_list -> simple_expr
-- On STAR reduce production simple_expr_list -> simple_expr
-- On SHARP reduce production simple_expr_list -> simple_expr
-- On SEMISEMI reduce production simple_expr_list -> simple_expr
-- On SEMI reduce production simple_expr_list -> simple_expr
-- On PREFIXOP reduce production simple_expr_list -> simple_expr
-- On PARSER reduce production simple_expr_list -> simple_expr
-- On OR reduce production simple_expr_list -> simple_expr
-- On OPEN reduce production simple_expr_list -> simple_expr
-- On NEW reduce production simple_expr_list -> simple_expr
-- On MODULE reduce production simple_expr_list -> simple_expr
-- On MINUSGREATER reduce production simple_expr_list -> simple_expr
-- On MATCH reduce production simple_expr_list -> simple_expr
-- On LPAREN reduce production simple_expr_list -> simple_expr
-- On LOC reduce production simple_expr_list -> simple_expr
-- On LIDENT reduce production simple_expr_list -> simple_expr
-- On LET reduce production simple_expr_list -> simple_expr
-- On LESSGREATER reduce production simple_expr_list -> simple_expr
-- On LESS reduce production simple_expr_list -> simple_expr
-- On LBRACKETLESS reduce production simple_expr_list -> simple_expr
-- On LBRACKETBAR reduce production simple_expr_list -> simple_expr
-- On LBRACKET reduce production simple_expr_list -> simple_expr
-- On LBRACELESS reduce production simple_expr_list -> simple_expr
-- On LBRACEBAR reduce production simple_expr_list -> simple_expr
-- On LBRACE reduce production simple_expr_list -> simple_expr
-- On LAZY reduce production simple_expr_list -> simple_expr
-- On INT reduce production simple_expr_list -> simple_expr
-- On INFIXOP4 reduce production simple_expr_list -> simple_expr
-- On INFIXOP3 reduce production simple_expr_list -> simple_expr
-- On INFIXOP2 reduce production simple_expr_list -> simple_expr
-- On INFIXOP1 reduce production simple_expr_list -> simple_expr
-- On INFIXOP0 reduce production simple_expr_list -> simple_expr
-- On IN reduce production simple_expr_list -> simple_expr
-- On IF reduce production simple_expr_list -> simple_expr
-- On GREATER reduce production simple_expr_list -> simple_expr
-- On FUNCTION reduce production simple_expr_list -> simple_expr
-- On FUN reduce production simple_expr_list -> simple_expr
-- On FOR reduce production simple_expr_list -> simple_expr
-- On FLOAT reduce production simple_expr_list -> simple_expr
-- On FALSE reduce production simple_expr_list -> simple_expr
-- On EXTERNAL reduce production simple_expr_list -> simple_expr
-- On EXCEPTION reduce production simple_expr_list -> simple_expr
-- On EQUAL reduce production simple_expr_list -> simple_expr
-- On EOF reduce production simple_expr_list -> simple_expr
-- On END reduce production simple_expr_list -> simple_expr
-- On ELSE reduce production simple_expr_list -> simple_expr
-- On DOWNTO reduce production simple_expr_list -> simple_expr
-- On DO reduce production simple_expr_list -> simple_expr
-- On DEF reduce production simple_expr_list -> simple_expr
-- On COMMA reduce production simple_expr_list -> simple_expr
-- On COLONEQUAL reduce production simple_expr_list -> simple_expr
-- On COLONCOLON reduce production simple_expr_list -> simple_expr
-- On CLASS reduce production simple_expr_list -> simple_expr
-- On CHAR reduce production simple_expr_list -> simple_expr
-- On BEGIN reduce production simple_expr_list -> simple_expr
-- On BARBAR reduce production simple_expr_list -> simple_expr
-- On BAR reduce production simple_expr_list -> simple_expr
-- On ASSERT reduce production simple_expr_list -> simple_expr
-- On AND reduce production simple_expr_list -> simple_expr
-- On AMPERSAND reduce production simple_expr_list -> simple_expr
-- On AMPERAMPER reduce production simple_expr_list -> simple_expr
** Conflict on SHARP

State 707:
expr -> DEF def_bindings IN seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> DEF def_bindings IN seq_expr
-- On WHILE reduce production expr -> DEF def_bindings IN seq_expr
-- On UIDENT reduce production expr -> DEF def_bindings IN seq_expr
-- On TYPE reduce production expr -> DEF def_bindings IN seq_expr
-- On TRY reduce production expr -> DEF def_bindings IN seq_expr
-- On TRUE reduce production expr -> DEF def_bindings IN seq_expr
-- On TO reduce production expr -> DEF def_bindings IN seq_expr
-- On THEN reduce production expr -> DEF def_bindings IN seq_expr
-- On SUBTRACTIVE reduce production expr -> DEF def_bindings IN seq_expr
-- On STRING reduce production expr -> DEF def_bindings IN seq_expr
-- On STAR reduce production expr -> DEF def_bindings IN seq_expr
-- On SHARP reduce production expr -> DEF def_bindings IN seq_expr
-- On SEMISEMI reduce production expr -> DEF def_bindings IN seq_expr
-- On SEMI reduce production expr -> DEF def_bindings IN seq_expr
-- On PREFIXOP reduce production expr -> DEF def_bindings IN seq_expr
-- On PARSER reduce production expr -> DEF def_bindings IN seq_expr
-- On OR reduce production expr -> DEF def_bindings IN seq_expr
-- On OPEN reduce production expr -> DEF def_bindings IN seq_expr
-- On NEW reduce production expr -> DEF def_bindings IN seq_expr
-- On MODULE reduce production expr -> DEF def_bindings IN seq_expr
-- On MINUSGREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On MATCH reduce production expr -> DEF def_bindings IN seq_expr
-- On LPAREN reduce production expr -> DEF def_bindings IN seq_expr
-- On LOC reduce production expr -> DEF def_bindings IN seq_expr
-- On LIDENT reduce production expr -> DEF def_bindings IN seq_expr
-- On LET reduce production expr -> DEF def_bindings IN seq_expr
-- On LESSGREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On LESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKETLESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKETBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACKET reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACELESS reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACEBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On LBRACE reduce production expr -> DEF def_bindings IN seq_expr
-- On LAZY reduce production expr -> DEF def_bindings IN seq_expr
-- On INT reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP4 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP3 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP2 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP1 reduce production expr -> DEF def_bindings IN seq_expr
-- On INFIXOP0 reduce production expr -> DEF def_bindings IN seq_expr
-- On IN reduce production expr -> DEF def_bindings IN seq_expr
-- On IF reduce production expr -> DEF def_bindings IN seq_expr
-- On GREATER reduce production expr -> DEF def_bindings IN seq_expr
-- On FUNCTION reduce production expr -> DEF def_bindings IN seq_expr
-- On FUN reduce production expr -> DEF def_bindings IN seq_expr
-- On FOR reduce production expr -> DEF def_bindings IN seq_expr
-- On FLOAT reduce production expr -> DEF def_bindings IN seq_expr
-- On FALSE reduce production expr -> DEF def_bindings IN seq_expr
-- On EXTERNAL reduce production expr -> DEF def_bindings IN seq_expr
-- On EXCEPTION reduce production expr -> DEF def_bindings IN seq_expr
-- On EQUAL reduce production expr -> DEF def_bindings IN seq_expr
-- On EOF reduce production expr -> DEF def_bindings IN seq_expr
-- On END reduce production expr -> DEF def_bindings IN seq_expr
-- On ELSE reduce production expr -> DEF def_bindings IN seq_expr
-- On DOWNTO reduce production expr -> DEF def_bindings IN seq_expr
-- On DO reduce production expr -> DEF def_bindings IN seq_expr
-- On DEF reduce production expr -> DEF def_bindings IN seq_expr
-- On COMMA reduce production expr -> DEF def_bindings IN seq_expr
-- On COLONEQUAL reduce production expr -> DEF def_bindings IN seq_expr
-- On COLONCOLON reduce production expr -> DEF def_bindings IN seq_expr
-- On CLASS reduce production expr -> DEF def_bindings IN seq_expr
-- On CHAR reduce production expr -> DEF def_bindings IN seq_expr
-- On BEGIN reduce production expr -> DEF def_bindings IN seq_expr
-- On BARBAR reduce production expr -> DEF def_bindings IN seq_expr
-- On BAR reduce production expr -> DEF def_bindings IN seq_expr
-- On ASSERT reduce production expr -> DEF def_bindings IN seq_expr
-- On AND reduce production expr -> DEF def_bindings IN seq_expr
-- On AMPERSAND reduce production expr -> DEF def_bindings IN seq_expr
-- On AMPERAMPER reduce production expr -> DEF def_bindings IN seq_expr

State 708:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr . SEMI seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On SEMI shift to state 709
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production seq_expr -> expr
-- On WHILE reduce production seq_expr -> expr
-- On UIDENT reduce production seq_expr -> expr
-- On TYPE reduce production seq_expr -> expr
-- On TRY reduce production seq_expr -> expr
-- On TRUE reduce production seq_expr -> expr
-- On TO reduce production seq_expr -> expr
-- On THEN reduce production seq_expr -> expr
-- On SUBTRACTIVE reduce production seq_expr -> expr
-- On STRING reduce production seq_expr -> expr
-- On STAR reduce production seq_expr -> expr
-- On SHARP reduce production seq_expr -> expr
-- On SEMISEMI reduce production seq_expr -> expr
-- On SEMI reduce production seq_expr -> expr
-- On PREFIXOP reduce production seq_expr -> expr
-- On PARSER reduce production seq_expr -> expr
-- On OR reduce production seq_expr -> expr
-- On OPEN reduce production seq_expr -> expr
-- On NEW reduce production seq_expr -> expr
-- On MODULE reduce production seq_expr -> expr
-- On MINUSGREATER reduce production seq_expr -> expr
-- On MATCH reduce production seq_expr -> expr
-- On LPAREN reduce production seq_expr -> expr
-- On LOC reduce production seq_expr -> expr
-- On LIDENT reduce production seq_expr -> expr
-- On LET reduce production seq_expr -> expr
-- On LESSGREATER reduce production seq_expr -> expr
-- On LESS reduce production seq_expr -> expr
-- On LBRACKETLESS reduce production seq_expr -> expr
-- On LBRACKETBAR reduce production seq_expr -> expr
-- On LBRACKET reduce production seq_expr -> expr
-- On LBRACELESS reduce production seq_expr -> expr
-- On LBRACEBAR reduce production seq_expr -> expr
-- On LBRACE reduce production seq_expr -> expr
-- On LAZY reduce production seq_expr -> expr
-- On INT reduce production seq_expr -> expr
-- On INFIXOP4 reduce production seq_expr -> expr
-- On INFIXOP3 reduce production seq_expr -> expr
-- On INFIXOP2 reduce production seq_expr -> expr
-- On INFIXOP1 reduce production seq_expr -> expr
-- On INFIXOP0 reduce production seq_expr -> expr
-- On IN reduce production seq_expr -> expr
-- On IF reduce production seq_expr -> expr
-- On GREATER reduce production seq_expr -> expr
-- On FUNCTION reduce production seq_expr -> expr
-- On FUN reduce production seq_expr -> expr
-- On FOR reduce production seq_expr -> expr
-- On FLOAT reduce production seq_expr -> expr
-- On FALSE reduce production seq_expr -> expr
-- On EXTERNAL reduce production seq_expr -> expr
-- On EXCEPTION reduce production seq_expr -> expr
-- On EQUAL reduce production seq_expr -> expr
-- On EOF reduce production seq_expr -> expr
-- On END reduce production seq_expr -> expr
-- On ELSE reduce production seq_expr -> expr
-- On DOWNTO reduce production seq_expr -> expr
-- On DO reduce production seq_expr -> expr
-- On DEF reduce production seq_expr -> expr
-- On COMMA reduce production seq_expr -> expr
-- On COLONEQUAL reduce production seq_expr -> expr
-- On COLONCOLON reduce production seq_expr -> expr
-- On CLASS reduce production seq_expr -> expr
-- On CHAR reduce production seq_expr -> expr
-- On BEGIN reduce production seq_expr -> expr
-- On BARBAR reduce production seq_expr -> expr
-- On BAR reduce production seq_expr -> expr
-- On ASSERT reduce production seq_expr -> expr
-- On AND reduce production seq_expr -> expr
-- On AMPERSAND reduce production seq_expr -> expr
-- On AMPERAMPER reduce production seq_expr -> expr
** Conflict on SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER

State 709:
seq_expr -> expr SEMI . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
seq_expr -> expr SEMI . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 710
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WITH reduce production seq_expr -> expr SEMI
-- On WHILE reduce production seq_expr -> expr SEMI
-- On UIDENT reduce production seq_expr -> expr SEMI
-- On TYPE reduce production seq_expr -> expr SEMI
-- On TRY reduce production seq_expr -> expr SEMI
-- On TRUE reduce production seq_expr -> expr SEMI
-- On TO reduce production seq_expr -> expr SEMI
-- On THEN reduce production seq_expr -> expr SEMI
-- On STRING reduce production seq_expr -> expr SEMI
-- On STAR reduce production seq_expr -> expr SEMI
-- On SHARP reduce production seq_expr -> expr SEMI
-- On SEMISEMI reduce production seq_expr -> expr SEMI
-- On SEMI reduce production seq_expr -> expr SEMI
-- On PARSER reduce production seq_expr -> expr SEMI
-- On OR reduce production seq_expr -> expr SEMI
-- On OPEN reduce production seq_expr -> expr SEMI
-- On NEW reduce production seq_expr -> expr SEMI
-- On MODULE reduce production seq_expr -> expr SEMI
-- On MINUSGREATER reduce production seq_expr -> expr SEMI
-- On MATCH reduce production seq_expr -> expr SEMI
-- On LPAREN reduce production seq_expr -> expr SEMI
-- On LOC reduce production seq_expr -> expr SEMI
-- On LIDENT reduce production seq_expr -> expr SEMI
-- On LET reduce production seq_expr -> expr SEMI
-- On LESSGREATER reduce production seq_expr -> expr SEMI
-- On LESS reduce production seq_expr -> expr SEMI
-- On LBRACKETLESS reduce production seq_expr -> expr SEMI
-- On LBRACKETBAR reduce production seq_expr -> expr SEMI
-- On LBRACKET reduce production seq_expr -> expr SEMI
-- On LBRACELESS reduce production seq_expr -> expr SEMI
-- On LBRACEBAR reduce production seq_expr -> expr SEMI
-- On LBRACE reduce production seq_expr -> expr SEMI
-- On LAZY reduce production seq_expr -> expr SEMI
-- On INT reduce production seq_expr -> expr SEMI
-- On INFIXOP4 reduce production seq_expr -> expr SEMI
-- On INFIXOP3 reduce production seq_expr -> expr SEMI
-- On INFIXOP2 reduce production seq_expr -> expr SEMI
-- On INFIXOP1 reduce production seq_expr -> expr SEMI
-- On INFIXOP0 reduce production seq_expr -> expr SEMI
-- On IN reduce production seq_expr -> expr SEMI
-- On IF reduce production seq_expr -> expr SEMI
-- On GREATER reduce production seq_expr -> expr SEMI
-- On FUNCTION reduce production seq_expr -> expr SEMI
-- On FUN reduce production seq_expr -> expr SEMI
-- On FOR reduce production seq_expr -> expr SEMI
-- On FLOAT reduce production seq_expr -> expr SEMI
-- On FALSE reduce production seq_expr -> expr SEMI
-- On EXTERNAL reduce production seq_expr -> expr SEMI
-- On EXCEPTION reduce production seq_expr -> expr SEMI
-- On EQUAL reduce production seq_expr -> expr SEMI
-- On EOF reduce production seq_expr -> expr SEMI
-- On END reduce production seq_expr -> expr SEMI
-- On ELSE reduce production seq_expr -> expr SEMI
-- On DOWNTO reduce production seq_expr -> expr SEMI
-- On DO reduce production seq_expr -> expr SEMI
-- On DEF reduce production seq_expr -> expr SEMI
-- On COMMA reduce production seq_expr -> expr SEMI
-- On COLONEQUAL reduce production seq_expr -> expr SEMI
-- On COLONCOLON reduce production seq_expr -> expr SEMI
-- On CLASS reduce production seq_expr -> expr SEMI
-- On CHAR reduce production seq_expr -> expr SEMI
-- On BEGIN reduce production seq_expr -> expr SEMI
-- On BARBAR reduce production seq_expr -> expr SEMI
-- On BAR reduce production seq_expr -> expr SEMI
-- On ASSERT reduce production seq_expr -> expr SEMI
-- On AND reduce production seq_expr -> expr SEMI
-- On AMPERSAND reduce production seq_expr -> expr SEMI
-- On AMPERAMPER reduce production seq_expr -> expr SEMI
** Conflict on WHILE UIDENT TRY TRUE STRING PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 710:
seq_expr -> expr SEMI seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production seq_expr -> expr SEMI seq_expr
-- On WHILE reduce production seq_expr -> expr SEMI seq_expr
-- On UIDENT reduce production seq_expr -> expr SEMI seq_expr
-- On TYPE reduce production seq_expr -> expr SEMI seq_expr
-- On TRY reduce production seq_expr -> expr SEMI seq_expr
-- On TRUE reduce production seq_expr -> expr SEMI seq_expr
-- On TO reduce production seq_expr -> expr SEMI seq_expr
-- On THEN reduce production seq_expr -> expr SEMI seq_expr
-- On SUBTRACTIVE reduce production seq_expr -> expr SEMI seq_expr
-- On STRING reduce production seq_expr -> expr SEMI seq_expr
-- On STAR reduce production seq_expr -> expr SEMI seq_expr
-- On SHARP reduce production seq_expr -> expr SEMI seq_expr
-- On SEMISEMI reduce production seq_expr -> expr SEMI seq_expr
-- On SEMI reduce production seq_expr -> expr SEMI seq_expr
-- On PREFIXOP reduce production seq_expr -> expr SEMI seq_expr
-- On PARSER reduce production seq_expr -> expr SEMI seq_expr
-- On OR reduce production seq_expr -> expr SEMI seq_expr
-- On OPEN reduce production seq_expr -> expr SEMI seq_expr
-- On NEW reduce production seq_expr -> expr SEMI seq_expr
-- On MODULE reduce production seq_expr -> expr SEMI seq_expr
-- On MINUSGREATER reduce production seq_expr -> expr SEMI seq_expr
-- On MATCH reduce production seq_expr -> expr SEMI seq_expr
-- On LPAREN reduce production seq_expr -> expr SEMI seq_expr
-- On LOC reduce production seq_expr -> expr SEMI seq_expr
-- On LIDENT reduce production seq_expr -> expr SEMI seq_expr
-- On LET reduce production seq_expr -> expr SEMI seq_expr
-- On LESSGREATER reduce production seq_expr -> expr SEMI seq_expr
-- On LESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKETLESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKETBAR reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACKET reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACELESS reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACEBAR reduce production seq_expr -> expr SEMI seq_expr
-- On LBRACE reduce production seq_expr -> expr SEMI seq_expr
-- On LAZY reduce production seq_expr -> expr SEMI seq_expr
-- On INT reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP4 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP3 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP2 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP1 reduce production seq_expr -> expr SEMI seq_expr
-- On INFIXOP0 reduce production seq_expr -> expr SEMI seq_expr
-- On IN reduce production seq_expr -> expr SEMI seq_expr
-- On IF reduce production seq_expr -> expr SEMI seq_expr
-- On GREATER reduce production seq_expr -> expr SEMI seq_expr
-- On FUNCTION reduce production seq_expr -> expr SEMI seq_expr
-- On FUN reduce production seq_expr -> expr SEMI seq_expr
-- On FOR reduce production seq_expr -> expr SEMI seq_expr
-- On FLOAT reduce production seq_expr -> expr SEMI seq_expr
-- On FALSE reduce production seq_expr -> expr SEMI seq_expr
-- On EXTERNAL reduce production seq_expr -> expr SEMI seq_expr
-- On EXCEPTION reduce production seq_expr -> expr SEMI seq_expr
-- On EQUAL reduce production seq_expr -> expr SEMI seq_expr
-- On EOF reduce production seq_expr -> expr SEMI seq_expr
-- On END reduce production seq_expr -> expr SEMI seq_expr
-- On ELSE reduce production seq_expr -> expr SEMI seq_expr
-- On DOWNTO reduce production seq_expr -> expr SEMI seq_expr
-- On DO reduce production seq_expr -> expr SEMI seq_expr
-- On DEF reduce production seq_expr -> expr SEMI seq_expr
-- On COMMA reduce production seq_expr -> expr SEMI seq_expr
-- On COLONEQUAL reduce production seq_expr -> expr SEMI seq_expr
-- On COLONCOLON reduce production seq_expr -> expr SEMI seq_expr
-- On CLASS reduce production seq_expr -> expr SEMI seq_expr
-- On CHAR reduce production seq_expr -> expr SEMI seq_expr
-- On BEGIN reduce production seq_expr -> expr SEMI seq_expr
-- On BARBAR reduce production seq_expr -> expr SEMI seq_expr
-- On BAR reduce production seq_expr -> expr SEMI seq_expr
-- On ASSERT reduce production seq_expr -> expr SEMI seq_expr
-- On AND reduce production seq_expr -> expr SEMI seq_expr
-- On AMPERSAND reduce production seq_expr -> expr SEMI seq_expr
-- On AMPERAMPER reduce production seq_expr -> expr SEMI seq_expr

State 711:
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On TO shift to state 712
-- On DOWNTO shift to state 713
-- On direction_flag shift to state 714

State 712:
direction_flag -> TO . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production direction_flag -> TO
-- On UIDENT reduce production direction_flag -> TO
-- On TRY reduce production direction_flag -> TO
-- On TRUE reduce production direction_flag -> TO
-- On SUBTRACTIVE reduce production direction_flag -> TO
-- On STRING reduce production direction_flag -> TO
-- On PREFIXOP reduce production direction_flag -> TO
-- On PARSER reduce production direction_flag -> TO
-- On NEW reduce production direction_flag -> TO
-- On MATCH reduce production direction_flag -> TO
-- On LPAREN reduce production direction_flag -> TO
-- On LOC reduce production direction_flag -> TO
-- On LIDENT reduce production direction_flag -> TO
-- On LET reduce production direction_flag -> TO
-- On LBRACKETLESS reduce production direction_flag -> TO
-- On LBRACKETBAR reduce production direction_flag -> TO
-- On LBRACKET reduce production direction_flag -> TO
-- On LBRACELESS reduce production direction_flag -> TO
-- On LBRACEBAR reduce production direction_flag -> TO
-- On LBRACE reduce production direction_flag -> TO
-- On LAZY reduce production direction_flag -> TO
-- On INT reduce production direction_flag -> TO
-- On IF reduce production direction_flag -> TO
-- On FUNCTION reduce production direction_flag -> TO
-- On FUN reduce production direction_flag -> TO
-- On FOR reduce production direction_flag -> TO
-- On FLOAT reduce production direction_flag -> TO
-- On FALSE reduce production direction_flag -> TO
-- On DEF reduce production direction_flag -> TO
-- On CHAR reduce production direction_flag -> TO
-- On BEGIN reduce production direction_flag -> TO
-- On ASSERT reduce production direction_flag -> TO

State 713:
direction_flag -> DOWNTO . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production direction_flag -> DOWNTO
-- On UIDENT reduce production direction_flag -> DOWNTO
-- On TRY reduce production direction_flag -> DOWNTO
-- On TRUE reduce production direction_flag -> DOWNTO
-- On SUBTRACTIVE reduce production direction_flag -> DOWNTO
-- On STRING reduce production direction_flag -> DOWNTO
-- On PREFIXOP reduce production direction_flag -> DOWNTO
-- On PARSER reduce production direction_flag -> DOWNTO
-- On NEW reduce production direction_flag -> DOWNTO
-- On MATCH reduce production direction_flag -> DOWNTO
-- On LPAREN reduce production direction_flag -> DOWNTO
-- On LOC reduce production direction_flag -> DOWNTO
-- On LIDENT reduce production direction_flag -> DOWNTO
-- On LET reduce production direction_flag -> DOWNTO
-- On LBRACKETLESS reduce production direction_flag -> DOWNTO
-- On LBRACKETBAR reduce production direction_flag -> DOWNTO
-- On LBRACKET reduce production direction_flag -> DOWNTO
-- On LBRACELESS reduce production direction_flag -> DOWNTO
-- On LBRACEBAR reduce production direction_flag -> DOWNTO
-- On LBRACE reduce production direction_flag -> DOWNTO
-- On LAZY reduce production direction_flag -> DOWNTO
-- On INT reduce production direction_flag -> DOWNTO
-- On IF reduce production direction_flag -> DOWNTO
-- On FUNCTION reduce production direction_flag -> DOWNTO
-- On FUN reduce production direction_flag -> DOWNTO
-- On FOR reduce production direction_flag -> DOWNTO
-- On FLOAT reduce production direction_flag -> DOWNTO
-- On FALSE reduce production direction_flag -> DOWNTO
-- On DEF reduce production direction_flag -> DOWNTO
-- On CHAR reduce production direction_flag -> DOWNTO
-- On BEGIN reduce production direction_flag -> DOWNTO
-- On ASSERT reduce production direction_flag -> DOWNTO

State 714:
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 715
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 715:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On DO shift to state 716

State 716:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 717
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 717:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 718
-- On DONE shift to state 719

State 718:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On WHILE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On UIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TYPE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TRY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TRUE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On THEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SUBTRACTIVE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On STRING reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On STAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SHARP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SEMISEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On PREFIXOP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On PARSER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On OR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On OPEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On NEW reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On MODULE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On MINUSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On MATCH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LOC reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LESSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKETLESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKETBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACELESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACEBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LAZY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP4 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP3 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP2 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP1 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP0 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On IN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On IF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On GREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FUNCTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FUN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FOR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FLOAT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FALSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EXTERNAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EXCEPTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EOF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On END reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On ELSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On DOWNTO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On DO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On DEF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COMMA reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLONEQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLONCOLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On CLASS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On CHAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BEGIN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BARBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On ASSERT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AMPERSAND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AMPERAMPER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error

State 719:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On WHILE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On UIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TYPE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TRY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TRUE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On THEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SUBTRACTIVE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On STRING reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On STAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SHARP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SEMISEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On PREFIXOP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On PARSER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On OR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On OPEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On NEW reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On MODULE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On MINUSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On MATCH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LOC reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LESSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKETLESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKETBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACELESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACEBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LAZY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP4 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP3 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP2 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP1 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP0 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On IN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On IF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On GREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FUNCTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FUN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FOR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FLOAT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FALSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EXTERNAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EXCEPTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EOF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On END reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On ELSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On DOWNTO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On DO reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On DEF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COMMA reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLONEQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLONCOLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On CLASS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On CHAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BEGIN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BARBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On ASSERT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AMPERSAND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AMPERAMPER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE

State 720:
match_action -> MINUSGREATER seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production match_action -> MINUSGREATER seq_expr
-- On WHILE reduce production match_action -> MINUSGREATER seq_expr
-- On UIDENT reduce production match_action -> MINUSGREATER seq_expr
-- On TYPE reduce production match_action -> MINUSGREATER seq_expr
-- On TRY reduce production match_action -> MINUSGREATER seq_expr
-- On TRUE reduce production match_action -> MINUSGREATER seq_expr
-- On TO reduce production match_action -> MINUSGREATER seq_expr
-- On THEN reduce production match_action -> MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production match_action -> MINUSGREATER seq_expr
-- On STRING reduce production match_action -> MINUSGREATER seq_expr
-- On STAR reduce production match_action -> MINUSGREATER seq_expr
-- On SHARP reduce production match_action -> MINUSGREATER seq_expr
-- On SEMISEMI reduce production match_action -> MINUSGREATER seq_expr
-- On SEMI reduce production match_action -> MINUSGREATER seq_expr
-- On PREFIXOP reduce production match_action -> MINUSGREATER seq_expr
-- On PARSER reduce production match_action -> MINUSGREATER seq_expr
-- On OR reduce production match_action -> MINUSGREATER seq_expr
-- On OPEN reduce production match_action -> MINUSGREATER seq_expr
-- On NEW reduce production match_action -> MINUSGREATER seq_expr
-- On MODULE reduce production match_action -> MINUSGREATER seq_expr
-- On MINUSGREATER reduce production match_action -> MINUSGREATER seq_expr
-- On MATCH reduce production match_action -> MINUSGREATER seq_expr
-- On LPAREN reduce production match_action -> MINUSGREATER seq_expr
-- On LOC reduce production match_action -> MINUSGREATER seq_expr
-- On LIDENT reduce production match_action -> MINUSGREATER seq_expr
-- On LET reduce production match_action -> MINUSGREATER seq_expr
-- On LESSGREATER reduce production match_action -> MINUSGREATER seq_expr
-- On LESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKET reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACELESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACEBAR reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACE reduce production match_action -> MINUSGREATER seq_expr
-- On LAZY reduce production match_action -> MINUSGREATER seq_expr
-- On INT reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP4 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP3 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP2 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP1 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP0 reduce production match_action -> MINUSGREATER seq_expr
-- On IN reduce production match_action -> MINUSGREATER seq_expr
-- On IF reduce production match_action -> MINUSGREATER seq_expr
-- On GREATER reduce production match_action -> MINUSGREATER seq_expr
-- On FUNCTION reduce production match_action -> MINUSGREATER seq_expr
-- On FUN reduce production match_action -> MINUSGREATER seq_expr
-- On FOR reduce production match_action -> MINUSGREATER seq_expr
-- On FLOAT reduce production match_action -> MINUSGREATER seq_expr
-- On FALSE reduce production match_action -> MINUSGREATER seq_expr
-- On EXTERNAL reduce production match_action -> MINUSGREATER seq_expr
-- On EXCEPTION reduce production match_action -> MINUSGREATER seq_expr
-- On EQUAL reduce production match_action -> MINUSGREATER seq_expr
-- On EOF reduce production match_action -> MINUSGREATER seq_expr
-- On END reduce production match_action -> MINUSGREATER seq_expr
-- On ELSE reduce production match_action -> MINUSGREATER seq_expr
-- On DOWNTO reduce production match_action -> MINUSGREATER seq_expr
-- On DO reduce production match_action -> MINUSGREATER seq_expr
-- On DEF reduce production match_action -> MINUSGREATER seq_expr
-- On COMMA reduce production match_action -> MINUSGREATER seq_expr
-- On COLONEQUAL reduce production match_action -> MINUSGREATER seq_expr
-- On COLONCOLON reduce production match_action -> MINUSGREATER seq_expr
-- On CLASS reduce production match_action -> MINUSGREATER seq_expr
-- On CHAR reduce production match_action -> MINUSGREATER seq_expr
-- On BEGIN reduce production match_action -> MINUSGREATER seq_expr
-- On BARBAR reduce production match_action -> MINUSGREATER seq_expr
-- On BAR reduce production match_action -> MINUSGREATER seq_expr
-- On ASSERT reduce production match_action -> MINUSGREATER seq_expr
-- On AND reduce production match_action -> MINUSGREATER seq_expr
-- On AMPERSAND reduce production match_action -> MINUSGREATER seq_expr
-- On AMPERAMPER reduce production match_action -> MINUSGREATER seq_expr

State 721:
fun_def -> simple_pattern . fun_def [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHEN shift to state 628
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On MINUSGREATER shift to state 631
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 721
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On match_action shift to state 722
-- On fun_def shift to state 723
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 722:
fun_def -> match_action . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production fun_def -> match_action
-- On WHILE reduce production fun_def -> match_action
-- On UIDENT reduce production fun_def -> match_action
-- On TYPE reduce production fun_def -> match_action
-- On TRY reduce production fun_def -> match_action
-- On TRUE reduce production fun_def -> match_action
-- On TO reduce production fun_def -> match_action
-- On THEN reduce production fun_def -> match_action
-- On SUBTRACTIVE reduce production fun_def -> match_action
-- On STRING reduce production fun_def -> match_action
-- On STAR reduce production fun_def -> match_action
-- On SHARP reduce production fun_def -> match_action
-- On SEMISEMI reduce production fun_def -> match_action
-- On SEMI reduce production fun_def -> match_action
-- On PREFIXOP reduce production fun_def -> match_action
-- On PARSER reduce production fun_def -> match_action
-- On OR reduce production fun_def -> match_action
-- On OPEN reduce production fun_def -> match_action
-- On NEW reduce production fun_def -> match_action
-- On MODULE reduce production fun_def -> match_action
-- On MINUSGREATER reduce production fun_def -> match_action
-- On MATCH reduce production fun_def -> match_action
-- On LPAREN reduce production fun_def -> match_action
-- On LOC reduce production fun_def -> match_action
-- On LIDENT reduce production fun_def -> match_action
-- On LET reduce production fun_def -> match_action
-- On LESSGREATER reduce production fun_def -> match_action
-- On LESS reduce production fun_def -> match_action
-- On LBRACKETLESS reduce production fun_def -> match_action
-- On LBRACKETBAR reduce production fun_def -> match_action
-- On LBRACKET reduce production fun_def -> match_action
-- On LBRACELESS reduce production fun_def -> match_action
-- On LBRACEBAR reduce production fun_def -> match_action
-- On LBRACE reduce production fun_def -> match_action
-- On LAZY reduce production fun_def -> match_action
-- On INT reduce production fun_def -> match_action
-- On INFIXOP4 reduce production fun_def -> match_action
-- On INFIXOP3 reduce production fun_def -> match_action
-- On INFIXOP2 reduce production fun_def -> match_action
-- On INFIXOP1 reduce production fun_def -> match_action
-- On INFIXOP0 reduce production fun_def -> match_action
-- On IN reduce production fun_def -> match_action
-- On IF reduce production fun_def -> match_action
-- On GREATER reduce production fun_def -> match_action
-- On FUNCTION reduce production fun_def -> match_action
-- On FUN reduce production fun_def -> match_action
-- On FOR reduce production fun_def -> match_action
-- On FLOAT reduce production fun_def -> match_action
-- On FALSE reduce production fun_def -> match_action
-- On EXTERNAL reduce production fun_def -> match_action
-- On EXCEPTION reduce production fun_def -> match_action
-- On EQUAL reduce production fun_def -> match_action
-- On EOF reduce production fun_def -> match_action
-- On END reduce production fun_def -> match_action
-- On ELSE reduce production fun_def -> match_action
-- On DOWNTO reduce production fun_def -> match_action
-- On DO reduce production fun_def -> match_action
-- On DEF reduce production fun_def -> match_action
-- On COMMA reduce production fun_def -> match_action
-- On COLONEQUAL reduce production fun_def -> match_action
-- On COLONCOLON reduce production fun_def -> match_action
-- On CLASS reduce production fun_def -> match_action
-- On CHAR reduce production fun_def -> match_action
-- On BEGIN reduce production fun_def -> match_action
-- On BARBAR reduce production fun_def -> match_action
-- On BAR reduce production fun_def -> match_action
-- On ASSERT reduce production fun_def -> match_action
-- On AND reduce production fun_def -> match_action
-- On AMPERSAND reduce production fun_def -> match_action
-- On AMPERAMPER reduce production fun_def -> match_action

State 723:
fun_def -> simple_pattern fun_def . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production fun_def -> simple_pattern fun_def
-- On WHILE reduce production fun_def -> simple_pattern fun_def
-- On UIDENT reduce production fun_def -> simple_pattern fun_def
-- On TYPE reduce production fun_def -> simple_pattern fun_def
-- On TRY reduce production fun_def -> simple_pattern fun_def
-- On TRUE reduce production fun_def -> simple_pattern fun_def
-- On TO reduce production fun_def -> simple_pattern fun_def
-- On THEN reduce production fun_def -> simple_pattern fun_def
-- On SUBTRACTIVE reduce production fun_def -> simple_pattern fun_def
-- On STRING reduce production fun_def -> simple_pattern fun_def
-- On STAR reduce production fun_def -> simple_pattern fun_def
-- On SHARP reduce production fun_def -> simple_pattern fun_def
-- On SEMISEMI reduce production fun_def -> simple_pattern fun_def
-- On SEMI reduce production fun_def -> simple_pattern fun_def
-- On PREFIXOP reduce production fun_def -> simple_pattern fun_def
-- On PARSER reduce production fun_def -> simple_pattern fun_def
-- On OR reduce production fun_def -> simple_pattern fun_def
-- On OPEN reduce production fun_def -> simple_pattern fun_def
-- On NEW reduce production fun_def -> simple_pattern fun_def
-- On MODULE reduce production fun_def -> simple_pattern fun_def
-- On MINUSGREATER reduce production fun_def -> simple_pattern fun_def
-- On MATCH reduce production fun_def -> simple_pattern fun_def
-- On LPAREN reduce production fun_def -> simple_pattern fun_def
-- On LOC reduce production fun_def -> simple_pattern fun_def
-- On LIDENT reduce production fun_def -> simple_pattern fun_def
-- On LET reduce production fun_def -> simple_pattern fun_def
-- On LESSGREATER reduce production fun_def -> simple_pattern fun_def
-- On LESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACKETLESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACKETBAR reduce production fun_def -> simple_pattern fun_def
-- On LBRACKET reduce production fun_def -> simple_pattern fun_def
-- On LBRACELESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACEBAR reduce production fun_def -> simple_pattern fun_def
-- On LBRACE reduce production fun_def -> simple_pattern fun_def
-- On LAZY reduce production fun_def -> simple_pattern fun_def
-- On INT reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP4 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP3 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP2 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP1 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP0 reduce production fun_def -> simple_pattern fun_def
-- On IN reduce production fun_def -> simple_pattern fun_def
-- On IF reduce production fun_def -> simple_pattern fun_def
-- On GREATER reduce production fun_def -> simple_pattern fun_def
-- On FUNCTION reduce production fun_def -> simple_pattern fun_def
-- On FUN reduce production fun_def -> simple_pattern fun_def
-- On FOR reduce production fun_def -> simple_pattern fun_def
-- On FLOAT reduce production fun_def -> simple_pattern fun_def
-- On FALSE reduce production fun_def -> simple_pattern fun_def
-- On EXTERNAL reduce production fun_def -> simple_pattern fun_def
-- On EXCEPTION reduce production fun_def -> simple_pattern fun_def
-- On EQUAL reduce production fun_def -> simple_pattern fun_def
-- On EOF reduce production fun_def -> simple_pattern fun_def
-- On END reduce production fun_def -> simple_pattern fun_def
-- On ELSE reduce production fun_def -> simple_pattern fun_def
-- On DOWNTO reduce production fun_def -> simple_pattern fun_def
-- On DO reduce production fun_def -> simple_pattern fun_def
-- On DEF reduce production fun_def -> simple_pattern fun_def
-- On COMMA reduce production fun_def -> simple_pattern fun_def
-- On COLONEQUAL reduce production fun_def -> simple_pattern fun_def
-- On COLONCOLON reduce production fun_def -> simple_pattern fun_def
-- On CLASS reduce production fun_def -> simple_pattern fun_def
-- On CHAR reduce production fun_def -> simple_pattern fun_def
-- On BEGIN reduce production fun_def -> simple_pattern fun_def
-- On BARBAR reduce production fun_def -> simple_pattern fun_def
-- On BAR reduce production fun_def -> simple_pattern fun_def
-- On ASSERT reduce production fun_def -> simple_pattern fun_def
-- On AND reduce production fun_def -> simple_pattern fun_def
-- On AMPERSAND reduce production fun_def -> simple_pattern fun_def
-- On AMPERAMPER reduce production fun_def -> simple_pattern fun_def

State 724:
simple_pattern -> constr_longident . [ WHEN UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING MINUSGREATER LPAREN LIDENT LBRACKETLESS LBRACKET LBRACE INT FLOAT FALSE EQUAL COLONGREATER COLON CHAR BAR AS ]
-- On WHEN reduce production simple_pattern -> constr_longident
-- On UNDERSCORE reduce production simple_pattern -> constr_longident
-- On UIDENT reduce production simple_pattern -> constr_longident
-- On TRUE reduce production simple_pattern -> constr_longident
-- On SUBTRACTIVE reduce production simple_pattern -> constr_longident
-- On STRING reduce production simple_pattern -> constr_longident
-- On MINUSGREATER reduce production simple_pattern -> constr_longident
-- On LPAREN reduce production simple_pattern -> constr_longident
-- On LIDENT reduce production simple_pattern -> constr_longident
-- On LBRACKETLESS reduce production simple_pattern -> constr_longident
-- On LBRACKET reduce production simple_pattern -> constr_longident
-- On LBRACE reduce production simple_pattern -> constr_longident
-- On INT reduce production simple_pattern -> constr_longident
-- On FLOAT reduce production simple_pattern -> constr_longident
-- On FALSE reduce production simple_pattern -> constr_longident
-- On EQUAL reduce production simple_pattern -> constr_longident
-- On COLONGREATER reduce production simple_pattern -> constr_longident
-- On COLON reduce production simple_pattern -> constr_longident
-- On CHAR reduce production simple_pattern -> constr_longident
-- On BAR reduce production simple_pattern -> constr_longident
-- On AS reduce production simple_pattern -> constr_longident

State 725:
expr -> FUN simple_pattern fun_def . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> FUN simple_pattern fun_def
-- On WHILE reduce production expr -> FUN simple_pattern fun_def
-- On UIDENT reduce production expr -> FUN simple_pattern fun_def
-- On TYPE reduce production expr -> FUN simple_pattern fun_def
-- On TRY reduce production expr -> FUN simple_pattern fun_def
-- On TRUE reduce production expr -> FUN simple_pattern fun_def
-- On TO reduce production expr -> FUN simple_pattern fun_def
-- On THEN reduce production expr -> FUN simple_pattern fun_def
-- On SUBTRACTIVE reduce production expr -> FUN simple_pattern fun_def
-- On STRING reduce production expr -> FUN simple_pattern fun_def
-- On STAR reduce production expr -> FUN simple_pattern fun_def
-- On SHARP reduce production expr -> FUN simple_pattern fun_def
-- On SEMISEMI reduce production expr -> FUN simple_pattern fun_def
-- On SEMI reduce production expr -> FUN simple_pattern fun_def
-- On PREFIXOP reduce production expr -> FUN simple_pattern fun_def
-- On PARSER reduce production expr -> FUN simple_pattern fun_def
-- On OR reduce production expr -> FUN simple_pattern fun_def
-- On OPEN reduce production expr -> FUN simple_pattern fun_def
-- On NEW reduce production expr -> FUN simple_pattern fun_def
-- On MODULE reduce production expr -> FUN simple_pattern fun_def
-- On MINUSGREATER reduce production expr -> FUN simple_pattern fun_def
-- On MATCH reduce production expr -> FUN simple_pattern fun_def
-- On LPAREN reduce production expr -> FUN simple_pattern fun_def
-- On LOC reduce production expr -> FUN simple_pattern fun_def
-- On LIDENT reduce production expr -> FUN simple_pattern fun_def
-- On LET reduce production expr -> FUN simple_pattern fun_def
-- On LESSGREATER reduce production expr -> FUN simple_pattern fun_def
-- On LESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKETLESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKETBAR reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKET reduce production expr -> FUN simple_pattern fun_def
-- On LBRACELESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACEBAR reduce production expr -> FUN simple_pattern fun_def
-- On LBRACE reduce production expr -> FUN simple_pattern fun_def
-- On LAZY reduce production expr -> FUN simple_pattern fun_def
-- On INT reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP4 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP3 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP2 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP1 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP0 reduce production expr -> FUN simple_pattern fun_def
-- On IN reduce production expr -> FUN simple_pattern fun_def
-- On IF reduce production expr -> FUN simple_pattern fun_def
-- On GREATER reduce production expr -> FUN simple_pattern fun_def
-- On FUNCTION reduce production expr -> FUN simple_pattern fun_def
-- On FUN reduce production expr -> FUN simple_pattern fun_def
-- On FOR reduce production expr -> FUN simple_pattern fun_def
-- On FLOAT reduce production expr -> FUN simple_pattern fun_def
-- On FALSE reduce production expr -> FUN simple_pattern fun_def
-- On EXTERNAL reduce production expr -> FUN simple_pattern fun_def
-- On EXCEPTION reduce production expr -> FUN simple_pattern fun_def
-- On EQUAL reduce production expr -> FUN simple_pattern fun_def
-- On EOF reduce production expr -> FUN simple_pattern fun_def
-- On END reduce production expr -> FUN simple_pattern fun_def
-- On ELSE reduce production expr -> FUN simple_pattern fun_def
-- On DOWNTO reduce production expr -> FUN simple_pattern fun_def
-- On DO reduce production expr -> FUN simple_pattern fun_def
-- On DEF reduce production expr -> FUN simple_pattern fun_def
-- On COMMA reduce production expr -> FUN simple_pattern fun_def
-- On COLONEQUAL reduce production expr -> FUN simple_pattern fun_def
-- On COLONCOLON reduce production expr -> FUN simple_pattern fun_def
-- On CLASS reduce production expr -> FUN simple_pattern fun_def
-- On CHAR reduce production expr -> FUN simple_pattern fun_def
-- On BEGIN reduce production expr -> FUN simple_pattern fun_def
-- On BARBAR reduce production expr -> FUN simple_pattern fun_def
-- On BAR reduce production expr -> FUN simple_pattern fun_def
-- On ASSERT reduce production expr -> FUN simple_pattern fun_def
-- On AND reduce production expr -> FUN simple_pattern fun_def
-- On AMPERSAND reduce production expr -> FUN simple_pattern fun_def
-- On AMPERAMPER reduce production expr -> FUN simple_pattern fun_def

State 726:
match_action -> WHEN seq_expr . MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 727

State 727:
match_action -> WHEN seq_expr MINUSGREATER . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 728
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 728:
match_action -> WHEN seq_expr MINUSGREATER seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On WHILE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On UIDENT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TYPE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TRY reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TRUE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TO reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On THEN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On STRING reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On STAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SHARP reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SEMISEMI reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SEMI reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On PREFIXOP reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On PARSER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On OR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On OPEN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On NEW reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On MODULE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On MINUSGREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On MATCH reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LPAREN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LOC reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LIDENT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LESSGREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACELESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACEBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LAZY reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP4 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP3 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP2 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP1 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP0 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On IN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On IF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On GREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FUNCTION reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FUN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FOR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FLOAT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FALSE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EXTERNAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EXCEPTION reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EQUAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EOF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On END reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On ELSE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On DOWNTO reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On DO reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On DEF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COMMA reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLONEQUAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLONCOLON reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On CLASS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On CHAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BEGIN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BARBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On ASSERT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AND reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AMPERSAND reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AMPERAMPER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr

State 729:
match_cases -> pattern match_action . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production match_cases -> pattern match_action
-- On WHILE reduce production match_cases -> pattern match_action
-- On UIDENT reduce production match_cases -> pattern match_action
-- On TYPE reduce production match_cases -> pattern match_action
-- On TRY reduce production match_cases -> pattern match_action
-- On TRUE reduce production match_cases -> pattern match_action
-- On TO reduce production match_cases -> pattern match_action
-- On THEN reduce production match_cases -> pattern match_action
-- On SUBTRACTIVE reduce production match_cases -> pattern match_action
-- On STRING reduce production match_cases -> pattern match_action
-- On STAR reduce production match_cases -> pattern match_action
-- On SHARP reduce production match_cases -> pattern match_action
-- On SEMISEMI reduce production match_cases -> pattern match_action
-- On SEMI reduce production match_cases -> pattern match_action
-- On PREFIXOP reduce production match_cases -> pattern match_action
-- On PARSER reduce production match_cases -> pattern match_action
-- On OR reduce production match_cases -> pattern match_action
-- On OPEN reduce production match_cases -> pattern match_action
-- On NEW reduce production match_cases -> pattern match_action
-- On MODULE reduce production match_cases -> pattern match_action
-- On MINUSGREATER reduce production match_cases -> pattern match_action
-- On MATCH reduce production match_cases -> pattern match_action
-- On LPAREN reduce production match_cases -> pattern match_action
-- On LOC reduce production match_cases -> pattern match_action
-- On LIDENT reduce production match_cases -> pattern match_action
-- On LET reduce production match_cases -> pattern match_action
-- On LESSGREATER reduce production match_cases -> pattern match_action
-- On LESS reduce production match_cases -> pattern match_action
-- On LBRACKETLESS reduce production match_cases -> pattern match_action
-- On LBRACKETBAR reduce production match_cases -> pattern match_action
-- On LBRACKET reduce production match_cases -> pattern match_action
-- On LBRACELESS reduce production match_cases -> pattern match_action
-- On LBRACEBAR reduce production match_cases -> pattern match_action
-- On LBRACE reduce production match_cases -> pattern match_action
-- On LAZY reduce production match_cases -> pattern match_action
-- On INT reduce production match_cases -> pattern match_action
-- On INFIXOP4 reduce production match_cases -> pattern match_action
-- On INFIXOP3 reduce production match_cases -> pattern match_action
-- On INFIXOP2 reduce production match_cases -> pattern match_action
-- On INFIXOP1 reduce production match_cases -> pattern match_action
-- On INFIXOP0 reduce production match_cases -> pattern match_action
-- On IN reduce production match_cases -> pattern match_action
-- On IF reduce production match_cases -> pattern match_action
-- On GREATER reduce production match_cases -> pattern match_action
-- On FUNCTION reduce production match_cases -> pattern match_action
-- On FUN reduce production match_cases -> pattern match_action
-- On FOR reduce production match_cases -> pattern match_action
-- On FLOAT reduce production match_cases -> pattern match_action
-- On FALSE reduce production match_cases -> pattern match_action
-- On EXTERNAL reduce production match_cases -> pattern match_action
-- On EXCEPTION reduce production match_cases -> pattern match_action
-- On EQUAL reduce production match_cases -> pattern match_action
-- On EOF reduce production match_cases -> pattern match_action
-- On END reduce production match_cases -> pattern match_action
-- On ELSE reduce production match_cases -> pattern match_action
-- On DOWNTO reduce production match_cases -> pattern match_action
-- On DO reduce production match_cases -> pattern match_action
-- On DEF reduce production match_cases -> pattern match_action
-- On COMMA reduce production match_cases -> pattern match_action
-- On COLONEQUAL reduce production match_cases -> pattern match_action
-- On COLONCOLON reduce production match_cases -> pattern match_action
-- On CLASS reduce production match_cases -> pattern match_action
-- On CHAR reduce production match_cases -> pattern match_action
-- On BEGIN reduce production match_cases -> pattern match_action
-- On BARBAR reduce production match_cases -> pattern match_action
-- On BAR reduce production match_cases -> pattern match_action
-- On ASSERT reduce production match_cases -> pattern match_action
-- On AND reduce production match_cases -> pattern match_action
-- On AMPERSAND reduce production match_cases -> pattern match_action
-- On AMPERAMPER reduce production match_cases -> pattern match_action

State 730:
expr -> FUNCTION opt_bar match_cases . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 731
-- On WITH reduce production expr -> FUNCTION opt_bar match_cases
-- On WHILE reduce production expr -> FUNCTION opt_bar match_cases
-- On UIDENT reduce production expr -> FUNCTION opt_bar match_cases
-- On TYPE reduce production expr -> FUNCTION opt_bar match_cases
-- On TRY reduce production expr -> FUNCTION opt_bar match_cases
-- On TRUE reduce production expr -> FUNCTION opt_bar match_cases
-- On TO reduce production expr -> FUNCTION opt_bar match_cases
-- On THEN reduce production expr -> FUNCTION opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> FUNCTION opt_bar match_cases
-- On STRING reduce production expr -> FUNCTION opt_bar match_cases
-- On STAR reduce production expr -> FUNCTION opt_bar match_cases
-- On SHARP reduce production expr -> FUNCTION opt_bar match_cases
-- On SEMISEMI reduce production expr -> FUNCTION opt_bar match_cases
-- On SEMI reduce production expr -> FUNCTION opt_bar match_cases
-- On PREFIXOP reduce production expr -> FUNCTION opt_bar match_cases
-- On PARSER reduce production expr -> FUNCTION opt_bar match_cases
-- On OR reduce production expr -> FUNCTION opt_bar match_cases
-- On OPEN reduce production expr -> FUNCTION opt_bar match_cases
-- On NEW reduce production expr -> FUNCTION opt_bar match_cases
-- On MODULE reduce production expr -> FUNCTION opt_bar match_cases
-- On MINUSGREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On MATCH reduce production expr -> FUNCTION opt_bar match_cases
-- On LPAREN reduce production expr -> FUNCTION opt_bar match_cases
-- On LOC reduce production expr -> FUNCTION opt_bar match_cases
-- On LIDENT reduce production expr -> FUNCTION opt_bar match_cases
-- On LET reduce production expr -> FUNCTION opt_bar match_cases
-- On LESSGREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On LESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKET reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACELESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACEBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACE reduce production expr -> FUNCTION opt_bar match_cases
-- On LAZY reduce production expr -> FUNCTION opt_bar match_cases
-- On INT reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP4 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP3 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP2 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP1 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP0 reduce production expr -> FUNCTION opt_bar match_cases
-- On IN reduce production expr -> FUNCTION opt_bar match_cases
-- On IF reduce production expr -> FUNCTION opt_bar match_cases
-- On GREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On FUNCTION reduce production expr -> FUNCTION opt_bar match_cases
-- On FUN reduce production expr -> FUNCTION opt_bar match_cases
-- On FOR reduce production expr -> FUNCTION opt_bar match_cases
-- On FLOAT reduce production expr -> FUNCTION opt_bar match_cases
-- On FALSE reduce production expr -> FUNCTION opt_bar match_cases
-- On EXTERNAL reduce production expr -> FUNCTION opt_bar match_cases
-- On EXCEPTION reduce production expr -> FUNCTION opt_bar match_cases
-- On EQUAL reduce production expr -> FUNCTION opt_bar match_cases
-- On EOF reduce production expr -> FUNCTION opt_bar match_cases
-- On END reduce production expr -> FUNCTION opt_bar match_cases
-- On ELSE reduce production expr -> FUNCTION opt_bar match_cases
-- On DOWNTO reduce production expr -> FUNCTION opt_bar match_cases
-- On DO reduce production expr -> FUNCTION opt_bar match_cases
-- On DEF reduce production expr -> FUNCTION opt_bar match_cases
-- On COMMA reduce production expr -> FUNCTION opt_bar match_cases
-- On COLONEQUAL reduce production expr -> FUNCTION opt_bar match_cases
-- On COLONCOLON reduce production expr -> FUNCTION opt_bar match_cases
-- On CLASS reduce production expr -> FUNCTION opt_bar match_cases
-- On CHAR reduce production expr -> FUNCTION opt_bar match_cases
-- On BEGIN reduce production expr -> FUNCTION opt_bar match_cases
-- On BARBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On ASSERT reduce production expr -> FUNCTION opt_bar match_cases
-- On AND reduce production expr -> FUNCTION opt_bar match_cases
-- On AMPERSAND reduce production expr -> FUNCTION opt_bar match_cases
-- On AMPERAMPER reduce production expr -> FUNCTION opt_bar match_cases

State 731:
match_cases -> match_cases BAR . pattern match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 732
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 732:
match_cases -> match_cases BAR pattern . match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
-- On WHEN shift to state 628
-- On MINUSGREATER shift to state 631
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459
-- On match_action shift to state 733

State 733:
match_cases -> match_cases BAR pattern match_action . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production match_cases -> match_cases BAR pattern match_action
-- On WHILE reduce production match_cases -> match_cases BAR pattern match_action
-- On UIDENT reduce production match_cases -> match_cases BAR pattern match_action
-- On TYPE reduce production match_cases -> match_cases BAR pattern match_action
-- On TRY reduce production match_cases -> match_cases BAR pattern match_action
-- On TRUE reduce production match_cases -> match_cases BAR pattern match_action
-- On TO reduce production match_cases -> match_cases BAR pattern match_action
-- On THEN reduce production match_cases -> match_cases BAR pattern match_action
-- On SUBTRACTIVE reduce production match_cases -> match_cases BAR pattern match_action
-- On STRING reduce production match_cases -> match_cases BAR pattern match_action
-- On STAR reduce production match_cases -> match_cases BAR pattern match_action
-- On SHARP reduce production match_cases -> match_cases BAR pattern match_action
-- On SEMISEMI reduce production match_cases -> match_cases BAR pattern match_action
-- On SEMI reduce production match_cases -> match_cases BAR pattern match_action
-- On PREFIXOP reduce production match_cases -> match_cases BAR pattern match_action
-- On PARSER reduce production match_cases -> match_cases BAR pattern match_action
-- On OR reduce production match_cases -> match_cases BAR pattern match_action
-- On OPEN reduce production match_cases -> match_cases BAR pattern match_action
-- On NEW reduce production match_cases -> match_cases BAR pattern match_action
-- On MODULE reduce production match_cases -> match_cases BAR pattern match_action
-- On MINUSGREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On MATCH reduce production match_cases -> match_cases BAR pattern match_action
-- On LPAREN reduce production match_cases -> match_cases BAR pattern match_action
-- On LOC reduce production match_cases -> match_cases BAR pattern match_action
-- On LIDENT reduce production match_cases -> match_cases BAR pattern match_action
-- On LET reduce production match_cases -> match_cases BAR pattern match_action
-- On LESSGREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On LESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKETLESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKETBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKET reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACELESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACEBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACE reduce production match_cases -> match_cases BAR pattern match_action
-- On LAZY reduce production match_cases -> match_cases BAR pattern match_action
-- On INT reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP4 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP3 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP2 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP1 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP0 reduce production match_cases -> match_cases BAR pattern match_action
-- On IN reduce production match_cases -> match_cases BAR pattern match_action
-- On IF reduce production match_cases -> match_cases BAR pattern match_action
-- On GREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On FUNCTION reduce production match_cases -> match_cases BAR pattern match_action
-- On FUN reduce production match_cases -> match_cases BAR pattern match_action
-- On FOR reduce production match_cases -> match_cases BAR pattern match_action
-- On FLOAT reduce production match_cases -> match_cases BAR pattern match_action
-- On FALSE reduce production match_cases -> match_cases BAR pattern match_action
-- On EXTERNAL reduce production match_cases -> match_cases BAR pattern match_action
-- On EXCEPTION reduce production match_cases -> match_cases BAR pattern match_action
-- On EQUAL reduce production match_cases -> match_cases BAR pattern match_action
-- On EOF reduce production match_cases -> match_cases BAR pattern match_action
-- On END reduce production match_cases -> match_cases BAR pattern match_action
-- On ELSE reduce production match_cases -> match_cases BAR pattern match_action
-- On DOWNTO reduce production match_cases -> match_cases BAR pattern match_action
-- On DO reduce production match_cases -> match_cases BAR pattern match_action
-- On DEF reduce production match_cases -> match_cases BAR pattern match_action
-- On COMMA reduce production match_cases -> match_cases BAR pattern match_action
-- On COLONEQUAL reduce production match_cases -> match_cases BAR pattern match_action
-- On COLONCOLON reduce production match_cases -> match_cases BAR pattern match_action
-- On CLASS reduce production match_cases -> match_cases BAR pattern match_action
-- On CHAR reduce production match_cases -> match_cases BAR pattern match_action
-- On BEGIN reduce production match_cases -> match_cases BAR pattern match_action
-- On BARBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On BAR reduce production match_cases -> match_cases BAR pattern match_action
-- On ASSERT reduce production match_cases -> match_cases BAR pattern match_action
-- On AND reduce production match_cases -> match_cases BAR pattern match_action
-- On AMPERSAND reduce production match_cases -> match_cases BAR pattern match_action
-- On AMPERAMPER reduce production match_cases -> match_cases BAR pattern match_action

State 734:
expr -> IF seq_expr . THEN expr ELSE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr . THEN expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On THEN shift to state 735

State 735:
expr -> IF seq_expr THEN . expr ELSE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 736
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 736:
expr -> IF seq_expr THEN expr . ELSE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On ELSE shift to state 737
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> IF seq_expr THEN expr
-- On WHILE reduce production expr -> IF seq_expr THEN expr
-- On UIDENT reduce production expr -> IF seq_expr THEN expr
-- On TYPE reduce production expr -> IF seq_expr THEN expr
-- On TRY reduce production expr -> IF seq_expr THEN expr
-- On TRUE reduce production expr -> IF seq_expr THEN expr
-- On TO reduce production expr -> IF seq_expr THEN expr
-- On THEN reduce production expr -> IF seq_expr THEN expr
-- On STRING reduce production expr -> IF seq_expr THEN expr
-- On SHARP reduce production expr -> IF seq_expr THEN expr
-- On SEMISEMI reduce production expr -> IF seq_expr THEN expr
-- On SEMI reduce production expr -> IF seq_expr THEN expr
-- On PREFIXOP reduce production expr -> IF seq_expr THEN expr
-- On PARSER reduce production expr -> IF seq_expr THEN expr
-- On OPEN reduce production expr -> IF seq_expr THEN expr
-- On NEW reduce production expr -> IF seq_expr THEN expr
-- On MODULE reduce production expr -> IF seq_expr THEN expr
-- On MINUSGREATER reduce production expr -> IF seq_expr THEN expr
-- On MATCH reduce production expr -> IF seq_expr THEN expr
-- On LPAREN reduce production expr -> IF seq_expr THEN expr
-- On LOC reduce production expr -> IF seq_expr THEN expr
-- On LIDENT reduce production expr -> IF seq_expr THEN expr
-- On LET reduce production expr -> IF seq_expr THEN expr
-- On LBRACKETLESS reduce production expr -> IF seq_expr THEN expr
-- On LBRACKETBAR reduce production expr -> IF seq_expr THEN expr
-- On LBRACKET reduce production expr -> IF seq_expr THEN expr
-- On LBRACELESS reduce production expr -> IF seq_expr THEN expr
-- On LBRACEBAR reduce production expr -> IF seq_expr THEN expr
-- On LBRACE reduce production expr -> IF seq_expr THEN expr
-- On LAZY reduce production expr -> IF seq_expr THEN expr
-- On INT reduce production expr -> IF seq_expr THEN expr
-- On IN reduce production expr -> IF seq_expr THEN expr
-- On IF reduce production expr -> IF seq_expr THEN expr
-- On FUNCTION reduce production expr -> IF seq_expr THEN expr
-- On FUN reduce production expr -> IF seq_expr THEN expr
-- On FOR reduce production expr -> IF seq_expr THEN expr
-- On FLOAT reduce production expr -> IF seq_expr THEN expr
-- On FALSE reduce production expr -> IF seq_expr THEN expr
-- On EXTERNAL reduce production expr -> IF seq_expr THEN expr
-- On EXCEPTION reduce production expr -> IF seq_expr THEN expr
-- On EOF reduce production expr -> IF seq_expr THEN expr
-- On END reduce production expr -> IF seq_expr THEN expr
-- On ELSE reduce production expr -> IF seq_expr THEN expr
-- On DOWNTO reduce production expr -> IF seq_expr THEN expr
-- On DO reduce production expr -> IF seq_expr THEN expr
-- On DEF reduce production expr -> IF seq_expr THEN expr
-- On CLASS reduce production expr -> IF seq_expr THEN expr
-- On CHAR reduce production expr -> IF seq_expr THEN expr
-- On BEGIN reduce production expr -> IF seq_expr THEN expr
-- On BAR reduce production expr -> IF seq_expr THEN expr
-- On ASSERT reduce production expr -> IF seq_expr THEN expr
-- On AND reduce production expr -> IF seq_expr THEN expr
** Conflict on ELSE

State 737:
expr -> IF seq_expr THEN expr ELSE . expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 738
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 738:
expr -> IF seq_expr THEN expr ELSE expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688
-- On WITH reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On WHILE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On UIDENT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TYPE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TRY reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TRUE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TO reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On THEN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On STRING reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SHARP reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SEMISEMI reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SEMI reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On PREFIXOP reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On PARSER reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On OPEN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On NEW reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On MODULE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On MINUSGREATER reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On MATCH reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LPAREN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LOC reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LIDENT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKETLESS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKETBAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACELESS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACEBAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LAZY reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On INT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On IN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On IF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FUNCTION reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FUN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FOR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FLOAT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FALSE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EXTERNAL reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EXCEPTION reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EOF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On END reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On ELSE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On DOWNTO reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On DO reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On DEF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On CLASS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On CHAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On BEGIN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On BAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On ASSERT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On AND reduce production expr -> IF seq_expr THEN expr ELSE expr

State 739:
expr -> expr . COLONCOLON expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
process -> IF expr . THEN process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process0 -> IF expr . THEN process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On THEN shift to state 740
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688

State 740:
process -> IF expr THEN . process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process0 -> IF expr THEN . process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 741
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 747
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 741:
process0 -> IF . expr THEN process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 742
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 742:
expr -> expr . COLONCOLON expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
process0 -> IF expr . THEN process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On THEN shift to state 743
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688

State 743:
process0 -> IF expr THEN . process0 ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 741
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 744
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 744:
process0 -> IF expr THEN process0 . ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On ELSE shift to state 745

State 745:
process0 -> IF expr THEN process0 ELSE . process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 741
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 746
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 746:
process0 -> IF expr THEN process0 ELSE process0 . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On UIDENT reduce production process0 -> IF expr THEN process0 ELSE process0
-- On TYPE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On TRY reduce production process0 -> IF expr THEN process0 ELSE process0
-- On TRUE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On SUBTRACTIVE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On STRING reduce production process0 -> IF expr THEN process0 ELSE process0
-- On SHARP reduce production process0 -> IF expr THEN process0 ELSE process0
-- On SEMISEMI reduce production process0 -> IF expr THEN process0 ELSE process0
-- On PREFIXOP reduce production process0 -> IF expr THEN process0 ELSE process0
-- On PARSER reduce production process0 -> IF expr THEN process0 ELSE process0
-- On OPEN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On NEW reduce production process0 -> IF expr THEN process0 ELSE process0
-- On MODULE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On MATCH reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LPAREN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LOC reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LIDENT reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LET reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACKETLESS reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACKETBAR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACKET reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACELESS reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACEBAR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LBRACE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LAZY reduce production process0 -> IF expr THEN process0 ELSE process0
-- On INT reduce production process0 -> IF expr THEN process0 ELSE process0
-- On IN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On IF reduce production process0 -> IF expr THEN process0 ELSE process0
-- On FUNCTION reduce production process0 -> IF expr THEN process0 ELSE process0
-- On FUN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On FOR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On FLOAT reduce production process0 -> IF expr THEN process0 ELSE process0
-- On FALSE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On EXTERNAL reduce production process0 -> IF expr THEN process0 ELSE process0
-- On EXCEPTION reduce production process0 -> IF expr THEN process0 ELSE process0
-- On EOF reduce production process0 -> IF expr THEN process0 ELSE process0
-- On END reduce production process0 -> IF expr THEN process0 ELSE process0
-- On ELSE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On DEF reduce production process0 -> IF expr THEN process0 ELSE process0
-- On CLASS reduce production process0 -> IF expr THEN process0 ELSE process0
-- On CHAR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On BEGIN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On BARRBRACE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On BAR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On ASSERT reduce production process0 -> IF expr THEN process0 ELSE process0
-- On AND reduce production process0 -> IF expr THEN process0 ELSE process0

State 747:
process -> IF expr THEN process0 . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
process0 -> IF expr THEN process0 . ELSE process0 [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On ELSE shift to state 745
-- On WHILE reduce production process -> IF expr THEN process0
-- On UIDENT reduce production process -> IF expr THEN process0
-- On TYPE reduce production process -> IF expr THEN process0
-- On TRY reduce production process -> IF expr THEN process0
-- On TRUE reduce production process -> IF expr THEN process0
-- On SUBTRACTIVE reduce production process -> IF expr THEN process0
-- On STRING reduce production process -> IF expr THEN process0
-- On SHARP reduce production process -> IF expr THEN process0
-- On SEMISEMI reduce production process -> IF expr THEN process0
-- On PREFIXOP reduce production process -> IF expr THEN process0
-- On PARSER reduce production process -> IF expr THEN process0
-- On OPEN reduce production process -> IF expr THEN process0
-- On NEW reduce production process -> IF expr THEN process0
-- On MODULE reduce production process -> IF expr THEN process0
-- On MATCH reduce production process -> IF expr THEN process0
-- On LPAREN reduce production process -> IF expr THEN process0
-- On LOC reduce production process -> IF expr THEN process0
-- On LIDENT reduce production process -> IF expr THEN process0
-- On LET reduce production process -> IF expr THEN process0
-- On LBRACKETLESS reduce production process -> IF expr THEN process0
-- On LBRACKETBAR reduce production process -> IF expr THEN process0
-- On LBRACKET reduce production process -> IF expr THEN process0
-- On LBRACELESS reduce production process -> IF expr THEN process0
-- On LBRACEBAR reduce production process -> IF expr THEN process0
-- On LBRACE reduce production process -> IF expr THEN process0
-- On LAZY reduce production process -> IF expr THEN process0
-- On INT reduce production process -> IF expr THEN process0
-- On IN reduce production process -> IF expr THEN process0
-- On IF reduce production process -> IF expr THEN process0
-- On FUNCTION reduce production process -> IF expr THEN process0
-- On FUN reduce production process -> IF expr THEN process0
-- On FOR reduce production process -> IF expr THEN process0
-- On FLOAT reduce production process -> IF expr THEN process0
-- On FALSE reduce production process -> IF expr THEN process0
-- On EXTERNAL reduce production process -> IF expr THEN process0
-- On EXCEPTION reduce production process -> IF expr THEN process0
-- On EOF reduce production process -> IF expr THEN process0
-- On END reduce production process -> IF expr THEN process0
-- On DEF reduce production process -> IF expr THEN process0
-- On CLASS reduce production process -> IF expr THEN process0
-- On CHAR reduce production process -> IF expr THEN process0
-- On BEGIN reduce production process -> IF expr THEN process0
-- On BARRBRACE reduce production process -> IF expr THEN process0
-- On ASSERT reduce production process -> IF expr THEN process0
-- On AND reduce production process -> IF expr THEN process0

State 748:
process0 -> LBRACEBAR process . BARRBRACE [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On BARRBRACE shift to state 749

State 749:
process0 -> LBRACEBAR process BARRBRACE . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END ELSE DEF CLASS CHAR BEGIN BARRBRACE BAR ASSERT AND ]
-- On WHILE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On UIDENT reduce production process0 -> LBRACEBAR process BARRBRACE
-- On TYPE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On TRY reduce production process0 -> LBRACEBAR process BARRBRACE
-- On TRUE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On SUBTRACTIVE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On STRING reduce production process0 -> LBRACEBAR process BARRBRACE
-- On SHARP reduce production process0 -> LBRACEBAR process BARRBRACE
-- On SEMISEMI reduce production process0 -> LBRACEBAR process BARRBRACE
-- On PREFIXOP reduce production process0 -> LBRACEBAR process BARRBRACE
-- On PARSER reduce production process0 -> LBRACEBAR process BARRBRACE
-- On OPEN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On NEW reduce production process0 -> LBRACEBAR process BARRBRACE
-- On MODULE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On MATCH reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LPAREN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LOC reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LIDENT reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LET reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACKETLESS reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACKETBAR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACKET reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACELESS reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACEBAR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LBRACE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LAZY reduce production process0 -> LBRACEBAR process BARRBRACE
-- On INT reduce production process0 -> LBRACEBAR process BARRBRACE
-- On IN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On IF reduce production process0 -> LBRACEBAR process BARRBRACE
-- On FUNCTION reduce production process0 -> LBRACEBAR process BARRBRACE
-- On FUN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On FOR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On FLOAT reduce production process0 -> LBRACEBAR process BARRBRACE
-- On FALSE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On EXTERNAL reduce production process0 -> LBRACEBAR process BARRBRACE
-- On EXCEPTION reduce production process0 -> LBRACEBAR process BARRBRACE
-- On EOF reduce production process0 -> LBRACEBAR process BARRBRACE
-- On END reduce production process0 -> LBRACEBAR process BARRBRACE
-- On ELSE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On DEF reduce production process0 -> LBRACEBAR process BARRBRACE
-- On CLASS reduce production process0 -> LBRACEBAR process BARRBRACE
-- On CHAR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On BEGIN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On BARRBRACE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On BAR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On ASSERT reduce production process0 -> LBRACEBAR process BARRBRACE
-- On AND reduce production process0 -> LBRACEBAR process BARRBRACE

State 750:
expr -> LBRACEBAR process . BARRBRACE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BARRBRACE shift to state 751

State 751:
expr -> LBRACEBAR process BARRBRACE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> LBRACEBAR process BARRBRACE
-- On WHILE reduce production expr -> LBRACEBAR process BARRBRACE
-- On UIDENT reduce production expr -> LBRACEBAR process BARRBRACE
-- On TYPE reduce production expr -> LBRACEBAR process BARRBRACE
-- On TRY reduce production expr -> LBRACEBAR process BARRBRACE
-- On TRUE reduce production expr -> LBRACEBAR process BARRBRACE
-- On TO reduce production expr -> LBRACEBAR process BARRBRACE
-- On THEN reduce production expr -> LBRACEBAR process BARRBRACE
-- On SUBTRACTIVE reduce production expr -> LBRACEBAR process BARRBRACE
-- On STRING reduce production expr -> LBRACEBAR process BARRBRACE
-- On STAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On SHARP reduce production expr -> LBRACEBAR process BARRBRACE
-- On SEMISEMI reduce production expr -> LBRACEBAR process BARRBRACE
-- On SEMI reduce production expr -> LBRACEBAR process BARRBRACE
-- On PREFIXOP reduce production expr -> LBRACEBAR process BARRBRACE
-- On PARSER reduce production expr -> LBRACEBAR process BARRBRACE
-- On OR reduce production expr -> LBRACEBAR process BARRBRACE
-- On OPEN reduce production expr -> LBRACEBAR process BARRBRACE
-- On NEW reduce production expr -> LBRACEBAR process BARRBRACE
-- On MODULE reduce production expr -> LBRACEBAR process BARRBRACE
-- On MINUSGREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On MATCH reduce production expr -> LBRACEBAR process BARRBRACE
-- On LPAREN reduce production expr -> LBRACEBAR process BARRBRACE
-- On LOC reduce production expr -> LBRACEBAR process BARRBRACE
-- On LIDENT reduce production expr -> LBRACEBAR process BARRBRACE
-- On LET reduce production expr -> LBRACEBAR process BARRBRACE
-- On LESSGREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On LESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKETLESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKETBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKET reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACELESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACEBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACE reduce production expr -> LBRACEBAR process BARRBRACE
-- On LAZY reduce production expr -> LBRACEBAR process BARRBRACE
-- On INT reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP4 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP3 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP2 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP1 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP0 reduce production expr -> LBRACEBAR process BARRBRACE
-- On IN reduce production expr -> LBRACEBAR process BARRBRACE
-- On IF reduce production expr -> LBRACEBAR process BARRBRACE
-- On GREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On FUNCTION reduce production expr -> LBRACEBAR process BARRBRACE
-- On FUN reduce production expr -> LBRACEBAR process BARRBRACE
-- On FOR reduce production expr -> LBRACEBAR process BARRBRACE
-- On FLOAT reduce production expr -> LBRACEBAR process BARRBRACE
-- On FALSE reduce production expr -> LBRACEBAR process BARRBRACE
-- On EXTERNAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On EXCEPTION reduce production expr -> LBRACEBAR process BARRBRACE
-- On EQUAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On EOF reduce production expr -> LBRACEBAR process BARRBRACE
-- On END reduce production expr -> LBRACEBAR process BARRBRACE
-- On ELSE reduce production expr -> LBRACEBAR process BARRBRACE
-- On DOWNTO reduce production expr -> LBRACEBAR process BARRBRACE
-- On DO reduce production expr -> LBRACEBAR process BARRBRACE
-- On DEF reduce production expr -> LBRACEBAR process BARRBRACE
-- On COMMA reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLONEQUAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLONCOLON reduce production expr -> LBRACEBAR process BARRBRACE
-- On CLASS reduce production expr -> LBRACEBAR process BARRBRACE
-- On CHAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On BEGIN reduce production expr -> LBRACEBAR process BARRBRACE
-- On BARBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On BAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On ASSERT reduce production expr -> LBRACEBAR process BARRBRACE
-- On AND reduce production expr -> LBRACEBAR process BARRBRACE
-- On AMPERSAND reduce production expr -> LBRACEBAR process BARRBRACE
-- On AMPERAMPER reduce production expr -> LBRACEBAR process BARRBRACE

State 752:
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr . direction_flag seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On TO shift to state 712
-- On DOWNTO shift to state 713
-- On direction_flag shift to state 753

State 753:
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag . seq_expr DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 754
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 754:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr . DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On DO shift to state 755

State 755:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 756
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 756:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 757
-- On DONE shift to state 758

State 757:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On WITH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On WHILE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On VIRTUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On VAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On UIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TYPE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TRY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On TRUE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SUBTRACTIVE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On STRING reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On STAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SHARP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SEMISEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On SEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On RPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On RBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On RBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On QUESTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On PREFIXOP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On PARSER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On OR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On OPEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On NEW reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On MODULE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On METHOD reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On MATCH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LOC reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LESSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKETLESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKETBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACELESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACEBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On LAZY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INHERIT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP4 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP3 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP2 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP1 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On INFIXOP0 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On IN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On IF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On GREATERRBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On GREATERRBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On GREATERGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On GREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FUNCTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FUN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FOR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FLOAT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On FALSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EXTERNAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EXCEPTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On EOF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On END reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On ELSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On DONE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On DEF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COMMA reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLONGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLONEQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLONCOLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On COLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On CLASS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On CHAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BEGIN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BARRBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BARBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On BAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On ASSERT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AMPERSAND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error
-- On AMPERAMPER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr error

State 758:
expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On WITH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On WHILE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On VIRTUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On VAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On UIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TYPE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TRY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On TRUE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SUBTRACTIVE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On STRING reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On STAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SHARP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SEMISEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On SEMI reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On RPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On RBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On RBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On QUESTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On PREFIXOP reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On PARSER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On OR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On OPEN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On NEW reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On MODULE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On METHOD reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On MATCH reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LPAREN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LOC reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LIDENT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LESSGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKETLESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKETBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACELESS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACEBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On LAZY reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INHERIT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP4 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP3 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP2 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP1 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On INFIXOP0 reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On IN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On IF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On GREATERRBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On GREATERRBRACE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On GREATERGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On GREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FUNCTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FUN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FOR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FLOAT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On FALSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EXTERNAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EXCEPTION reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On EOF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On END reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On ELSE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On DONE reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On DEF reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COMMA reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLONGREATER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLONEQUAL reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLONCOLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On COLON reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On CLASS reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On CHAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BEGIN reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BARRBRACKET reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BARBAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On BAR reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On ASSERT reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AMPERSAND reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE
-- On AMPERAMPER reduce production expr -> FOR val_ident EQUAL seq_expr direction_flag seq_expr DO seq_expr DONE

State 759:
match_action -> MINUSGREATER seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production match_action -> MINUSGREATER seq_expr
-- On WITH reduce production match_action -> MINUSGREATER seq_expr
-- On WHILE reduce production match_action -> MINUSGREATER seq_expr
-- On VIRTUAL reduce production match_action -> MINUSGREATER seq_expr
-- On VAL reduce production match_action -> MINUSGREATER seq_expr
-- On UIDENT reduce production match_action -> MINUSGREATER seq_expr
-- On TYPE reduce production match_action -> MINUSGREATER seq_expr
-- On TRY reduce production match_action -> MINUSGREATER seq_expr
-- On TRUE reduce production match_action -> MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production match_action -> MINUSGREATER seq_expr
-- On STRING reduce production match_action -> MINUSGREATER seq_expr
-- On STAR reduce production match_action -> MINUSGREATER seq_expr
-- On SHARP reduce production match_action -> MINUSGREATER seq_expr
-- On SEMISEMI reduce production match_action -> MINUSGREATER seq_expr
-- On SEMI reduce production match_action -> MINUSGREATER seq_expr
-- On RPAREN reduce production match_action -> MINUSGREATER seq_expr
-- On RBRACKET reduce production match_action -> MINUSGREATER seq_expr
-- On RBRACE reduce production match_action -> MINUSGREATER seq_expr
-- On QUESTION reduce production match_action -> MINUSGREATER seq_expr
-- On PREFIXOP reduce production match_action -> MINUSGREATER seq_expr
-- On PARSER reduce production match_action -> MINUSGREATER seq_expr
-- On OR reduce production match_action -> MINUSGREATER seq_expr
-- On OPEN reduce production match_action -> MINUSGREATER seq_expr
-- On NEW reduce production match_action -> MINUSGREATER seq_expr
-- On MODULE reduce production match_action -> MINUSGREATER seq_expr
-- On METHOD reduce production match_action -> MINUSGREATER seq_expr
-- On MATCH reduce production match_action -> MINUSGREATER seq_expr
-- On LPAREN reduce production match_action -> MINUSGREATER seq_expr
-- On LOC reduce production match_action -> MINUSGREATER seq_expr
-- On LIDENT reduce production match_action -> MINUSGREATER seq_expr
-- On LET reduce production match_action -> MINUSGREATER seq_expr
-- On LESSGREATER reduce production match_action -> MINUSGREATER seq_expr
-- On LESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACKET reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACELESS reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACEBAR reduce production match_action -> MINUSGREATER seq_expr
-- On LBRACE reduce production match_action -> MINUSGREATER seq_expr
-- On LAZY reduce production match_action -> MINUSGREATER seq_expr
-- On INT reduce production match_action -> MINUSGREATER seq_expr
-- On INHERIT reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP4 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP3 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP2 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP1 reduce production match_action -> MINUSGREATER seq_expr
-- On INFIXOP0 reduce production match_action -> MINUSGREATER seq_expr
-- On IN reduce production match_action -> MINUSGREATER seq_expr
-- On IF reduce production match_action -> MINUSGREATER seq_expr
-- On GREATERRBRACKET reduce production match_action -> MINUSGREATER seq_expr
-- On GREATERRBRACE reduce production match_action -> MINUSGREATER seq_expr
-- On GREATERGREATER reduce production match_action -> MINUSGREATER seq_expr
-- On GREATER reduce production match_action -> MINUSGREATER seq_expr
-- On FUNCTION reduce production match_action -> MINUSGREATER seq_expr
-- On FUN reduce production match_action -> MINUSGREATER seq_expr
-- On FOR reduce production match_action -> MINUSGREATER seq_expr
-- On FLOAT reduce production match_action -> MINUSGREATER seq_expr
-- On FALSE reduce production match_action -> MINUSGREATER seq_expr
-- On EXTERNAL reduce production match_action -> MINUSGREATER seq_expr
-- On EXCEPTION reduce production match_action -> MINUSGREATER seq_expr
-- On EQUAL reduce production match_action -> MINUSGREATER seq_expr
-- On EOF reduce production match_action -> MINUSGREATER seq_expr
-- On END reduce production match_action -> MINUSGREATER seq_expr
-- On ELSE reduce production match_action -> MINUSGREATER seq_expr
-- On DONE reduce production match_action -> MINUSGREATER seq_expr
-- On DEF reduce production match_action -> MINUSGREATER seq_expr
-- On COMMA reduce production match_action -> MINUSGREATER seq_expr
-- On COLONGREATER reduce production match_action -> MINUSGREATER seq_expr
-- On COLONEQUAL reduce production match_action -> MINUSGREATER seq_expr
-- On COLONCOLON reduce production match_action -> MINUSGREATER seq_expr
-- On COLON reduce production match_action -> MINUSGREATER seq_expr
-- On CLASS reduce production match_action -> MINUSGREATER seq_expr
-- On CHAR reduce production match_action -> MINUSGREATER seq_expr
-- On BEGIN reduce production match_action -> MINUSGREATER seq_expr
-- On BARRBRACKET reduce production match_action -> MINUSGREATER seq_expr
-- On BARBAR reduce production match_action -> MINUSGREATER seq_expr
-- On BAR reduce production match_action -> MINUSGREATER seq_expr
-- On ASSERT reduce production match_action -> MINUSGREATER seq_expr
-- On AND reduce production match_action -> MINUSGREATER seq_expr
-- On AMPERSAND reduce production match_action -> MINUSGREATER seq_expr
-- On AMPERAMPER reduce production match_action -> MINUSGREATER seq_expr

State 760:
fun_def -> simple_pattern . fun_def [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHEN shift to state 422
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On MINUSGREATER shift to state 433
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 760
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On match_action shift to state 761
-- On fun_def shift to state 762
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 761:
fun_def -> match_action . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production fun_def -> match_action
-- On WITH reduce production fun_def -> match_action
-- On WHILE reduce production fun_def -> match_action
-- On VIRTUAL reduce production fun_def -> match_action
-- On VAL reduce production fun_def -> match_action
-- On UIDENT reduce production fun_def -> match_action
-- On TYPE reduce production fun_def -> match_action
-- On TRY reduce production fun_def -> match_action
-- On TRUE reduce production fun_def -> match_action
-- On SUBTRACTIVE reduce production fun_def -> match_action
-- On STRING reduce production fun_def -> match_action
-- On STAR reduce production fun_def -> match_action
-- On SHARP reduce production fun_def -> match_action
-- On SEMISEMI reduce production fun_def -> match_action
-- On SEMI reduce production fun_def -> match_action
-- On RPAREN reduce production fun_def -> match_action
-- On RBRACKET reduce production fun_def -> match_action
-- On RBRACE reduce production fun_def -> match_action
-- On QUESTION reduce production fun_def -> match_action
-- On PREFIXOP reduce production fun_def -> match_action
-- On PARSER reduce production fun_def -> match_action
-- On OR reduce production fun_def -> match_action
-- On OPEN reduce production fun_def -> match_action
-- On NEW reduce production fun_def -> match_action
-- On MODULE reduce production fun_def -> match_action
-- On METHOD reduce production fun_def -> match_action
-- On MATCH reduce production fun_def -> match_action
-- On LPAREN reduce production fun_def -> match_action
-- On LOC reduce production fun_def -> match_action
-- On LIDENT reduce production fun_def -> match_action
-- On LET reduce production fun_def -> match_action
-- On LESSGREATER reduce production fun_def -> match_action
-- On LESS reduce production fun_def -> match_action
-- On LBRACKETLESS reduce production fun_def -> match_action
-- On LBRACKETBAR reduce production fun_def -> match_action
-- On LBRACKET reduce production fun_def -> match_action
-- On LBRACELESS reduce production fun_def -> match_action
-- On LBRACEBAR reduce production fun_def -> match_action
-- On LBRACE reduce production fun_def -> match_action
-- On LAZY reduce production fun_def -> match_action
-- On INT reduce production fun_def -> match_action
-- On INHERIT reduce production fun_def -> match_action
-- On INFIXOP4 reduce production fun_def -> match_action
-- On INFIXOP3 reduce production fun_def -> match_action
-- On INFIXOP2 reduce production fun_def -> match_action
-- On INFIXOP1 reduce production fun_def -> match_action
-- On INFIXOP0 reduce production fun_def -> match_action
-- On IN reduce production fun_def -> match_action
-- On IF reduce production fun_def -> match_action
-- On GREATERRBRACKET reduce production fun_def -> match_action
-- On GREATERRBRACE reduce production fun_def -> match_action
-- On GREATERGREATER reduce production fun_def -> match_action
-- On GREATER reduce production fun_def -> match_action
-- On FUNCTION reduce production fun_def -> match_action
-- On FUN reduce production fun_def -> match_action
-- On FOR reduce production fun_def -> match_action
-- On FLOAT reduce production fun_def -> match_action
-- On FALSE reduce production fun_def -> match_action
-- On EXTERNAL reduce production fun_def -> match_action
-- On EXCEPTION reduce production fun_def -> match_action
-- On EQUAL reduce production fun_def -> match_action
-- On EOF reduce production fun_def -> match_action
-- On END reduce production fun_def -> match_action
-- On ELSE reduce production fun_def -> match_action
-- On DONE reduce production fun_def -> match_action
-- On DEF reduce production fun_def -> match_action
-- On COMMA reduce production fun_def -> match_action
-- On COLONGREATER reduce production fun_def -> match_action
-- On COLONEQUAL reduce production fun_def -> match_action
-- On COLONCOLON reduce production fun_def -> match_action
-- On COLON reduce production fun_def -> match_action
-- On CLASS reduce production fun_def -> match_action
-- On CHAR reduce production fun_def -> match_action
-- On BEGIN reduce production fun_def -> match_action
-- On BARRBRACKET reduce production fun_def -> match_action
-- On BARBAR reduce production fun_def -> match_action
-- On BAR reduce production fun_def -> match_action
-- On ASSERT reduce production fun_def -> match_action
-- On AND reduce production fun_def -> match_action
-- On AMPERSAND reduce production fun_def -> match_action
-- On AMPERAMPER reduce production fun_def -> match_action

State 762:
fun_def -> simple_pattern fun_def . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production fun_def -> simple_pattern fun_def
-- On WITH reduce production fun_def -> simple_pattern fun_def
-- On WHILE reduce production fun_def -> simple_pattern fun_def
-- On VIRTUAL reduce production fun_def -> simple_pattern fun_def
-- On VAL reduce production fun_def -> simple_pattern fun_def
-- On UIDENT reduce production fun_def -> simple_pattern fun_def
-- On TYPE reduce production fun_def -> simple_pattern fun_def
-- On TRY reduce production fun_def -> simple_pattern fun_def
-- On TRUE reduce production fun_def -> simple_pattern fun_def
-- On SUBTRACTIVE reduce production fun_def -> simple_pattern fun_def
-- On STRING reduce production fun_def -> simple_pattern fun_def
-- On STAR reduce production fun_def -> simple_pattern fun_def
-- On SHARP reduce production fun_def -> simple_pattern fun_def
-- On SEMISEMI reduce production fun_def -> simple_pattern fun_def
-- On SEMI reduce production fun_def -> simple_pattern fun_def
-- On RPAREN reduce production fun_def -> simple_pattern fun_def
-- On RBRACKET reduce production fun_def -> simple_pattern fun_def
-- On RBRACE reduce production fun_def -> simple_pattern fun_def
-- On QUESTION reduce production fun_def -> simple_pattern fun_def
-- On PREFIXOP reduce production fun_def -> simple_pattern fun_def
-- On PARSER reduce production fun_def -> simple_pattern fun_def
-- On OR reduce production fun_def -> simple_pattern fun_def
-- On OPEN reduce production fun_def -> simple_pattern fun_def
-- On NEW reduce production fun_def -> simple_pattern fun_def
-- On MODULE reduce production fun_def -> simple_pattern fun_def
-- On METHOD reduce production fun_def -> simple_pattern fun_def
-- On MATCH reduce production fun_def -> simple_pattern fun_def
-- On LPAREN reduce production fun_def -> simple_pattern fun_def
-- On LOC reduce production fun_def -> simple_pattern fun_def
-- On LIDENT reduce production fun_def -> simple_pattern fun_def
-- On LET reduce production fun_def -> simple_pattern fun_def
-- On LESSGREATER reduce production fun_def -> simple_pattern fun_def
-- On LESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACKETLESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACKETBAR reduce production fun_def -> simple_pattern fun_def
-- On LBRACKET reduce production fun_def -> simple_pattern fun_def
-- On LBRACELESS reduce production fun_def -> simple_pattern fun_def
-- On LBRACEBAR reduce production fun_def -> simple_pattern fun_def
-- On LBRACE reduce production fun_def -> simple_pattern fun_def
-- On LAZY reduce production fun_def -> simple_pattern fun_def
-- On INT reduce production fun_def -> simple_pattern fun_def
-- On INHERIT reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP4 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP3 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP2 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP1 reduce production fun_def -> simple_pattern fun_def
-- On INFIXOP0 reduce production fun_def -> simple_pattern fun_def
-- On IN reduce production fun_def -> simple_pattern fun_def
-- On IF reduce production fun_def -> simple_pattern fun_def
-- On GREATERRBRACKET reduce production fun_def -> simple_pattern fun_def
-- On GREATERRBRACE reduce production fun_def -> simple_pattern fun_def
-- On GREATERGREATER reduce production fun_def -> simple_pattern fun_def
-- On GREATER reduce production fun_def -> simple_pattern fun_def
-- On FUNCTION reduce production fun_def -> simple_pattern fun_def
-- On FUN reduce production fun_def -> simple_pattern fun_def
-- On FOR reduce production fun_def -> simple_pattern fun_def
-- On FLOAT reduce production fun_def -> simple_pattern fun_def
-- On FALSE reduce production fun_def -> simple_pattern fun_def
-- On EXTERNAL reduce production fun_def -> simple_pattern fun_def
-- On EXCEPTION reduce production fun_def -> simple_pattern fun_def
-- On EQUAL reduce production fun_def -> simple_pattern fun_def
-- On EOF reduce production fun_def -> simple_pattern fun_def
-- On END reduce production fun_def -> simple_pattern fun_def
-- On ELSE reduce production fun_def -> simple_pattern fun_def
-- On DONE reduce production fun_def -> simple_pattern fun_def
-- On DEF reduce production fun_def -> simple_pattern fun_def
-- On COMMA reduce production fun_def -> simple_pattern fun_def
-- On COLONGREATER reduce production fun_def -> simple_pattern fun_def
-- On COLONEQUAL reduce production fun_def -> simple_pattern fun_def
-- On COLONCOLON reduce production fun_def -> simple_pattern fun_def
-- On COLON reduce production fun_def -> simple_pattern fun_def
-- On CLASS reduce production fun_def -> simple_pattern fun_def
-- On CHAR reduce production fun_def -> simple_pattern fun_def
-- On BEGIN reduce production fun_def -> simple_pattern fun_def
-- On BARRBRACKET reduce production fun_def -> simple_pattern fun_def
-- On BARBAR reduce production fun_def -> simple_pattern fun_def
-- On BAR reduce production fun_def -> simple_pattern fun_def
-- On ASSERT reduce production fun_def -> simple_pattern fun_def
-- On AND reduce production fun_def -> simple_pattern fun_def
-- On AMPERSAND reduce production fun_def -> simple_pattern fun_def
-- On AMPERAMPER reduce production fun_def -> simple_pattern fun_def

State 763:
expr -> FUN simple_pattern fun_def . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> FUN simple_pattern fun_def
-- On WITH reduce production expr -> FUN simple_pattern fun_def
-- On WHILE reduce production expr -> FUN simple_pattern fun_def
-- On VIRTUAL reduce production expr -> FUN simple_pattern fun_def
-- On VAL reduce production expr -> FUN simple_pattern fun_def
-- On UIDENT reduce production expr -> FUN simple_pattern fun_def
-- On TYPE reduce production expr -> FUN simple_pattern fun_def
-- On TRY reduce production expr -> FUN simple_pattern fun_def
-- On TRUE reduce production expr -> FUN simple_pattern fun_def
-- On SUBTRACTIVE reduce production expr -> FUN simple_pattern fun_def
-- On STRING reduce production expr -> FUN simple_pattern fun_def
-- On STAR reduce production expr -> FUN simple_pattern fun_def
-- On SHARP reduce production expr -> FUN simple_pattern fun_def
-- On SEMISEMI reduce production expr -> FUN simple_pattern fun_def
-- On SEMI reduce production expr -> FUN simple_pattern fun_def
-- On RPAREN reduce production expr -> FUN simple_pattern fun_def
-- On RBRACKET reduce production expr -> FUN simple_pattern fun_def
-- On RBRACE reduce production expr -> FUN simple_pattern fun_def
-- On QUESTION reduce production expr -> FUN simple_pattern fun_def
-- On PREFIXOP reduce production expr -> FUN simple_pattern fun_def
-- On PARSER reduce production expr -> FUN simple_pattern fun_def
-- On OR reduce production expr -> FUN simple_pattern fun_def
-- On OPEN reduce production expr -> FUN simple_pattern fun_def
-- On NEW reduce production expr -> FUN simple_pattern fun_def
-- On MODULE reduce production expr -> FUN simple_pattern fun_def
-- On METHOD reduce production expr -> FUN simple_pattern fun_def
-- On MATCH reduce production expr -> FUN simple_pattern fun_def
-- On LPAREN reduce production expr -> FUN simple_pattern fun_def
-- On LOC reduce production expr -> FUN simple_pattern fun_def
-- On LIDENT reduce production expr -> FUN simple_pattern fun_def
-- On LET reduce production expr -> FUN simple_pattern fun_def
-- On LESSGREATER reduce production expr -> FUN simple_pattern fun_def
-- On LESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKETLESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKETBAR reduce production expr -> FUN simple_pattern fun_def
-- On LBRACKET reduce production expr -> FUN simple_pattern fun_def
-- On LBRACELESS reduce production expr -> FUN simple_pattern fun_def
-- On LBRACEBAR reduce production expr -> FUN simple_pattern fun_def
-- On LBRACE reduce production expr -> FUN simple_pattern fun_def
-- On LAZY reduce production expr -> FUN simple_pattern fun_def
-- On INT reduce production expr -> FUN simple_pattern fun_def
-- On INHERIT reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP4 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP3 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP2 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP1 reduce production expr -> FUN simple_pattern fun_def
-- On INFIXOP0 reduce production expr -> FUN simple_pattern fun_def
-- On IN reduce production expr -> FUN simple_pattern fun_def
-- On IF reduce production expr -> FUN simple_pattern fun_def
-- On GREATERRBRACKET reduce production expr -> FUN simple_pattern fun_def
-- On GREATERRBRACE reduce production expr -> FUN simple_pattern fun_def
-- On GREATERGREATER reduce production expr -> FUN simple_pattern fun_def
-- On GREATER reduce production expr -> FUN simple_pattern fun_def
-- On FUNCTION reduce production expr -> FUN simple_pattern fun_def
-- On FUN reduce production expr -> FUN simple_pattern fun_def
-- On FOR reduce production expr -> FUN simple_pattern fun_def
-- On FLOAT reduce production expr -> FUN simple_pattern fun_def
-- On FALSE reduce production expr -> FUN simple_pattern fun_def
-- On EXTERNAL reduce production expr -> FUN simple_pattern fun_def
-- On EXCEPTION reduce production expr -> FUN simple_pattern fun_def
-- On EQUAL reduce production expr -> FUN simple_pattern fun_def
-- On EOF reduce production expr -> FUN simple_pattern fun_def
-- On END reduce production expr -> FUN simple_pattern fun_def
-- On ELSE reduce production expr -> FUN simple_pattern fun_def
-- On DONE reduce production expr -> FUN simple_pattern fun_def
-- On DEF reduce production expr -> FUN simple_pattern fun_def
-- On COMMA reduce production expr -> FUN simple_pattern fun_def
-- On COLONGREATER reduce production expr -> FUN simple_pattern fun_def
-- On COLONEQUAL reduce production expr -> FUN simple_pattern fun_def
-- On COLONCOLON reduce production expr -> FUN simple_pattern fun_def
-- On COLON reduce production expr -> FUN simple_pattern fun_def
-- On CLASS reduce production expr -> FUN simple_pattern fun_def
-- On CHAR reduce production expr -> FUN simple_pattern fun_def
-- On BEGIN reduce production expr -> FUN simple_pattern fun_def
-- On BARRBRACKET reduce production expr -> FUN simple_pattern fun_def
-- On BARBAR reduce production expr -> FUN simple_pattern fun_def
-- On BAR reduce production expr -> FUN simple_pattern fun_def
-- On ASSERT reduce production expr -> FUN simple_pattern fun_def
-- On AND reduce production expr -> FUN simple_pattern fun_def
-- On AMPERSAND reduce production expr -> FUN simple_pattern fun_def
-- On AMPERAMPER reduce production expr -> FUN simple_pattern fun_def

State 764:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
label_expr_list -> label EQUAL expr . [ error SEMI GREATERRBRACE ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production label_expr_list -> label EQUAL expr
-- On SEMI reduce production label_expr_list -> label EQUAL expr
-- On GREATERRBRACE reduce production label_expr_list -> label EQUAL expr

State 765:
match_action -> WHEN seq_expr . MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 766

State 766:
match_action -> WHEN seq_expr MINUSGREATER . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 767
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 767:
match_action -> WHEN seq_expr MINUSGREATER seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On WITH reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On WHILE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On VIRTUAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On VAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On UIDENT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TYPE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TRY reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On TRUE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On STRING reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On STAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SHARP reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SEMISEMI reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On SEMI reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On RPAREN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On RBRACKET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On RBRACE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On QUESTION reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On PREFIXOP reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On PARSER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On OR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On OPEN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On NEW reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On MODULE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On METHOD reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On MATCH reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LPAREN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LOC reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LIDENT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LESSGREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACKET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACELESS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACEBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LBRACE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On LAZY reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INHERIT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP4 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP3 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP2 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP1 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On INFIXOP0 reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On IN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On IF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On GREATERRBRACKET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On GREATERRBRACE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On GREATERGREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On GREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FUNCTION reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FUN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FOR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FLOAT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On FALSE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EXTERNAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EXCEPTION reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EQUAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On EOF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On END reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On ELSE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On DONE reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On DEF reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COMMA reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLONGREATER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLONEQUAL reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLONCOLON reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On COLON reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On CLASS reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On CHAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BEGIN reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BARRBRACKET reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BARBAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On BAR reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On ASSERT reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AND reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AMPERSAND reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr
-- On AMPERAMPER reduce production match_action -> WHEN seq_expr MINUSGREATER seq_expr

State 768:
match_cases -> pattern match_action . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production match_cases -> pattern match_action
-- On WITH reduce production match_cases -> pattern match_action
-- On WHILE reduce production match_cases -> pattern match_action
-- On VIRTUAL reduce production match_cases -> pattern match_action
-- On VAL reduce production match_cases -> pattern match_action
-- On UIDENT reduce production match_cases -> pattern match_action
-- On TYPE reduce production match_cases -> pattern match_action
-- On TRY reduce production match_cases -> pattern match_action
-- On TRUE reduce production match_cases -> pattern match_action
-- On SUBTRACTIVE reduce production match_cases -> pattern match_action
-- On STRING reduce production match_cases -> pattern match_action
-- On STAR reduce production match_cases -> pattern match_action
-- On SHARP reduce production match_cases -> pattern match_action
-- On SEMISEMI reduce production match_cases -> pattern match_action
-- On SEMI reduce production match_cases -> pattern match_action
-- On RPAREN reduce production match_cases -> pattern match_action
-- On RBRACKET reduce production match_cases -> pattern match_action
-- On RBRACE reduce production match_cases -> pattern match_action
-- On QUESTION reduce production match_cases -> pattern match_action
-- On PREFIXOP reduce production match_cases -> pattern match_action
-- On PARSER reduce production match_cases -> pattern match_action
-- On OR reduce production match_cases -> pattern match_action
-- On OPEN reduce production match_cases -> pattern match_action
-- On NEW reduce production match_cases -> pattern match_action
-- On MODULE reduce production match_cases -> pattern match_action
-- On METHOD reduce production match_cases -> pattern match_action
-- On MATCH reduce production match_cases -> pattern match_action
-- On LPAREN reduce production match_cases -> pattern match_action
-- On LOC reduce production match_cases -> pattern match_action
-- On LIDENT reduce production match_cases -> pattern match_action
-- On LET reduce production match_cases -> pattern match_action
-- On LESSGREATER reduce production match_cases -> pattern match_action
-- On LESS reduce production match_cases -> pattern match_action
-- On LBRACKETLESS reduce production match_cases -> pattern match_action
-- On LBRACKETBAR reduce production match_cases -> pattern match_action
-- On LBRACKET reduce production match_cases -> pattern match_action
-- On LBRACELESS reduce production match_cases -> pattern match_action
-- On LBRACEBAR reduce production match_cases -> pattern match_action
-- On LBRACE reduce production match_cases -> pattern match_action
-- On LAZY reduce production match_cases -> pattern match_action
-- On INT reduce production match_cases -> pattern match_action
-- On INHERIT reduce production match_cases -> pattern match_action
-- On INFIXOP4 reduce production match_cases -> pattern match_action
-- On INFIXOP3 reduce production match_cases -> pattern match_action
-- On INFIXOP2 reduce production match_cases -> pattern match_action
-- On INFIXOP1 reduce production match_cases -> pattern match_action
-- On INFIXOP0 reduce production match_cases -> pattern match_action
-- On IN reduce production match_cases -> pattern match_action
-- On IF reduce production match_cases -> pattern match_action
-- On GREATERRBRACKET reduce production match_cases -> pattern match_action
-- On GREATERRBRACE reduce production match_cases -> pattern match_action
-- On GREATERGREATER reduce production match_cases -> pattern match_action
-- On GREATER reduce production match_cases -> pattern match_action
-- On FUNCTION reduce production match_cases -> pattern match_action
-- On FUN reduce production match_cases -> pattern match_action
-- On FOR reduce production match_cases -> pattern match_action
-- On FLOAT reduce production match_cases -> pattern match_action
-- On FALSE reduce production match_cases -> pattern match_action
-- On EXTERNAL reduce production match_cases -> pattern match_action
-- On EXCEPTION reduce production match_cases -> pattern match_action
-- On EQUAL reduce production match_cases -> pattern match_action
-- On EOF reduce production match_cases -> pattern match_action
-- On END reduce production match_cases -> pattern match_action
-- On ELSE reduce production match_cases -> pattern match_action
-- On DONE reduce production match_cases -> pattern match_action
-- On DEF reduce production match_cases -> pattern match_action
-- On COMMA reduce production match_cases -> pattern match_action
-- On COLONGREATER reduce production match_cases -> pattern match_action
-- On COLONEQUAL reduce production match_cases -> pattern match_action
-- On COLONCOLON reduce production match_cases -> pattern match_action
-- On COLON reduce production match_cases -> pattern match_action
-- On CLASS reduce production match_cases -> pattern match_action
-- On CHAR reduce production match_cases -> pattern match_action
-- On BEGIN reduce production match_cases -> pattern match_action
-- On BARRBRACKET reduce production match_cases -> pattern match_action
-- On BARBAR reduce production match_cases -> pattern match_action
-- On BAR reduce production match_cases -> pattern match_action
-- On ASSERT reduce production match_cases -> pattern match_action
-- On AND reduce production match_cases -> pattern match_action
-- On AMPERSAND reduce production match_cases -> pattern match_action
-- On AMPERAMPER reduce production match_cases -> pattern match_action

State 769:
expr -> FUNCTION opt_bar match_cases . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 770
-- On error reduce production expr -> FUNCTION opt_bar match_cases
-- On WITH reduce production expr -> FUNCTION opt_bar match_cases
-- On WHILE reduce production expr -> FUNCTION opt_bar match_cases
-- On VIRTUAL reduce production expr -> FUNCTION opt_bar match_cases
-- On VAL reduce production expr -> FUNCTION opt_bar match_cases
-- On UIDENT reduce production expr -> FUNCTION opt_bar match_cases
-- On TYPE reduce production expr -> FUNCTION opt_bar match_cases
-- On TRY reduce production expr -> FUNCTION opt_bar match_cases
-- On TRUE reduce production expr -> FUNCTION opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> FUNCTION opt_bar match_cases
-- On STRING reduce production expr -> FUNCTION opt_bar match_cases
-- On STAR reduce production expr -> FUNCTION opt_bar match_cases
-- On SHARP reduce production expr -> FUNCTION opt_bar match_cases
-- On SEMISEMI reduce production expr -> FUNCTION opt_bar match_cases
-- On SEMI reduce production expr -> FUNCTION opt_bar match_cases
-- On RPAREN reduce production expr -> FUNCTION opt_bar match_cases
-- On RBRACKET reduce production expr -> FUNCTION opt_bar match_cases
-- On RBRACE reduce production expr -> FUNCTION opt_bar match_cases
-- On QUESTION reduce production expr -> FUNCTION opt_bar match_cases
-- On PREFIXOP reduce production expr -> FUNCTION opt_bar match_cases
-- On PARSER reduce production expr -> FUNCTION opt_bar match_cases
-- On OR reduce production expr -> FUNCTION opt_bar match_cases
-- On OPEN reduce production expr -> FUNCTION opt_bar match_cases
-- On NEW reduce production expr -> FUNCTION opt_bar match_cases
-- On MODULE reduce production expr -> FUNCTION opt_bar match_cases
-- On METHOD reduce production expr -> FUNCTION opt_bar match_cases
-- On MATCH reduce production expr -> FUNCTION opt_bar match_cases
-- On LPAREN reduce production expr -> FUNCTION opt_bar match_cases
-- On LOC reduce production expr -> FUNCTION opt_bar match_cases
-- On LIDENT reduce production expr -> FUNCTION opt_bar match_cases
-- On LET reduce production expr -> FUNCTION opt_bar match_cases
-- On LESSGREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On LESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACKET reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACELESS reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACEBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On LBRACE reduce production expr -> FUNCTION opt_bar match_cases
-- On LAZY reduce production expr -> FUNCTION opt_bar match_cases
-- On INT reduce production expr -> FUNCTION opt_bar match_cases
-- On INHERIT reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP4 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP3 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP2 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP1 reduce production expr -> FUNCTION opt_bar match_cases
-- On INFIXOP0 reduce production expr -> FUNCTION opt_bar match_cases
-- On IN reduce production expr -> FUNCTION opt_bar match_cases
-- On IF reduce production expr -> FUNCTION opt_bar match_cases
-- On GREATERRBRACKET reduce production expr -> FUNCTION opt_bar match_cases
-- On GREATERRBRACE reduce production expr -> FUNCTION opt_bar match_cases
-- On GREATERGREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On GREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On FUNCTION reduce production expr -> FUNCTION opt_bar match_cases
-- On FUN reduce production expr -> FUNCTION opt_bar match_cases
-- On FOR reduce production expr -> FUNCTION opt_bar match_cases
-- On FLOAT reduce production expr -> FUNCTION opt_bar match_cases
-- On FALSE reduce production expr -> FUNCTION opt_bar match_cases
-- On EXTERNAL reduce production expr -> FUNCTION opt_bar match_cases
-- On EXCEPTION reduce production expr -> FUNCTION opt_bar match_cases
-- On EQUAL reduce production expr -> FUNCTION opt_bar match_cases
-- On EOF reduce production expr -> FUNCTION opt_bar match_cases
-- On END reduce production expr -> FUNCTION opt_bar match_cases
-- On ELSE reduce production expr -> FUNCTION opt_bar match_cases
-- On DONE reduce production expr -> FUNCTION opt_bar match_cases
-- On DEF reduce production expr -> FUNCTION opt_bar match_cases
-- On COMMA reduce production expr -> FUNCTION opt_bar match_cases
-- On COLONGREATER reduce production expr -> FUNCTION opt_bar match_cases
-- On COLONEQUAL reduce production expr -> FUNCTION opt_bar match_cases
-- On COLONCOLON reduce production expr -> FUNCTION opt_bar match_cases
-- On COLON reduce production expr -> FUNCTION opt_bar match_cases
-- On CLASS reduce production expr -> FUNCTION opt_bar match_cases
-- On CHAR reduce production expr -> FUNCTION opt_bar match_cases
-- On BEGIN reduce production expr -> FUNCTION opt_bar match_cases
-- On BARRBRACKET reduce production expr -> FUNCTION opt_bar match_cases
-- On BARBAR reduce production expr -> FUNCTION opt_bar match_cases
-- On ASSERT reduce production expr -> FUNCTION opt_bar match_cases
-- On AND reduce production expr -> FUNCTION opt_bar match_cases
-- On AMPERSAND reduce production expr -> FUNCTION opt_bar match_cases
-- On AMPERAMPER reduce production expr -> FUNCTION opt_bar match_cases

State 770:
match_cases -> match_cases BAR . pattern match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 771
-- On mod_longident shift to state 303
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 771:
match_cases -> match_cases BAR pattern . match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
pattern -> pattern . AS val_ident [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ WHEN MINUSGREATER COMMA COLONCOLON BAR AS ]
-- On WHEN shift to state 422
-- On MINUSGREATER shift to state 433
-- On COMMA shift to state 455
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459
-- On match_action shift to state 772

State 772:
match_cases -> match_cases BAR pattern match_action . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production match_cases -> match_cases BAR pattern match_action
-- On WITH reduce production match_cases -> match_cases BAR pattern match_action
-- On WHILE reduce production match_cases -> match_cases BAR pattern match_action
-- On VIRTUAL reduce production match_cases -> match_cases BAR pattern match_action
-- On VAL reduce production match_cases -> match_cases BAR pattern match_action
-- On UIDENT reduce production match_cases -> match_cases BAR pattern match_action
-- On TYPE reduce production match_cases -> match_cases BAR pattern match_action
-- On TRY reduce production match_cases -> match_cases BAR pattern match_action
-- On TRUE reduce production match_cases -> match_cases BAR pattern match_action
-- On SUBTRACTIVE reduce production match_cases -> match_cases BAR pattern match_action
-- On STRING reduce production match_cases -> match_cases BAR pattern match_action
-- On STAR reduce production match_cases -> match_cases BAR pattern match_action
-- On SHARP reduce production match_cases -> match_cases BAR pattern match_action
-- On SEMISEMI reduce production match_cases -> match_cases BAR pattern match_action
-- On SEMI reduce production match_cases -> match_cases BAR pattern match_action
-- On RPAREN reduce production match_cases -> match_cases BAR pattern match_action
-- On RBRACKET reduce production match_cases -> match_cases BAR pattern match_action
-- On RBRACE reduce production match_cases -> match_cases BAR pattern match_action
-- On QUESTION reduce production match_cases -> match_cases BAR pattern match_action
-- On PREFIXOP reduce production match_cases -> match_cases BAR pattern match_action
-- On PARSER reduce production match_cases -> match_cases BAR pattern match_action
-- On OR reduce production match_cases -> match_cases BAR pattern match_action
-- On OPEN reduce production match_cases -> match_cases BAR pattern match_action
-- On NEW reduce production match_cases -> match_cases BAR pattern match_action
-- On MODULE reduce production match_cases -> match_cases BAR pattern match_action
-- On METHOD reduce production match_cases -> match_cases BAR pattern match_action
-- On MATCH reduce production match_cases -> match_cases BAR pattern match_action
-- On LPAREN reduce production match_cases -> match_cases BAR pattern match_action
-- On LOC reduce production match_cases -> match_cases BAR pattern match_action
-- On LIDENT reduce production match_cases -> match_cases BAR pattern match_action
-- On LET reduce production match_cases -> match_cases BAR pattern match_action
-- On LESSGREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On LESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKETLESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKETBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACKET reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACELESS reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACEBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On LBRACE reduce production match_cases -> match_cases BAR pattern match_action
-- On LAZY reduce production match_cases -> match_cases BAR pattern match_action
-- On INT reduce production match_cases -> match_cases BAR pattern match_action
-- On INHERIT reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP4 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP3 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP2 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP1 reduce production match_cases -> match_cases BAR pattern match_action
-- On INFIXOP0 reduce production match_cases -> match_cases BAR pattern match_action
-- On IN reduce production match_cases -> match_cases BAR pattern match_action
-- On IF reduce production match_cases -> match_cases BAR pattern match_action
-- On GREATERRBRACKET reduce production match_cases -> match_cases BAR pattern match_action
-- On GREATERRBRACE reduce production match_cases -> match_cases BAR pattern match_action
-- On GREATERGREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On GREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On FUNCTION reduce production match_cases -> match_cases BAR pattern match_action
-- On FUN reduce production match_cases -> match_cases BAR pattern match_action
-- On FOR reduce production match_cases -> match_cases BAR pattern match_action
-- On FLOAT reduce production match_cases -> match_cases BAR pattern match_action
-- On FALSE reduce production match_cases -> match_cases BAR pattern match_action
-- On EXTERNAL reduce production match_cases -> match_cases BAR pattern match_action
-- On EXCEPTION reduce production match_cases -> match_cases BAR pattern match_action
-- On EQUAL reduce production match_cases -> match_cases BAR pattern match_action
-- On EOF reduce production match_cases -> match_cases BAR pattern match_action
-- On END reduce production match_cases -> match_cases BAR pattern match_action
-- On ELSE reduce production match_cases -> match_cases BAR pattern match_action
-- On DONE reduce production match_cases -> match_cases BAR pattern match_action
-- On DEF reduce production match_cases -> match_cases BAR pattern match_action
-- On COMMA reduce production match_cases -> match_cases BAR pattern match_action
-- On COLONGREATER reduce production match_cases -> match_cases BAR pattern match_action
-- On COLONEQUAL reduce production match_cases -> match_cases BAR pattern match_action
-- On COLONCOLON reduce production match_cases -> match_cases BAR pattern match_action
-- On COLON reduce production match_cases -> match_cases BAR pattern match_action
-- On CLASS reduce production match_cases -> match_cases BAR pattern match_action
-- On CHAR reduce production match_cases -> match_cases BAR pattern match_action
-- On BEGIN reduce production match_cases -> match_cases BAR pattern match_action
-- On BARRBRACKET reduce production match_cases -> match_cases BAR pattern match_action
-- On BARBAR reduce production match_cases -> match_cases BAR pattern match_action
-- On BAR reduce production match_cases -> match_cases BAR pattern match_action
-- On ASSERT reduce production match_cases -> match_cases BAR pattern match_action
-- On AND reduce production match_cases -> match_cases BAR pattern match_action
-- On AMPERSAND reduce production match_cases -> match_cases BAR pattern match_action
-- On AMPERAMPER reduce production match_cases -> match_cases BAR pattern match_action

State 773:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI RBRACKET ]
simple_expr -> LBRACKET expr_semi_list . opt_semi RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 774
-- On opt_semi shift to state 776
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 774:
expr_semi_list -> expr_semi_list SEMI . expr [ error SEMI RBRACKET BARRBRACKET ]
opt_semi -> SEMI . [ error RBRACKET BARRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 775
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production opt_semi -> SEMI
-- On RBRACKET reduce production opt_semi -> SEMI
-- On BARRBRACKET reduce production opt_semi -> SEMI

State 775:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr_semi_list SEMI expr . [ error SEMI RBRACKET BARRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr_semi_list -> expr_semi_list SEMI expr
-- On SEMI reduce production expr_semi_list -> expr_semi_list SEMI expr
-- On RBRACKET reduce production expr_semi_list -> expr_semi_list SEMI expr
-- On BARRBRACKET reduce production expr_semi_list -> expr_semi_list SEMI expr

State 776:
simple_expr -> LBRACKET expr_semi_list opt_semi . RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 777
-- On RBRACKET shift to state 778

State 777:
simple_expr -> LBRACKET expr_semi_list opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On THEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On OR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On MINUSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On IN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On IF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On END reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DOWNTO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error

State 778:
simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On WHILE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TYPE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TRY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TRUE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On THEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On STRING reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On STAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SHARP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On PARSER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On OR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On OPEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On NEW reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On MODULE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On MINUSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On MATCH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LOC reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LAZY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On IN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On IF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On GREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FUN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FOR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FALSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EOF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On END reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On ELSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DOWNTO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DOT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DO reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DEF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COMMA reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On CLASS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On CHAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET

State 779:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI RBRACKET OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARRBRACKET BARBAR AMPERSAND AMPERAMPER ]
expr_semi_list -> expr . [ error SEMI RBRACKET BARRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr_semi_list -> expr
-- On SEMI reduce production expr_semi_list -> expr
-- On RBRACKET reduce production expr_semi_list -> expr
-- On BARRBRACKET reduce production expr_semi_list -> expr

State 780:
expr -> IF seq_expr . THEN expr ELSE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr . THEN expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On THEN shift to state 781

State 781:
expr -> IF seq_expr THEN . expr ELSE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 782
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 782:
expr -> IF seq_expr THEN expr . ELSE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> IF seq_expr THEN expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On ELSE shift to state 783
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> IF seq_expr THEN expr
-- On WITH reduce production expr -> IF seq_expr THEN expr
-- On WHILE reduce production expr -> IF seq_expr THEN expr
-- On VIRTUAL reduce production expr -> IF seq_expr THEN expr
-- On VAL reduce production expr -> IF seq_expr THEN expr
-- On UIDENT reduce production expr -> IF seq_expr THEN expr
-- On TYPE reduce production expr -> IF seq_expr THEN expr
-- On TRY reduce production expr -> IF seq_expr THEN expr
-- On TRUE reduce production expr -> IF seq_expr THEN expr
-- On STRING reduce production expr -> IF seq_expr THEN expr
-- On SHARP reduce production expr -> IF seq_expr THEN expr
-- On SEMISEMI reduce production expr -> IF seq_expr THEN expr
-- On SEMI reduce production expr -> IF seq_expr THEN expr
-- On RPAREN reduce production expr -> IF seq_expr THEN expr
-- On RBRACKET reduce production expr -> IF seq_expr THEN expr
-- On RBRACE reduce production expr -> IF seq_expr THEN expr
-- On QUESTION reduce production expr -> IF seq_expr THEN expr
-- On PREFIXOP reduce production expr -> IF seq_expr THEN expr
-- On PARSER reduce production expr -> IF seq_expr THEN expr
-- On OPEN reduce production expr -> IF seq_expr THEN expr
-- On NEW reduce production expr -> IF seq_expr THEN expr
-- On MODULE reduce production expr -> IF seq_expr THEN expr
-- On METHOD reduce production expr -> IF seq_expr THEN expr
-- On MATCH reduce production expr -> IF seq_expr THEN expr
-- On LPAREN reduce production expr -> IF seq_expr THEN expr
-- On LOC reduce production expr -> IF seq_expr THEN expr
-- On LIDENT reduce production expr -> IF seq_expr THEN expr
-- On LET reduce production expr -> IF seq_expr THEN expr
-- On LBRACKETLESS reduce production expr -> IF seq_expr THEN expr
-- On LBRACKETBAR reduce production expr -> IF seq_expr THEN expr
-- On LBRACKET reduce production expr -> IF seq_expr THEN expr
-- On LBRACELESS reduce production expr -> IF seq_expr THEN expr
-- On LBRACEBAR reduce production expr -> IF seq_expr THEN expr
-- On LBRACE reduce production expr -> IF seq_expr THEN expr
-- On LAZY reduce production expr -> IF seq_expr THEN expr
-- On INT reduce production expr -> IF seq_expr THEN expr
-- On INHERIT reduce production expr -> IF seq_expr THEN expr
-- On IN reduce production expr -> IF seq_expr THEN expr
-- On IF reduce production expr -> IF seq_expr THEN expr
-- On GREATERRBRACKET reduce production expr -> IF seq_expr THEN expr
-- On GREATERRBRACE reduce production expr -> IF seq_expr THEN expr
-- On GREATERGREATER reduce production expr -> IF seq_expr THEN expr
-- On FUNCTION reduce production expr -> IF seq_expr THEN expr
-- On FUN reduce production expr -> IF seq_expr THEN expr
-- On FOR reduce production expr -> IF seq_expr THEN expr
-- On FLOAT reduce production expr -> IF seq_expr THEN expr
-- On FALSE reduce production expr -> IF seq_expr THEN expr
-- On EXTERNAL reduce production expr -> IF seq_expr THEN expr
-- On EXCEPTION reduce production expr -> IF seq_expr THEN expr
-- On EOF reduce production expr -> IF seq_expr THEN expr
-- On END reduce production expr -> IF seq_expr THEN expr
-- On ELSE reduce production expr -> IF seq_expr THEN expr
-- On DONE reduce production expr -> IF seq_expr THEN expr
-- On DEF reduce production expr -> IF seq_expr THEN expr
-- On COLONGREATER reduce production expr -> IF seq_expr THEN expr
-- On COLON reduce production expr -> IF seq_expr THEN expr
-- On CLASS reduce production expr -> IF seq_expr THEN expr
-- On CHAR reduce production expr -> IF seq_expr THEN expr
-- On BEGIN reduce production expr -> IF seq_expr THEN expr
-- On BARRBRACKET reduce production expr -> IF seq_expr THEN expr
-- On BAR reduce production expr -> IF seq_expr THEN expr
-- On ASSERT reduce production expr -> IF seq_expr THEN expr
-- On AND reduce production expr -> IF seq_expr THEN expr
** Conflict on ELSE

State 783:
expr -> IF seq_expr THEN expr ELSE . expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 784
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 784:
expr -> IF seq_expr THEN expr ELSE expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On WITH reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On WHILE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On VIRTUAL reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On VAL reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On UIDENT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TYPE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TRY reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On TRUE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On STRING reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SHARP reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SEMISEMI reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On SEMI reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On RPAREN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On RBRACKET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On RBRACE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On QUESTION reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On PREFIXOP reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On PARSER reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On OPEN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On NEW reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On MODULE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On METHOD reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On MATCH reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LPAREN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LOC reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LIDENT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKETLESS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKETBAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACKET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACELESS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACEBAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LBRACE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On LAZY reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On INT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On INHERIT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On IN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On IF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On GREATERRBRACKET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On GREATERRBRACE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On GREATERGREATER reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FUNCTION reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FUN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FOR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FLOAT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On FALSE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EXTERNAL reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EXCEPTION reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On EOF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On END reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On ELSE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On DONE reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On DEF reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On COLONGREATER reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On COLON reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On CLASS reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On CHAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On BEGIN reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On BARRBRACKET reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On BAR reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On ASSERT reduce production expr -> IF seq_expr THEN expr ELSE expr
-- On AND reduce production expr -> IF seq_expr THEN expr ELSE expr

State 785:
simple_expr -> BEGIN seq_expr . END [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> BEGIN seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 786
-- On END shift to state 787

State 786:
simple_expr -> BEGIN seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> BEGIN seq_expr error
-- On WITH reduce production simple_expr -> BEGIN seq_expr error
-- On WHILE reduce production simple_expr -> BEGIN seq_expr error
-- On VIRTUAL reduce production simple_expr -> BEGIN seq_expr error
-- On VAL reduce production simple_expr -> BEGIN seq_expr error
-- On UIDENT reduce production simple_expr -> BEGIN seq_expr error
-- On TYPE reduce production simple_expr -> BEGIN seq_expr error
-- On TRY reduce production simple_expr -> BEGIN seq_expr error
-- On TRUE reduce production simple_expr -> BEGIN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> BEGIN seq_expr error
-- On STRING reduce production simple_expr -> BEGIN seq_expr error
-- On STAR reduce production simple_expr -> BEGIN seq_expr error
-- On SHARP reduce production simple_expr -> BEGIN seq_expr error
-- On SEMISEMI reduce production simple_expr -> BEGIN seq_expr error
-- On SEMI reduce production simple_expr -> BEGIN seq_expr error
-- On RPAREN reduce production simple_expr -> BEGIN seq_expr error
-- On RBRACKET reduce production simple_expr -> BEGIN seq_expr error
-- On RBRACE reduce production simple_expr -> BEGIN seq_expr error
-- On QUESTION reduce production simple_expr -> BEGIN seq_expr error
-- On PREFIXOP reduce production simple_expr -> BEGIN seq_expr error
-- On PARSER reduce production simple_expr -> BEGIN seq_expr error
-- On OR reduce production simple_expr -> BEGIN seq_expr error
-- On OPEN reduce production simple_expr -> BEGIN seq_expr error
-- On NEW reduce production simple_expr -> BEGIN seq_expr error
-- On MODULE reduce production simple_expr -> BEGIN seq_expr error
-- On METHOD reduce production simple_expr -> BEGIN seq_expr error
-- On MATCH reduce production simple_expr -> BEGIN seq_expr error
-- On LPAREN reduce production simple_expr -> BEGIN seq_expr error
-- On LOC reduce production simple_expr -> BEGIN seq_expr error
-- On LIDENT reduce production simple_expr -> BEGIN seq_expr error
-- On LET reduce production simple_expr -> BEGIN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On LESSLESS reduce production simple_expr -> BEGIN seq_expr error
-- On LESSGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On LESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACKET reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACELESS reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> BEGIN seq_expr error
-- On LBRACE reduce production simple_expr -> BEGIN seq_expr error
-- On LAZY reduce production simple_expr -> BEGIN seq_expr error
-- On INT reduce production simple_expr -> BEGIN seq_expr error
-- On INHERIT reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> BEGIN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> BEGIN seq_expr error
-- On IN reduce production simple_expr -> BEGIN seq_expr error
-- On IF reduce production simple_expr -> BEGIN seq_expr error
-- On GREATERRBRACKET reduce production simple_expr -> BEGIN seq_expr error
-- On GREATERRBRACE reduce production simple_expr -> BEGIN seq_expr error
-- On GREATERGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On GREATER reduce production simple_expr -> BEGIN seq_expr error
-- On FUNCTION reduce production simple_expr -> BEGIN seq_expr error
-- On FUN reduce production simple_expr -> BEGIN seq_expr error
-- On FOR reduce production simple_expr -> BEGIN seq_expr error
-- On FLOAT reduce production simple_expr -> BEGIN seq_expr error
-- On FALSE reduce production simple_expr -> BEGIN seq_expr error
-- On EXTERNAL reduce production simple_expr -> BEGIN seq_expr error
-- On EXCEPTION reduce production simple_expr -> BEGIN seq_expr error
-- On EQUAL reduce production simple_expr -> BEGIN seq_expr error
-- On EOF reduce production simple_expr -> BEGIN seq_expr error
-- On END reduce production simple_expr -> BEGIN seq_expr error
-- On ELSE reduce production simple_expr -> BEGIN seq_expr error
-- On DOT reduce production simple_expr -> BEGIN seq_expr error
-- On DONE reduce production simple_expr -> BEGIN seq_expr error
-- On DEF reduce production simple_expr -> BEGIN seq_expr error
-- On COMMA reduce production simple_expr -> BEGIN seq_expr error
-- On COLONGREATER reduce production simple_expr -> BEGIN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> BEGIN seq_expr error
-- On COLONCOLON reduce production simple_expr -> BEGIN seq_expr error
-- On COLON reduce production simple_expr -> BEGIN seq_expr error
-- On CLASS reduce production simple_expr -> BEGIN seq_expr error
-- On CHAR reduce production simple_expr -> BEGIN seq_expr error
-- On BEGIN reduce production simple_expr -> BEGIN seq_expr error
-- On BARRBRACKET reduce production simple_expr -> BEGIN seq_expr error
-- On BARBAR reduce production simple_expr -> BEGIN seq_expr error
-- On BAR reduce production simple_expr -> BEGIN seq_expr error
-- On ASSERT reduce production simple_expr -> BEGIN seq_expr error
-- On AS reduce production simple_expr -> BEGIN seq_expr error
-- On AND reduce production simple_expr -> BEGIN seq_expr error
-- On AMPERSAND reduce production simple_expr -> BEGIN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> BEGIN seq_expr error

State 787:
simple_expr -> BEGIN seq_expr END . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> BEGIN seq_expr END
-- On WITH reduce production simple_expr -> BEGIN seq_expr END
-- On WHILE reduce production simple_expr -> BEGIN seq_expr END
-- On VIRTUAL reduce production simple_expr -> BEGIN seq_expr END
-- On VAL reduce production simple_expr -> BEGIN seq_expr END
-- On UIDENT reduce production simple_expr -> BEGIN seq_expr END
-- On TYPE reduce production simple_expr -> BEGIN seq_expr END
-- On TRY reduce production simple_expr -> BEGIN seq_expr END
-- On TRUE reduce production simple_expr -> BEGIN seq_expr END
-- On SUBTRACTIVE reduce production simple_expr -> BEGIN seq_expr END
-- On STRING reduce production simple_expr -> BEGIN seq_expr END
-- On STAR reduce production simple_expr -> BEGIN seq_expr END
-- On SHARP reduce production simple_expr -> BEGIN seq_expr END
-- On SEMISEMI reduce production simple_expr -> BEGIN seq_expr END
-- On SEMI reduce production simple_expr -> BEGIN seq_expr END
-- On RPAREN reduce production simple_expr -> BEGIN seq_expr END
-- On RBRACKET reduce production simple_expr -> BEGIN seq_expr END
-- On RBRACE reduce production simple_expr -> BEGIN seq_expr END
-- On QUESTION reduce production simple_expr -> BEGIN seq_expr END
-- On PREFIXOP reduce production simple_expr -> BEGIN seq_expr END
-- On PARSER reduce production simple_expr -> BEGIN seq_expr END
-- On OR reduce production simple_expr -> BEGIN seq_expr END
-- On OPEN reduce production simple_expr -> BEGIN seq_expr END
-- On NEW reduce production simple_expr -> BEGIN seq_expr END
-- On MODULE reduce production simple_expr -> BEGIN seq_expr END
-- On METHOD reduce production simple_expr -> BEGIN seq_expr END
-- On MATCH reduce production simple_expr -> BEGIN seq_expr END
-- On LPAREN reduce production simple_expr -> BEGIN seq_expr END
-- On LOC reduce production simple_expr -> BEGIN seq_expr END
-- On LIDENT reduce production simple_expr -> BEGIN seq_expr END
-- On LET reduce production simple_expr -> BEGIN seq_expr END
-- On LESSLESSGREATERGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On LESSLESS reduce production simple_expr -> BEGIN seq_expr END
-- On LESSGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On LESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKETLESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKETBAR reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACKET reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACELESS reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACEBAR reduce production simple_expr -> BEGIN seq_expr END
-- On LBRACE reduce production simple_expr -> BEGIN seq_expr END
-- On LAZY reduce production simple_expr -> BEGIN seq_expr END
-- On INT reduce production simple_expr -> BEGIN seq_expr END
-- On INHERIT reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP4 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP3 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP2 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP1 reduce production simple_expr -> BEGIN seq_expr END
-- On INFIXOP0 reduce production simple_expr -> BEGIN seq_expr END
-- On IN reduce production simple_expr -> BEGIN seq_expr END
-- On IF reduce production simple_expr -> BEGIN seq_expr END
-- On GREATERRBRACKET reduce production simple_expr -> BEGIN seq_expr END
-- On GREATERRBRACE reduce production simple_expr -> BEGIN seq_expr END
-- On GREATERGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On GREATER reduce production simple_expr -> BEGIN seq_expr END
-- On FUNCTION reduce production simple_expr -> BEGIN seq_expr END
-- On FUN reduce production simple_expr -> BEGIN seq_expr END
-- On FOR reduce production simple_expr -> BEGIN seq_expr END
-- On FLOAT reduce production simple_expr -> BEGIN seq_expr END
-- On FALSE reduce production simple_expr -> BEGIN seq_expr END
-- On EXTERNAL reduce production simple_expr -> BEGIN seq_expr END
-- On EXCEPTION reduce production simple_expr -> BEGIN seq_expr END
-- On EQUAL reduce production simple_expr -> BEGIN seq_expr END
-- On EOF reduce production simple_expr -> BEGIN seq_expr END
-- On END reduce production simple_expr -> BEGIN seq_expr END
-- On ELSE reduce production simple_expr -> BEGIN seq_expr END
-- On DOT reduce production simple_expr -> BEGIN seq_expr END
-- On DONE reduce production simple_expr -> BEGIN seq_expr END
-- On DEF reduce production simple_expr -> BEGIN seq_expr END
-- On COMMA reduce production simple_expr -> BEGIN seq_expr END
-- On COLONGREATER reduce production simple_expr -> BEGIN seq_expr END
-- On COLONEQUAL reduce production simple_expr -> BEGIN seq_expr END
-- On COLONCOLON reduce production simple_expr -> BEGIN seq_expr END
-- On COLON reduce production simple_expr -> BEGIN seq_expr END
-- On CLASS reduce production simple_expr -> BEGIN seq_expr END
-- On CHAR reduce production simple_expr -> BEGIN seq_expr END
-- On BEGIN reduce production simple_expr -> BEGIN seq_expr END
-- On BARRBRACKET reduce production simple_expr -> BEGIN seq_expr END
-- On BARBAR reduce production simple_expr -> BEGIN seq_expr END
-- On BAR reduce production simple_expr -> BEGIN seq_expr END
-- On ASSERT reduce production simple_expr -> BEGIN seq_expr END
-- On AS reduce production simple_expr -> BEGIN seq_expr END
-- On AND reduce production simple_expr -> BEGIN seq_expr END
-- On AMPERSAND reduce production simple_expr -> BEGIN seq_expr END
-- On AMPERAMPER reduce production simple_expr -> BEGIN seq_expr END

State 788:
expr -> LAZY simple_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT label_longident [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SHARP shift to state 476
-- On DOT shift to state 479
-- On error reduce production expr -> LAZY simple_expr
-- On WITH reduce production expr -> LAZY simple_expr
-- On WHILE reduce production expr -> LAZY simple_expr
-- On VIRTUAL reduce production expr -> LAZY simple_expr
-- On VAL reduce production expr -> LAZY simple_expr
-- On UIDENT reduce production expr -> LAZY simple_expr
-- On TYPE reduce production expr -> LAZY simple_expr
-- On TRY reduce production expr -> LAZY simple_expr
-- On TRUE reduce production expr -> LAZY simple_expr
-- On SUBTRACTIVE reduce production expr -> LAZY simple_expr
-- On STRING reduce production expr -> LAZY simple_expr
-- On STAR reduce production expr -> LAZY simple_expr
-- On SEMISEMI reduce production expr -> LAZY simple_expr
-- On SEMI reduce production expr -> LAZY simple_expr
-- On RPAREN reduce production expr -> LAZY simple_expr
-- On RBRACKET reduce production expr -> LAZY simple_expr
-- On RBRACE reduce production expr -> LAZY simple_expr
-- On QUESTION reduce production expr -> LAZY simple_expr
-- On PREFIXOP reduce production expr -> LAZY simple_expr
-- On PARSER reduce production expr -> LAZY simple_expr
-- On OR reduce production expr -> LAZY simple_expr
-- On OPEN reduce production expr -> LAZY simple_expr
-- On NEW reduce production expr -> LAZY simple_expr
-- On MODULE reduce production expr -> LAZY simple_expr
-- On METHOD reduce production expr -> LAZY simple_expr
-- On MATCH reduce production expr -> LAZY simple_expr
-- On LPAREN reduce production expr -> LAZY simple_expr
-- On LOC reduce production expr -> LAZY simple_expr
-- On LIDENT reduce production expr -> LAZY simple_expr
-- On LET reduce production expr -> LAZY simple_expr
-- On LESSGREATER reduce production expr -> LAZY simple_expr
-- On LESS reduce production expr -> LAZY simple_expr
-- On LBRACKETLESS reduce production expr -> LAZY simple_expr
-- On LBRACKETBAR reduce production expr -> LAZY simple_expr
-- On LBRACKET reduce production expr -> LAZY simple_expr
-- On LBRACELESS reduce production expr -> LAZY simple_expr
-- On LBRACEBAR reduce production expr -> LAZY simple_expr
-- On LBRACE reduce production expr -> LAZY simple_expr
-- On LAZY reduce production expr -> LAZY simple_expr
-- On INT reduce production expr -> LAZY simple_expr
-- On INHERIT reduce production expr -> LAZY simple_expr
-- On INFIXOP4 reduce production expr -> LAZY simple_expr
-- On INFIXOP3 reduce production expr -> LAZY simple_expr
-- On INFIXOP2 reduce production expr -> LAZY simple_expr
-- On INFIXOP1 reduce production expr -> LAZY simple_expr
-- On INFIXOP0 reduce production expr -> LAZY simple_expr
-- On IN reduce production expr -> LAZY simple_expr
-- On IF reduce production expr -> LAZY simple_expr
-- On GREATERRBRACKET reduce production expr -> LAZY simple_expr
-- On GREATERRBRACE reduce production expr -> LAZY simple_expr
-- On GREATERGREATER reduce production expr -> LAZY simple_expr
-- On GREATER reduce production expr -> LAZY simple_expr
-- On FUNCTION reduce production expr -> LAZY simple_expr
-- On FUN reduce production expr -> LAZY simple_expr
-- On FOR reduce production expr -> LAZY simple_expr
-- On FLOAT reduce production expr -> LAZY simple_expr
-- On FALSE reduce production expr -> LAZY simple_expr
-- On EXTERNAL reduce production expr -> LAZY simple_expr
-- On EXCEPTION reduce production expr -> LAZY simple_expr
-- On EQUAL reduce production expr -> LAZY simple_expr
-- On EOF reduce production expr -> LAZY simple_expr
-- On END reduce production expr -> LAZY simple_expr
-- On ELSE reduce production expr -> LAZY simple_expr
-- On DONE reduce production expr -> LAZY simple_expr
-- On DEF reduce production expr -> LAZY simple_expr
-- On COMMA reduce production expr -> LAZY simple_expr
-- On COLONGREATER reduce production expr -> LAZY simple_expr
-- On COLONEQUAL reduce production expr -> LAZY simple_expr
-- On COLONCOLON reduce production expr -> LAZY simple_expr
-- On COLON reduce production expr -> LAZY simple_expr
-- On CLASS reduce production expr -> LAZY simple_expr
-- On CHAR reduce production expr -> LAZY simple_expr
-- On BEGIN reduce production expr -> LAZY simple_expr
-- On BARRBRACKET reduce production expr -> LAZY simple_expr
-- On BARBAR reduce production expr -> LAZY simple_expr
-- On BAR reduce production expr -> LAZY simple_expr
-- On ASSERT reduce production expr -> LAZY simple_expr
-- On AND reduce production expr -> LAZY simple_expr
-- On AMPERSAND reduce production expr -> LAZY simple_expr
-- On AMPERAMPER reduce production expr -> LAZY simple_expr

State 789:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI RBRACE OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr . [ error SEMI RBRACE ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr
-- On SEMI reduce production lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr
-- On RBRACE reduce production lbl_expr_list -> lbl_expr_list SEMI label_longident EQUAL expr

State 790:
simple_expr -> LBRACE lbl_expr_list opt_semi . RBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACE lbl_expr_list opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 791
-- On RBRACE shift to state 792

State 791:
simple_expr -> LBRACE lbl_expr_list opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On WITH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On VIRTUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On VAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On RPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On RBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On RBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On QUESTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On OR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On METHOD reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INHERIT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On IN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On IF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On GREATERRBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On GREATERRBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On GREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On END reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DONE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLONGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On COLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BARRBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi error

State 792:
simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On WITH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On WHILE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On VIRTUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On VAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On UIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TYPE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TRY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On TRUE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On STRING reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On STAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SHARP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On SEMI reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On RPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On RBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On RBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On QUESTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On PARSER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On OR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On OPEN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On NEW reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On MODULE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On METHOD reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On MATCH reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LPAREN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LOC reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LIDENT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On LAZY reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INHERIT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On IN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On IF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On GREATERRBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On GREATERRBRACE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On GREATERGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On GREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FUNCTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FUN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FOR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FLOAT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On FALSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On EOF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On END reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On ELSE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DOT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DONE reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On DEF reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COMMA reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLONGREATER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On COLON reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On CLASS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On CHAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BEGIN reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BARRBRACKET reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BARBAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On BAR reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On ASSERT reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AS reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACE lbl_expr_list opt_semi RBRACE

State 793:
simple_expr -> LBRACKETBAR BARRBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TO reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On THEN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On OR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On MINUSGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On IN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On IF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On END reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DOWNTO reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DO reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AND reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR BARRBRACKET

State 794:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI BARRBRACKET ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 774
-- On opt_semi shift to state 795
-- On error reduce production opt_semi -> 
-- On BARRBRACKET reduce production opt_semi -> 

State 795:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 796
-- On BARRBRACKET shift to state 797

State 796:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On THEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On OR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On MINUSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On IN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On IF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On END reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DOWNTO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error

State 797:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On THEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On OR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On MINUSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On IN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On IF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On END reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DOWNTO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DO reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 798:
expr -> LET rec_flag let_bindings IN seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On WHILE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On UIDENT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TYPE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TRY reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TRUE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TO reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On THEN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On STRING reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On STAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SHARP reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SEMI reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On PARSER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On OR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On OPEN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On NEW reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On MODULE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On MINUSGREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On MATCH reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LPAREN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LOC reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LIDENT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LAZY reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On IN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On IF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On GREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FUN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FOR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FLOAT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FALSE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EQUAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EOF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On END reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On ELSE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On DOWNTO reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On DO reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On DEF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COMMA reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On CLASS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On CHAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BEGIN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BARBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On ASSERT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AND reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings IN seq_expr

State 799:
let_bindings -> let_bindings AND . let_binding [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_binding shift to state 800
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 800:
let_bindings -> let_bindings AND let_binding . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production let_bindings -> let_bindings AND let_binding
-- On WHILE reduce production let_bindings -> let_bindings AND let_binding
-- On UIDENT reduce production let_bindings -> let_bindings AND let_binding
-- On TYPE reduce production let_bindings -> let_bindings AND let_binding
-- On TRY reduce production let_bindings -> let_bindings AND let_binding
-- On TRUE reduce production let_bindings -> let_bindings AND let_binding
-- On SUBTRACTIVE reduce production let_bindings -> let_bindings AND let_binding
-- On STRING reduce production let_bindings -> let_bindings AND let_binding
-- On SHARP reduce production let_bindings -> let_bindings AND let_binding
-- On SEMISEMI reduce production let_bindings -> let_bindings AND let_binding
-- On PREFIXOP reduce production let_bindings -> let_bindings AND let_binding
-- On PARSER reduce production let_bindings -> let_bindings AND let_binding
-- On OPEN reduce production let_bindings -> let_bindings AND let_binding
-- On NEW reduce production let_bindings -> let_bindings AND let_binding
-- On MODULE reduce production let_bindings -> let_bindings AND let_binding
-- On MATCH reduce production let_bindings -> let_bindings AND let_binding
-- On LPAREN reduce production let_bindings -> let_bindings AND let_binding
-- On LOC reduce production let_bindings -> let_bindings AND let_binding
-- On LIDENT reduce production let_bindings -> let_bindings AND let_binding
-- On LET reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACKETLESS reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACKETBAR reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACKET reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACELESS reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACEBAR reduce production let_bindings -> let_bindings AND let_binding
-- On LBRACE reduce production let_bindings -> let_bindings AND let_binding
-- On LAZY reduce production let_bindings -> let_bindings AND let_binding
-- On INT reduce production let_bindings -> let_bindings AND let_binding
-- On IN reduce production let_bindings -> let_bindings AND let_binding
-- On IF reduce production let_bindings -> let_bindings AND let_binding
-- On FUNCTION reduce production let_bindings -> let_bindings AND let_binding
-- On FUN reduce production let_bindings -> let_bindings AND let_binding
-- On FOR reduce production let_bindings -> let_bindings AND let_binding
-- On FLOAT reduce production let_bindings -> let_bindings AND let_binding
-- On FALSE reduce production let_bindings -> let_bindings AND let_binding
-- On EXTERNAL reduce production let_bindings -> let_bindings AND let_binding
-- On EXCEPTION reduce production let_bindings -> let_bindings AND let_binding
-- On EOF reduce production let_bindings -> let_bindings AND let_binding
-- On END reduce production let_bindings -> let_bindings AND let_binding
-- On DEF reduce production let_bindings -> let_bindings AND let_binding
-- On CLASS reduce production let_bindings -> let_bindings AND let_binding
-- On CHAR reduce production let_bindings -> let_bindings AND let_binding
-- On BEGIN reduce production let_bindings -> let_bindings AND let_binding
-- On ASSERT reduce production let_bindings -> let_bindings AND let_binding
-- On AND reduce production let_bindings -> let_bindings AND let_binding

State 801:
let_bindings -> let_binding . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production let_bindings -> let_binding
-- On WHILE reduce production let_bindings -> let_binding
-- On UIDENT reduce production let_bindings -> let_binding
-- On TYPE reduce production let_bindings -> let_binding
-- On TRY reduce production let_bindings -> let_binding
-- On TRUE reduce production let_bindings -> let_binding
-- On SUBTRACTIVE reduce production let_bindings -> let_binding
-- On STRING reduce production let_bindings -> let_binding
-- On SHARP reduce production let_bindings -> let_binding
-- On SEMISEMI reduce production let_bindings -> let_binding
-- On PREFIXOP reduce production let_bindings -> let_binding
-- On PARSER reduce production let_bindings -> let_binding
-- On OPEN reduce production let_bindings -> let_binding
-- On NEW reduce production let_bindings -> let_binding
-- On MODULE reduce production let_bindings -> let_binding
-- On MATCH reduce production let_bindings -> let_binding
-- On LPAREN reduce production let_bindings -> let_binding
-- On LOC reduce production let_bindings -> let_binding
-- On LIDENT reduce production let_bindings -> let_binding
-- On LET reduce production let_bindings -> let_binding
-- On LBRACKETLESS reduce production let_bindings -> let_binding
-- On LBRACKETBAR reduce production let_bindings -> let_binding
-- On LBRACKET reduce production let_bindings -> let_binding
-- On LBRACELESS reduce production let_bindings -> let_binding
-- On LBRACEBAR reduce production let_bindings -> let_binding
-- On LBRACE reduce production let_bindings -> let_binding
-- On LAZY reduce production let_bindings -> let_binding
-- On INT reduce production let_bindings -> let_binding
-- On IN reduce production let_bindings -> let_binding
-- On IF reduce production let_bindings -> let_binding
-- On FUNCTION reduce production let_bindings -> let_binding
-- On FUN reduce production let_bindings -> let_binding
-- On FOR reduce production let_bindings -> let_binding
-- On FLOAT reduce production let_bindings -> let_binding
-- On FALSE reduce production let_bindings -> let_binding
-- On EXTERNAL reduce production let_bindings -> let_binding
-- On EXCEPTION reduce production let_bindings -> let_binding
-- On EOF reduce production let_bindings -> let_binding
-- On END reduce production let_bindings -> let_binding
-- On DEF reduce production let_bindings -> let_binding
-- On CLASS reduce production let_bindings -> let_binding
-- On CHAR reduce production let_bindings -> let_binding
-- On BEGIN reduce production let_bindings -> let_binding
-- On ASSERT reduce production let_bindings -> let_binding
-- On AND reduce production let_bindings -> let_binding

State 802:
fun_binding -> EQUAL seq_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production fun_binding -> EQUAL seq_expr
-- On SHARP reduce production fun_binding -> EQUAL seq_expr
-- On SEMISEMI reduce production fun_binding -> EQUAL seq_expr
-- On OPEN reduce production fun_binding -> EQUAL seq_expr
-- On MODULE reduce production fun_binding -> EQUAL seq_expr
-- On LET reduce production fun_binding -> EQUAL seq_expr
-- On IN reduce production fun_binding -> EQUAL seq_expr
-- On EXTERNAL reduce production fun_binding -> EQUAL seq_expr
-- On EXCEPTION reduce production fun_binding -> EQUAL seq_expr
-- On EOF reduce production fun_binding -> EQUAL seq_expr
-- On DEF reduce production fun_binding -> EQUAL seq_expr
-- On CLASS reduce production fun_binding -> EQUAL seq_expr
-- On AND reduce production fun_binding -> EQUAL seq_expr

State 803:
fun_binding -> type_constraint . EQUAL seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On EQUAL shift to state 804

State 804:
fun_binding -> type_constraint EQUAL . seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 805
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 805:
fun_binding -> type_constraint EQUAL seq_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On SHARP reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On SEMISEMI reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On OPEN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On MODULE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LET reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On IN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EXTERNAL reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EXCEPTION reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EOF reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On DEF reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On CLASS reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On AND reduce production fun_binding -> type_constraint EQUAL seq_expr

State 806:
fun_binding -> simple_pattern . fun_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 402
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 803
-- On simple_pattern shift to state 806
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On fun_binding shift to state 807
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 807:
fun_binding -> simple_pattern fun_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production fun_binding -> simple_pattern fun_binding
-- On SHARP reduce production fun_binding -> simple_pattern fun_binding
-- On SEMISEMI reduce production fun_binding -> simple_pattern fun_binding
-- On OPEN reduce production fun_binding -> simple_pattern fun_binding
-- On MODULE reduce production fun_binding -> simple_pattern fun_binding
-- On LET reduce production fun_binding -> simple_pattern fun_binding
-- On IN reduce production fun_binding -> simple_pattern fun_binding
-- On EXTERNAL reduce production fun_binding -> simple_pattern fun_binding
-- On EXCEPTION reduce production fun_binding -> simple_pattern fun_binding
-- On EOF reduce production fun_binding -> simple_pattern fun_binding
-- On DEF reduce production fun_binding -> simple_pattern fun_binding
-- On CLASS reduce production fun_binding -> simple_pattern fun_binding
-- On AND reduce production fun_binding -> simple_pattern fun_binding

State 808:
let_binding -> val_ident fun_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production let_binding -> val_ident fun_binding
-- On SHARP reduce production let_binding -> val_ident fun_binding
-- On SEMISEMI reduce production let_binding -> val_ident fun_binding
-- On OPEN reduce production let_binding -> val_ident fun_binding
-- On MODULE reduce production let_binding -> val_ident fun_binding
-- On LET reduce production let_binding -> val_ident fun_binding
-- On IN reduce production let_binding -> val_ident fun_binding
-- On EXTERNAL reduce production let_binding -> val_ident fun_binding
-- On EXCEPTION reduce production let_binding -> val_ident fun_binding
-- On EOF reduce production let_binding -> val_ident fun_binding
-- On DEF reduce production let_binding -> val_ident fun_binding
-- On CLASS reduce production let_binding -> val_ident fun_binding
-- On AND reduce production let_binding -> val_ident fun_binding

State 809:
let_binding -> pattern . EQUAL seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
let_binding -> pattern . COLONEQUAL seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
pattern -> pattern . AS val_ident [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ EQUAL COMMA COLONEQUAL COLONCOLON BAR AS ]
-- On EQUAL shift to state 810
-- On COMMA shift to state 455
-- On COLONEQUAL shift to state 812
-- On COLONCOLON shift to state 301
-- On BAR shift to state 457
-- On AS shift to state 459

State 810:
let_binding -> pattern EQUAL . seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 811
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 811:
let_binding -> pattern EQUAL seq_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production let_binding -> pattern EQUAL seq_expr
-- On SHARP reduce production let_binding -> pattern EQUAL seq_expr
-- On SEMISEMI reduce production let_binding -> pattern EQUAL seq_expr
-- On OPEN reduce production let_binding -> pattern EQUAL seq_expr
-- On MODULE reduce production let_binding -> pattern EQUAL seq_expr
-- On LET reduce production let_binding -> pattern EQUAL seq_expr
-- On IN reduce production let_binding -> pattern EQUAL seq_expr
-- On EXTERNAL reduce production let_binding -> pattern EQUAL seq_expr
-- On EXCEPTION reduce production let_binding -> pattern EQUAL seq_expr
-- On EOF reduce production let_binding -> pattern EQUAL seq_expr
-- On DEF reduce production let_binding -> pattern EQUAL seq_expr
-- On CLASS reduce production let_binding -> pattern EQUAL seq_expr
-- On AND reduce production let_binding -> pattern EQUAL seq_expr

State 812:
let_binding -> pattern COLONEQUAL . seq_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 813
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 813:
let_binding -> pattern COLONEQUAL seq_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On SHARP reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On SEMISEMI reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On OPEN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On MODULE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LET reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On IN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EXTERNAL reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EXCEPTION reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EOF reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On DEF reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On CLASS reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On AND reduce production let_binding -> pattern COLONEQUAL seq_expr

State 814:
let_bindings -> let_bindings . AND let_binding [ IN AND ]
process -> LET rec_flag let_bindings . IN process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On IN shift to state 815
-- On AND shift to state 817

State 815:
process -> LET rec_flag let_bindings IN . process [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 816
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On WHILE reduce production process -> 
-- On UIDENT reduce production process -> 
-- On TYPE reduce production process -> 
-- On TRY reduce production process -> 
-- On TRUE reduce production process -> 
-- On SUBTRACTIVE reduce production process -> 
-- On STRING reduce production process -> 
-- On SHARP reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On PREFIXOP reduce production process -> 
-- On PARSER reduce production process -> 
-- On OPEN reduce production process -> 
-- On NEW reduce production process -> 
-- On MODULE reduce production process -> 
-- On MATCH reduce production process -> 
-- On LPAREN reduce production process -> 
-- On LOC reduce production process -> 
-- On LIDENT reduce production process -> 
-- On LET reduce production process -> 
-- On LBRACKETLESS reduce production process -> 
-- On LBRACKETBAR reduce production process -> 
-- On LBRACKET reduce production process -> 
-- On LBRACELESS reduce production process -> 
-- On LBRACEBAR reduce production process -> 
-- On LBRACE reduce production process -> 
-- On LAZY reduce production process -> 
-- On INT reduce production process -> 
-- On IN reduce production process -> 
-- On IF reduce production process -> 
-- On FUNCTION reduce production process -> 
-- On FUN reduce production process -> 
-- On FOR reduce production process -> 
-- On FLOAT reduce production process -> 
-- On FALSE reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On EOF reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On CHAR reduce production process -> 
-- On BEGIN reduce production process -> 
-- On BARRBRACE reduce production process -> 
-- On ASSERT reduce production process -> 
-- On AND reduce production process -> 
** Conflict on UIDENT TRUE STRING LPAREN LIDENT LET LBRACKETBAR LBRACKET LBRACEBAR INT IF FLOAT FALSE DEF CHAR BEGIN

State 816:
process -> LET rec_flag let_bindings IN process . [ WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN BARRBRACE ASSERT AND ]
-- On WHILE reduce production process -> LET rec_flag let_bindings IN process
-- On UIDENT reduce production process -> LET rec_flag let_bindings IN process
-- On TYPE reduce production process -> LET rec_flag let_bindings IN process
-- On TRY reduce production process -> LET rec_flag let_bindings IN process
-- On TRUE reduce production process -> LET rec_flag let_bindings IN process
-- On SUBTRACTIVE reduce production process -> LET rec_flag let_bindings IN process
-- On STRING reduce production process -> LET rec_flag let_bindings IN process
-- On SHARP reduce production process -> LET rec_flag let_bindings IN process
-- On SEMISEMI reduce production process -> LET rec_flag let_bindings IN process
-- On PREFIXOP reduce production process -> LET rec_flag let_bindings IN process
-- On PARSER reduce production process -> LET rec_flag let_bindings IN process
-- On OPEN reduce production process -> LET rec_flag let_bindings IN process
-- On NEW reduce production process -> LET rec_flag let_bindings IN process
-- On MODULE reduce production process -> LET rec_flag let_bindings IN process
-- On MATCH reduce production process -> LET rec_flag let_bindings IN process
-- On LPAREN reduce production process -> LET rec_flag let_bindings IN process
-- On LOC reduce production process -> LET rec_flag let_bindings IN process
-- On LIDENT reduce production process -> LET rec_flag let_bindings IN process
-- On LET reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACKETLESS reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACKETBAR reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACKET reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACELESS reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACEBAR reduce production process -> LET rec_flag let_bindings IN process
-- On LBRACE reduce production process -> LET rec_flag let_bindings IN process
-- On LAZY reduce production process -> LET rec_flag let_bindings IN process
-- On INT reduce production process -> LET rec_flag let_bindings IN process
-- On IN reduce production process -> LET rec_flag let_bindings IN process
-- On IF reduce production process -> LET rec_flag let_bindings IN process
-- On FUNCTION reduce production process -> LET rec_flag let_bindings IN process
-- On FUN reduce production process -> LET rec_flag let_bindings IN process
-- On FOR reduce production process -> LET rec_flag let_bindings IN process
-- On FLOAT reduce production process -> LET rec_flag let_bindings IN process
-- On FALSE reduce production process -> LET rec_flag let_bindings IN process
-- On EXTERNAL reduce production process -> LET rec_flag let_bindings IN process
-- On EXCEPTION reduce production process -> LET rec_flag let_bindings IN process
-- On EOF reduce production process -> LET rec_flag let_bindings IN process
-- On END reduce production process -> LET rec_flag let_bindings IN process
-- On DEF reduce production process -> LET rec_flag let_bindings IN process
-- On CLASS reduce production process -> LET rec_flag let_bindings IN process
-- On CHAR reduce production process -> LET rec_flag let_bindings IN process
-- On BEGIN reduce production process -> LET rec_flag let_bindings IN process
-- On BARRBRACE reduce production process -> LET rec_flag let_bindings IN process
-- On ASSERT reduce production process -> LET rec_flag let_bindings IN process
-- On AND reduce production process -> LET rec_flag let_bindings IN process

State 817:
let_bindings -> let_bindings AND . let_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 401
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 809
-- On mod_longident shift to state 303
-- On let_binding shift to state 818
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 818:
let_bindings -> let_bindings AND let_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production let_bindings -> let_bindings AND let_binding
-- On SHARP reduce production let_bindings -> let_bindings AND let_binding
-- On SEMISEMI reduce production let_bindings -> let_bindings AND let_binding
-- On OPEN reduce production let_bindings -> let_bindings AND let_binding
-- On MODULE reduce production let_bindings -> let_bindings AND let_binding
-- On LET reduce production let_bindings -> let_bindings AND let_binding
-- On IN reduce production let_bindings -> let_bindings AND let_binding
-- On EXTERNAL reduce production let_bindings -> let_bindings AND let_binding
-- On EXCEPTION reduce production let_bindings -> let_bindings AND let_binding
-- On EOF reduce production let_bindings -> let_bindings AND let_binding
-- On DEF reduce production let_bindings -> let_bindings AND let_binding
-- On CLASS reduce production let_bindings -> let_bindings AND let_binding
-- On AND reduce production let_bindings -> let_bindings AND let_binding

State 819:
let_bindings -> let_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On TYPE reduce production let_bindings -> let_binding
-- On SHARP reduce production let_bindings -> let_binding
-- On SEMISEMI reduce production let_bindings -> let_binding
-- On OPEN reduce production let_bindings -> let_binding
-- On MODULE reduce production let_bindings -> let_binding
-- On LET reduce production let_bindings -> let_binding
-- On IN reduce production let_bindings -> let_binding
-- On EXTERNAL reduce production let_bindings -> let_binding
-- On EXCEPTION reduce production let_bindings -> let_binding
-- On EOF reduce production let_bindings -> let_binding
-- On DEF reduce production let_bindings -> let_binding
-- On CLASS reduce production let_bindings -> let_binding
-- On AND reduce production let_bindings -> let_binding

State 820:
expr -> LBRACEBAR process . BARRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BARRBRACE shift to state 821

State 821:
expr -> LBRACEBAR process BARRBRACE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> LBRACEBAR process BARRBRACE
-- On WITH reduce production expr -> LBRACEBAR process BARRBRACE
-- On WHILE reduce production expr -> LBRACEBAR process BARRBRACE
-- On VIRTUAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On VAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On UIDENT reduce production expr -> LBRACEBAR process BARRBRACE
-- On TYPE reduce production expr -> LBRACEBAR process BARRBRACE
-- On TRY reduce production expr -> LBRACEBAR process BARRBRACE
-- On TRUE reduce production expr -> LBRACEBAR process BARRBRACE
-- On SUBTRACTIVE reduce production expr -> LBRACEBAR process BARRBRACE
-- On STRING reduce production expr -> LBRACEBAR process BARRBRACE
-- On STAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On SHARP reduce production expr -> LBRACEBAR process BARRBRACE
-- On SEMISEMI reduce production expr -> LBRACEBAR process BARRBRACE
-- On SEMI reduce production expr -> LBRACEBAR process BARRBRACE
-- On RPAREN reduce production expr -> LBRACEBAR process BARRBRACE
-- On RBRACKET reduce production expr -> LBRACEBAR process BARRBRACE
-- On RBRACE reduce production expr -> LBRACEBAR process BARRBRACE
-- On QUESTION reduce production expr -> LBRACEBAR process BARRBRACE
-- On PREFIXOP reduce production expr -> LBRACEBAR process BARRBRACE
-- On PARSER reduce production expr -> LBRACEBAR process BARRBRACE
-- On OR reduce production expr -> LBRACEBAR process BARRBRACE
-- On OPEN reduce production expr -> LBRACEBAR process BARRBRACE
-- On NEW reduce production expr -> LBRACEBAR process BARRBRACE
-- On MODULE reduce production expr -> LBRACEBAR process BARRBRACE
-- On METHOD reduce production expr -> LBRACEBAR process BARRBRACE
-- On MATCH reduce production expr -> LBRACEBAR process BARRBRACE
-- On LPAREN reduce production expr -> LBRACEBAR process BARRBRACE
-- On LOC reduce production expr -> LBRACEBAR process BARRBRACE
-- On LIDENT reduce production expr -> LBRACEBAR process BARRBRACE
-- On LET reduce production expr -> LBRACEBAR process BARRBRACE
-- On LESSGREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On LESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKETLESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKETBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACKET reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACELESS reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACEBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On LBRACE reduce production expr -> LBRACEBAR process BARRBRACE
-- On LAZY reduce production expr -> LBRACEBAR process BARRBRACE
-- On INT reduce production expr -> LBRACEBAR process BARRBRACE
-- On INHERIT reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP4 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP3 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP2 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP1 reduce production expr -> LBRACEBAR process BARRBRACE
-- On INFIXOP0 reduce production expr -> LBRACEBAR process BARRBRACE
-- On IN reduce production expr -> LBRACEBAR process BARRBRACE
-- On IF reduce production expr -> LBRACEBAR process BARRBRACE
-- On GREATERRBRACKET reduce production expr -> LBRACEBAR process BARRBRACE
-- On GREATERRBRACE reduce production expr -> LBRACEBAR process BARRBRACE
-- On GREATERGREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On GREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On FUNCTION reduce production expr -> LBRACEBAR process BARRBRACE
-- On FUN reduce production expr -> LBRACEBAR process BARRBRACE
-- On FOR reduce production expr -> LBRACEBAR process BARRBRACE
-- On FLOAT reduce production expr -> LBRACEBAR process BARRBRACE
-- On FALSE reduce production expr -> LBRACEBAR process BARRBRACE
-- On EXTERNAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On EXCEPTION reduce production expr -> LBRACEBAR process BARRBRACE
-- On EQUAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On EOF reduce production expr -> LBRACEBAR process BARRBRACE
-- On END reduce production expr -> LBRACEBAR process BARRBRACE
-- On ELSE reduce production expr -> LBRACEBAR process BARRBRACE
-- On DONE reduce production expr -> LBRACEBAR process BARRBRACE
-- On DEF reduce production expr -> LBRACEBAR process BARRBRACE
-- On COMMA reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLONGREATER reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLONEQUAL reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLONCOLON reduce production expr -> LBRACEBAR process BARRBRACE
-- On COLON reduce production expr -> LBRACEBAR process BARRBRACE
-- On CLASS reduce production expr -> LBRACEBAR process BARRBRACE
-- On CHAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On BEGIN reduce production expr -> LBRACEBAR process BARRBRACE
-- On BARRBRACKET reduce production expr -> LBRACEBAR process BARRBRACE
-- On BARBAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On BAR reduce production expr -> LBRACEBAR process BARRBRACE
-- On ASSERT reduce production expr -> LBRACEBAR process BARRBRACE
-- On AND reduce production expr -> LBRACEBAR process BARRBRACE
-- On AMPERSAND reduce production expr -> LBRACEBAR process BARRBRACE
-- On AMPERAMPER reduce production expr -> LBRACEBAR process BARRBRACE

State 822:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACE GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
label_expr_list -> label_expr_list SEMI label EQUAL expr . [ error SEMI GREATERRBRACE ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production label_expr_list -> label_expr_list SEMI label EQUAL expr
-- On SEMI reduce production label_expr_list -> label_expr_list SEMI label EQUAL expr
-- On GREATERRBRACE reduce production label_expr_list -> label_expr_list SEMI label EQUAL expr

State 823:
simple_expr -> LBRACELESS label_expr_list opt_semi . GREATERRBRACE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACELESS label_expr_list opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 824
-- On GREATERRBRACE shift to state 825

State 824:
simple_expr -> LBRACELESS label_expr_list opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On WITH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On VIRTUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On VAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On RPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On RBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On RBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On QUESTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On OR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On METHOD reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INHERIT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On IN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On IF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On GREATERRBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On GREATERRBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On GREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On END reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DONE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLONGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On COLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BARRBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi error

State 825:
simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On WITH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On WHILE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On VIRTUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On VAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On UIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TYPE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TRY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On TRUE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SUBTRACTIVE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On STRING reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On STAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SHARP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SEMISEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On SEMI reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On RPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On RBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On RBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On QUESTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On PREFIXOP reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On PARSER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On OR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On OPEN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On NEW reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On MODULE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On METHOD reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On MATCH reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LPAREN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LOC reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LIDENT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESSGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKETLESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKETBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACELESS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACEBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On LAZY reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INHERIT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP4 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP3 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP2 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP1 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On INFIXOP0 reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On IN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On IF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On GREATERRBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On GREATERRBRACE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On GREATERGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On GREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FUNCTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FUN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FOR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FLOAT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On FALSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EXTERNAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EXCEPTION reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On EOF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On END reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On ELSE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DOT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DONE reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On DEF reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COMMA reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLONGREATER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLONEQUAL reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLONCOLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On COLON reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On CLASS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On CHAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BEGIN reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BARRBRACKET reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BARBAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On BAR reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On ASSERT reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AS reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AMPERSAND reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE
-- On AMPERAMPER reduce production simple_expr -> LBRACELESS label_expr_list opt_semi GREATERRBRACE

State 826:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI RBRACKET ]
simple_expr -> LBRACKET expr_semi_list . opt_semi RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 774
-- On opt_semi shift to state 827
-- On error reduce production opt_semi -> 
-- On RBRACKET reduce production opt_semi -> 

State 827:
simple_expr -> LBRACKET expr_semi_list opt_semi . RBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKET expr_semi_list opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 828
-- On RBRACKET shift to state 829

State 828:
simple_expr -> LBRACKET expr_semi_list opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On WITH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On VIRTUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On VAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On RPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On RBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On RBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On QUESTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On OR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On METHOD reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INHERIT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On IN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On IF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On GREATERRBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On GREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On END reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DONE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLONGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On COLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BARRBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi error

State 829:
simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On WITH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On WHILE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On VIRTUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On VAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TYPE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TRY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On TRUE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On STRING reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On STAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SHARP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On SEMI reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On RPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On RBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On RBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On QUESTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On PARSER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On OR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On OPEN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On NEW reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On MODULE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On METHOD reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On MATCH reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LOC reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On LAZY reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INHERIT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On IN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On IF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On GREATERRBRACE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On GREATERGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On GREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FUN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FOR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On FALSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On EOF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On END reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On ELSE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DOT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DONE reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On DEF reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COMMA reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLONGREATER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On COLON reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On CLASS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On CHAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BARRBRACKET reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On BAR reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AS reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKET expr_semi_list opt_semi RBRACKET

State 830:
simple_expr -> LBRACKETBAR BARRBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On WITH reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On VIRTUAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On VAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On RPAREN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On RBRACKET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On RBRACE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On QUESTION reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On OR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On METHOD reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INHERIT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On IN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On IF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On GREATERGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On END reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DONE reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLONGREATER reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On COLON reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BARRBRACKET reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AS reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AND reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR BARRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR BARRBRACKET

State 831:
expr_semi_list -> expr_semi_list . SEMI expr [ error SEMI BARRBRACKET ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi BARRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On SEMI shift to state 774
-- On opt_semi shift to state 832
-- On error reduce production opt_semi -> 
-- On BARRBRACKET reduce production opt_semi -> 

State 832:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . BARRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETBAR expr_semi_list opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 833
-- On BARRBRACKET shift to state 834

State 833:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On WITH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On VIRTUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On VAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TRY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On STRING reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On STAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On RPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On RBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On RBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On QUESTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On OR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On NEW reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On METHOD reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LOC reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INHERIT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On IN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On IF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On GREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FUN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FOR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On EOF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On END reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DOT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DONE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On DEF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLONGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On COLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BARRBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On BAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi error

State 834:
simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On WITH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On VIRTUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On VAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On RPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On RBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On RBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On QUESTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On OR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On METHOD reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INHERIT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On IN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On IF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On GREATERGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On END reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DONE reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLONGREATER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On COLON reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BARRBRACKET reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AS reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETBAR expr_semi_list opt_semi BARRBRACKET

State 835:
simple_expr -> LBRACKETLESS GREATERRBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On WITH reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On VIRTUAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On VAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On RPAREN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On RBRACKET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On RBRACE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On QUESTION reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On OR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On METHOD reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INHERIT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On IN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On IF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On GREATERGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On END reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DONE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLONGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLON reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BARRBRACKET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AND reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET

State 836:
stream_expr -> stream_expr_component . [ error SEMI GREATERRBRACKET ]
-- On error reduce production stream_expr -> stream_expr_component
-- On SEMI reduce production stream_expr -> stream_expr_component
-- On GREATERRBRACKET reduce production stream_expr -> stream_expr_component

State 837:
simple_expr -> LBRACKETLESS stream_expr . opt_semi GREATERRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS stream_expr . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
stream_expr -> stream_expr . SEMI stream_expr_component [ error SEMI GREATERRBRACKET ]
-- On SEMI shift to state 838
-- On opt_semi shift to state 841
-- On error reduce production opt_semi -> 
-- On GREATERRBRACKET reduce production opt_semi -> 

State 838:
opt_semi -> SEMI . [ error GREATERRBRACKET ]
stream_expr -> stream_expr SEMI . stream_expr_component [ error SEMI GREATERRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On QUOTE shift to state 293
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On stream_expr_component shift to state 839
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 840
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production opt_semi -> SEMI
-- On GREATERRBRACKET reduce production opt_semi -> SEMI

State 839:
stream_expr -> stream_expr SEMI stream_expr_component . [ error SEMI GREATERRBRACKET ]
-- On error reduce production stream_expr -> stream_expr SEMI stream_expr_component
-- On SEMI reduce production stream_expr -> stream_expr SEMI stream_expr_component
-- On GREATERRBRACKET reduce production stream_expr -> stream_expr SEMI stream_expr_component

State 840:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
stream_expr_component -> expr . [ error SEMI GREATERRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production stream_expr_component -> expr
-- On SEMI reduce production stream_expr_component -> expr
-- On GREATERRBRACKET reduce production stream_expr_component -> expr

State 841:
simple_expr -> LBRACKETLESS stream_expr opt_semi . GREATERRBRACKET [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS stream_expr opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error shift to state 842
-- On GREATERRBRACKET shift to state 843

State 842:
simple_expr -> LBRACKETLESS stream_expr opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On WITH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On VIRTUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On VAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TRY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On STRING reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On STAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On RPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On RBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On RBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On QUESTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On OR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On NEW reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On METHOD reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LOC reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INHERIT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On IN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On IF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On GREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FUN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FOR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EOF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On END reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DOT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DONE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DEF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLONGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BARRBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error

State 843:
simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On WITH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On VIRTUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On VAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On RPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On RBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On RBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On QUESTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On OR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On METHOD reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INHERIT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On IN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On IF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On GREATERRBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On GREATERRBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On GREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On END reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DONE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLONGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BARRBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET

State 844:
let_binding -> pattern EQUAL seq_expr . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production let_binding -> pattern EQUAL seq_expr
-- On WHILE reduce production let_binding -> pattern EQUAL seq_expr
-- On UIDENT reduce production let_binding -> pattern EQUAL seq_expr
-- On TYPE reduce production let_binding -> pattern EQUAL seq_expr
-- On TRY reduce production let_binding -> pattern EQUAL seq_expr
-- On TRUE reduce production let_binding -> pattern EQUAL seq_expr
-- On SUBTRACTIVE reduce production let_binding -> pattern EQUAL seq_expr
-- On STRING reduce production let_binding -> pattern EQUAL seq_expr
-- On SHARP reduce production let_binding -> pattern EQUAL seq_expr
-- On SEMISEMI reduce production let_binding -> pattern EQUAL seq_expr
-- On PREFIXOP reduce production let_binding -> pattern EQUAL seq_expr
-- On PARSER reduce production let_binding -> pattern EQUAL seq_expr
-- On OPEN reduce production let_binding -> pattern EQUAL seq_expr
-- On NEW reduce production let_binding -> pattern EQUAL seq_expr
-- On MODULE reduce production let_binding -> pattern EQUAL seq_expr
-- On MATCH reduce production let_binding -> pattern EQUAL seq_expr
-- On LPAREN reduce production let_binding -> pattern EQUAL seq_expr
-- On LOC reduce production let_binding -> pattern EQUAL seq_expr
-- On LIDENT reduce production let_binding -> pattern EQUAL seq_expr
-- On LET reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACKETLESS reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACKETBAR reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACKET reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACELESS reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACEBAR reduce production let_binding -> pattern EQUAL seq_expr
-- On LBRACE reduce production let_binding -> pattern EQUAL seq_expr
-- On LAZY reduce production let_binding -> pattern EQUAL seq_expr
-- On INT reduce production let_binding -> pattern EQUAL seq_expr
-- On IN reduce production let_binding -> pattern EQUAL seq_expr
-- On IF reduce production let_binding -> pattern EQUAL seq_expr
-- On FUNCTION reduce production let_binding -> pattern EQUAL seq_expr
-- On FUN reduce production let_binding -> pattern EQUAL seq_expr
-- On FOR reduce production let_binding -> pattern EQUAL seq_expr
-- On FLOAT reduce production let_binding -> pattern EQUAL seq_expr
-- On FALSE reduce production let_binding -> pattern EQUAL seq_expr
-- On EXTERNAL reduce production let_binding -> pattern EQUAL seq_expr
-- On EXCEPTION reduce production let_binding -> pattern EQUAL seq_expr
-- On EOF reduce production let_binding -> pattern EQUAL seq_expr
-- On END reduce production let_binding -> pattern EQUAL seq_expr
-- On DEF reduce production let_binding -> pattern EQUAL seq_expr
-- On CLASS reduce production let_binding -> pattern EQUAL seq_expr
-- On CHAR reduce production let_binding -> pattern EQUAL seq_expr
-- On BEGIN reduce production let_binding -> pattern EQUAL seq_expr
-- On ASSERT reduce production let_binding -> pattern EQUAL seq_expr
-- On AND reduce production let_binding -> pattern EQUAL seq_expr

State 845:
let_binding -> pattern COLONEQUAL . seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 846
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 846:
let_binding -> pattern COLONEQUAL seq_expr . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On WHILE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On UIDENT reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On TYPE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On TRY reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On TRUE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On SUBTRACTIVE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On STRING reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On SHARP reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On SEMISEMI reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On PREFIXOP reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On PARSER reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On OPEN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On NEW reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On MODULE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On MATCH reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LPAREN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LOC reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LIDENT reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LET reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACKETLESS reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACKETBAR reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACKET reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACELESS reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACEBAR reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LBRACE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On LAZY reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On INT reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On IN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On IF reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On FUNCTION reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On FUN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On FOR reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On FLOAT reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On FALSE reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EXTERNAL reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EXCEPTION reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On EOF reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On END reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On DEF reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On CLASS reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On CHAR reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On BEGIN reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On ASSERT reduce production let_binding -> pattern COLONEQUAL seq_expr
-- On AND reduce production let_binding -> pattern COLONEQUAL seq_expr

State 847:
expr -> LET rec_flag let_bindings . IN seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . IN error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error IN AND ]
-- On error shift to state 848
-- On IN shift to state 849
-- On AND shift to state 799

State 848:
expr -> LET rec_flag let_bindings error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> LET rec_flag let_bindings error
-- On WITH reduce production expr -> LET rec_flag let_bindings error
-- On WHILE reduce production expr -> LET rec_flag let_bindings error
-- On VIRTUAL reduce production expr -> LET rec_flag let_bindings error
-- On VAL reduce production expr -> LET rec_flag let_bindings error
-- On UIDENT reduce production expr -> LET rec_flag let_bindings error
-- On TYPE reduce production expr -> LET rec_flag let_bindings error
-- On TRY reduce production expr -> LET rec_flag let_bindings error
-- On TRUE reduce production expr -> LET rec_flag let_bindings error
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings error
-- On STRING reduce production expr -> LET rec_flag let_bindings error
-- On STAR reduce production expr -> LET rec_flag let_bindings error
-- On SHARP reduce production expr -> LET rec_flag let_bindings error
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings error
-- On SEMI reduce production expr -> LET rec_flag let_bindings error
-- On RPAREN reduce production expr -> LET rec_flag let_bindings error
-- On RBRACKET reduce production expr -> LET rec_flag let_bindings error
-- On RBRACE reduce production expr -> LET rec_flag let_bindings error
-- On QUESTION reduce production expr -> LET rec_flag let_bindings error
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings error
-- On PARSER reduce production expr -> LET rec_flag let_bindings error
-- On OR reduce production expr -> LET rec_flag let_bindings error
-- On OPEN reduce production expr -> LET rec_flag let_bindings error
-- On NEW reduce production expr -> LET rec_flag let_bindings error
-- On MODULE reduce production expr -> LET rec_flag let_bindings error
-- On METHOD reduce production expr -> LET rec_flag let_bindings error
-- On MATCH reduce production expr -> LET rec_flag let_bindings error
-- On LPAREN reduce production expr -> LET rec_flag let_bindings error
-- On LOC reduce production expr -> LET rec_flag let_bindings error
-- On LIDENT reduce production expr -> LET rec_flag let_bindings error
-- On LET reduce production expr -> LET rec_flag let_bindings error
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings error
-- On LESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings error
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings error
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings error
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings error
-- On LBRACE reduce production expr -> LET rec_flag let_bindings error
-- On LAZY reduce production expr -> LET rec_flag let_bindings error
-- On INT reduce production expr -> LET rec_flag let_bindings error
-- On INHERIT reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings error
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings error
-- On IN reduce production expr -> LET rec_flag let_bindings error
-- On IF reduce production expr -> LET rec_flag let_bindings error
-- On GREATERRBRACKET reduce production expr -> LET rec_flag let_bindings error
-- On GREATERRBRACE reduce production expr -> LET rec_flag let_bindings error
-- On GREATERGREATER reduce production expr -> LET rec_flag let_bindings error
-- On GREATER reduce production expr -> LET rec_flag let_bindings error
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings error
-- On FUN reduce production expr -> LET rec_flag let_bindings error
-- On FOR reduce production expr -> LET rec_flag let_bindings error
-- On FLOAT reduce production expr -> LET rec_flag let_bindings error
-- On FALSE reduce production expr -> LET rec_flag let_bindings error
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings error
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings error
-- On EQUAL reduce production expr -> LET rec_flag let_bindings error
-- On EOF reduce production expr -> LET rec_flag let_bindings error
-- On END reduce production expr -> LET rec_flag let_bindings error
-- On ELSE reduce production expr -> LET rec_flag let_bindings error
-- On DONE reduce production expr -> LET rec_flag let_bindings error
-- On DEF reduce production expr -> LET rec_flag let_bindings error
-- On COMMA reduce production expr -> LET rec_flag let_bindings error
-- On COLONGREATER reduce production expr -> LET rec_flag let_bindings error
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings error
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings error
-- On COLON reduce production expr -> LET rec_flag let_bindings error
-- On CLASS reduce production expr -> LET rec_flag let_bindings error
-- On CHAR reduce production expr -> LET rec_flag let_bindings error
-- On BEGIN reduce production expr -> LET rec_flag let_bindings error
-- On BARRBRACKET reduce production expr -> LET rec_flag let_bindings error
-- On BARBAR reduce production expr -> LET rec_flag let_bindings error
-- On BAR reduce production expr -> LET rec_flag let_bindings error
-- On ASSERT reduce production expr -> LET rec_flag let_bindings error
-- On AND reduce production expr -> LET rec_flag let_bindings error
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings error
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings error

State 849:
expr -> LET rec_flag let_bindings IN . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings IN . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 850
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 851
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 850:
expr -> LET rec_flag let_bindings IN error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> LET rec_flag let_bindings IN error
-- On WITH reduce production expr -> LET rec_flag let_bindings IN error
-- On WHILE reduce production expr -> LET rec_flag let_bindings IN error
-- On VIRTUAL reduce production expr -> LET rec_flag let_bindings IN error
-- On VAL reduce production expr -> LET rec_flag let_bindings IN error
-- On UIDENT reduce production expr -> LET rec_flag let_bindings IN error
-- On TYPE reduce production expr -> LET rec_flag let_bindings IN error
-- On TRY reduce production expr -> LET rec_flag let_bindings IN error
-- On TRUE reduce production expr -> LET rec_flag let_bindings IN error
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings IN error
-- On STRING reduce production expr -> LET rec_flag let_bindings IN error
-- On STAR reduce production expr -> LET rec_flag let_bindings IN error
-- On SHARP reduce production expr -> LET rec_flag let_bindings IN error
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings IN error
-- On SEMI reduce production expr -> LET rec_flag let_bindings IN error
-- On RPAREN reduce production expr -> LET rec_flag let_bindings IN error
-- On RBRACKET reduce production expr -> LET rec_flag let_bindings IN error
-- On RBRACE reduce production expr -> LET rec_flag let_bindings IN error
-- On QUESTION reduce production expr -> LET rec_flag let_bindings IN error
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings IN error
-- On PARSER reduce production expr -> LET rec_flag let_bindings IN error
-- On OR reduce production expr -> LET rec_flag let_bindings IN error
-- On OPEN reduce production expr -> LET rec_flag let_bindings IN error
-- On NEW reduce production expr -> LET rec_flag let_bindings IN error
-- On MODULE reduce production expr -> LET rec_flag let_bindings IN error
-- On METHOD reduce production expr -> LET rec_flag let_bindings IN error
-- On MATCH reduce production expr -> LET rec_flag let_bindings IN error
-- On LPAREN reduce production expr -> LET rec_flag let_bindings IN error
-- On LOC reduce production expr -> LET rec_flag let_bindings IN error
-- On LIDENT reduce production expr -> LET rec_flag let_bindings IN error
-- On LET reduce production expr -> LET rec_flag let_bindings IN error
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On LESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On LBRACE reduce production expr -> LET rec_flag let_bindings IN error
-- On LAZY reduce production expr -> LET rec_flag let_bindings IN error
-- On INT reduce production expr -> LET rec_flag let_bindings IN error
-- On INHERIT reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings IN error
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings IN error
-- On IN reduce production expr -> LET rec_flag let_bindings IN error
-- On IF reduce production expr -> LET rec_flag let_bindings IN error
-- On GREATERRBRACKET reduce production expr -> LET rec_flag let_bindings IN error
-- On GREATERRBRACE reduce production expr -> LET rec_flag let_bindings IN error
-- On GREATERGREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On GREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings IN error
-- On FUN reduce production expr -> LET rec_flag let_bindings IN error
-- On FOR reduce production expr -> LET rec_flag let_bindings IN error
-- On FLOAT reduce production expr -> LET rec_flag let_bindings IN error
-- On FALSE reduce production expr -> LET rec_flag let_bindings IN error
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings IN error
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings IN error
-- On EQUAL reduce production expr -> LET rec_flag let_bindings IN error
-- On EOF reduce production expr -> LET rec_flag let_bindings IN error
-- On END reduce production expr -> LET rec_flag let_bindings IN error
-- On ELSE reduce production expr -> LET rec_flag let_bindings IN error
-- On DONE reduce production expr -> LET rec_flag let_bindings IN error
-- On DEF reduce production expr -> LET rec_flag let_bindings IN error
-- On COMMA reduce production expr -> LET rec_flag let_bindings IN error
-- On COLONGREATER reduce production expr -> LET rec_flag let_bindings IN error
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings IN error
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings IN error
-- On COLON reduce production expr -> LET rec_flag let_bindings IN error
-- On CLASS reduce production expr -> LET rec_flag let_bindings IN error
-- On CHAR reduce production expr -> LET rec_flag let_bindings IN error
-- On BEGIN reduce production expr -> LET rec_flag let_bindings IN error
-- On BARRBRACKET reduce production expr -> LET rec_flag let_bindings IN error
-- On BARBAR reduce production expr -> LET rec_flag let_bindings IN error
-- On BAR reduce production expr -> LET rec_flag let_bindings IN error
-- On ASSERT reduce production expr -> LET rec_flag let_bindings IN error
-- On AND reduce production expr -> LET rec_flag let_bindings IN error
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings IN error
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings IN error

State 851:
expr -> LET rec_flag let_bindings IN seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On WITH reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On WHILE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On VIRTUAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On VAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On UIDENT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TYPE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TRY reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On TRUE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SUBTRACTIVE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On STRING reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On STAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SHARP reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SEMISEMI reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On SEMI reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On RPAREN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On RBRACKET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On RBRACE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On QUESTION reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On PREFIXOP reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On PARSER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On OR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On OPEN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On NEW reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On MODULE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On METHOD reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On MATCH reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LPAREN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LOC reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LIDENT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LESSGREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKETLESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKETBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACKET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACELESS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACEBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LBRACE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On LAZY reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INHERIT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP4 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP3 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP2 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP1 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On INFIXOP0 reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On IN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On IF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On GREATERRBRACKET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On GREATERRBRACE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On GREATERGREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On GREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FUNCTION reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FUN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FOR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FLOAT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On FALSE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EXTERNAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EXCEPTION reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EQUAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On EOF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On END reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On ELSE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On DONE reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On DEF reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COMMA reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLONGREATER reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLONEQUAL reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLONCOLON reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On COLON reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On CLASS reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On CHAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BEGIN reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BARRBRACKET reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BARBAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On BAR reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On ASSERT reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AND reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AMPERSAND reduce production expr -> LET rec_flag let_bindings IN seq_expr
-- On AMPERAMPER reduce production expr -> LET rec_flag let_bindings IN seq_expr

State 852:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
stream_expr_component -> QUOTE expr . [ error SEMI GREATERRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production stream_expr_component -> QUOTE expr
-- On SEMI reduce production stream_expr_component -> QUOTE expr
-- On GREATERRBRACKET reduce production stream_expr_component -> QUOTE expr

State 853:
simple_expr -> LBRACKETLESS GREATERRBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On TO reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On THEN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On OR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On MINUSGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On IN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On IF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On END reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DOWNTO reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DO reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AND reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS GREATERRBRACKET

State 854:
simple_expr -> LBRACKETLESS stream_expr . opt_semi GREATERRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS stream_expr . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
stream_expr -> stream_expr . SEMI stream_expr_component [ error SEMI GREATERRBRACKET ]
-- On SEMI shift to state 838
-- On opt_semi shift to state 855
-- On error reduce production opt_semi -> 
-- On GREATERRBRACKET reduce production opt_semi -> 

State 855:
simple_expr -> LBRACKETLESS stream_expr opt_semi . GREATERRBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LBRACKETLESS stream_expr opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 856
-- On GREATERRBRACKET shift to state 857

State 856:
simple_expr -> LBRACKETLESS stream_expr opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On WHILE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On UIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TYPE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TRY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TRUE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On TO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On THEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On STRING reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On STAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SHARP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On SEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On PARSER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On OR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On OPEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On NEW reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On MODULE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On MINUSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On MATCH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LOC reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On LAZY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On IN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On IF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On GREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FUN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FOR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FLOAT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On FALSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On EOF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On END reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On ELSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DOWNTO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DOT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On DEF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COMMA reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On CLASS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On CHAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BEGIN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BARBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On BAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On ASSERT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi error

State 857:
simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On WHILE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On UIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TYPE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TRY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TRUE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On TO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On THEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SUBTRACTIVE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On STRING reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On STAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SHARP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SEMISEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On SEMI reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On PREFIXOP reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On PARSER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On OR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On OPEN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On NEW reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On MODULE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On MINUSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On MATCH reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LPAREN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LOC reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LIDENT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESSGREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKETLESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKETBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACKET reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACELESS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACEBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LBRACE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On LAZY reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP4 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP3 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP2 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP1 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On INFIXOP0 reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On IN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On IF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On GREATER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FUNCTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FUN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FOR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FLOAT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On FALSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EXTERNAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EXCEPTION reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On EOF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On END reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On ELSE reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DOWNTO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DOT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DO reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On DEF reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COMMA reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLONEQUAL reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On COLONCOLON reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On CLASS reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On CHAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BEGIN reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BARBAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On BAR reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On ASSERT reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AMPERSAND reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET
-- On AMPERAMPER reduce production simple_expr -> LBRACKETLESS stream_expr opt_semi GREATERRBRACKET

State 858:
expr -> DEF . def_bindings IN seq_expr [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
location_item -> DEF . def_bindings location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 859
-- On def_binding shift to state 595

State 859:
def_bindings -> def_bindings . AND def_binding [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT AND ]
expr -> DEF def_bindings . IN seq_expr [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
location_item -> DEF def_bindings . location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IN shift to state 637
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On AND shift to state 593
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 864
-- On location_item shift to state 862
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WHILE reduce production location_tail -> 
-- On UIDENT reduce production location_tail -> 
-- On TRY reduce production location_tail -> 
-- On TRUE reduce production location_tail -> 
-- On SUBTRACTIVE reduce production location_tail -> 
-- On STRING reduce production location_tail -> 
-- On SEMISEMI reduce production location_tail -> 
-- On PREFIXOP reduce production location_tail -> 
-- On PARSER reduce production location_tail -> 
-- On NEW reduce production location_tail -> 
-- On MATCH reduce production location_tail -> 
-- On LPAREN reduce production location_tail -> 
-- On LOC reduce production location_tail -> 
-- On LIDENT reduce production location_tail -> 
-- On LET reduce production location_tail -> 
-- On LBRACKETLESS reduce production location_tail -> 
-- On LBRACKETBAR reduce production location_tail -> 
-- On LBRACKET reduce production location_tail -> 
-- On LBRACELESS reduce production location_tail -> 
-- On LBRACEBAR reduce production location_tail -> 
-- On LBRACE reduce production location_tail -> 
-- On LAZY reduce production location_tail -> 
-- On INT reduce production location_tail -> 
-- On IF reduce production location_tail -> 
-- On FUNCTION reduce production location_tail -> 
-- On FUN reduce production location_tail -> 
-- On FOR reduce production location_tail -> 
-- On FLOAT reduce production location_tail -> 
-- On FALSE reduce production location_tail -> 
-- On END reduce production location_tail -> 
-- On DEF reduce production location_tail -> 
-- On CHAR reduce production location_tail -> 
-- On BEGIN reduce production location_tail -> 
-- On ASSERT reduce production location_tail -> 
** Conflict on WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 860:
location_item -> seq_expr . location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 861
-- On location_item shift to state 862
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WHILE reduce production location_tail -> 
-- On UIDENT reduce production location_tail -> 
-- On TRY reduce production location_tail -> 
-- On TRUE reduce production location_tail -> 
-- On SUBTRACTIVE reduce production location_tail -> 
-- On STRING reduce production location_tail -> 
-- On SEMISEMI reduce production location_tail -> 
-- On PREFIXOP reduce production location_tail -> 
-- On PARSER reduce production location_tail -> 
-- On NEW reduce production location_tail -> 
-- On MATCH reduce production location_tail -> 
-- On LPAREN reduce production location_tail -> 
-- On LOC reduce production location_tail -> 
-- On LIDENT reduce production location_tail -> 
-- On LET reduce production location_tail -> 
-- On LBRACKETLESS reduce production location_tail -> 
-- On LBRACKETBAR reduce production location_tail -> 
-- On LBRACKET reduce production location_tail -> 
-- On LBRACELESS reduce production location_tail -> 
-- On LBRACEBAR reduce production location_tail -> 
-- On LBRACE reduce production location_tail -> 
-- On LAZY reduce production location_tail -> 
-- On INT reduce production location_tail -> 
-- On IF reduce production location_tail -> 
-- On FUNCTION reduce production location_tail -> 
-- On FUN reduce production location_tail -> 
-- On FOR reduce production location_tail -> 
-- On FLOAT reduce production location_tail -> 
-- On FALSE reduce production location_tail -> 
-- On END reduce production location_tail -> 
-- On DEF reduce production location_tail -> 
-- On CHAR reduce production location_tail -> 
-- On BEGIN reduce production location_tail -> 
-- On ASSERT reduce production location_tail -> 
** Conflict on WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 861:
location_item -> seq_expr location_tail . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production location_item -> seq_expr location_tail
-- On UIDENT reduce production location_item -> seq_expr location_tail
-- On TRY reduce production location_item -> seq_expr location_tail
-- On TRUE reduce production location_item -> seq_expr location_tail
-- On SUBTRACTIVE reduce production location_item -> seq_expr location_tail
-- On STRING reduce production location_item -> seq_expr location_tail
-- On SEMISEMI reduce production location_item -> seq_expr location_tail
-- On PREFIXOP reduce production location_item -> seq_expr location_tail
-- On PARSER reduce production location_item -> seq_expr location_tail
-- On NEW reduce production location_item -> seq_expr location_tail
-- On MATCH reduce production location_item -> seq_expr location_tail
-- On LPAREN reduce production location_item -> seq_expr location_tail
-- On LOC reduce production location_item -> seq_expr location_tail
-- On LIDENT reduce production location_item -> seq_expr location_tail
-- On LET reduce production location_item -> seq_expr location_tail
-- On LBRACKETLESS reduce production location_item -> seq_expr location_tail
-- On LBRACKETBAR reduce production location_item -> seq_expr location_tail
-- On LBRACKET reduce production location_item -> seq_expr location_tail
-- On LBRACELESS reduce production location_item -> seq_expr location_tail
-- On LBRACEBAR reduce production location_item -> seq_expr location_tail
-- On LBRACE reduce production location_item -> seq_expr location_tail
-- On LAZY reduce production location_item -> seq_expr location_tail
-- On INT reduce production location_item -> seq_expr location_tail
-- On IF reduce production location_item -> seq_expr location_tail
-- On FUNCTION reduce production location_item -> seq_expr location_tail
-- On FUN reduce production location_item -> seq_expr location_tail
-- On FOR reduce production location_item -> seq_expr location_tail
-- On FLOAT reduce production location_item -> seq_expr location_tail
-- On FALSE reduce production location_item -> seq_expr location_tail
-- On END reduce production location_item -> seq_expr location_tail
-- On DEF reduce production location_item -> seq_expr location_tail
-- On CHAR reduce production location_item -> seq_expr location_tail
-- On BEGIN reduce production location_item -> seq_expr location_tail
-- On ASSERT reduce production location_item -> seq_expr location_tail

State 862:
location_tail -> location_item . location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 863
-- On location_item shift to state 862
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WHILE reduce production location_tail -> 
-- On UIDENT reduce production location_tail -> 
-- On TRY reduce production location_tail -> 
-- On TRUE reduce production location_tail -> 
-- On SUBTRACTIVE reduce production location_tail -> 
-- On STRING reduce production location_tail -> 
-- On SEMISEMI reduce production location_tail -> 
-- On PREFIXOP reduce production location_tail -> 
-- On PARSER reduce production location_tail -> 
-- On NEW reduce production location_tail -> 
-- On MATCH reduce production location_tail -> 
-- On LPAREN reduce production location_tail -> 
-- On LOC reduce production location_tail -> 
-- On LIDENT reduce production location_tail -> 
-- On LET reduce production location_tail -> 
-- On LBRACKETLESS reduce production location_tail -> 
-- On LBRACKETBAR reduce production location_tail -> 
-- On LBRACKET reduce production location_tail -> 
-- On LBRACELESS reduce production location_tail -> 
-- On LBRACEBAR reduce production location_tail -> 
-- On LBRACE reduce production location_tail -> 
-- On LAZY reduce production location_tail -> 
-- On INT reduce production location_tail -> 
-- On IF reduce production location_tail -> 
-- On FUNCTION reduce production location_tail -> 
-- On FUN reduce production location_tail -> 
-- On FOR reduce production location_tail -> 
-- On FLOAT reduce production location_tail -> 
-- On FALSE reduce production location_tail -> 
-- On END reduce production location_tail -> 
-- On DEF reduce production location_tail -> 
-- On CHAR reduce production location_tail -> 
-- On BEGIN reduce production location_tail -> 
-- On ASSERT reduce production location_tail -> 
** Conflict on WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 863:
location_tail -> location_item location_tail . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production location_tail -> location_item location_tail
-- On UIDENT reduce production location_tail -> location_item location_tail
-- On TRY reduce production location_tail -> location_item location_tail
-- On TRUE reduce production location_tail -> location_item location_tail
-- On SUBTRACTIVE reduce production location_tail -> location_item location_tail
-- On STRING reduce production location_tail -> location_item location_tail
-- On SEMISEMI reduce production location_tail -> location_item location_tail
-- On PREFIXOP reduce production location_tail -> location_item location_tail
-- On PARSER reduce production location_tail -> location_item location_tail
-- On NEW reduce production location_tail -> location_item location_tail
-- On MATCH reduce production location_tail -> location_item location_tail
-- On LPAREN reduce production location_tail -> location_item location_tail
-- On LOC reduce production location_tail -> location_item location_tail
-- On LIDENT reduce production location_tail -> location_item location_tail
-- On LET reduce production location_tail -> location_item location_tail
-- On LBRACKETLESS reduce production location_tail -> location_item location_tail
-- On LBRACKETBAR reduce production location_tail -> location_item location_tail
-- On LBRACKET reduce production location_tail -> location_item location_tail
-- On LBRACELESS reduce production location_tail -> location_item location_tail
-- On LBRACEBAR reduce production location_tail -> location_item location_tail
-- On LBRACE reduce production location_tail -> location_item location_tail
-- On LAZY reduce production location_tail -> location_item location_tail
-- On INT reduce production location_tail -> location_item location_tail
-- On IF reduce production location_tail -> location_item location_tail
-- On FUNCTION reduce production location_tail -> location_item location_tail
-- On FUN reduce production location_tail -> location_item location_tail
-- On FOR reduce production location_tail -> location_item location_tail
-- On FLOAT reduce production location_tail -> location_item location_tail
-- On FALSE reduce production location_tail -> location_item location_tail
-- On END reduce production location_tail -> location_item location_tail
-- On DEF reduce production location_tail -> location_item location_tail
-- On CHAR reduce production location_tail -> location_item location_tail
-- On BEGIN reduce production location_tail -> location_item location_tail
-- On ASSERT reduce production location_tail -> location_item location_tail

State 864:
location_item -> DEF def_bindings location_tail . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production location_item -> DEF def_bindings location_tail
-- On UIDENT reduce production location_item -> DEF def_bindings location_tail
-- On TRY reduce production location_item -> DEF def_bindings location_tail
-- On TRUE reduce production location_item -> DEF def_bindings location_tail
-- On SUBTRACTIVE reduce production location_item -> DEF def_bindings location_tail
-- On STRING reduce production location_item -> DEF def_bindings location_tail
-- On SEMISEMI reduce production location_item -> DEF def_bindings location_tail
-- On PREFIXOP reduce production location_item -> DEF def_bindings location_tail
-- On PARSER reduce production location_item -> DEF def_bindings location_tail
-- On NEW reduce production location_item -> DEF def_bindings location_tail
-- On MATCH reduce production location_item -> DEF def_bindings location_tail
-- On LPAREN reduce production location_item -> DEF def_bindings location_tail
-- On LOC reduce production location_item -> DEF def_bindings location_tail
-- On LIDENT reduce production location_item -> DEF def_bindings location_tail
-- On LET reduce production location_item -> DEF def_bindings location_tail
-- On LBRACKETLESS reduce production location_item -> DEF def_bindings location_tail
-- On LBRACKETBAR reduce production location_item -> DEF def_bindings location_tail
-- On LBRACKET reduce production location_item -> DEF def_bindings location_tail
-- On LBRACELESS reduce production location_item -> DEF def_bindings location_tail
-- On LBRACEBAR reduce production location_item -> DEF def_bindings location_tail
-- On LBRACE reduce production location_item -> DEF def_bindings location_tail
-- On LAZY reduce production location_item -> DEF def_bindings location_tail
-- On INT reduce production location_item -> DEF def_bindings location_tail
-- On IF reduce production location_item -> DEF def_bindings location_tail
-- On FUNCTION reduce production location_item -> DEF def_bindings location_tail
-- On FUN reduce production location_item -> DEF def_bindings location_tail
-- On FOR reduce production location_item -> DEF def_bindings location_tail
-- On FLOAT reduce production location_item -> DEF def_bindings location_tail
-- On FALSE reduce production location_item -> DEF def_bindings location_tail
-- On END reduce production location_item -> DEF def_bindings location_tail
-- On DEF reduce production location_item -> DEF def_bindings location_tail
-- On CHAR reduce production location_item -> DEF def_bindings location_tail
-- On BEGIN reduce production location_item -> DEF def_bindings location_tail
-- On ASSERT reduce production location_item -> DEF def_bindings location_tail

State 865:
location -> location_tail . [ END ]
-- On END reduce production location -> location_tail

State 866:
simple_expr -> LOC location . END [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On END shift to state 867

State 867:
simple_expr -> LOC location END . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOT DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AS AND AMPERSAND AMPERAMPER ]
-- On error reduce production simple_expr -> LOC location END
-- On WITH reduce production simple_expr -> LOC location END
-- On WHILE reduce production simple_expr -> LOC location END
-- On VIRTUAL reduce production simple_expr -> LOC location END
-- On VAL reduce production simple_expr -> LOC location END
-- On UIDENT reduce production simple_expr -> LOC location END
-- On TYPE reduce production simple_expr -> LOC location END
-- On TRY reduce production simple_expr -> LOC location END
-- On TRUE reduce production simple_expr -> LOC location END
-- On SUBTRACTIVE reduce production simple_expr -> LOC location END
-- On STRING reduce production simple_expr -> LOC location END
-- On STAR reduce production simple_expr -> LOC location END
-- On SHARP reduce production simple_expr -> LOC location END
-- On SEMISEMI reduce production simple_expr -> LOC location END
-- On SEMI reduce production simple_expr -> LOC location END
-- On RPAREN reduce production simple_expr -> LOC location END
-- On RBRACKET reduce production simple_expr -> LOC location END
-- On RBRACE reduce production simple_expr -> LOC location END
-- On QUESTION reduce production simple_expr -> LOC location END
-- On PREFIXOP reduce production simple_expr -> LOC location END
-- On PARSER reduce production simple_expr -> LOC location END
-- On OR reduce production simple_expr -> LOC location END
-- On OPEN reduce production simple_expr -> LOC location END
-- On NEW reduce production simple_expr -> LOC location END
-- On MODULE reduce production simple_expr -> LOC location END
-- On METHOD reduce production simple_expr -> LOC location END
-- On MATCH reduce production simple_expr -> LOC location END
-- On LPAREN reduce production simple_expr -> LOC location END
-- On LOC reduce production simple_expr -> LOC location END
-- On LIDENT reduce production simple_expr -> LOC location END
-- On LET reduce production simple_expr -> LOC location END
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LOC location END
-- On LESSLESS reduce production simple_expr -> LOC location END
-- On LESSGREATER reduce production simple_expr -> LOC location END
-- On LESS reduce production simple_expr -> LOC location END
-- On LBRACKETLESS reduce production simple_expr -> LOC location END
-- On LBRACKETBAR reduce production simple_expr -> LOC location END
-- On LBRACKET reduce production simple_expr -> LOC location END
-- On LBRACELESS reduce production simple_expr -> LOC location END
-- On LBRACEBAR reduce production simple_expr -> LOC location END
-- On LBRACE reduce production simple_expr -> LOC location END
-- On LAZY reduce production simple_expr -> LOC location END
-- On INT reduce production simple_expr -> LOC location END
-- On INHERIT reduce production simple_expr -> LOC location END
-- On INFIXOP4 reduce production simple_expr -> LOC location END
-- On INFIXOP3 reduce production simple_expr -> LOC location END
-- On INFIXOP2 reduce production simple_expr -> LOC location END
-- On INFIXOP1 reduce production simple_expr -> LOC location END
-- On INFIXOP0 reduce production simple_expr -> LOC location END
-- On IN reduce production simple_expr -> LOC location END
-- On IF reduce production simple_expr -> LOC location END
-- On GREATERRBRACKET reduce production simple_expr -> LOC location END
-- On GREATERRBRACE reduce production simple_expr -> LOC location END
-- On GREATERGREATER reduce production simple_expr -> LOC location END
-- On GREATER reduce production simple_expr -> LOC location END
-- On FUNCTION reduce production simple_expr -> LOC location END
-- On FUN reduce production simple_expr -> LOC location END
-- On FOR reduce production simple_expr -> LOC location END
-- On FLOAT reduce production simple_expr -> LOC location END
-- On FALSE reduce production simple_expr -> LOC location END
-- On EXTERNAL reduce production simple_expr -> LOC location END
-- On EXCEPTION reduce production simple_expr -> LOC location END
-- On EQUAL reduce production simple_expr -> LOC location END
-- On EOF reduce production simple_expr -> LOC location END
-- On END reduce production simple_expr -> LOC location END
-- On ELSE reduce production simple_expr -> LOC location END
-- On DOT reduce production simple_expr -> LOC location END
-- On DONE reduce production simple_expr -> LOC location END
-- On DEF reduce production simple_expr -> LOC location END
-- On COMMA reduce production simple_expr -> LOC location END
-- On COLONGREATER reduce production simple_expr -> LOC location END
-- On COLONEQUAL reduce production simple_expr -> LOC location END
-- On COLONCOLON reduce production simple_expr -> LOC location END
-- On COLON reduce production simple_expr -> LOC location END
-- On CLASS reduce production simple_expr -> LOC location END
-- On CHAR reduce production simple_expr -> LOC location END
-- On BEGIN reduce production simple_expr -> LOC location END
-- On BARRBRACKET reduce production simple_expr -> LOC location END
-- On BARBAR reduce production simple_expr -> LOC location END
-- On BAR reduce production simple_expr -> LOC location END
-- On ASSERT reduce production simple_expr -> LOC location END
-- On AS reduce production simple_expr -> LOC location END
-- On AND reduce production simple_expr -> LOC location END
-- On AMPERSAND reduce production simple_expr -> LOC location END
-- On AMPERAMPER reduce production simple_expr -> LOC location END

State 868:
fun_binding -> EQUAL seq_expr . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production fun_binding -> EQUAL seq_expr
-- On WHILE reduce production fun_binding -> EQUAL seq_expr
-- On UIDENT reduce production fun_binding -> EQUAL seq_expr
-- On TYPE reduce production fun_binding -> EQUAL seq_expr
-- On TRY reduce production fun_binding -> EQUAL seq_expr
-- On TRUE reduce production fun_binding -> EQUAL seq_expr
-- On SUBTRACTIVE reduce production fun_binding -> EQUAL seq_expr
-- On STRING reduce production fun_binding -> EQUAL seq_expr
-- On SHARP reduce production fun_binding -> EQUAL seq_expr
-- On SEMISEMI reduce production fun_binding -> EQUAL seq_expr
-- On PREFIXOP reduce production fun_binding -> EQUAL seq_expr
-- On PARSER reduce production fun_binding -> EQUAL seq_expr
-- On OPEN reduce production fun_binding -> EQUAL seq_expr
-- On NEW reduce production fun_binding -> EQUAL seq_expr
-- On MODULE reduce production fun_binding -> EQUAL seq_expr
-- On MATCH reduce production fun_binding -> EQUAL seq_expr
-- On LPAREN reduce production fun_binding -> EQUAL seq_expr
-- On LOC reduce production fun_binding -> EQUAL seq_expr
-- On LIDENT reduce production fun_binding -> EQUAL seq_expr
-- On LET reduce production fun_binding -> EQUAL seq_expr
-- On LBRACKETLESS reduce production fun_binding -> EQUAL seq_expr
-- On LBRACKETBAR reduce production fun_binding -> EQUAL seq_expr
-- On LBRACKET reduce production fun_binding -> EQUAL seq_expr
-- On LBRACELESS reduce production fun_binding -> EQUAL seq_expr
-- On LBRACEBAR reduce production fun_binding -> EQUAL seq_expr
-- On LBRACE reduce production fun_binding -> EQUAL seq_expr
-- On LAZY reduce production fun_binding -> EQUAL seq_expr
-- On INT reduce production fun_binding -> EQUAL seq_expr
-- On IN reduce production fun_binding -> EQUAL seq_expr
-- On IF reduce production fun_binding -> EQUAL seq_expr
-- On FUNCTION reduce production fun_binding -> EQUAL seq_expr
-- On FUN reduce production fun_binding -> EQUAL seq_expr
-- On FOR reduce production fun_binding -> EQUAL seq_expr
-- On FLOAT reduce production fun_binding -> EQUAL seq_expr
-- On FALSE reduce production fun_binding -> EQUAL seq_expr
-- On EXTERNAL reduce production fun_binding -> EQUAL seq_expr
-- On EXCEPTION reduce production fun_binding -> EQUAL seq_expr
-- On EOF reduce production fun_binding -> EQUAL seq_expr
-- On END reduce production fun_binding -> EQUAL seq_expr
-- On DEF reduce production fun_binding -> EQUAL seq_expr
-- On CLASS reduce production fun_binding -> EQUAL seq_expr
-- On CHAR reduce production fun_binding -> EQUAL seq_expr
-- On BEGIN reduce production fun_binding -> EQUAL seq_expr
-- On ASSERT reduce production fun_binding -> EQUAL seq_expr
-- On AND reduce production fun_binding -> EQUAL seq_expr

State 869:
fun_binding -> type_constraint . EQUAL seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On EQUAL shift to state 870

State 870:
fun_binding -> type_constraint EQUAL . seq_expr [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 871
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 871:
fun_binding -> type_constraint EQUAL seq_expr . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On WHILE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On UIDENT reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On TYPE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On TRY reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On TRUE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On SUBTRACTIVE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On STRING reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On SHARP reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On SEMISEMI reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On PREFIXOP reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On PARSER reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On OPEN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On NEW reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On MODULE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On MATCH reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LPAREN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LOC reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LIDENT reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LET reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACKETLESS reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACKETBAR reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACKET reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACELESS reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACEBAR reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LBRACE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On LAZY reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On INT reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On IN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On IF reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On FUNCTION reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On FUN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On FOR reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On FLOAT reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On FALSE reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EXTERNAL reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EXCEPTION reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On EOF reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On END reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On DEF reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On CLASS reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On CHAR reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On BEGIN reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On ASSERT reduce production fun_binding -> type_constraint EQUAL seq_expr
-- On AND reduce production fun_binding -> type_constraint EQUAL seq_expr

State 872:
fun_binding -> simple_pattern . fun_binding [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 290
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 869
-- On simple_pattern shift to state 872
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On fun_binding shift to state 873
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 873:
fun_binding -> simple_pattern fun_binding . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production fun_binding -> simple_pattern fun_binding
-- On WHILE reduce production fun_binding -> simple_pattern fun_binding
-- On UIDENT reduce production fun_binding -> simple_pattern fun_binding
-- On TYPE reduce production fun_binding -> simple_pattern fun_binding
-- On TRY reduce production fun_binding -> simple_pattern fun_binding
-- On TRUE reduce production fun_binding -> simple_pattern fun_binding
-- On SUBTRACTIVE reduce production fun_binding -> simple_pattern fun_binding
-- On STRING reduce production fun_binding -> simple_pattern fun_binding
-- On SHARP reduce production fun_binding -> simple_pattern fun_binding
-- On SEMISEMI reduce production fun_binding -> simple_pattern fun_binding
-- On PREFIXOP reduce production fun_binding -> simple_pattern fun_binding
-- On PARSER reduce production fun_binding -> simple_pattern fun_binding
-- On OPEN reduce production fun_binding -> simple_pattern fun_binding
-- On NEW reduce production fun_binding -> simple_pattern fun_binding
-- On MODULE reduce production fun_binding -> simple_pattern fun_binding
-- On MATCH reduce production fun_binding -> simple_pattern fun_binding
-- On LPAREN reduce production fun_binding -> simple_pattern fun_binding
-- On LOC reduce production fun_binding -> simple_pattern fun_binding
-- On LIDENT reduce production fun_binding -> simple_pattern fun_binding
-- On LET reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACKETLESS reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACKETBAR reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACKET reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACELESS reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACEBAR reduce production fun_binding -> simple_pattern fun_binding
-- On LBRACE reduce production fun_binding -> simple_pattern fun_binding
-- On LAZY reduce production fun_binding -> simple_pattern fun_binding
-- On INT reduce production fun_binding -> simple_pattern fun_binding
-- On IN reduce production fun_binding -> simple_pattern fun_binding
-- On IF reduce production fun_binding -> simple_pattern fun_binding
-- On FUNCTION reduce production fun_binding -> simple_pattern fun_binding
-- On FUN reduce production fun_binding -> simple_pattern fun_binding
-- On FOR reduce production fun_binding -> simple_pattern fun_binding
-- On FLOAT reduce production fun_binding -> simple_pattern fun_binding
-- On FALSE reduce production fun_binding -> simple_pattern fun_binding
-- On EXTERNAL reduce production fun_binding -> simple_pattern fun_binding
-- On EXCEPTION reduce production fun_binding -> simple_pattern fun_binding
-- On EOF reduce production fun_binding -> simple_pattern fun_binding
-- On END reduce production fun_binding -> simple_pattern fun_binding
-- On DEF reduce production fun_binding -> simple_pattern fun_binding
-- On CLASS reduce production fun_binding -> simple_pattern fun_binding
-- On CHAR reduce production fun_binding -> simple_pattern fun_binding
-- On BEGIN reduce production fun_binding -> simple_pattern fun_binding
-- On ASSERT reduce production fun_binding -> simple_pattern fun_binding
-- On AND reduce production fun_binding -> simple_pattern fun_binding

State 874:
let_binding -> val_ident fun_binding . [ error WHILE UIDENT TYPE TRY TRUE SUBTRACTIVE STRING SHARP SEMISEMI PREFIXOP PARSER OPEN NEW MODULE MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EOF END DEF CLASS CHAR BEGIN ASSERT AND ]
-- On error reduce production let_binding -> val_ident fun_binding
-- On WHILE reduce production let_binding -> val_ident fun_binding
-- On UIDENT reduce production let_binding -> val_ident fun_binding
-- On TYPE reduce production let_binding -> val_ident fun_binding
-- On TRY reduce production let_binding -> val_ident fun_binding
-- On TRUE reduce production let_binding -> val_ident fun_binding
-- On SUBTRACTIVE reduce production let_binding -> val_ident fun_binding
-- On STRING reduce production let_binding -> val_ident fun_binding
-- On SHARP reduce production let_binding -> val_ident fun_binding
-- On SEMISEMI reduce production let_binding -> val_ident fun_binding
-- On PREFIXOP reduce production let_binding -> val_ident fun_binding
-- On PARSER reduce production let_binding -> val_ident fun_binding
-- On OPEN reduce production let_binding -> val_ident fun_binding
-- On NEW reduce production let_binding -> val_ident fun_binding
-- On MODULE reduce production let_binding -> val_ident fun_binding
-- On MATCH reduce production let_binding -> val_ident fun_binding
-- On LPAREN reduce production let_binding -> val_ident fun_binding
-- On LOC reduce production let_binding -> val_ident fun_binding
-- On LIDENT reduce production let_binding -> val_ident fun_binding
-- On LET reduce production let_binding -> val_ident fun_binding
-- On LBRACKETLESS reduce production let_binding -> val_ident fun_binding
-- On LBRACKETBAR reduce production let_binding -> val_ident fun_binding
-- On LBRACKET reduce production let_binding -> val_ident fun_binding
-- On LBRACELESS reduce production let_binding -> val_ident fun_binding
-- On LBRACEBAR reduce production let_binding -> val_ident fun_binding
-- On LBRACE reduce production let_binding -> val_ident fun_binding
-- On LAZY reduce production let_binding -> val_ident fun_binding
-- On INT reduce production let_binding -> val_ident fun_binding
-- On IN reduce production let_binding -> val_ident fun_binding
-- On IF reduce production let_binding -> val_ident fun_binding
-- On FUNCTION reduce production let_binding -> val_ident fun_binding
-- On FUN reduce production let_binding -> val_ident fun_binding
-- On FOR reduce production let_binding -> val_ident fun_binding
-- On FLOAT reduce production let_binding -> val_ident fun_binding
-- On FALSE reduce production let_binding -> val_ident fun_binding
-- On EXTERNAL reduce production let_binding -> val_ident fun_binding
-- On EXCEPTION reduce production let_binding -> val_ident fun_binding
-- On EOF reduce production let_binding -> val_ident fun_binding
-- On END reduce production let_binding -> val_ident fun_binding
-- On DEF reduce production let_binding -> val_ident fun_binding
-- On CLASS reduce production let_binding -> val_ident fun_binding
-- On CHAR reduce production let_binding -> val_ident fun_binding
-- On BEGIN reduce production let_binding -> val_ident fun_binding
-- On ASSERT reduce production let_binding -> val_ident fun_binding
-- On AND reduce production let_binding -> val_ident fun_binding

State 875:
expr -> LET rec_flag let_bindings . IN seq_expr [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . IN error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . error [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING STAR SEMISEMI SEMI PREFIXOP PARSER OR NEW MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IF GREATER FUNCTION FUN FOR FLOAT FALSE EQUAL END DEF COMMA COLONEQUAL COLONCOLON CHAR BEGIN BARBAR ASSERT AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IN IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT AND ]
location_item -> LET rec_flag let_bindings . location_tail [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On error shift to state 406
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SEMISEMI shift to state 284
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 286
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IN shift to state 407
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 858
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On AND shift to state 799
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 860
-- On mod_longident shift to state 378
-- On location_tail shift to state 876
-- On location_item shift to state 862
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On WHILE reduce production location_tail -> 
-- On UIDENT reduce production location_tail -> 
-- On TRY reduce production location_tail -> 
-- On TRUE reduce production location_tail -> 
-- On SUBTRACTIVE reduce production location_tail -> 
-- On STRING reduce production location_tail -> 
-- On SEMISEMI reduce production location_tail -> 
-- On PREFIXOP reduce production location_tail -> 
-- On PARSER reduce production location_tail -> 
-- On NEW reduce production location_tail -> 
-- On MATCH reduce production location_tail -> 
-- On LPAREN reduce production location_tail -> 
-- On LOC reduce production location_tail -> 
-- On LIDENT reduce production location_tail -> 
-- On LET reduce production location_tail -> 
-- On LBRACKETLESS reduce production location_tail -> 
-- On LBRACKETBAR reduce production location_tail -> 
-- On LBRACKET reduce production location_tail -> 
-- On LBRACELESS reduce production location_tail -> 
-- On LBRACEBAR reduce production location_tail -> 
-- On LBRACE reduce production location_tail -> 
-- On LAZY reduce production location_tail -> 
-- On INT reduce production location_tail -> 
-- On IF reduce production location_tail -> 
-- On FUNCTION reduce production location_tail -> 
-- On FUN reduce production location_tail -> 
-- On FOR reduce production location_tail -> 
-- On FLOAT reduce production location_tail -> 
-- On FALSE reduce production location_tail -> 
-- On END reduce production location_tail -> 
-- On DEF reduce production location_tail -> 
-- On CHAR reduce production location_tail -> 
-- On BEGIN reduce production location_tail -> 
-- On ASSERT reduce production location_tail -> 
** Conflict on WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE DEF CHAR BEGIN ASSERT

State 876:
location_item -> LET rec_flag let_bindings location_tail . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production location_item -> LET rec_flag let_bindings location_tail
-- On UIDENT reduce production location_item -> LET rec_flag let_bindings location_tail
-- On TRY reduce production location_item -> LET rec_flag let_bindings location_tail
-- On TRUE reduce production location_item -> LET rec_flag let_bindings location_tail
-- On SUBTRACTIVE reduce production location_item -> LET rec_flag let_bindings location_tail
-- On STRING reduce production location_item -> LET rec_flag let_bindings location_tail
-- On SEMISEMI reduce production location_item -> LET rec_flag let_bindings location_tail
-- On PREFIXOP reduce production location_item -> LET rec_flag let_bindings location_tail
-- On PARSER reduce production location_item -> LET rec_flag let_bindings location_tail
-- On NEW reduce production location_item -> LET rec_flag let_bindings location_tail
-- On MATCH reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LPAREN reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LOC reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LIDENT reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LET reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACKETLESS reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACKETBAR reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACKET reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACELESS reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACEBAR reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LBRACE reduce production location_item -> LET rec_flag let_bindings location_tail
-- On LAZY reduce production location_item -> LET rec_flag let_bindings location_tail
-- On INT reduce production location_item -> LET rec_flag let_bindings location_tail
-- On IF reduce production location_item -> LET rec_flag let_bindings location_tail
-- On FUNCTION reduce production location_item -> LET rec_flag let_bindings location_tail
-- On FUN reduce production location_item -> LET rec_flag let_bindings location_tail
-- On FOR reduce production location_item -> LET rec_flag let_bindings location_tail
-- On FLOAT reduce production location_item -> LET rec_flag let_bindings location_tail
-- On FALSE reduce production location_item -> LET rec_flag let_bindings location_tail
-- On END reduce production location_item -> LET rec_flag let_bindings location_tail
-- On DEF reduce production location_item -> LET rec_flag let_bindings location_tail
-- On CHAR reduce production location_item -> LET rec_flag let_bindings location_tail
-- On BEGIN reduce production location_item -> LET rec_flag let_bindings location_tail
-- On ASSERT reduce production location_item -> LET rec_flag let_bindings location_tail

State 877:
location_tail -> SEMISEMI location_item . [ WHILE UIDENT TRY TRUE SUBTRACTIVE STRING SEMISEMI PREFIXOP PARSER NEW MATCH LPAREN LOC LIDENT LET LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT IF FUNCTION FUN FOR FLOAT FALSE END DEF CHAR BEGIN ASSERT ]
-- On WHILE reduce production location_tail -> SEMISEMI location_item
-- On UIDENT reduce production location_tail -> SEMISEMI location_item
-- On TRY reduce production location_tail -> SEMISEMI location_item
-- On TRUE reduce production location_tail -> SEMISEMI location_item
-- On SUBTRACTIVE reduce production location_tail -> SEMISEMI location_item
-- On STRING reduce production location_tail -> SEMISEMI location_item
-- On SEMISEMI reduce production location_tail -> SEMISEMI location_item
-- On PREFIXOP reduce production location_tail -> SEMISEMI location_item
-- On PARSER reduce production location_tail -> SEMISEMI location_item
-- On NEW reduce production location_tail -> SEMISEMI location_item
-- On MATCH reduce production location_tail -> SEMISEMI location_item
-- On LPAREN reduce production location_tail -> SEMISEMI location_item
-- On LOC reduce production location_tail -> SEMISEMI location_item
-- On LIDENT reduce production location_tail -> SEMISEMI location_item
-- On LET reduce production location_tail -> SEMISEMI location_item
-- On LBRACKETLESS reduce production location_tail -> SEMISEMI location_item
-- On LBRACKETBAR reduce production location_tail -> SEMISEMI location_item
-- On LBRACKET reduce production location_tail -> SEMISEMI location_item
-- On LBRACELESS reduce production location_tail -> SEMISEMI location_item
-- On LBRACEBAR reduce production location_tail -> SEMISEMI location_item
-- On LBRACE reduce production location_tail -> SEMISEMI location_item
-- On LAZY reduce production location_tail -> SEMISEMI location_item
-- On INT reduce production location_tail -> SEMISEMI location_item
-- On IF reduce production location_tail -> SEMISEMI location_item
-- On FUNCTION reduce production location_tail -> SEMISEMI location_item
-- On FUN reduce production location_tail -> SEMISEMI location_item
-- On FOR reduce production location_tail -> SEMISEMI location_item
-- On FLOAT reduce production location_tail -> SEMISEMI location_item
-- On FALSE reduce production location_tail -> SEMISEMI location_item
-- On END reduce production location_tail -> SEMISEMI location_item
-- On DEF reduce production location_tail -> SEMISEMI location_item
-- On CHAR reduce production location_tail -> SEMISEMI location_item
-- On BEGIN reduce production location_tail -> SEMISEMI location_item
-- On ASSERT reduce production location_tail -> SEMISEMI location_item

State 878:
simple_expr -> LOC location . END [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On END shift to state 879

State 879:
simple_expr -> LOC location END . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LOC location END
-- On WHILE reduce production simple_expr -> LOC location END
-- On UIDENT reduce production simple_expr -> LOC location END
-- On TYPE reduce production simple_expr -> LOC location END
-- On TRY reduce production simple_expr -> LOC location END
-- On TRUE reduce production simple_expr -> LOC location END
-- On TO reduce production simple_expr -> LOC location END
-- On THEN reduce production simple_expr -> LOC location END
-- On SUBTRACTIVE reduce production simple_expr -> LOC location END
-- On STRING reduce production simple_expr -> LOC location END
-- On STAR reduce production simple_expr -> LOC location END
-- On SHARP reduce production simple_expr -> LOC location END
-- On SEMISEMI reduce production simple_expr -> LOC location END
-- On SEMI reduce production simple_expr -> LOC location END
-- On PREFIXOP reduce production simple_expr -> LOC location END
-- On PARSER reduce production simple_expr -> LOC location END
-- On OR reduce production simple_expr -> LOC location END
-- On OPEN reduce production simple_expr -> LOC location END
-- On NEW reduce production simple_expr -> LOC location END
-- On MODULE reduce production simple_expr -> LOC location END
-- On MINUSGREATER reduce production simple_expr -> LOC location END
-- On MATCH reduce production simple_expr -> LOC location END
-- On LPAREN reduce production simple_expr -> LOC location END
-- On LOC reduce production simple_expr -> LOC location END
-- On LIDENT reduce production simple_expr -> LOC location END
-- On LET reduce production simple_expr -> LOC location END
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LOC location END
-- On LESSLESS reduce production simple_expr -> LOC location END
-- On LESSGREATER reduce production simple_expr -> LOC location END
-- On LESS reduce production simple_expr -> LOC location END
-- On LBRACKETLESS reduce production simple_expr -> LOC location END
-- On LBRACKETBAR reduce production simple_expr -> LOC location END
-- On LBRACKET reduce production simple_expr -> LOC location END
-- On LBRACELESS reduce production simple_expr -> LOC location END
-- On LBRACEBAR reduce production simple_expr -> LOC location END
-- On LBRACE reduce production simple_expr -> LOC location END
-- On LAZY reduce production simple_expr -> LOC location END
-- On INT reduce production simple_expr -> LOC location END
-- On INFIXOP4 reduce production simple_expr -> LOC location END
-- On INFIXOP3 reduce production simple_expr -> LOC location END
-- On INFIXOP2 reduce production simple_expr -> LOC location END
-- On INFIXOP1 reduce production simple_expr -> LOC location END
-- On INFIXOP0 reduce production simple_expr -> LOC location END
-- On IN reduce production simple_expr -> LOC location END
-- On IF reduce production simple_expr -> LOC location END
-- On GREATER reduce production simple_expr -> LOC location END
-- On FUNCTION reduce production simple_expr -> LOC location END
-- On FUN reduce production simple_expr -> LOC location END
-- On FOR reduce production simple_expr -> LOC location END
-- On FLOAT reduce production simple_expr -> LOC location END
-- On FALSE reduce production simple_expr -> LOC location END
-- On EXTERNAL reduce production simple_expr -> LOC location END
-- On EXCEPTION reduce production simple_expr -> LOC location END
-- On EQUAL reduce production simple_expr -> LOC location END
-- On EOF reduce production simple_expr -> LOC location END
-- On END reduce production simple_expr -> LOC location END
-- On ELSE reduce production simple_expr -> LOC location END
-- On DOWNTO reduce production simple_expr -> LOC location END
-- On DOT reduce production simple_expr -> LOC location END
-- On DO reduce production simple_expr -> LOC location END
-- On DEF reduce production simple_expr -> LOC location END
-- On COMMA reduce production simple_expr -> LOC location END
-- On COLONEQUAL reduce production simple_expr -> LOC location END
-- On COLONCOLON reduce production simple_expr -> LOC location END
-- On CLASS reduce production simple_expr -> LOC location END
-- On CHAR reduce production simple_expr -> LOC location END
-- On BEGIN reduce production simple_expr -> LOC location END
-- On BARBAR reduce production simple_expr -> LOC location END
-- On BAR reduce production simple_expr -> LOC location END
-- On ASSERT reduce production simple_expr -> LOC location END
-- On AND reduce production simple_expr -> LOC location END
-- On AMPERSAND reduce production simple_expr -> LOC location END
-- On AMPERAMPER reduce production simple_expr -> LOC location END

State 880:
expr -> MATCH seq_expr . WITH opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH seq_expr . WITH PARSER opt_pat opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH shift to state 881

State 881:
expr -> MATCH seq_expr WITH . opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH seq_expr WITH . PARSER opt_pat opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On PARSER shift to state 882
-- On BAR shift to state 268
-- On opt_bar shift to state 889
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 882:
expr -> MATCH seq_expr WITH PARSER . opt_pat opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 883
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On LBRACKETLESS reduce production opt_pat -> 
-- On BAR reduce production opt_pat -> 

State 883:
expr -> MATCH seq_expr WITH PARSER opt_pat . opt_bar parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 884
-- On LBRACKETLESS reduce production opt_bar -> 

State 884:
expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar . parser_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 278
-- On parser_cases shift to state 885
-- On parser_case shift to state 888

State 885:
expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_cases -> parser_cases . BAR parser_case [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 886
-- On WITH reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On WHILE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On UIDENT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TYPE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TRY reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TRUE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TO reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On THEN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SUBTRACTIVE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On STRING reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On STAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SHARP reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SEMISEMI reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SEMI reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On PREFIXOP reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On PARSER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On OR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On OPEN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On NEW reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On MODULE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On MINUSGREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On MATCH reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LPAREN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LOC reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LIDENT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LESSGREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKETLESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKETBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACELESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACEBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LAZY reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP4 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP3 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP2 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP1 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP0 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On IN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On IF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On GREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FUNCTION reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FUN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FOR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FLOAT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FALSE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EXTERNAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EXCEPTION reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EQUAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EOF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On END reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On ELSE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On DOWNTO reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On DO reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On DEF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COMMA reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLONEQUAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLONCOLON reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On CLASS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On CHAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On BEGIN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On BARBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On ASSERT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AND reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AMPERSAND reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AMPERAMPER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases

State 886:
parser_cases -> parser_cases BAR . parser_case [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 278
-- On parser_case shift to state 887

State 887:
parser_cases -> parser_cases BAR parser_case . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production parser_cases -> parser_cases BAR parser_case
-- On WHILE reduce production parser_cases -> parser_cases BAR parser_case
-- On UIDENT reduce production parser_cases -> parser_cases BAR parser_case
-- On TYPE reduce production parser_cases -> parser_cases BAR parser_case
-- On TRY reduce production parser_cases -> parser_cases BAR parser_case
-- On TRUE reduce production parser_cases -> parser_cases BAR parser_case
-- On TO reduce production parser_cases -> parser_cases BAR parser_case
-- On THEN reduce production parser_cases -> parser_cases BAR parser_case
-- On SUBTRACTIVE reduce production parser_cases -> parser_cases BAR parser_case
-- On STRING reduce production parser_cases -> parser_cases BAR parser_case
-- On STAR reduce production parser_cases -> parser_cases BAR parser_case
-- On SHARP reduce production parser_cases -> parser_cases BAR parser_case
-- On SEMISEMI reduce production parser_cases -> parser_cases BAR parser_case
-- On SEMI reduce production parser_cases -> parser_cases BAR parser_case
-- On PREFIXOP reduce production parser_cases -> parser_cases BAR parser_case
-- On PARSER reduce production parser_cases -> parser_cases BAR parser_case
-- On OR reduce production parser_cases -> parser_cases BAR parser_case
-- On OPEN reduce production parser_cases -> parser_cases BAR parser_case
-- On NEW reduce production parser_cases -> parser_cases BAR parser_case
-- On MODULE reduce production parser_cases -> parser_cases BAR parser_case
-- On MINUSGREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On MATCH reduce production parser_cases -> parser_cases BAR parser_case
-- On LPAREN reduce production parser_cases -> parser_cases BAR parser_case
-- On LOC reduce production parser_cases -> parser_cases BAR parser_case
-- On LIDENT reduce production parser_cases -> parser_cases BAR parser_case
-- On LET reduce production parser_cases -> parser_cases BAR parser_case
-- On LESSGREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On LESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKETLESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKETBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKET reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACELESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACEBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACE reduce production parser_cases -> parser_cases BAR parser_case
-- On LAZY reduce production parser_cases -> parser_cases BAR parser_case
-- On INT reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP4 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP3 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP2 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP1 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP0 reduce production parser_cases -> parser_cases BAR parser_case
-- On IN reduce production parser_cases -> parser_cases BAR parser_case
-- On IF reduce production parser_cases -> parser_cases BAR parser_case
-- On GREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On FUNCTION reduce production parser_cases -> parser_cases BAR parser_case
-- On FUN reduce production parser_cases -> parser_cases BAR parser_case
-- On FOR reduce production parser_cases -> parser_cases BAR parser_case
-- On FLOAT reduce production parser_cases -> parser_cases BAR parser_case
-- On FALSE reduce production parser_cases -> parser_cases BAR parser_case
-- On EXTERNAL reduce production parser_cases -> parser_cases BAR parser_case
-- On EXCEPTION reduce production parser_cases -> parser_cases BAR parser_case
-- On EQUAL reduce production parser_cases -> parser_cases BAR parser_case
-- On EOF reduce production parser_cases -> parser_cases BAR parser_case
-- On END reduce production parser_cases -> parser_cases BAR parser_case
-- On ELSE reduce production parser_cases -> parser_cases BAR parser_case
-- On DOWNTO reduce production parser_cases -> parser_cases BAR parser_case
-- On DO reduce production parser_cases -> parser_cases BAR parser_case
-- On DEF reduce production parser_cases -> parser_cases BAR parser_case
-- On COMMA reduce production parser_cases -> parser_cases BAR parser_case
-- On COLONEQUAL reduce production parser_cases -> parser_cases BAR parser_case
-- On COLONCOLON reduce production parser_cases -> parser_cases BAR parser_case
-- On CLASS reduce production parser_cases -> parser_cases BAR parser_case
-- On CHAR reduce production parser_cases -> parser_cases BAR parser_case
-- On BEGIN reduce production parser_cases -> parser_cases BAR parser_case
-- On BARBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On BAR reduce production parser_cases -> parser_cases BAR parser_case
-- On ASSERT reduce production parser_cases -> parser_cases BAR parser_case
-- On AND reduce production parser_cases -> parser_cases BAR parser_case
-- On AMPERSAND reduce production parser_cases -> parser_cases BAR parser_case
-- On AMPERAMPER reduce production parser_cases -> parser_cases BAR parser_case

State 888:
parser_cases -> parser_case . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production parser_cases -> parser_case
-- On WHILE reduce production parser_cases -> parser_case
-- On UIDENT reduce production parser_cases -> parser_case
-- On TYPE reduce production parser_cases -> parser_case
-- On TRY reduce production parser_cases -> parser_case
-- On TRUE reduce production parser_cases -> parser_case
-- On TO reduce production parser_cases -> parser_case
-- On THEN reduce production parser_cases -> parser_case
-- On SUBTRACTIVE reduce production parser_cases -> parser_case
-- On STRING reduce production parser_cases -> parser_case
-- On STAR reduce production parser_cases -> parser_case
-- On SHARP reduce production parser_cases -> parser_case
-- On SEMISEMI reduce production parser_cases -> parser_case
-- On SEMI reduce production parser_cases -> parser_case
-- On PREFIXOP reduce production parser_cases -> parser_case
-- On PARSER reduce production parser_cases -> parser_case
-- On OR reduce production parser_cases -> parser_case
-- On OPEN reduce production parser_cases -> parser_case
-- On NEW reduce production parser_cases -> parser_case
-- On MODULE reduce production parser_cases -> parser_case
-- On MINUSGREATER reduce production parser_cases -> parser_case
-- On MATCH reduce production parser_cases -> parser_case
-- On LPAREN reduce production parser_cases -> parser_case
-- On LOC reduce production parser_cases -> parser_case
-- On LIDENT reduce production parser_cases -> parser_case
-- On LET reduce production parser_cases -> parser_case
-- On LESSGREATER reduce production parser_cases -> parser_case
-- On LESS reduce production parser_cases -> parser_case
-- On LBRACKETLESS reduce production parser_cases -> parser_case
-- On LBRACKETBAR reduce production parser_cases -> parser_case
-- On LBRACKET reduce production parser_cases -> parser_case
-- On LBRACELESS reduce production parser_cases -> parser_case
-- On LBRACEBAR reduce production parser_cases -> parser_case
-- On LBRACE reduce production parser_cases -> parser_case
-- On LAZY reduce production parser_cases -> parser_case
-- On INT reduce production parser_cases -> parser_case
-- On INFIXOP4 reduce production parser_cases -> parser_case
-- On INFIXOP3 reduce production parser_cases -> parser_case
-- On INFIXOP2 reduce production parser_cases -> parser_case
-- On INFIXOP1 reduce production parser_cases -> parser_case
-- On INFIXOP0 reduce production parser_cases -> parser_case
-- On IN reduce production parser_cases -> parser_case
-- On IF reduce production parser_cases -> parser_case
-- On GREATER reduce production parser_cases -> parser_case
-- On FUNCTION reduce production parser_cases -> parser_case
-- On FUN reduce production parser_cases -> parser_case
-- On FOR reduce production parser_cases -> parser_case
-- On FLOAT reduce production parser_cases -> parser_case
-- On FALSE reduce production parser_cases -> parser_case
-- On EXTERNAL reduce production parser_cases -> parser_case
-- On EXCEPTION reduce production parser_cases -> parser_case
-- On EQUAL reduce production parser_cases -> parser_case
-- On EOF reduce production parser_cases -> parser_case
-- On END reduce production parser_cases -> parser_case
-- On ELSE reduce production parser_cases -> parser_case
-- On DOWNTO reduce production parser_cases -> parser_case
-- On DO reduce production parser_cases -> parser_case
-- On DEF reduce production parser_cases -> parser_case
-- On COMMA reduce production parser_cases -> parser_case
-- On COLONEQUAL reduce production parser_cases -> parser_case
-- On COLONCOLON reduce production parser_cases -> parser_case
-- On CLASS reduce production parser_cases -> parser_case
-- On CHAR reduce production parser_cases -> parser_case
-- On BEGIN reduce production parser_cases -> parser_case
-- On BARBAR reduce production parser_cases -> parser_case
-- On BAR reduce production parser_cases -> parser_case
-- On ASSERT reduce production parser_cases -> parser_case
-- On AND reduce production parser_cases -> parser_case
-- On AMPERSAND reduce production parser_cases -> parser_case
-- On AMPERAMPER reduce production parser_cases -> parser_case

State 889:
expr -> MATCH seq_expr WITH opt_bar . match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 627
-- On mod_longident shift to state 303
-- On match_cases shift to state 890
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 890:
expr -> MATCH seq_expr WITH opt_bar match_cases . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 731
-- On WITH reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On WHILE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On UIDENT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TYPE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TRY reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TRUE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TO reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On THEN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On STRING reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On STAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SHARP reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SEMISEMI reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SEMI reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On PREFIXOP reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On PARSER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On OR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On OPEN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On NEW reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On MODULE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On MINUSGREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On MATCH reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LPAREN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LOC reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LIDENT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LESSGREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACELESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACEBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LAZY reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP4 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP3 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP2 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP1 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP0 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On IN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On IF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On GREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FUNCTION reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FUN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FOR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FLOAT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FALSE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EXTERNAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EXCEPTION reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EQUAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EOF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On END reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On ELSE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On DOWNTO reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On DO reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On DEF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COMMA reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLONEQUAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLONCOLON reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On CLASS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On CHAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On BEGIN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On BARBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On ASSERT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AND reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AMPERSAND reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AMPERAMPER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases

State 891:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WHILE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On UIDENT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TYPE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRY reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRUE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TO reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On THEN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STRING reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SHARP reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMI reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PARSER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OPEN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On NEW reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MODULE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MINUSGREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MATCH reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LPAREN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LOC reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LIDENT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LAZY reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUNCTION reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FOR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FLOAT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FALSE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EQUAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EOF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On END reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ELSE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DOWNTO reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DO reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DEF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COMMA reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CLASS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CHAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BEGIN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ASSERT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AND reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr

State 892:
stream_pattern -> stream_pattern_component . opt_err [ error SEMI GREATERRBRACKET ]
-- On QUESTION shift to state 893
-- On opt_err shift to state 895
-- On error reduce production opt_err -> 
-- On SEMI reduce production opt_err -> 
-- On GREATERRBRACKET reduce production opt_err -> 

State 893:
opt_err -> QUESTION . expr [ error SEMI GREATERRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 894
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 894:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
opt_err -> QUESTION expr . [ error SEMI GREATERRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production opt_err -> QUESTION expr
-- On SEMI reduce production opt_err -> QUESTION expr
-- On GREATERRBRACKET reduce production opt_err -> QUESTION expr

State 895:
stream_pattern -> stream_pattern_component opt_err . [ error SEMI GREATERRBRACKET ]
-- On error reduce production stream_pattern -> stream_pattern_component opt_err
-- On SEMI reduce production stream_pattern -> stream_pattern_component opt_err
-- On GREATERRBRACKET reduce production stream_pattern -> stream_pattern_component opt_err

State 896:
parser_case -> LBRACKETLESS stream_pattern . opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS stream_pattern . opt_semi error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
stream_pattern -> stream_pattern . SEMI stream_pattern_component opt_err [ error SEMI GREATERRBRACKET ]
-- On SEMI shift to state 897
-- On opt_semi shift to state 903
-- On error reduce production opt_semi -> 
-- On GREATERRBRACKET reduce production opt_semi -> 

State 897:
opt_semi -> SEMI . [ error GREATERRBRACKET ]
stream_pattern -> stream_pattern SEMI . stream_pattern_component opt_err [ error SEMI GREATERRBRACKET ]
-- On UNDERSCORE shift to state 37
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 51
-- On STRING shift to state 21
-- On QUOTE shift to state 271
-- On LPAREN shift to state 45
-- On LIDENT shift to state 47
-- On LBRACKET shift to state 50
-- On LBRACE shift to state 53
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 65
-- On val_ident shift to state 68
-- On stream_pattern_component shift to state 898
-- On simple_pattern shift to state 69
-- On signed_constant shift to state 70
-- On pattern_comma_list shift to state 71
-- On pattern shift to state 900
-- On mod_longident shift to state 76
-- On constr_longident shift to state 79
-- On constant shift to state 81
-- On error reduce production opt_semi -> SEMI
-- On GREATERRBRACKET reduce production opt_semi -> SEMI

State 898:
stream_pattern -> stream_pattern SEMI stream_pattern_component . opt_err [ error SEMI GREATERRBRACKET ]
-- On QUESTION shift to state 893
-- On opt_err shift to state 899
-- On error reduce production opt_err -> 
-- On SEMI reduce production opt_err -> 
-- On GREATERRBRACKET reduce production opt_err -> 

State 899:
stream_pattern -> stream_pattern SEMI stream_pattern_component opt_err . [ error SEMI GREATERRBRACKET ]
-- On error reduce production stream_pattern -> stream_pattern SEMI stream_pattern_component opt_err
-- On SEMI reduce production stream_pattern -> stream_pattern SEMI stream_pattern_component opt_err
-- On GREATERRBRACKET reduce production stream_pattern -> stream_pattern SEMI stream_pattern_component opt_err

State 900:
pattern -> pattern . AS val_ident [ error SEMI QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . COLONCOLON pattern [ error SEMI QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON BAR AS ]
pattern -> pattern . BAR pattern [ error SEMI QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON BAR AS ]
pattern_comma_list -> pattern . COMMA pattern [ error SEMI QUESTION GREATERRBRACKET EQUAL COMMA COLONCOLON BAR AS ]
stream_pattern_component -> pattern . EQUAL expr [ error SEMI QUESTION GREATERRBRACKET ]
stream_pattern_component -> pattern . [ error SEMI QUESTION GREATERRBRACKET ]
-- On EQUAL shift to state 901
-- On COMMA shift to state 83
-- On COLONCOLON shift to state 74
-- On BAR shift to state 85
-- On AS shift to state 87
-- On error reduce production stream_pattern_component -> pattern
-- On SEMI reduce production stream_pattern_component -> pattern
-- On QUESTION reduce production stream_pattern_component -> pattern
-- On GREATERRBRACKET reduce production stream_pattern_component -> pattern

State 901:
stream_pattern_component -> pattern EQUAL . expr [ error SEMI QUESTION GREATERRBRACKET ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 902
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 902:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
stream_pattern_component -> pattern EQUAL expr . [ error SEMI QUESTION GREATERRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production stream_pattern_component -> pattern EQUAL expr
-- On SEMI reduce production stream_pattern_component -> pattern EQUAL expr
-- On QUESTION reduce production stream_pattern_component -> pattern EQUAL expr
-- On GREATERRBRACKET reduce production stream_pattern_component -> pattern EQUAL expr

State 903:
parser_case -> LBRACKETLESS stream_pattern opt_semi . GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS stream_pattern opt_semi . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 904
-- On GREATERRBRACKET shift to state 905

State 904:
parser_case -> LBRACKETLESS stream_pattern opt_semi error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On WHILE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On UIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TYPE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TRY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TRUE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On THEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On STRING reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On STAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SHARP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On PARSER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On OR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On OPEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On NEW reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On MODULE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On MINUSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On MATCH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LOC reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LAZY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On IN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On IF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On GREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FUNCTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FUN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FOR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FLOAT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FALSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EOF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On END reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On ELSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On DOWNTO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On DO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On DEF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COMMA reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On CLASS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On CHAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BEGIN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BARBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On ASSERT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error

State 905:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET . opt_pat MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 906
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On MINUSGREATER reduce production opt_pat -> 

State 906:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat . MINUSGREATER seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 907

State 907:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER . seq_expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On seq_expr shift to state 908
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 908:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WHILE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On UIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TYPE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRUE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On THEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STRING reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SHARP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PARSER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OPEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On NEW reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MODULE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MINUSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MATCH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LOC reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LAZY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUNCTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FOR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FLOAT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FALSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EOF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On END reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ELSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DOWNTO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DO reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DEF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COMMA reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CLASS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CHAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BEGIN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ASSERT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr

State 909:
expr -> PARSER opt_pat opt_bar parser_cases . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_cases -> parser_cases . BAR parser_case [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 886
-- On WITH reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On WHILE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On UIDENT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TYPE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TRY reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TRUE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TO reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On THEN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SUBTRACTIVE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On STRING reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On STAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SHARP reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SEMISEMI reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SEMI reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On PREFIXOP reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On PARSER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On OR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On OPEN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On NEW reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On MODULE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On MINUSGREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On MATCH reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LPAREN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LOC reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LIDENT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LESSGREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKETLESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKETBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACELESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACEBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LAZY reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP4 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP3 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP2 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP1 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP0 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On IN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On IF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On GREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FUNCTION reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FUN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FOR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FLOAT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FALSE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EXTERNAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EXCEPTION reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EQUAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EOF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On END reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On ELSE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On DOWNTO reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On DO reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On DEF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COMMA reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLONEQUAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLONCOLON reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On CLASS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On CHAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On BEGIN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On BARBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On ASSERT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AND reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AMPERSAND reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AMPERAMPER reduce production expr -> PARSER opt_pat opt_bar parser_cases

State 910:
expr -> MATCH seq_expr . WITH opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH seq_expr . WITH PARSER opt_pat opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH shift to state 911

State 911:
expr -> MATCH seq_expr WITH . opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> MATCH seq_expr WITH . PARSER opt_pat opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On PARSER shift to state 912
-- On BAR shift to state 268
-- On opt_bar shift to state 919
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 912:
expr -> MATCH seq_expr WITH PARSER . opt_pat opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 913
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On LBRACKETLESS reduce production opt_pat -> 
-- On BAR reduce production opt_pat -> 

State 913:
expr -> MATCH seq_expr WITH PARSER opt_pat . opt_bar parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 268
-- On opt_bar shift to state 914
-- On LBRACKETLESS reduce production opt_bar -> 

State 914:
expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar . parser_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 270
-- On parser_cases shift to state 915
-- On parser_case shift to state 918

State 915:
expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_cases -> parser_cases . BAR parser_case [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 916
-- On error reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On WITH reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On WHILE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On VIRTUAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On VAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On UIDENT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TYPE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TRY reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On TRUE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SUBTRACTIVE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On STRING reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On STAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SHARP reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SEMISEMI reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On SEMI reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On RPAREN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On RBRACKET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On RBRACE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On QUESTION reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On PREFIXOP reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On PARSER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On OR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On OPEN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On NEW reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On MODULE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On METHOD reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On MATCH reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LPAREN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LOC reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LIDENT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LESSGREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKETLESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKETBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACKET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACELESS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACEBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LBRACE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On LAZY reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INHERIT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP4 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP3 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP2 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP1 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On INFIXOP0 reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On IN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On IF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On GREATERRBRACKET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On GREATERRBRACE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On GREATERGREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On GREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FUNCTION reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FUN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FOR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FLOAT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On FALSE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EXTERNAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EXCEPTION reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EQUAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On EOF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On END reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On ELSE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On DONE reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On DEF reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COMMA reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLONGREATER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLONEQUAL reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLONCOLON reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On COLON reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On CLASS reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On CHAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On BEGIN reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On BARRBRACKET reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On BARBAR reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On ASSERT reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AND reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AMPERSAND reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases
-- On AMPERAMPER reduce production expr -> MATCH seq_expr WITH PARSER opt_pat opt_bar parser_cases

State 916:
parser_cases -> parser_cases BAR . parser_case [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LBRACKETLESS shift to state 270
-- On parser_case shift to state 917

State 917:
parser_cases -> parser_cases BAR parser_case . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production parser_cases -> parser_cases BAR parser_case
-- On WITH reduce production parser_cases -> parser_cases BAR parser_case
-- On WHILE reduce production parser_cases -> parser_cases BAR parser_case
-- On VIRTUAL reduce production parser_cases -> parser_cases BAR parser_case
-- On VAL reduce production parser_cases -> parser_cases BAR parser_case
-- On UIDENT reduce production parser_cases -> parser_cases BAR parser_case
-- On TYPE reduce production parser_cases -> parser_cases BAR parser_case
-- On TRY reduce production parser_cases -> parser_cases BAR parser_case
-- On TRUE reduce production parser_cases -> parser_cases BAR parser_case
-- On SUBTRACTIVE reduce production parser_cases -> parser_cases BAR parser_case
-- On STRING reduce production parser_cases -> parser_cases BAR parser_case
-- On STAR reduce production parser_cases -> parser_cases BAR parser_case
-- On SHARP reduce production parser_cases -> parser_cases BAR parser_case
-- On SEMISEMI reduce production parser_cases -> parser_cases BAR parser_case
-- On SEMI reduce production parser_cases -> parser_cases BAR parser_case
-- On RPAREN reduce production parser_cases -> parser_cases BAR parser_case
-- On RBRACKET reduce production parser_cases -> parser_cases BAR parser_case
-- On RBRACE reduce production parser_cases -> parser_cases BAR parser_case
-- On QUESTION reduce production parser_cases -> parser_cases BAR parser_case
-- On PREFIXOP reduce production parser_cases -> parser_cases BAR parser_case
-- On PARSER reduce production parser_cases -> parser_cases BAR parser_case
-- On OR reduce production parser_cases -> parser_cases BAR parser_case
-- On OPEN reduce production parser_cases -> parser_cases BAR parser_case
-- On NEW reduce production parser_cases -> parser_cases BAR parser_case
-- On MODULE reduce production parser_cases -> parser_cases BAR parser_case
-- On METHOD reduce production parser_cases -> parser_cases BAR parser_case
-- On MATCH reduce production parser_cases -> parser_cases BAR parser_case
-- On LPAREN reduce production parser_cases -> parser_cases BAR parser_case
-- On LOC reduce production parser_cases -> parser_cases BAR parser_case
-- On LIDENT reduce production parser_cases -> parser_cases BAR parser_case
-- On LET reduce production parser_cases -> parser_cases BAR parser_case
-- On LESSGREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On LESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKETLESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKETBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACKET reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACELESS reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACEBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On LBRACE reduce production parser_cases -> parser_cases BAR parser_case
-- On LAZY reduce production parser_cases -> parser_cases BAR parser_case
-- On INT reduce production parser_cases -> parser_cases BAR parser_case
-- On INHERIT reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP4 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP3 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP2 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP1 reduce production parser_cases -> parser_cases BAR parser_case
-- On INFIXOP0 reduce production parser_cases -> parser_cases BAR parser_case
-- On IN reduce production parser_cases -> parser_cases BAR parser_case
-- On IF reduce production parser_cases -> parser_cases BAR parser_case
-- On GREATERRBRACKET reduce production parser_cases -> parser_cases BAR parser_case
-- On GREATERRBRACE reduce production parser_cases -> parser_cases BAR parser_case
-- On GREATERGREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On GREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On FUNCTION reduce production parser_cases -> parser_cases BAR parser_case
-- On FUN reduce production parser_cases -> parser_cases BAR parser_case
-- On FOR reduce production parser_cases -> parser_cases BAR parser_case
-- On FLOAT reduce production parser_cases -> parser_cases BAR parser_case
-- On FALSE reduce production parser_cases -> parser_cases BAR parser_case
-- On EXTERNAL reduce production parser_cases -> parser_cases BAR parser_case
-- On EXCEPTION reduce production parser_cases -> parser_cases BAR parser_case
-- On EQUAL reduce production parser_cases -> parser_cases BAR parser_case
-- On EOF reduce production parser_cases -> parser_cases BAR parser_case
-- On END reduce production parser_cases -> parser_cases BAR parser_case
-- On ELSE reduce production parser_cases -> parser_cases BAR parser_case
-- On DONE reduce production parser_cases -> parser_cases BAR parser_case
-- On DEF reduce production parser_cases -> parser_cases BAR parser_case
-- On COMMA reduce production parser_cases -> parser_cases BAR parser_case
-- On COLONGREATER reduce production parser_cases -> parser_cases BAR parser_case
-- On COLONEQUAL reduce production parser_cases -> parser_cases BAR parser_case
-- On COLONCOLON reduce production parser_cases -> parser_cases BAR parser_case
-- On COLON reduce production parser_cases -> parser_cases BAR parser_case
-- On CLASS reduce production parser_cases -> parser_cases BAR parser_case
-- On CHAR reduce production parser_cases -> parser_cases BAR parser_case
-- On BEGIN reduce production parser_cases -> parser_cases BAR parser_case
-- On BARRBRACKET reduce production parser_cases -> parser_cases BAR parser_case
-- On BARBAR reduce production parser_cases -> parser_cases BAR parser_case
-- On BAR reduce production parser_cases -> parser_cases BAR parser_case
-- On ASSERT reduce production parser_cases -> parser_cases BAR parser_case
-- On AND reduce production parser_cases -> parser_cases BAR parser_case
-- On AMPERSAND reduce production parser_cases -> parser_cases BAR parser_case
-- On AMPERAMPER reduce production parser_cases -> parser_cases BAR parser_case

State 918:
parser_cases -> parser_case . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production parser_cases -> parser_case
-- On WITH reduce production parser_cases -> parser_case
-- On WHILE reduce production parser_cases -> parser_case
-- On VIRTUAL reduce production parser_cases -> parser_case
-- On VAL reduce production parser_cases -> parser_case
-- On UIDENT reduce production parser_cases -> parser_case
-- On TYPE reduce production parser_cases -> parser_case
-- On TRY reduce production parser_cases -> parser_case
-- On TRUE reduce production parser_cases -> parser_case
-- On SUBTRACTIVE reduce production parser_cases -> parser_case
-- On STRING reduce production parser_cases -> parser_case
-- On STAR reduce production parser_cases -> parser_case
-- On SHARP reduce production parser_cases -> parser_case
-- On SEMISEMI reduce production parser_cases -> parser_case
-- On SEMI reduce production parser_cases -> parser_case
-- On RPAREN reduce production parser_cases -> parser_case
-- On RBRACKET reduce production parser_cases -> parser_case
-- On RBRACE reduce production parser_cases -> parser_case
-- On QUESTION reduce production parser_cases -> parser_case
-- On PREFIXOP reduce production parser_cases -> parser_case
-- On PARSER reduce production parser_cases -> parser_case
-- On OR reduce production parser_cases -> parser_case
-- On OPEN reduce production parser_cases -> parser_case
-- On NEW reduce production parser_cases -> parser_case
-- On MODULE reduce production parser_cases -> parser_case
-- On METHOD reduce production parser_cases -> parser_case
-- On MATCH reduce production parser_cases -> parser_case
-- On LPAREN reduce production parser_cases -> parser_case
-- On LOC reduce production parser_cases -> parser_case
-- On LIDENT reduce production parser_cases -> parser_case
-- On LET reduce production parser_cases -> parser_case
-- On LESSGREATER reduce production parser_cases -> parser_case
-- On LESS reduce production parser_cases -> parser_case
-- On LBRACKETLESS reduce production parser_cases -> parser_case
-- On LBRACKETBAR reduce production parser_cases -> parser_case
-- On LBRACKET reduce production parser_cases -> parser_case
-- On LBRACELESS reduce production parser_cases -> parser_case
-- On LBRACEBAR reduce production parser_cases -> parser_case
-- On LBRACE reduce production parser_cases -> parser_case
-- On LAZY reduce production parser_cases -> parser_case
-- On INT reduce production parser_cases -> parser_case
-- On INHERIT reduce production parser_cases -> parser_case
-- On INFIXOP4 reduce production parser_cases -> parser_case
-- On INFIXOP3 reduce production parser_cases -> parser_case
-- On INFIXOP2 reduce production parser_cases -> parser_case
-- On INFIXOP1 reduce production parser_cases -> parser_case
-- On INFIXOP0 reduce production parser_cases -> parser_case
-- On IN reduce production parser_cases -> parser_case
-- On IF reduce production parser_cases -> parser_case
-- On GREATERRBRACKET reduce production parser_cases -> parser_case
-- On GREATERRBRACE reduce production parser_cases -> parser_case
-- On GREATERGREATER reduce production parser_cases -> parser_case
-- On GREATER reduce production parser_cases -> parser_case
-- On FUNCTION reduce production parser_cases -> parser_case
-- On FUN reduce production parser_cases -> parser_case
-- On FOR reduce production parser_cases -> parser_case
-- On FLOAT reduce production parser_cases -> parser_case
-- On FALSE reduce production parser_cases -> parser_case
-- On EXTERNAL reduce production parser_cases -> parser_case
-- On EXCEPTION reduce production parser_cases -> parser_case
-- On EQUAL reduce production parser_cases -> parser_case
-- On EOF reduce production parser_cases -> parser_case
-- On END reduce production parser_cases -> parser_case
-- On ELSE reduce production parser_cases -> parser_case
-- On DONE reduce production parser_cases -> parser_case
-- On DEF reduce production parser_cases -> parser_case
-- On COMMA reduce production parser_cases -> parser_case
-- On COLONGREATER reduce production parser_cases -> parser_case
-- On COLONEQUAL reduce production parser_cases -> parser_case
-- On COLONCOLON reduce production parser_cases -> parser_case
-- On COLON reduce production parser_cases -> parser_case
-- On CLASS reduce production parser_cases -> parser_case
-- On CHAR reduce production parser_cases -> parser_case
-- On BEGIN reduce production parser_cases -> parser_case
-- On BARRBRACKET reduce production parser_cases -> parser_case
-- On BARBAR reduce production parser_cases -> parser_case
-- On BAR reduce production parser_cases -> parser_case
-- On ASSERT reduce production parser_cases -> parser_case
-- On AND reduce production parser_cases -> parser_case
-- On AMPERSAND reduce production parser_cases -> parser_case
-- On AMPERAMPER reduce production parser_cases -> parser_case

State 919:
expr -> MATCH seq_expr WITH opt_bar . match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 421
-- On mod_longident shift to state 303
-- On match_cases shift to state 920
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 920:
expr -> MATCH seq_expr WITH opt_bar match_cases . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 770
-- On error reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On WITH reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On WHILE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On VIRTUAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On VAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On UIDENT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TYPE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TRY reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On TRUE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On STRING reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On STAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SHARP reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SEMISEMI reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On SEMI reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On RPAREN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On RBRACKET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On RBRACE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On QUESTION reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On PREFIXOP reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On PARSER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On OR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On OPEN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On NEW reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On MODULE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On METHOD reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On MATCH reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LPAREN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LOC reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LIDENT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LESSGREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACKET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACELESS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACEBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LBRACE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On LAZY reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INHERIT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP4 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP3 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP2 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP1 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On INFIXOP0 reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On IN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On IF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On GREATERRBRACKET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On GREATERRBRACE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On GREATERGREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On GREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FUNCTION reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FUN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FOR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FLOAT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On FALSE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EXTERNAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EXCEPTION reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EQUAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On EOF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On END reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On ELSE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On DONE reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On DEF reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COMMA reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLONGREATER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLONEQUAL reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLONCOLON reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On COLON reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On CLASS reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On CHAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On BEGIN reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On BARRBRACKET reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On BARBAR reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On ASSERT reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AND reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AMPERSAND reduce production expr -> MATCH seq_expr WITH opt_bar match_cases
-- On AMPERAMPER reduce production expr -> MATCH seq_expr WITH opt_bar match_cases

State 921:
expr -> expr . COLONCOLON expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error SUBTRACTIVE STAR SEMI QUESTION OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATERRBRACKET GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
stream_pattern_component -> QUOTE pattern WHEN expr . [ error SEMI QUESTION GREATERRBRACKET ]
-- On SUBTRACTIVE shift to state 502
-- On STAR shift to state 504
-- On OR shift to state 512
-- On LESSGREATER shift to state 514
-- On LESS shift to state 522
-- On INFIXOP4 shift to state 506
-- On INFIXOP3 shift to state 510
-- On INFIXOP2 shift to state 516
-- On INFIXOP1 shift to state 518
-- On INFIXOP0 shift to state 524
-- On GREATER shift to state 526
-- On EQUAL shift to state 528
-- On COMMA shift to state 537
-- On COLONEQUAL shift to state 539
-- On COLONCOLON shift to state 520
-- On BARBAR shift to state 530
-- On AMPERSAND shift to state 532
-- On AMPERAMPER shift to state 534
-- On error reduce production stream_pattern_component -> QUOTE pattern WHEN expr
-- On SEMI reduce production stream_pattern_component -> QUOTE pattern WHEN expr
-- On QUESTION reduce production stream_pattern_component -> QUOTE pattern WHEN expr
-- On GREATERRBRACKET reduce production stream_pattern_component -> QUOTE pattern WHEN expr

State 922:
parser_case -> LBRACKETLESS GREATERRBRACKET . opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 923
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On MINUSGREATER reduce production opt_pat -> 

State 923:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat . MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 924

State 924:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 925
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 925:
parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WITH reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WHILE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On VIRTUAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On VAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On UIDENT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TYPE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRY reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRUE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STRING reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SHARP reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMI reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RPAREN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RBRACKET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RBRACE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On QUESTION reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PARSER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OPEN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On NEW reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MODULE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On METHOD reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MATCH reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LPAREN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LOC reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LIDENT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LAZY reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INHERIT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERRBRACKET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERRBRACE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERGREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUNCTION reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FOR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FLOAT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FALSE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EQUAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EOF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On END reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ELSE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DONE reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DEF reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COMMA reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONGREATER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLON reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CLASS reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CHAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BEGIN reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARRBRACKET reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARBAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BAR reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ASSERT reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AND reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS GREATERRBRACKET opt_pat MINUSGREATER seq_expr

State 926:
parser_case -> LBRACKETLESS stream_pattern . opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS stream_pattern . opt_semi error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
stream_pattern -> stream_pattern . SEMI stream_pattern_component opt_err [ error SEMI GREATERRBRACKET ]
-- On SEMI shift to state 897
-- On opt_semi shift to state 927
-- On error reduce production opt_semi -> 
-- On GREATERRBRACKET reduce production opt_semi -> 

State 927:
parser_case -> LBRACKETLESS stream_pattern opt_semi . GREATERRBRACKET opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_case -> LBRACKETLESS stream_pattern opt_semi . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 928
-- On GREATERRBRACKET shift to state 929

State 928:
parser_case -> LBRACKETLESS stream_pattern opt_semi error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On WITH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On WHILE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On VIRTUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On VAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On UIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TYPE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TRY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On TRUE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On STRING reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On STAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SHARP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On SEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On RPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On RBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On RBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On QUESTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On PARSER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On OR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On OPEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On NEW reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On MODULE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On METHOD reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On MATCH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LOC reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On LAZY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INHERIT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On IN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On IF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On GREATERRBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On GREATERRBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On GREATERGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On GREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FUNCTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FUN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FOR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FLOAT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On FALSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On EOF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On END reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On ELSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On DONE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On DEF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COMMA reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLONGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On COLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On CLASS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On CHAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BEGIN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BARRBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BARBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On BAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On ASSERT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi error

State 929:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET . opt_pat MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 265
-- On signed_constant shift to state 266
-- On opt_pat shift to state 930
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On MINUSGREATER reduce production opt_pat -> 

State 930:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat . MINUSGREATER seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On MINUSGREATER shift to state 931

State 931:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER . seq_expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 932
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 932:
parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WITH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On WHILE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On VIRTUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On VAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On UIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TYPE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On TRUE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SUBTRACTIVE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STRING reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On STAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SHARP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMISEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On SEMI reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On RBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On QUESTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PREFIXOP reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On PARSER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On OPEN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On NEW reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MODULE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On METHOD reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On MATCH reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LPAREN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LOC reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LIDENT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESSGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETLESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKETBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACELESS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACEBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On LAZY reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INHERIT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP4 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP3 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP2 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP1 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On INFIXOP0 reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On IF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERRBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERRBRACE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATERGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On GREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUNCTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FUN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FOR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FLOAT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On FALSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXTERNAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EXCEPTION reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On EOF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On END reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ELSE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DONE reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On DEF reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COMMA reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONGREATER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONEQUAL reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLONCOLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On COLON reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CLASS reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On CHAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BEGIN reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARRBRACKET reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BARBAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On BAR reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On ASSERT reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERSAND reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr
-- On AMPERAMPER reduce production parser_case -> LBRACKETLESS stream_pattern opt_semi GREATERRBRACKET opt_pat MINUSGREATER seq_expr

State 933:
expr -> PARSER opt_pat opt_bar parser_cases . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
parser_cases -> parser_cases . BAR parser_case [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 916
-- On error reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On WITH reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On WHILE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On VIRTUAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On VAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On UIDENT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TYPE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TRY reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On TRUE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SUBTRACTIVE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On STRING reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On STAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SHARP reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SEMISEMI reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On SEMI reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On RPAREN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On RBRACKET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On RBRACE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On QUESTION reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On PREFIXOP reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On PARSER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On OR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On OPEN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On NEW reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On MODULE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On METHOD reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On MATCH reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LPAREN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LOC reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LIDENT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LESSGREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKETLESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKETBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACKET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACELESS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACEBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LBRACE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On LAZY reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INHERIT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP4 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP3 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP2 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP1 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On INFIXOP0 reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On IN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On IF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On GREATERRBRACKET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On GREATERRBRACE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On GREATERGREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On GREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FUNCTION reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FUN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FOR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FLOAT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On FALSE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EXTERNAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EXCEPTION reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EQUAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On EOF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On END reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On ELSE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On DONE reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On DEF reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COMMA reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLONGREATER reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLONEQUAL reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLONCOLON reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On COLON reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On CLASS reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On CHAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On BEGIN reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On BARRBRACKET reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On BARBAR reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On ASSERT reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AND reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AMPERSAND reduce production expr -> PARSER opt_pat opt_bar parser_cases
-- On AMPERAMPER reduce production expr -> PARSER opt_pat opt_bar parser_cases

State 934:
expr -> expr . COLONCOLON expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> SUBTRACTIVE expr . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> SUBTRACTIVE expr
-- On WITH reduce production expr -> SUBTRACTIVE expr
-- On WHILE reduce production expr -> SUBTRACTIVE expr
-- On VIRTUAL reduce production expr -> SUBTRACTIVE expr
-- On VAL reduce production expr -> SUBTRACTIVE expr
-- On UIDENT reduce production expr -> SUBTRACTIVE expr
-- On TYPE reduce production expr -> SUBTRACTIVE expr
-- On TRY reduce production expr -> SUBTRACTIVE expr
-- On TRUE reduce production expr -> SUBTRACTIVE expr
-- On SUBTRACTIVE reduce production expr -> SUBTRACTIVE expr
-- On STRING reduce production expr -> SUBTRACTIVE expr
-- On STAR reduce production expr -> SUBTRACTIVE expr
-- On SHARP reduce production expr -> SUBTRACTIVE expr
-- On SEMISEMI reduce production expr -> SUBTRACTIVE expr
-- On SEMI reduce production expr -> SUBTRACTIVE expr
-- On RPAREN reduce production expr -> SUBTRACTIVE expr
-- On RBRACKET reduce production expr -> SUBTRACTIVE expr
-- On RBRACE reduce production expr -> SUBTRACTIVE expr
-- On QUESTION reduce production expr -> SUBTRACTIVE expr
-- On PREFIXOP reduce production expr -> SUBTRACTIVE expr
-- On PARSER reduce production expr -> SUBTRACTIVE expr
-- On OR reduce production expr -> SUBTRACTIVE expr
-- On OPEN reduce production expr -> SUBTRACTIVE expr
-- On NEW reduce production expr -> SUBTRACTIVE expr
-- On MODULE reduce production expr -> SUBTRACTIVE expr
-- On METHOD reduce production expr -> SUBTRACTIVE expr
-- On MATCH reduce production expr -> SUBTRACTIVE expr
-- On LPAREN reduce production expr -> SUBTRACTIVE expr
-- On LOC reduce production expr -> SUBTRACTIVE expr
-- On LIDENT reduce production expr -> SUBTRACTIVE expr
-- On LET reduce production expr -> SUBTRACTIVE expr
-- On LESSGREATER reduce production expr -> SUBTRACTIVE expr
-- On LESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACKETLESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACKETBAR reduce production expr -> SUBTRACTIVE expr
-- On LBRACKET reduce production expr -> SUBTRACTIVE expr
-- On LBRACELESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACEBAR reduce production expr -> SUBTRACTIVE expr
-- On LBRACE reduce production expr -> SUBTRACTIVE expr
-- On LAZY reduce production expr -> SUBTRACTIVE expr
-- On INT reduce production expr -> SUBTRACTIVE expr
-- On INHERIT reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP4 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP3 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP2 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP1 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP0 reduce production expr -> SUBTRACTIVE expr
-- On IN reduce production expr -> SUBTRACTIVE expr
-- On IF reduce production expr -> SUBTRACTIVE expr
-- On GREATERRBRACKET reduce production expr -> SUBTRACTIVE expr
-- On GREATERRBRACE reduce production expr -> SUBTRACTIVE expr
-- On GREATERGREATER reduce production expr -> SUBTRACTIVE expr
-- On GREATER reduce production expr -> SUBTRACTIVE expr
-- On FUNCTION reduce production expr -> SUBTRACTIVE expr
-- On FUN reduce production expr -> SUBTRACTIVE expr
-- On FOR reduce production expr -> SUBTRACTIVE expr
-- On FLOAT reduce production expr -> SUBTRACTIVE expr
-- On FALSE reduce production expr -> SUBTRACTIVE expr
-- On EXTERNAL reduce production expr -> SUBTRACTIVE expr
-- On EXCEPTION reduce production expr -> SUBTRACTIVE expr
-- On EQUAL reduce production expr -> SUBTRACTIVE expr
-- On EOF reduce production expr -> SUBTRACTIVE expr
-- On END reduce production expr -> SUBTRACTIVE expr
-- On ELSE reduce production expr -> SUBTRACTIVE expr
-- On DONE reduce production expr -> SUBTRACTIVE expr
-- On DEF reduce production expr -> SUBTRACTIVE expr
-- On COMMA reduce production expr -> SUBTRACTIVE expr
-- On COLONGREATER reduce production expr -> SUBTRACTIVE expr
-- On COLONEQUAL reduce production expr -> SUBTRACTIVE expr
-- On COLONCOLON reduce production expr -> SUBTRACTIVE expr
-- On COLON reduce production expr -> SUBTRACTIVE expr
-- On CLASS reduce production expr -> SUBTRACTIVE expr
-- On CHAR reduce production expr -> SUBTRACTIVE expr
-- On BEGIN reduce production expr -> SUBTRACTIVE expr
-- On BARRBRACKET reduce production expr -> SUBTRACTIVE expr
-- On BARBAR reduce production expr -> SUBTRACTIVE expr
-- On BAR reduce production expr -> SUBTRACTIVE expr
-- On ASSERT reduce production expr -> SUBTRACTIVE expr
-- On AND reduce production expr -> SUBTRACTIVE expr
-- On AMPERSAND reduce production expr -> SUBTRACTIVE expr
-- On AMPERAMPER reduce production expr -> SUBTRACTIVE expr

State 935:
expr -> TRY seq_expr . WITH opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 936
-- On WITH shift to state 937

State 936:
expr -> TRY seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> TRY seq_expr error
-- On WITH reduce production expr -> TRY seq_expr error
-- On WHILE reduce production expr -> TRY seq_expr error
-- On VIRTUAL reduce production expr -> TRY seq_expr error
-- On VAL reduce production expr -> TRY seq_expr error
-- On UIDENT reduce production expr -> TRY seq_expr error
-- On TYPE reduce production expr -> TRY seq_expr error
-- On TRY reduce production expr -> TRY seq_expr error
-- On TRUE reduce production expr -> TRY seq_expr error
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr error
-- On STRING reduce production expr -> TRY seq_expr error
-- On STAR reduce production expr -> TRY seq_expr error
-- On SHARP reduce production expr -> TRY seq_expr error
-- On SEMISEMI reduce production expr -> TRY seq_expr error
-- On SEMI reduce production expr -> TRY seq_expr error
-- On RPAREN reduce production expr -> TRY seq_expr error
-- On RBRACKET reduce production expr -> TRY seq_expr error
-- On RBRACE reduce production expr -> TRY seq_expr error
-- On QUESTION reduce production expr -> TRY seq_expr error
-- On PREFIXOP reduce production expr -> TRY seq_expr error
-- On PARSER reduce production expr -> TRY seq_expr error
-- On OR reduce production expr -> TRY seq_expr error
-- On OPEN reduce production expr -> TRY seq_expr error
-- On NEW reduce production expr -> TRY seq_expr error
-- On MODULE reduce production expr -> TRY seq_expr error
-- On METHOD reduce production expr -> TRY seq_expr error
-- On MATCH reduce production expr -> TRY seq_expr error
-- On LPAREN reduce production expr -> TRY seq_expr error
-- On LOC reduce production expr -> TRY seq_expr error
-- On LIDENT reduce production expr -> TRY seq_expr error
-- On LET reduce production expr -> TRY seq_expr error
-- On LESSGREATER reduce production expr -> TRY seq_expr error
-- On LESS reduce production expr -> TRY seq_expr error
-- On LBRACKETLESS reduce production expr -> TRY seq_expr error
-- On LBRACKETBAR reduce production expr -> TRY seq_expr error
-- On LBRACKET reduce production expr -> TRY seq_expr error
-- On LBRACELESS reduce production expr -> TRY seq_expr error
-- On LBRACEBAR reduce production expr -> TRY seq_expr error
-- On LBRACE reduce production expr -> TRY seq_expr error
-- On LAZY reduce production expr -> TRY seq_expr error
-- On INT reduce production expr -> TRY seq_expr error
-- On INHERIT reduce production expr -> TRY seq_expr error
-- On INFIXOP4 reduce production expr -> TRY seq_expr error
-- On INFIXOP3 reduce production expr -> TRY seq_expr error
-- On INFIXOP2 reduce production expr -> TRY seq_expr error
-- On INFIXOP1 reduce production expr -> TRY seq_expr error
-- On INFIXOP0 reduce production expr -> TRY seq_expr error
-- On IN reduce production expr -> TRY seq_expr error
-- On IF reduce production expr -> TRY seq_expr error
-- On GREATERRBRACKET reduce production expr -> TRY seq_expr error
-- On GREATERRBRACE reduce production expr -> TRY seq_expr error
-- On GREATERGREATER reduce production expr -> TRY seq_expr error
-- On GREATER reduce production expr -> TRY seq_expr error
-- On FUNCTION reduce production expr -> TRY seq_expr error
-- On FUN reduce production expr -> TRY seq_expr error
-- On FOR reduce production expr -> TRY seq_expr error
-- On FLOAT reduce production expr -> TRY seq_expr error
-- On FALSE reduce production expr -> TRY seq_expr error
-- On EXTERNAL reduce production expr -> TRY seq_expr error
-- On EXCEPTION reduce production expr -> TRY seq_expr error
-- On EQUAL reduce production expr -> TRY seq_expr error
-- On EOF reduce production expr -> TRY seq_expr error
-- On END reduce production expr -> TRY seq_expr error
-- On ELSE reduce production expr -> TRY seq_expr error
-- On DONE reduce production expr -> TRY seq_expr error
-- On DEF reduce production expr -> TRY seq_expr error
-- On COMMA reduce production expr -> TRY seq_expr error
-- On COLONGREATER reduce production expr -> TRY seq_expr error
-- On COLONEQUAL reduce production expr -> TRY seq_expr error
-- On COLONCOLON reduce production expr -> TRY seq_expr error
-- On COLON reduce production expr -> TRY seq_expr error
-- On CLASS reduce production expr -> TRY seq_expr error
-- On CHAR reduce production expr -> TRY seq_expr error
-- On BEGIN reduce production expr -> TRY seq_expr error
-- On BARRBRACKET reduce production expr -> TRY seq_expr error
-- On BARBAR reduce production expr -> TRY seq_expr error
-- On BAR reduce production expr -> TRY seq_expr error
-- On ASSERT reduce production expr -> TRY seq_expr error
-- On AND reduce production expr -> TRY seq_expr error
-- On AMPERSAND reduce production expr -> TRY seq_expr error
-- On AMPERAMPER reduce production expr -> TRY seq_expr error

State 937:
expr -> TRY seq_expr WITH . opt_bar match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr WITH . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 938
-- On BAR shift to state 268
-- On opt_bar shift to state 939
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 938:
expr -> TRY seq_expr WITH error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> TRY seq_expr WITH error
-- On WITH reduce production expr -> TRY seq_expr WITH error
-- On WHILE reduce production expr -> TRY seq_expr WITH error
-- On VIRTUAL reduce production expr -> TRY seq_expr WITH error
-- On VAL reduce production expr -> TRY seq_expr WITH error
-- On UIDENT reduce production expr -> TRY seq_expr WITH error
-- On TYPE reduce production expr -> TRY seq_expr WITH error
-- On TRY reduce production expr -> TRY seq_expr WITH error
-- On TRUE reduce production expr -> TRY seq_expr WITH error
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr WITH error
-- On STRING reduce production expr -> TRY seq_expr WITH error
-- On STAR reduce production expr -> TRY seq_expr WITH error
-- On SHARP reduce production expr -> TRY seq_expr WITH error
-- On SEMISEMI reduce production expr -> TRY seq_expr WITH error
-- On SEMI reduce production expr -> TRY seq_expr WITH error
-- On RPAREN reduce production expr -> TRY seq_expr WITH error
-- On RBRACKET reduce production expr -> TRY seq_expr WITH error
-- On RBRACE reduce production expr -> TRY seq_expr WITH error
-- On QUESTION reduce production expr -> TRY seq_expr WITH error
-- On PREFIXOP reduce production expr -> TRY seq_expr WITH error
-- On PARSER reduce production expr -> TRY seq_expr WITH error
-- On OR reduce production expr -> TRY seq_expr WITH error
-- On OPEN reduce production expr -> TRY seq_expr WITH error
-- On NEW reduce production expr -> TRY seq_expr WITH error
-- On MODULE reduce production expr -> TRY seq_expr WITH error
-- On METHOD reduce production expr -> TRY seq_expr WITH error
-- On MATCH reduce production expr -> TRY seq_expr WITH error
-- On LPAREN reduce production expr -> TRY seq_expr WITH error
-- On LOC reduce production expr -> TRY seq_expr WITH error
-- On LIDENT reduce production expr -> TRY seq_expr WITH error
-- On LET reduce production expr -> TRY seq_expr WITH error
-- On LESSGREATER reduce production expr -> TRY seq_expr WITH error
-- On LESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACKETLESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACKETBAR reduce production expr -> TRY seq_expr WITH error
-- On LBRACKET reduce production expr -> TRY seq_expr WITH error
-- On LBRACELESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACEBAR reduce production expr -> TRY seq_expr WITH error
-- On LBRACE reduce production expr -> TRY seq_expr WITH error
-- On LAZY reduce production expr -> TRY seq_expr WITH error
-- On INT reduce production expr -> TRY seq_expr WITH error
-- On INHERIT reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP4 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP3 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP2 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP1 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP0 reduce production expr -> TRY seq_expr WITH error
-- On IN reduce production expr -> TRY seq_expr WITH error
-- On IF reduce production expr -> TRY seq_expr WITH error
-- On GREATERRBRACKET reduce production expr -> TRY seq_expr WITH error
-- On GREATERRBRACE reduce production expr -> TRY seq_expr WITH error
-- On GREATERGREATER reduce production expr -> TRY seq_expr WITH error
-- On GREATER reduce production expr -> TRY seq_expr WITH error
-- On FUNCTION reduce production expr -> TRY seq_expr WITH error
-- On FUN reduce production expr -> TRY seq_expr WITH error
-- On FOR reduce production expr -> TRY seq_expr WITH error
-- On FLOAT reduce production expr -> TRY seq_expr WITH error
-- On FALSE reduce production expr -> TRY seq_expr WITH error
-- On EXTERNAL reduce production expr -> TRY seq_expr WITH error
-- On EXCEPTION reduce production expr -> TRY seq_expr WITH error
-- On EQUAL reduce production expr -> TRY seq_expr WITH error
-- On EOF reduce production expr -> TRY seq_expr WITH error
-- On END reduce production expr -> TRY seq_expr WITH error
-- On ELSE reduce production expr -> TRY seq_expr WITH error
-- On DONE reduce production expr -> TRY seq_expr WITH error
-- On DEF reduce production expr -> TRY seq_expr WITH error
-- On COMMA reduce production expr -> TRY seq_expr WITH error
-- On COLONGREATER reduce production expr -> TRY seq_expr WITH error
-- On COLONEQUAL reduce production expr -> TRY seq_expr WITH error
-- On COLONCOLON reduce production expr -> TRY seq_expr WITH error
-- On COLON reduce production expr -> TRY seq_expr WITH error
-- On CLASS reduce production expr -> TRY seq_expr WITH error
-- On CHAR reduce production expr -> TRY seq_expr WITH error
-- On BEGIN reduce production expr -> TRY seq_expr WITH error
-- On BARRBRACKET reduce production expr -> TRY seq_expr WITH error
-- On BARBAR reduce production expr -> TRY seq_expr WITH error
-- On BAR reduce production expr -> TRY seq_expr WITH error
-- On ASSERT reduce production expr -> TRY seq_expr WITH error
-- On AND reduce production expr -> TRY seq_expr WITH error
-- On AMPERSAND reduce production expr -> TRY seq_expr WITH error
-- On AMPERAMPER reduce production expr -> TRY seq_expr WITH error

State 939:
expr -> TRY seq_expr WITH opt_bar . match_cases [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 421
-- On mod_longident shift to state 303
-- On match_cases shift to state 940
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 940:
expr -> TRY seq_expr WITH opt_bar match_cases . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 770
-- On error reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On WITH reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On WHILE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On VIRTUAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On VAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On UIDENT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TYPE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TRY reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TRUE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On STRING reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On STAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SHARP reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SEMISEMI reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SEMI reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On RPAREN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On RBRACKET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On RBRACE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On QUESTION reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On PREFIXOP reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On PARSER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On OR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On OPEN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On NEW reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On MODULE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On METHOD reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On MATCH reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LPAREN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LOC reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LIDENT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LESSGREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACELESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACEBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LAZY reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INHERIT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP4 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP3 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP2 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP1 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP0 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On IN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On IF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On GREATERRBRACKET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On GREATERRBRACE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On GREATERGREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On GREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FUNCTION reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FUN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FOR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FLOAT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FALSE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EXTERNAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EXCEPTION reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EQUAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EOF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On END reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On ELSE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On DONE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On DEF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COMMA reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLONGREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLONEQUAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLONCOLON reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLON reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On CLASS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On CHAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On BEGIN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On BARRBRACKET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On BARBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On ASSERT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AND reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AMPERSAND reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AMPERAMPER reduce production expr -> TRY seq_expr WITH opt_bar match_cases

State 941:
simple_expr -> LPAREN SHARP . label RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On LIDENT shift to state 141
-- On label shift to state 942

State 942:
simple_expr -> LPAREN SHARP label . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 943

State 943:
simple_expr -> LPAREN SHARP label RPAREN . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On WHILE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TYPE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TRY reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TRUE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On TO reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On THEN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On STRING reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On STAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SHARP reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On SEMI reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On PARSER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On OR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On OPEN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On NEW reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On MODULE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On MINUSGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On MATCH reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LOC reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On LAZY reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On IN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On IF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On GREATER reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FUN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FOR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On FALSE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On EOF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On END reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On ELSE reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DOWNTO reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DOT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DO reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On DEF reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COMMA reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On CLASS reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On CHAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On BAR reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AND reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN SHARP label RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN SHARP label RPAREN

State 944:
simple_expr -> LPAREN seq_expr . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> LPAREN seq_expr . type_constraint RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 945
-- On RPAREN shift to state 946
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On type_constraint shift to state 947

State 945:
simple_expr -> LPAREN seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LPAREN seq_expr error
-- On WHILE reduce production simple_expr -> LPAREN seq_expr error
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr error
-- On TYPE reduce production simple_expr -> LPAREN seq_expr error
-- On TRY reduce production simple_expr -> LPAREN seq_expr error
-- On TRUE reduce production simple_expr -> LPAREN seq_expr error
-- On TO reduce production simple_expr -> LPAREN seq_expr error
-- On THEN reduce production simple_expr -> LPAREN seq_expr error
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr error
-- On STRING reduce production simple_expr -> LPAREN seq_expr error
-- On STAR reduce production simple_expr -> LPAREN seq_expr error
-- On SHARP reduce production simple_expr -> LPAREN seq_expr error
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr error
-- On SEMI reduce production simple_expr -> LPAREN seq_expr error
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr error
-- On PARSER reduce production simple_expr -> LPAREN seq_expr error
-- On OR reduce production simple_expr -> LPAREN seq_expr error
-- On OPEN reduce production simple_expr -> LPAREN seq_expr error
-- On NEW reduce production simple_expr -> LPAREN seq_expr error
-- On MODULE reduce production simple_expr -> LPAREN seq_expr error
-- On MINUSGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On MATCH reduce production simple_expr -> LPAREN seq_expr error
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr error
-- On LOC reduce production simple_expr -> LPAREN seq_expr error
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr error
-- On LET reduce production simple_expr -> LPAREN seq_expr error
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr error
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr error
-- On LESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr error
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr error
-- On LAZY reduce production simple_expr -> LPAREN seq_expr error
-- On INT reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr error
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr error
-- On IN reduce production simple_expr -> LPAREN seq_expr error
-- On IF reduce production simple_expr -> LPAREN seq_expr error
-- On GREATER reduce production simple_expr -> LPAREN seq_expr error
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr error
-- On FUN reduce production simple_expr -> LPAREN seq_expr error
-- On FOR reduce production simple_expr -> LPAREN seq_expr error
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr error
-- On FALSE reduce production simple_expr -> LPAREN seq_expr error
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr error
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr error
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr error
-- On EOF reduce production simple_expr -> LPAREN seq_expr error
-- On END reduce production simple_expr -> LPAREN seq_expr error
-- On ELSE reduce production simple_expr -> LPAREN seq_expr error
-- On DOWNTO reduce production simple_expr -> LPAREN seq_expr error
-- On DOT reduce production simple_expr -> LPAREN seq_expr error
-- On DO reduce production simple_expr -> LPAREN seq_expr error
-- On DEF reduce production simple_expr -> LPAREN seq_expr error
-- On COMMA reduce production simple_expr -> LPAREN seq_expr error
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr error
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr error
-- On CLASS reduce production simple_expr -> LPAREN seq_expr error
-- On CHAR reduce production simple_expr -> LPAREN seq_expr error
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr error
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr error
-- On BAR reduce production simple_expr -> LPAREN seq_expr error
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr error
-- On AND reduce production simple_expr -> LPAREN seq_expr error
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr error
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr error

State 946:
simple_expr -> LPAREN seq_expr RPAREN . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On WHILE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TYPE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TRY reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TRUE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On TO reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On THEN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On STRING reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On STAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SHARP reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On SEMI reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On PARSER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On OR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On OPEN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On NEW reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On MODULE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On MINUSGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On MATCH reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LOC reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On LAZY reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On IN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On IF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On GREATER reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FUN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FOR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On FALSE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On EOF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On END reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On ELSE reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DOWNTO reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DOT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DO reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On DEF reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COMMA reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On CLASS reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On CHAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On BAR reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AND reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr RPAREN

State 947:
simple_expr -> LPAREN seq_expr type_constraint . RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On RPAREN shift to state 948

State 948:
simple_expr -> LPAREN seq_expr type_constraint RPAREN . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On WHILE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On UIDENT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TYPE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TRY reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TRUE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On TO reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On THEN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SUBTRACTIVE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On STRING reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On STAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SHARP reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SEMISEMI reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On SEMI reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On PREFIXOP reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On PARSER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On OR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On OPEN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On NEW reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On MODULE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On MINUSGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On MATCH reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LPAREN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LOC reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LIDENT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSLESSGREATERGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSLESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESSGREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKETLESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKETBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACKET reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACELESS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACEBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LBRACE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On LAZY reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP4 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP3 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP2 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP1 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On INFIXOP0 reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On IN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On IF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On GREATER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FUNCTION reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FUN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FOR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FLOAT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On FALSE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EXTERNAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EXCEPTION reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EQUAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On EOF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On END reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On ELSE reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DOWNTO reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DOT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DO reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On DEF reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COMMA reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLONEQUAL reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On COLONCOLON reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On CLASS reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On CHAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BEGIN reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BARBAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On BAR reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On ASSERT reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AND reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AMPERSAND reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN
-- On AMPERAMPER reduce production simple_expr -> LPAREN seq_expr type_constraint RPAREN

State 949:
simple_expr -> simple_expr . DOT label_longident [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr RPAREN [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LPAREN seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr RBRACKET [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . DOT LBRACKET seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> PREFIXOP simple_expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
simple_expr -> simple_expr . SHARP label [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSLESSGREATERGREATER LESSLESS LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DOT DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production simple_expr -> PREFIXOP simple_expr
-- On WHILE reduce production simple_expr -> PREFIXOP simple_expr
-- On UIDENT reduce production simple_expr -> PREFIXOP simple_expr
-- On TYPE reduce production simple_expr -> PREFIXOP simple_expr
-- On TRY reduce production simple_expr -> PREFIXOP simple_expr
-- On TRUE reduce production simple_expr -> PREFIXOP simple_expr
-- On TO reduce production simple_expr -> PREFIXOP simple_expr
-- On THEN reduce production simple_expr -> PREFIXOP simple_expr
-- On SUBTRACTIVE reduce production simple_expr -> PREFIXOP simple_expr
-- On STRING reduce production simple_expr -> PREFIXOP simple_expr
-- On STAR reduce production simple_expr -> PREFIXOP simple_expr
-- On SHARP reduce production simple_expr -> PREFIXOP simple_expr
-- On SEMISEMI reduce production simple_expr -> PREFIXOP simple_expr
-- On SEMI reduce production simple_expr -> PREFIXOP simple_expr
-- On PREFIXOP reduce production simple_expr -> PREFIXOP simple_expr
-- On PARSER reduce production simple_expr -> PREFIXOP simple_expr
-- On OR reduce production simple_expr -> PREFIXOP simple_expr
-- On OPEN reduce production simple_expr -> PREFIXOP simple_expr
-- On NEW reduce production simple_expr -> PREFIXOP simple_expr
-- On MODULE reduce production simple_expr -> PREFIXOP simple_expr
-- On MINUSGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On MATCH reduce production simple_expr -> PREFIXOP simple_expr
-- On LPAREN reduce production simple_expr -> PREFIXOP simple_expr
-- On LOC reduce production simple_expr -> PREFIXOP simple_expr
-- On LIDENT reduce production simple_expr -> PREFIXOP simple_expr
-- On LET reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSLESSGREATERGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSLESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LESSGREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On LESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKETLESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKETBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACKET reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACELESS reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACEBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On LBRACE reduce production simple_expr -> PREFIXOP simple_expr
-- On LAZY reduce production simple_expr -> PREFIXOP simple_expr
-- On INT reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP4 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP3 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP2 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP1 reduce production simple_expr -> PREFIXOP simple_expr
-- On INFIXOP0 reduce production simple_expr -> PREFIXOP simple_expr
-- On IN reduce production simple_expr -> PREFIXOP simple_expr
-- On IF reduce production simple_expr -> PREFIXOP simple_expr
-- On GREATER reduce production simple_expr -> PREFIXOP simple_expr
-- On FUNCTION reduce production simple_expr -> PREFIXOP simple_expr
-- On FUN reduce production simple_expr -> PREFIXOP simple_expr
-- On FOR reduce production simple_expr -> PREFIXOP simple_expr
-- On FLOAT reduce production simple_expr -> PREFIXOP simple_expr
-- On FALSE reduce production simple_expr -> PREFIXOP simple_expr
-- On EXTERNAL reduce production simple_expr -> PREFIXOP simple_expr
-- On EXCEPTION reduce production simple_expr -> PREFIXOP simple_expr
-- On EQUAL reduce production simple_expr -> PREFIXOP simple_expr
-- On EOF reduce production simple_expr -> PREFIXOP simple_expr
-- On END reduce production simple_expr -> PREFIXOP simple_expr
-- On ELSE reduce production simple_expr -> PREFIXOP simple_expr
-- On DOWNTO reduce production simple_expr -> PREFIXOP simple_expr
-- On DOT reduce production simple_expr -> PREFIXOP simple_expr
-- On DO reduce production simple_expr -> PREFIXOP simple_expr
-- On DEF reduce production simple_expr -> PREFIXOP simple_expr
-- On COMMA reduce production simple_expr -> PREFIXOP simple_expr
-- On COLONEQUAL reduce production simple_expr -> PREFIXOP simple_expr
-- On COLONCOLON reduce production simple_expr -> PREFIXOP simple_expr
-- On CLASS reduce production simple_expr -> PREFIXOP simple_expr
-- On CHAR reduce production simple_expr -> PREFIXOP simple_expr
-- On BEGIN reduce production simple_expr -> PREFIXOP simple_expr
-- On BARBAR reduce production simple_expr -> PREFIXOP simple_expr
-- On BAR reduce production simple_expr -> PREFIXOP simple_expr
-- On ASSERT reduce production simple_expr -> PREFIXOP simple_expr
-- On AND reduce production simple_expr -> PREFIXOP simple_expr
-- On AMPERSAND reduce production simple_expr -> PREFIXOP simple_expr
-- On AMPERAMPER reduce production simple_expr -> PREFIXOP simple_expr

State 950:
expr -> expr . COLONCOLON expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> SUBTRACTIVE expr . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> SUBTRACTIVE expr
-- On WHILE reduce production expr -> SUBTRACTIVE expr
-- On UIDENT reduce production expr -> SUBTRACTIVE expr
-- On TYPE reduce production expr -> SUBTRACTIVE expr
-- On TRY reduce production expr -> SUBTRACTIVE expr
-- On TRUE reduce production expr -> SUBTRACTIVE expr
-- On TO reduce production expr -> SUBTRACTIVE expr
-- On THEN reduce production expr -> SUBTRACTIVE expr
-- On SUBTRACTIVE reduce production expr -> SUBTRACTIVE expr
-- On STRING reduce production expr -> SUBTRACTIVE expr
-- On STAR reduce production expr -> SUBTRACTIVE expr
-- On SHARP reduce production expr -> SUBTRACTIVE expr
-- On SEMISEMI reduce production expr -> SUBTRACTIVE expr
-- On SEMI reduce production expr -> SUBTRACTIVE expr
-- On PREFIXOP reduce production expr -> SUBTRACTIVE expr
-- On PARSER reduce production expr -> SUBTRACTIVE expr
-- On OR reduce production expr -> SUBTRACTIVE expr
-- On OPEN reduce production expr -> SUBTRACTIVE expr
-- On NEW reduce production expr -> SUBTRACTIVE expr
-- On MODULE reduce production expr -> SUBTRACTIVE expr
-- On MINUSGREATER reduce production expr -> SUBTRACTIVE expr
-- On MATCH reduce production expr -> SUBTRACTIVE expr
-- On LPAREN reduce production expr -> SUBTRACTIVE expr
-- On LOC reduce production expr -> SUBTRACTIVE expr
-- On LIDENT reduce production expr -> SUBTRACTIVE expr
-- On LET reduce production expr -> SUBTRACTIVE expr
-- On LESSGREATER reduce production expr -> SUBTRACTIVE expr
-- On LESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACKETLESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACKETBAR reduce production expr -> SUBTRACTIVE expr
-- On LBRACKET reduce production expr -> SUBTRACTIVE expr
-- On LBRACELESS reduce production expr -> SUBTRACTIVE expr
-- On LBRACEBAR reduce production expr -> SUBTRACTIVE expr
-- On LBRACE reduce production expr -> SUBTRACTIVE expr
-- On LAZY reduce production expr -> SUBTRACTIVE expr
-- On INT reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP4 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP3 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP2 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP1 reduce production expr -> SUBTRACTIVE expr
-- On INFIXOP0 reduce production expr -> SUBTRACTIVE expr
-- On IN reduce production expr -> SUBTRACTIVE expr
-- On IF reduce production expr -> SUBTRACTIVE expr
-- On GREATER reduce production expr -> SUBTRACTIVE expr
-- On FUNCTION reduce production expr -> SUBTRACTIVE expr
-- On FUN reduce production expr -> SUBTRACTIVE expr
-- On FOR reduce production expr -> SUBTRACTIVE expr
-- On FLOAT reduce production expr -> SUBTRACTIVE expr
-- On FALSE reduce production expr -> SUBTRACTIVE expr
-- On EXTERNAL reduce production expr -> SUBTRACTIVE expr
-- On EXCEPTION reduce production expr -> SUBTRACTIVE expr
-- On EQUAL reduce production expr -> SUBTRACTIVE expr
-- On EOF reduce production expr -> SUBTRACTIVE expr
-- On END reduce production expr -> SUBTRACTIVE expr
-- On ELSE reduce production expr -> SUBTRACTIVE expr
-- On DOWNTO reduce production expr -> SUBTRACTIVE expr
-- On DO reduce production expr -> SUBTRACTIVE expr
-- On DEF reduce production expr -> SUBTRACTIVE expr
-- On COMMA reduce production expr -> SUBTRACTIVE expr
-- On COLONEQUAL reduce production expr -> SUBTRACTIVE expr
-- On COLONCOLON reduce production expr -> SUBTRACTIVE expr
-- On CLASS reduce production expr -> SUBTRACTIVE expr
-- On CHAR reduce production expr -> SUBTRACTIVE expr
-- On BEGIN reduce production expr -> SUBTRACTIVE expr
-- On BARBAR reduce production expr -> SUBTRACTIVE expr
-- On BAR reduce production expr -> SUBTRACTIVE expr
-- On ASSERT reduce production expr -> SUBTRACTIVE expr
-- On AND reduce production expr -> SUBTRACTIVE expr
-- On AMPERSAND reduce production expr -> SUBTRACTIVE expr
-- On AMPERAMPER reduce production expr -> SUBTRACTIVE expr

State 951:
expr -> WHILE seq_expr . DO seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr . DO seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On DO shift to state 952

State 952:
expr -> WHILE seq_expr DO . seq_expr DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr DO . seq_expr error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 953
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 953:
expr -> WHILE seq_expr DO seq_expr . DONE [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr DO seq_expr . error [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 954
-- On DONE shift to state 955

State 954:
expr -> WHILE seq_expr DO seq_expr error . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> WHILE seq_expr DO seq_expr error
-- On WITH reduce production expr -> WHILE seq_expr DO seq_expr error
-- On WHILE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On VIRTUAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On VAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On UIDENT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TYPE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TRY reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TRUE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SUBTRACTIVE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On STRING reduce production expr -> WHILE seq_expr DO seq_expr error
-- On STAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SHARP reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SEMISEMI reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SEMI reduce production expr -> WHILE seq_expr DO seq_expr error
-- On RPAREN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On RBRACKET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On RBRACE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On QUESTION reduce production expr -> WHILE seq_expr DO seq_expr error
-- On PREFIXOP reduce production expr -> WHILE seq_expr DO seq_expr error
-- On PARSER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On OR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On OPEN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On NEW reduce production expr -> WHILE seq_expr DO seq_expr error
-- On MODULE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On METHOD reduce production expr -> WHILE seq_expr DO seq_expr error
-- On MATCH reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LPAREN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LOC reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LIDENT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LESSGREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKETLESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKETBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACELESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACEBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LAZY reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INHERIT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP4 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP3 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP2 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP1 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP0 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On IN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On IF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On GREATERRBRACKET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On GREATERRBRACE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On GREATERGREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On GREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FUNCTION reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FUN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FOR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FLOAT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FALSE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EXTERNAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EXCEPTION reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EQUAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EOF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On END reduce production expr -> WHILE seq_expr DO seq_expr error
-- On ELSE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On DONE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On DEF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COMMA reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLONGREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLONEQUAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLONCOLON reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLON reduce production expr -> WHILE seq_expr DO seq_expr error
-- On CLASS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On CHAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BEGIN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BARRBRACKET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BARBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On ASSERT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AND reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AMPERSAND reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AMPERAMPER reduce production expr -> WHILE seq_expr DO seq_expr error

State 955:
expr -> WHILE seq_expr DO seq_expr DONE . [ error WITH WHILE VIRTUAL VAL UIDENT TYPE TRY TRUE SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI RPAREN RBRACKET RBRACE QUESTION PREFIXOP PARSER OR OPEN NEW MODULE METHOD MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INHERIT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATERRBRACKET GREATERRBRACE GREATERGREATER GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DONE DEF COMMA COLONGREATER COLONEQUAL COLONCOLON COLON CLASS CHAR BEGIN BARRBRACKET BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On WITH reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On WHILE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On VIRTUAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On VAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On UIDENT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TYPE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TRY reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TRUE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SUBTRACTIVE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On STRING reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On STAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SHARP reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SEMISEMI reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SEMI reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On RPAREN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On RBRACKET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On RBRACE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On QUESTION reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On PREFIXOP reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On PARSER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On OR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On OPEN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On NEW reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On MODULE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On METHOD reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On MATCH reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LPAREN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LOC reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LIDENT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LESSGREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKETLESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKETBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACELESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACEBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LAZY reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INHERIT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP4 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP3 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP2 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP1 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP0 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On IN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On IF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On GREATERRBRACKET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On GREATERRBRACE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On GREATERGREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On GREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FUNCTION reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FUN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FOR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FLOAT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FALSE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EXTERNAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EXCEPTION reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EQUAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EOF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On END reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On ELSE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On DONE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On DEF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COMMA reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLONGREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLONEQUAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLONCOLON reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLON reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On CLASS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On CHAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BEGIN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BARRBRACKET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BARBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On ASSERT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AND reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AMPERSAND reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AMPERAMPER reduce production expr -> WHILE seq_expr DO seq_expr DONE

State 956:
expr -> TRY seq_expr . WITH opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . WITH error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 957
-- On WITH shift to state 958

State 957:
expr -> TRY seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> TRY seq_expr error
-- On WHILE reduce production expr -> TRY seq_expr error
-- On UIDENT reduce production expr -> TRY seq_expr error
-- On TYPE reduce production expr -> TRY seq_expr error
-- On TRY reduce production expr -> TRY seq_expr error
-- On TRUE reduce production expr -> TRY seq_expr error
-- On TO reduce production expr -> TRY seq_expr error
-- On THEN reduce production expr -> TRY seq_expr error
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr error
-- On STRING reduce production expr -> TRY seq_expr error
-- On STAR reduce production expr -> TRY seq_expr error
-- On SHARP reduce production expr -> TRY seq_expr error
-- On SEMISEMI reduce production expr -> TRY seq_expr error
-- On SEMI reduce production expr -> TRY seq_expr error
-- On PREFIXOP reduce production expr -> TRY seq_expr error
-- On PARSER reduce production expr -> TRY seq_expr error
-- On OR reduce production expr -> TRY seq_expr error
-- On OPEN reduce production expr -> TRY seq_expr error
-- On NEW reduce production expr -> TRY seq_expr error
-- On MODULE reduce production expr -> TRY seq_expr error
-- On MINUSGREATER reduce production expr -> TRY seq_expr error
-- On MATCH reduce production expr -> TRY seq_expr error
-- On LPAREN reduce production expr -> TRY seq_expr error
-- On LOC reduce production expr -> TRY seq_expr error
-- On LIDENT reduce production expr -> TRY seq_expr error
-- On LET reduce production expr -> TRY seq_expr error
-- On LESSGREATER reduce production expr -> TRY seq_expr error
-- On LESS reduce production expr -> TRY seq_expr error
-- On LBRACKETLESS reduce production expr -> TRY seq_expr error
-- On LBRACKETBAR reduce production expr -> TRY seq_expr error
-- On LBRACKET reduce production expr -> TRY seq_expr error
-- On LBRACELESS reduce production expr -> TRY seq_expr error
-- On LBRACEBAR reduce production expr -> TRY seq_expr error
-- On LBRACE reduce production expr -> TRY seq_expr error
-- On LAZY reduce production expr -> TRY seq_expr error
-- On INT reduce production expr -> TRY seq_expr error
-- On INFIXOP4 reduce production expr -> TRY seq_expr error
-- On INFIXOP3 reduce production expr -> TRY seq_expr error
-- On INFIXOP2 reduce production expr -> TRY seq_expr error
-- On INFIXOP1 reduce production expr -> TRY seq_expr error
-- On INFIXOP0 reduce production expr -> TRY seq_expr error
-- On IN reduce production expr -> TRY seq_expr error
-- On IF reduce production expr -> TRY seq_expr error
-- On GREATER reduce production expr -> TRY seq_expr error
-- On FUNCTION reduce production expr -> TRY seq_expr error
-- On FUN reduce production expr -> TRY seq_expr error
-- On FOR reduce production expr -> TRY seq_expr error
-- On FLOAT reduce production expr -> TRY seq_expr error
-- On FALSE reduce production expr -> TRY seq_expr error
-- On EXTERNAL reduce production expr -> TRY seq_expr error
-- On EXCEPTION reduce production expr -> TRY seq_expr error
-- On EQUAL reduce production expr -> TRY seq_expr error
-- On EOF reduce production expr -> TRY seq_expr error
-- On END reduce production expr -> TRY seq_expr error
-- On ELSE reduce production expr -> TRY seq_expr error
-- On DOWNTO reduce production expr -> TRY seq_expr error
-- On DO reduce production expr -> TRY seq_expr error
-- On DEF reduce production expr -> TRY seq_expr error
-- On COMMA reduce production expr -> TRY seq_expr error
-- On COLONEQUAL reduce production expr -> TRY seq_expr error
-- On COLONCOLON reduce production expr -> TRY seq_expr error
-- On CLASS reduce production expr -> TRY seq_expr error
-- On CHAR reduce production expr -> TRY seq_expr error
-- On BEGIN reduce production expr -> TRY seq_expr error
-- On BARBAR reduce production expr -> TRY seq_expr error
-- On BAR reduce production expr -> TRY seq_expr error
-- On ASSERT reduce production expr -> TRY seq_expr error
-- On AND reduce production expr -> TRY seq_expr error
-- On AMPERSAND reduce production expr -> TRY seq_expr error
-- On AMPERAMPER reduce production expr -> TRY seq_expr error

State 958:
expr -> TRY seq_expr WITH . opt_bar match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> TRY seq_expr WITH . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 959
-- On BAR shift to state 268
-- On opt_bar shift to state 960
-- On UNDERSCORE reduce production opt_bar -> 
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On SUBTRACTIVE reduce production opt_bar -> 
-- On STRING reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LIDENT reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On LBRACE reduce production opt_bar -> 
-- On INT reduce production opt_bar -> 
-- On FLOAT reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On CHAR reduce production opt_bar -> 

State 959:
expr -> TRY seq_expr WITH error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> TRY seq_expr WITH error
-- On WHILE reduce production expr -> TRY seq_expr WITH error
-- On UIDENT reduce production expr -> TRY seq_expr WITH error
-- On TYPE reduce production expr -> TRY seq_expr WITH error
-- On TRY reduce production expr -> TRY seq_expr WITH error
-- On TRUE reduce production expr -> TRY seq_expr WITH error
-- On TO reduce production expr -> TRY seq_expr WITH error
-- On THEN reduce production expr -> TRY seq_expr WITH error
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr WITH error
-- On STRING reduce production expr -> TRY seq_expr WITH error
-- On STAR reduce production expr -> TRY seq_expr WITH error
-- On SHARP reduce production expr -> TRY seq_expr WITH error
-- On SEMISEMI reduce production expr -> TRY seq_expr WITH error
-- On SEMI reduce production expr -> TRY seq_expr WITH error
-- On PREFIXOP reduce production expr -> TRY seq_expr WITH error
-- On PARSER reduce production expr -> TRY seq_expr WITH error
-- On OR reduce production expr -> TRY seq_expr WITH error
-- On OPEN reduce production expr -> TRY seq_expr WITH error
-- On NEW reduce production expr -> TRY seq_expr WITH error
-- On MODULE reduce production expr -> TRY seq_expr WITH error
-- On MINUSGREATER reduce production expr -> TRY seq_expr WITH error
-- On MATCH reduce production expr -> TRY seq_expr WITH error
-- On LPAREN reduce production expr -> TRY seq_expr WITH error
-- On LOC reduce production expr -> TRY seq_expr WITH error
-- On LIDENT reduce production expr -> TRY seq_expr WITH error
-- On LET reduce production expr -> TRY seq_expr WITH error
-- On LESSGREATER reduce production expr -> TRY seq_expr WITH error
-- On LESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACKETLESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACKETBAR reduce production expr -> TRY seq_expr WITH error
-- On LBRACKET reduce production expr -> TRY seq_expr WITH error
-- On LBRACELESS reduce production expr -> TRY seq_expr WITH error
-- On LBRACEBAR reduce production expr -> TRY seq_expr WITH error
-- On LBRACE reduce production expr -> TRY seq_expr WITH error
-- On LAZY reduce production expr -> TRY seq_expr WITH error
-- On INT reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP4 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP3 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP2 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP1 reduce production expr -> TRY seq_expr WITH error
-- On INFIXOP0 reduce production expr -> TRY seq_expr WITH error
-- On IN reduce production expr -> TRY seq_expr WITH error
-- On IF reduce production expr -> TRY seq_expr WITH error
-- On GREATER reduce production expr -> TRY seq_expr WITH error
-- On FUNCTION reduce production expr -> TRY seq_expr WITH error
-- On FUN reduce production expr -> TRY seq_expr WITH error
-- On FOR reduce production expr -> TRY seq_expr WITH error
-- On FLOAT reduce production expr -> TRY seq_expr WITH error
-- On FALSE reduce production expr -> TRY seq_expr WITH error
-- On EXTERNAL reduce production expr -> TRY seq_expr WITH error
-- On EXCEPTION reduce production expr -> TRY seq_expr WITH error
-- On EQUAL reduce production expr -> TRY seq_expr WITH error
-- On EOF reduce production expr -> TRY seq_expr WITH error
-- On END reduce production expr -> TRY seq_expr WITH error
-- On ELSE reduce production expr -> TRY seq_expr WITH error
-- On DOWNTO reduce production expr -> TRY seq_expr WITH error
-- On DO reduce production expr -> TRY seq_expr WITH error
-- On DEF reduce production expr -> TRY seq_expr WITH error
-- On COMMA reduce production expr -> TRY seq_expr WITH error
-- On COLONEQUAL reduce production expr -> TRY seq_expr WITH error
-- On COLONCOLON reduce production expr -> TRY seq_expr WITH error
-- On CLASS reduce production expr -> TRY seq_expr WITH error
-- On CHAR reduce production expr -> TRY seq_expr WITH error
-- On BEGIN reduce production expr -> TRY seq_expr WITH error
-- On BARBAR reduce production expr -> TRY seq_expr WITH error
-- On BAR reduce production expr -> TRY seq_expr WITH error
-- On ASSERT reduce production expr -> TRY seq_expr WITH error
-- On AND reduce production expr -> TRY seq_expr WITH error
-- On AMPERSAND reduce production expr -> TRY seq_expr WITH error
-- On AMPERAMPER reduce production expr -> TRY seq_expr WITH error

State 960:
expr -> TRY seq_expr WITH opt_bar . match_cases [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 627
-- On mod_longident shift to state 303
-- On match_cases shift to state 961
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 961:
expr -> TRY seq_expr WITH opt_bar match_cases . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
match_cases -> match_cases . BAR pattern match_action [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On BAR shift to state 731
-- On WITH reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On WHILE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On UIDENT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TYPE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TRY reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TRUE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On TO reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On THEN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SUBTRACTIVE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On STRING reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On STAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SHARP reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SEMISEMI reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On SEMI reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On PREFIXOP reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On PARSER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On OR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On OPEN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On NEW reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On MODULE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On MINUSGREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On MATCH reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LPAREN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LOC reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LIDENT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LESSGREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKETLESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKETBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACKET reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACELESS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACEBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LBRACE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On LAZY reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP4 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP3 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP2 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP1 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On INFIXOP0 reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On IN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On IF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On GREATER reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FUNCTION reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FUN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FOR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FLOAT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On FALSE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EXTERNAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EXCEPTION reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EQUAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On EOF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On END reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On ELSE reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On DOWNTO reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On DO reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On DEF reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COMMA reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLONEQUAL reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On COLONCOLON reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On CLASS reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On CHAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On BEGIN reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On BARBAR reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On ASSERT reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AND reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AMPERSAND reduce production expr -> TRY seq_expr WITH opt_bar match_cases
-- On AMPERAMPER reduce production expr -> TRY seq_expr WITH opt_bar match_cases

State 962:
expr -> WHILE seq_expr . DO seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr . DO seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On DO shift to state 963

State 963:
expr -> WHILE seq_expr DO . seq_expr DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr DO . seq_expr error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 964
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 964:
expr -> WHILE seq_expr DO seq_expr . DONE [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
expr -> WHILE seq_expr DO seq_expr . error [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On error shift to state 965
-- On DONE shift to state 966

State 965:
expr -> WHILE seq_expr DO seq_expr error . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> WHILE seq_expr DO seq_expr error
-- On WHILE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On UIDENT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TYPE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TRY reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TRUE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On TO reduce production expr -> WHILE seq_expr DO seq_expr error
-- On THEN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SUBTRACTIVE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On STRING reduce production expr -> WHILE seq_expr DO seq_expr error
-- On STAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SHARP reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SEMISEMI reduce production expr -> WHILE seq_expr DO seq_expr error
-- On SEMI reduce production expr -> WHILE seq_expr DO seq_expr error
-- On PREFIXOP reduce production expr -> WHILE seq_expr DO seq_expr error
-- On PARSER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On OR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On OPEN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On NEW reduce production expr -> WHILE seq_expr DO seq_expr error
-- On MODULE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On MINUSGREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On MATCH reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LPAREN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LOC reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LIDENT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LESSGREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKETLESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKETBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACKET reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACELESS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACEBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LBRACE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On LAZY reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP4 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP3 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP2 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP1 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On INFIXOP0 reduce production expr -> WHILE seq_expr DO seq_expr error
-- On IN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On IF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On GREATER reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FUNCTION reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FUN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FOR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FLOAT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On FALSE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EXTERNAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EXCEPTION reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EQUAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On EOF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On END reduce production expr -> WHILE seq_expr DO seq_expr error
-- On ELSE reduce production expr -> WHILE seq_expr DO seq_expr error
-- On DOWNTO reduce production expr -> WHILE seq_expr DO seq_expr error
-- On DO reduce production expr -> WHILE seq_expr DO seq_expr error
-- On DEF reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COMMA reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLONEQUAL reduce production expr -> WHILE seq_expr DO seq_expr error
-- On COLONCOLON reduce production expr -> WHILE seq_expr DO seq_expr error
-- On CLASS reduce production expr -> WHILE seq_expr DO seq_expr error
-- On CHAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BEGIN reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BARBAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On BAR reduce production expr -> WHILE seq_expr DO seq_expr error
-- On ASSERT reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AND reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AMPERSAND reduce production expr -> WHILE seq_expr DO seq_expr error
-- On AMPERAMPER reduce production expr -> WHILE seq_expr DO seq_expr error

State 966:
expr -> WHILE seq_expr DO seq_expr DONE . [ WITH WHILE UIDENT TYPE TRY TRUE TO THEN SUBTRACTIVE STRING STAR SHARP SEMISEMI SEMI PREFIXOP PARSER OR OPEN NEW MODULE MINUSGREATER MATCH LPAREN LOC LIDENT LET LESSGREATER LESS LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACEBAR LBRACE LAZY INT INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 IN IF GREATER FUNCTION FUN FOR FLOAT FALSE EXTERNAL EXCEPTION EQUAL EOF END ELSE DOWNTO DO DEF COMMA COLONEQUAL COLONCOLON CLASS CHAR BEGIN BARBAR BAR ASSERT AND AMPERSAND AMPERAMPER ]
-- On WITH reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On WHILE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On UIDENT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TYPE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TRY reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TRUE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On TO reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On THEN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SUBTRACTIVE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On STRING reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On STAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SHARP reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SEMISEMI reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On SEMI reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On PREFIXOP reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On PARSER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On OR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On OPEN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On NEW reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On MODULE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On MINUSGREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On MATCH reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LPAREN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LOC reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LIDENT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LESSGREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKETLESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKETBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACKET reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACELESS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACEBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LBRACE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On LAZY reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP4 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP3 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP2 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP1 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On INFIXOP0 reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On IN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On IF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On GREATER reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FUNCTION reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FUN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FOR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FLOAT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On FALSE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EXTERNAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EXCEPTION reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EQUAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On EOF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On END reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On ELSE reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On DOWNTO reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On DO reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On DEF reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COMMA reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLONEQUAL reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On COLONCOLON reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On CLASS reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On CHAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BEGIN reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BARBAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On BAR reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On ASSERT reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AND reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AMPERSAND reduce production expr -> WHILE seq_expr DO seq_expr DONE
-- On AMPERAMPER reduce production expr -> WHILE seq_expr DO seq_expr DONE

State 967:
structure_item -> TYPE . type_declarations [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 974
-- On type_parameter shift to state 1027
-- On type_declarations shift to state 1028
-- On type_declaration shift to state 1031
-- On LIDENT reduce production type_parameters -> 

State 968:
type_parameters -> LPAREN . type_parameter_list RPAREN [ UIDENT LIDENT ]
-- On QUOTE shift to state 170
-- On type_parameter_list shift to state 969
-- On type_parameter shift to state 973

State 969:
type_parameter_list -> type_parameter_list . COMMA type_parameter [ RPAREN COMMA ]
type_parameters -> LPAREN type_parameter_list . RPAREN [ UIDENT LIDENT ]
-- On RPAREN shift to state 970
-- On COMMA shift to state 971

State 970:
type_parameters -> LPAREN type_parameter_list RPAREN . [ UIDENT LIDENT ]
-- On UIDENT reduce production type_parameters -> LPAREN type_parameter_list RPAREN
-- On LIDENT reduce production type_parameters -> LPAREN type_parameter_list RPAREN

State 971:
type_parameter_list -> type_parameter_list COMMA . type_parameter [ RPAREN COMMA ]
-- On QUOTE shift to state 170
-- On type_parameter shift to state 972

State 972:
type_parameter_list -> type_parameter_list COMMA type_parameter . [ RPAREN COMMA ]
-- On RPAREN reduce production type_parameter_list -> type_parameter_list COMMA type_parameter
-- On COMMA reduce production type_parameter_list -> type_parameter_list COMMA type_parameter

State 973:
type_parameter_list -> type_parameter . [ RPAREN COMMA ]
-- On RPAREN reduce production type_parameter_list -> type_parameter
-- On COMMA reduce production type_parameter_list -> type_parameter

State 974:
type_declaration -> type_parameters . LIDENT type_kind constraints [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On LIDENT shift to state 975

State 975:
type_declaration -> type_parameters LIDENT . type_kind constraints [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On EQUAL shift to state 976
-- On type_kind shift to state 1020
-- On VAL reduce production type_kind -> 
-- On TYPE reduce production type_kind -> 
-- On SHARP reduce production type_kind -> 
-- On SEMISEMI reduce production type_kind -> 
-- On OPEN reduce production type_kind -> 
-- On MODULE reduce production type_kind -> 
-- On LET reduce production type_kind -> 
-- On INCLUDE reduce production type_kind -> 
-- On EXTERNAL reduce production type_kind -> 
-- On EXCEPTION reduce production type_kind -> 
-- On EOF reduce production type_kind -> 
-- On DEF reduce production type_kind -> 
-- On CONSTRAINT reduce production type_kind -> 
-- On CLASS reduce production type_kind -> 
-- On AND reduce production type_kind -> 

State 976:
type_kind -> EQUAL . core_type [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . BAR constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . LBRACE label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL opt_bar constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL LBRACE label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 977
-- On TRUE shift to state 978
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 979
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On LBRACKET shift to state 981
-- On LBRACE shift to state 983
-- On FALSE shift to state 995
-- On COLONCOLON shift to state 996
-- On BAR shift to state 997
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1011
-- On constructor_declarations shift to state 1019
-- On constructor_declaration shift to state 1010
-- On constr_ident shift to state 1003

State 977:
constr_ident -> UIDENT . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
-- On VAL reduce production constr_ident -> UIDENT
-- On TYPE reduce production constr_ident -> UIDENT
-- On SHARP reduce production constr_ident -> UIDENT
-- On SEMISEMI reduce production constr_ident -> UIDENT
-- On OPEN reduce production constr_ident -> UIDENT
-- On OF reduce production constr_ident -> UIDENT
-- On MODULE reduce production constr_ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production constr_ident -> UIDENT
-- On INCLUDE reduce production constr_ident -> UIDENT
-- On EXTERNAL reduce production constr_ident -> UIDENT
-- On EXCEPTION reduce production constr_ident -> UIDENT
-- On EOF reduce production constr_ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production constr_ident -> UIDENT
-- On CONSTRAINT reduce production constr_ident -> UIDENT
-- On CLASS reduce production constr_ident -> UIDENT
-- On BAR reduce production constr_ident -> UIDENT
-- On AND reduce production constr_ident -> UIDENT

State 978:
constr_ident -> TRUE . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> TRUE
-- On TYPE reduce production constr_ident -> TRUE
-- On SHARP reduce production constr_ident -> TRUE
-- On SEMISEMI reduce production constr_ident -> TRUE
-- On OPEN reduce production constr_ident -> TRUE
-- On OF reduce production constr_ident -> TRUE
-- On MODULE reduce production constr_ident -> TRUE
-- On LET reduce production constr_ident -> TRUE
-- On INCLUDE reduce production constr_ident -> TRUE
-- On EXTERNAL reduce production constr_ident -> TRUE
-- On EXCEPTION reduce production constr_ident -> TRUE
-- On EOF reduce production constr_ident -> TRUE
-- On DEF reduce production constr_ident -> TRUE
-- On CONSTRAINT reduce production constr_ident -> TRUE
-- On CLASS reduce production constr_ident -> TRUE
-- On BAR reduce production constr_ident -> TRUE
-- On AND reduce production constr_ident -> TRUE

State 979:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN type_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> LPAREN . core_type RPAREN [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On RPAREN shift to state 980
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 186
-- On core_type shift to state 193

State 980:
constr_ident -> LPAREN RPAREN . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> LPAREN RPAREN
-- On TYPE reduce production constr_ident -> LPAREN RPAREN
-- On SHARP reduce production constr_ident -> LPAREN RPAREN
-- On SEMISEMI reduce production constr_ident -> LPAREN RPAREN
-- On OPEN reduce production constr_ident -> LPAREN RPAREN
-- On OF reduce production constr_ident -> LPAREN RPAREN
-- On MODULE reduce production constr_ident -> LPAREN RPAREN
-- On LET reduce production constr_ident -> LPAREN RPAREN
-- On INCLUDE reduce production constr_ident -> LPAREN RPAREN
-- On EXTERNAL reduce production constr_ident -> LPAREN RPAREN
-- On EXCEPTION reduce production constr_ident -> LPAREN RPAREN
-- On EOF reduce production constr_ident -> LPAREN RPAREN
-- On DEF reduce production constr_ident -> LPAREN RPAREN
-- On CONSTRAINT reduce production constr_ident -> LPAREN RPAREN
-- On CLASS reduce production constr_ident -> LPAREN RPAREN
-- On BAR reduce production constr_ident -> LPAREN RPAREN
-- On AND reduce production constr_ident -> LPAREN RPAREN

State 981:
constr_ident -> LBRACKET . RBRACKET [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On RBRACKET shift to state 982

State 982:
constr_ident -> LBRACKET RBRACKET . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> LBRACKET RBRACKET
-- On TYPE reduce production constr_ident -> LBRACKET RBRACKET
-- On SHARP reduce production constr_ident -> LBRACKET RBRACKET
-- On SEMISEMI reduce production constr_ident -> LBRACKET RBRACKET
-- On OPEN reduce production constr_ident -> LBRACKET RBRACKET
-- On OF reduce production constr_ident -> LBRACKET RBRACKET
-- On MODULE reduce production constr_ident -> LBRACKET RBRACKET
-- On LET reduce production constr_ident -> LBRACKET RBRACKET
-- On INCLUDE reduce production constr_ident -> LBRACKET RBRACKET
-- On EXTERNAL reduce production constr_ident -> LBRACKET RBRACKET
-- On EXCEPTION reduce production constr_ident -> LBRACKET RBRACKET
-- On EOF reduce production constr_ident -> LBRACKET RBRACKET
-- On DEF reduce production constr_ident -> LBRACKET RBRACKET
-- On CONSTRAINT reduce production constr_ident -> LBRACKET RBRACKET
-- On CLASS reduce production constr_ident -> LBRACKET RBRACKET
-- On BAR reduce production constr_ident -> LBRACKET RBRACKET
-- On AND reduce production constr_ident -> LBRACKET RBRACKET

State 983:
type_kind -> EQUAL LBRACE . label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 985
-- On label_declarations shift to state 989
-- On label_declaration shift to state 994
-- On LIDENT reduce production mutable_flag -> 

State 984:
mutable_flag -> MUTABLE . [ LIDENT ]
-- On LIDENT reduce production mutable_flag -> MUTABLE

State 985:
label_declaration -> mutable_flag . LIDENT COLON core_type [ SEMI RBRACE ]
-- On LIDENT shift to state 986

State 986:
label_declaration -> mutable_flag LIDENT . COLON core_type [ SEMI RBRACE ]
-- On COLON shift to state 987

State 987:
label_declaration -> mutable_flag LIDENT COLON . core_type [ SEMI RBRACE ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 988

State 988:
core_type -> core_type . MINUSGREATER core_type [ SEMI RBRACE MINUSGREATER AS ]
core_type -> core_type . AS type_parameter [ SEMI RBRACE MINUSGREATER AS ]
label_declaration -> mutable_flag LIDENT COLON core_type . [ SEMI RBRACE ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On SEMI reduce production label_declaration -> mutable_flag LIDENT COLON core_type
-- On RBRACE reduce production label_declaration -> mutable_flag LIDENT COLON core_type

State 989:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind -> EQUAL LBRACE label_declarations . opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On SEMI shift to state 990
-- On opt_semi shift to state 992
-- On RBRACE reduce production opt_semi -> 

State 990:
label_declarations -> label_declarations SEMI . label_declaration [ SEMI RBRACE ]
opt_semi -> SEMI . [ RBRACE ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 985
-- On label_declaration shift to state 991
-- On RBRACE reduce production opt_semi -> SEMI
-- On LIDENT reduce production mutable_flag -> 

State 991:
label_declarations -> label_declarations SEMI label_declaration . [ SEMI RBRACE ]
-- On SEMI reduce production label_declarations -> label_declarations SEMI label_declaration
-- On RBRACE reduce production label_declarations -> label_declarations SEMI label_declaration

State 992:
type_kind -> EQUAL LBRACE label_declarations opt_semi . RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On RBRACE shift to state 993

State 993:
type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On VAL reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On TYPE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SHARP reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SEMISEMI reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On OPEN reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On MODULE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On LET reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On INCLUDE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXTERNAL reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXCEPTION reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EOF reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On DEF reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CONSTRAINT reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CLASS reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On AND reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE

State 994:
label_declarations -> label_declaration . [ SEMI RBRACE ]
-- On SEMI reduce production label_declarations -> label_declaration
-- On RBRACE reduce production label_declarations -> label_declaration

State 995:
constr_ident -> FALSE . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> FALSE
-- On TYPE reduce production constr_ident -> FALSE
-- On SHARP reduce production constr_ident -> FALSE
-- On SEMISEMI reduce production constr_ident -> FALSE
-- On OPEN reduce production constr_ident -> FALSE
-- On OF reduce production constr_ident -> FALSE
-- On MODULE reduce production constr_ident -> FALSE
-- On LET reduce production constr_ident -> FALSE
-- On INCLUDE reduce production constr_ident -> FALSE
-- On EXTERNAL reduce production constr_ident -> FALSE
-- On EXCEPTION reduce production constr_ident -> FALSE
-- On EOF reduce production constr_ident -> FALSE
-- On DEF reduce production constr_ident -> FALSE
-- On CONSTRAINT reduce production constr_ident -> FALSE
-- On CLASS reduce production constr_ident -> FALSE
-- On BAR reduce production constr_ident -> FALSE
-- On AND reduce production constr_ident -> FALSE

State 996:
constr_ident -> COLONCOLON . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> COLONCOLON
-- On TYPE reduce production constr_ident -> COLONCOLON
-- On SHARP reduce production constr_ident -> COLONCOLON
-- On SEMISEMI reduce production constr_ident -> COLONCOLON
-- On OPEN reduce production constr_ident -> COLONCOLON
-- On OF reduce production constr_ident -> COLONCOLON
-- On MODULE reduce production constr_ident -> COLONCOLON
-- On LET reduce production constr_ident -> COLONCOLON
-- On INCLUDE reduce production constr_ident -> COLONCOLON
-- On EXTERNAL reduce production constr_ident -> COLONCOLON
-- On EXCEPTION reduce production constr_ident -> COLONCOLON
-- On EOF reduce production constr_ident -> COLONCOLON
-- On DEF reduce production constr_ident -> COLONCOLON
-- On CONSTRAINT reduce production constr_ident -> COLONCOLON
-- On CLASS reduce production constr_ident -> COLONCOLON
-- On BAR reduce production constr_ident -> COLONCOLON
-- On AND reduce production constr_ident -> COLONCOLON

State 997:
type_kind -> EQUAL BAR . constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On UIDENT shift to state 998
-- On TRUE shift to state 978
-- On LPAREN shift to state 999
-- On LBRACKET shift to state 981
-- On FALSE shift to state 995
-- On COLONCOLON shift to state 996
-- On constructor_declarations shift to state 1000
-- On constructor_declaration shift to state 1010
-- On constr_ident shift to state 1003

State 998:
constr_ident -> UIDENT . [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constr_ident -> UIDENT
-- On TYPE reduce production constr_ident -> UIDENT
-- On SHARP reduce production constr_ident -> UIDENT
-- On SEMISEMI reduce production constr_ident -> UIDENT
-- On OPEN reduce production constr_ident -> UIDENT
-- On OF reduce production constr_ident -> UIDENT
-- On MODULE reduce production constr_ident -> UIDENT
-- On LET reduce production constr_ident -> UIDENT
-- On INCLUDE reduce production constr_ident -> UIDENT
-- On EXTERNAL reduce production constr_ident -> UIDENT
-- On EXCEPTION reduce production constr_ident -> UIDENT
-- On EOF reduce production constr_ident -> UIDENT
-- On DEF reduce production constr_ident -> UIDENT
-- On CONSTRAINT reduce production constr_ident -> UIDENT
-- On CLASS reduce production constr_ident -> UIDENT
-- On BAR reduce production constr_ident -> UIDENT
-- On AND reduce production constr_ident -> UIDENT

State 999:
constr_ident -> LPAREN . RPAREN [ VAL TYPE SHARP SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On RPAREN shift to state 980

State 1000:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL BAR constructor_declarations . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1001
-- On VAL reduce production type_kind -> EQUAL BAR constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On SHARP reduce production type_kind -> EQUAL BAR constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL BAR constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL BAR constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On LET reduce production type_kind -> EQUAL BAR constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL BAR constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL BAR constructor_declarations
-- On EOF reduce production type_kind -> EQUAL BAR constructor_declarations
-- On DEF reduce production type_kind -> EQUAL BAR constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL BAR constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL BAR constructor_declarations
-- On AND reduce production type_kind -> EQUAL BAR constructor_declarations

State 1001:
constructor_declarations -> constructor_declarations BAR . constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 998
-- On TRUE shift to state 978
-- On LPAREN shift to state 999
-- On LBRACKET shift to state 981
-- On FALSE shift to state 995
-- On COLONCOLON shift to state 996
-- On constructor_declaration shift to state 1002
-- On constr_ident shift to state 1003

State 1002:
constructor_declarations -> constructor_declarations BAR constructor_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On TYPE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On SHARP reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On SEMISEMI reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On OPEN reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On MODULE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On LET reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On INCLUDE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On EXTERNAL reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On EXCEPTION reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On EOF reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On DEF reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On CONSTRAINT reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On CLASS reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On BAR reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On AND reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration

State 1003:
constructor_declaration -> constr_ident . constructor_arguments [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On OF shift to state 1004
-- On constructor_arguments shift to state 1009
-- On VAL reduce production constructor_arguments -> 
-- On TYPE reduce production constructor_arguments -> 
-- On SHARP reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On LET reduce production constructor_arguments -> 
-- On INCLUDE reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On EOF reduce production constructor_arguments -> 
-- On DEF reduce production constructor_arguments -> 
-- On CONSTRAINT reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 
-- On BAR reduce production constructor_arguments -> 
-- On AND reduce production constructor_arguments -> 

State 1004:
constructor_arguments -> OF . core_type_list [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 1005
-- On mod_ext_longident shift to state 155
-- On core_type_list shift to state 1006

State 1005:
core_type_list -> simple_core_type . [ VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . type_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 152
-- On LIDENT shift to state 138
-- On type_longident shift to state 154
-- On mod_ext_longident shift to state 155
-- On VAL reduce production core_type_list -> simple_core_type
-- On TYPE reduce production core_type_list -> simple_core_type
-- On STAR reduce production core_type_list -> simple_core_type
-- On SHARP reduce production core_type_list -> simple_core_type
-- On SEMISEMI reduce production core_type_list -> simple_core_type
-- On OPEN reduce production core_type_list -> simple_core_type
-- On MODULE reduce production core_type_list -> simple_core_type
-- On LET reduce production core_type_list -> simple_core_type
-- On INCLUDE reduce production core_type_list -> simple_core_type
-- On EXTERNAL reduce production core_type_list -> simple_core_type
-- On EXCEPTION reduce production core_type_list -> simple_core_type
-- On EOF reduce production core_type_list -> simple_core_type
-- On DEF reduce production core_type_list -> simple_core_type
-- On CONSTRAINT reduce production core_type_list -> simple_core_type
-- On CLASS reduce production core_type_list -> simple_core_type
-- On BAR reduce production core_type_list -> simple_core_type
-- On AND reduce production core_type_list -> simple_core_type
** Conflict on SHARP

State 1006:
constructor_arguments -> OF core_type_list . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
core_type_list -> core_type_list . STAR simple_core_type [ VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On STAR shift to state 1007
-- On VAL reduce production constructor_arguments -> OF core_type_list
-- On TYPE reduce production constructor_arguments -> OF core_type_list
-- On SHARP reduce production constructor_arguments -> OF core_type_list
-- On SEMISEMI reduce production constructor_arguments -> OF core_type_list
-- On OPEN reduce production constructor_arguments -> OF core_type_list
-- On MODULE reduce production constructor_arguments -> OF core_type_list
-- On LET reduce production constructor_arguments -> OF core_type_list
-- On INCLUDE reduce production constructor_arguments -> OF core_type_list
-- On EXTERNAL reduce production constructor_arguments -> OF core_type_list
-- On EXCEPTION reduce production constructor_arguments -> OF core_type_list
-- On EOF reduce production constructor_arguments -> OF core_type_list
-- On DEF reduce production constructor_arguments -> OF core_type_list
-- On CONSTRAINT reduce production constructor_arguments -> OF core_type_list
-- On CLASS reduce production constructor_arguments -> OF core_type_list
-- On BAR reduce production constructor_arguments -> OF core_type_list
-- On AND reduce production constructor_arguments -> OF core_type_list

State 1007:
core_type_list -> core_type_list STAR . simple_core_type [ VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 1008
-- On mod_ext_longident shift to state 155

State 1008:
core_type_list -> core_type_list STAR simple_core_type . [ VAL TYPE STAR SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . type_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 152
-- On LIDENT shift to state 138
-- On type_longident shift to state 154
-- On mod_ext_longident shift to state 155
-- On VAL reduce production core_type_list -> core_type_list STAR simple_core_type
-- On TYPE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On STAR reduce production core_type_list -> core_type_list STAR simple_core_type
-- On SEMISEMI reduce production core_type_list -> core_type_list STAR simple_core_type
-- On OPEN reduce production core_type_list -> core_type_list STAR simple_core_type
-- On MODULE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On LET reduce production core_type_list -> core_type_list STAR simple_core_type
-- On INCLUDE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On EXTERNAL reduce production core_type_list -> core_type_list STAR simple_core_type
-- On EXCEPTION reduce production core_type_list -> core_type_list STAR simple_core_type
-- On EOF reduce production core_type_list -> core_type_list STAR simple_core_type
-- On DEF reduce production core_type_list -> core_type_list STAR simple_core_type
-- On CONSTRAINT reduce production core_type_list -> core_type_list STAR simple_core_type
-- On CLASS reduce production core_type_list -> core_type_list STAR simple_core_type
-- On BAR reduce production core_type_list -> core_type_list STAR simple_core_type
-- On AND reduce production core_type_list -> core_type_list STAR simple_core_type

State 1009:
constructor_declaration -> constr_ident constructor_arguments . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constructor_declaration -> constr_ident constructor_arguments
-- On TYPE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On SHARP reduce production constructor_declaration -> constr_ident constructor_arguments
-- On SEMISEMI reduce production constructor_declaration -> constr_ident constructor_arguments
-- On OPEN reduce production constructor_declaration -> constr_ident constructor_arguments
-- On MODULE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On LET reduce production constructor_declaration -> constr_ident constructor_arguments
-- On INCLUDE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On EXTERNAL reduce production constructor_declaration -> constr_ident constructor_arguments
-- On EXCEPTION reduce production constructor_declaration -> constr_ident constructor_arguments
-- On EOF reduce production constructor_declaration -> constr_ident constructor_arguments
-- On DEF reduce production constructor_declaration -> constr_ident constructor_arguments
-- On CONSTRAINT reduce production constructor_declaration -> constr_ident constructor_arguments
-- On CLASS reduce production constructor_declaration -> constr_ident constructor_arguments
-- On BAR reduce production constructor_declaration -> constr_ident constructor_arguments
-- On AND reduce production constructor_declaration -> constr_ident constructor_arguments

State 1010:
constructor_declarations -> constructor_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
-- On VAL reduce production constructor_declarations -> constructor_declaration
-- On TYPE reduce production constructor_declarations -> constructor_declaration
-- On SHARP reduce production constructor_declarations -> constructor_declaration
-- On SEMISEMI reduce production constructor_declarations -> constructor_declaration
-- On OPEN reduce production constructor_declarations -> constructor_declaration
-- On MODULE reduce production constructor_declarations -> constructor_declaration
-- On LET reduce production constructor_declarations -> constructor_declaration
-- On INCLUDE reduce production constructor_declarations -> constructor_declaration
-- On EXTERNAL reduce production constructor_declarations -> constructor_declaration
-- On EXCEPTION reduce production constructor_declarations -> constructor_declaration
-- On EOF reduce production constructor_declarations -> constructor_declaration
-- On DEF reduce production constructor_declarations -> constructor_declaration
-- On CONSTRAINT reduce production constructor_declarations -> constructor_declaration
-- On CLASS reduce production constructor_declarations -> constructor_declaration
-- On BAR reduce production constructor_declarations -> constructor_declaration
-- On AND reduce production constructor_declarations -> constructor_declaration

State 1011:
core_type -> core_type . MINUSGREATER core_type [ VAL TYPE SHARP SEMISEMI OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ VAL TYPE SHARP SEMISEMI OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
type_kind -> EQUAL core_type . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL opt_bar constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL LBRACE label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On MINUSGREATER shift to state 167
-- On EQUAL shift to state 1012
-- On AS shift to state 169
-- On VAL reduce production type_kind -> EQUAL core_type
-- On TYPE reduce production type_kind -> EQUAL core_type
-- On SHARP reduce production type_kind -> EQUAL core_type
-- On SEMISEMI reduce production type_kind -> EQUAL core_type
-- On OPEN reduce production type_kind -> EQUAL core_type
-- On MODULE reduce production type_kind -> EQUAL core_type
-- On LET reduce production type_kind -> EQUAL core_type
-- On INCLUDE reduce production type_kind -> EQUAL core_type
-- On EXTERNAL reduce production type_kind -> EQUAL core_type
-- On EXCEPTION reduce production type_kind -> EQUAL core_type
-- On EOF reduce production type_kind -> EQUAL core_type
-- On DEF reduce production type_kind -> EQUAL core_type
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type
-- On CLASS reduce production type_kind -> EQUAL core_type
-- On AND reduce production type_kind -> EQUAL core_type

State 1012:
type_kind -> EQUAL core_type EQUAL . opt_bar constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type EQUAL . LBRACE label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On LBRACE shift to state 1013
-- On BAR shift to state 268
-- On opt_bar shift to state 1017
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On COLONCOLON reduce production opt_bar -> 

State 1013:
type_kind -> EQUAL core_type EQUAL LBRACE . label_declarations opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 985
-- On label_declarations shift to state 1014
-- On label_declaration shift to state 994
-- On LIDENT reduce production mutable_flag -> 

State 1014:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations . opt_semi RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On SEMI shift to state 990
-- On opt_semi shift to state 1015
-- On RBRACE reduce production opt_semi -> 

State 1015:
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi . RBRACE [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On RBRACE shift to state 1016

State 1016:
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On VAL reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On TYPE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SHARP reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SEMISEMI reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On OPEN reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On MODULE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On LET reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On INCLUDE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXTERNAL reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXCEPTION reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EOF reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On DEF reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CLASS reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On AND reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE

State 1017:
type_kind -> EQUAL core_type EQUAL opt_bar . constructor_declarations [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On UIDENT shift to state 998
-- On TRUE shift to state 978
-- On LPAREN shift to state 999
-- On LBRACKET shift to state 981
-- On FALSE shift to state 995
-- On COLONCOLON shift to state 996
-- On constructor_declarations shift to state 1018
-- On constructor_declaration shift to state 1010
-- On constr_ident shift to state 1003

State 1018:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1001
-- On VAL reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On SHARP reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On LET reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On EOF reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On DEF reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On AND reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations

State 1019:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL constructor_declarations . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1001
-- On VAL reduce production type_kind -> EQUAL constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL constructor_declarations
-- On SHARP reduce production type_kind -> EQUAL constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL constructor_declarations
-- On LET reduce production type_kind -> EQUAL constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL constructor_declarations
-- On EOF reduce production type_kind -> EQUAL constructor_declarations
-- On DEF reduce production type_kind -> EQUAL constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL constructor_declarations
-- On AND reduce production type_kind -> EQUAL constructor_declarations

State 1020:
type_declaration -> type_parameters LIDENT type_kind . constraints [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On constraints shift to state 1021
-- On VAL reduce production constraints -> 
-- On TYPE reduce production constraints -> 
-- On SHARP reduce production constraints -> 
-- On SEMISEMI reduce production constraints -> 
-- On OPEN reduce production constraints -> 
-- On MODULE reduce production constraints -> 
-- On LET reduce production constraints -> 
-- On INCLUDE reduce production constraints -> 
-- On EXTERNAL reduce production constraints -> 
-- On EXCEPTION reduce production constraints -> 
-- On EOF reduce production constraints -> 
-- On DEF reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On CLASS reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1021:
constraints -> constraints . CONSTRAINT constrain [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CONSTRAINT CLASS AND ]
type_declaration -> type_parameters LIDENT type_kind constraints . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On CONSTRAINT shift to state 1022
-- On VAL reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On TYPE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On SHARP reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On SEMISEMI reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On OPEN reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On MODULE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On LET reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On INCLUDE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On EXTERNAL reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On EXCEPTION reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On EOF reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On DEF reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On CLASS reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On AND reduce production type_declaration -> type_parameters LIDENT type_kind constraints

State 1022:
constraints -> constraints CONSTRAINT . constrain [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AND ]
-- On QUOTE shift to state 170
-- On type_parameter shift to state 1023
-- On constrain shift to state 1026

State 1023:
constrain -> type_parameter . EQUAL core_type [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AND ]
-- On EQUAL shift to state 1024

State 1024:
constrain -> type_parameter EQUAL . core_type [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1025

State 1025:
constrain -> type_parameter EQUAL core_type . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AND ]
core_type -> core_type . MINUSGREATER core_type [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AS AND ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On WITH reduce production constrain -> type_parameter EQUAL core_type
-- On VIRTUAL reduce production constrain -> type_parameter EQUAL core_type
-- On VAL reduce production constrain -> type_parameter EQUAL core_type
-- On TYPE reduce production constrain -> type_parameter EQUAL core_type
-- On SHARP reduce production constrain -> type_parameter EQUAL core_type
-- On SEMISEMI reduce production constrain -> type_parameter EQUAL core_type
-- On RPAREN reduce production constrain -> type_parameter EQUAL core_type
-- On OPEN reduce production constrain -> type_parameter EQUAL core_type
-- On MODULE reduce production constrain -> type_parameter EQUAL core_type
-- On METHOD reduce production constrain -> type_parameter EQUAL core_type
-- On LET reduce production constrain -> type_parameter EQUAL core_type
-- On INHERIT reduce production constrain -> type_parameter EQUAL core_type
-- On INCLUDE reduce production constrain -> type_parameter EQUAL core_type
-- On EXTERNAL reduce production constrain -> type_parameter EQUAL core_type
-- On EXCEPTION reduce production constrain -> type_parameter EQUAL core_type
-- On EQUAL reduce production constrain -> type_parameter EQUAL core_type
-- On EOF reduce production constrain -> type_parameter EQUAL core_type
-- On END reduce production constrain -> type_parameter EQUAL core_type
-- On DEF reduce production constrain -> type_parameter EQUAL core_type
-- On CONSTRAINT reduce production constrain -> type_parameter EQUAL core_type
-- On CLASS reduce production constrain -> type_parameter EQUAL core_type
-- On AND reduce production constrain -> type_parameter EQUAL core_type

State 1026:
constraints -> constraints CONSTRAINT constrain . [ WITH VIRTUAL VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION EQUAL EOF END DEF CONSTRAINT CLASS AND ]
-- On WITH reduce production constraints -> constraints CONSTRAINT constrain
-- On VIRTUAL reduce production constraints -> constraints CONSTRAINT constrain
-- On VAL reduce production constraints -> constraints CONSTRAINT constrain
-- On TYPE reduce production constraints -> constraints CONSTRAINT constrain
-- On SHARP reduce production constraints -> constraints CONSTRAINT constrain
-- On SEMISEMI reduce production constraints -> constraints CONSTRAINT constrain
-- On RPAREN reduce production constraints -> constraints CONSTRAINT constrain
-- On OPEN reduce production constraints -> constraints CONSTRAINT constrain
-- On MODULE reduce production constraints -> constraints CONSTRAINT constrain
-- On METHOD reduce production constraints -> constraints CONSTRAINT constrain
-- On LET reduce production constraints -> constraints CONSTRAINT constrain
-- On INHERIT reduce production constraints -> constraints CONSTRAINT constrain
-- On INCLUDE reduce production constraints -> constraints CONSTRAINT constrain
-- On EXTERNAL reduce production constraints -> constraints CONSTRAINT constrain
-- On EXCEPTION reduce production constraints -> constraints CONSTRAINT constrain
-- On EQUAL reduce production constraints -> constraints CONSTRAINT constrain
-- On EOF reduce production constraints -> constraints CONSTRAINT constrain
-- On END reduce production constraints -> constraints CONSTRAINT constrain
-- On DEF reduce production constraints -> constraints CONSTRAINT constrain
-- On CONSTRAINT reduce production constraints -> constraints CONSTRAINT constrain
-- On CLASS reduce production constraints -> constraints CONSTRAINT constrain
-- On AND reduce production constraints -> constraints CONSTRAINT constrain

State 1027:
type_parameters -> type_parameter . [ UIDENT LIDENT ]
-- On UIDENT reduce production type_parameters -> type_parameter
-- On LIDENT reduce production type_parameters -> type_parameter

State 1028:
structure_item -> TYPE type_declarations . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
type_declarations -> type_declarations . AND type_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On AND shift to state 1029
-- On TYPE reduce production structure_item -> TYPE type_declarations
-- On SHARP reduce production structure_item -> TYPE type_declarations
-- On SEMISEMI reduce production structure_item -> TYPE type_declarations
-- On OPEN reduce production structure_item -> TYPE type_declarations
-- On MODULE reduce production structure_item -> TYPE type_declarations
-- On LET reduce production structure_item -> TYPE type_declarations
-- On EXTERNAL reduce production structure_item -> TYPE type_declarations
-- On EXCEPTION reduce production structure_item -> TYPE type_declarations
-- On EOF reduce production structure_item -> TYPE type_declarations
-- On DEF reduce production structure_item -> TYPE type_declarations
-- On CLASS reduce production structure_item -> TYPE type_declarations

State 1029:
type_declarations -> type_declarations AND . type_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 974
-- On type_parameter shift to state 1027
-- On type_declaration shift to state 1030
-- On LIDENT reduce production type_parameters -> 

State 1030:
type_declarations -> type_declarations AND type_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On VAL reduce production type_declarations -> type_declarations AND type_declaration
-- On TYPE reduce production type_declarations -> type_declarations AND type_declaration
-- On SHARP reduce production type_declarations -> type_declarations AND type_declaration
-- On SEMISEMI reduce production type_declarations -> type_declarations AND type_declaration
-- On OPEN reduce production type_declarations -> type_declarations AND type_declaration
-- On MODULE reduce production type_declarations -> type_declarations AND type_declaration
-- On LET reduce production type_declarations -> type_declarations AND type_declaration
-- On INCLUDE reduce production type_declarations -> type_declarations AND type_declaration
-- On EXTERNAL reduce production type_declarations -> type_declarations AND type_declaration
-- On EXCEPTION reduce production type_declarations -> type_declarations AND type_declaration
-- On EOF reduce production type_declarations -> type_declarations AND type_declaration
-- On DEF reduce production type_declarations -> type_declarations AND type_declaration
-- On CLASS reduce production type_declarations -> type_declarations AND type_declaration
-- On AND reduce production type_declarations -> type_declarations AND type_declaration

State 1031:
type_declarations -> type_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS AND ]
-- On VAL reduce production type_declarations -> type_declaration
-- On TYPE reduce production type_declarations -> type_declaration
-- On SHARP reduce production type_declarations -> type_declaration
-- On SEMISEMI reduce production type_declarations -> type_declaration
-- On OPEN reduce production type_declarations -> type_declaration
-- On MODULE reduce production type_declarations -> type_declaration
-- On LET reduce production type_declarations -> type_declaration
-- On INCLUDE reduce production type_declarations -> type_declaration
-- On EXTERNAL reduce production type_declarations -> type_declaration
-- On EXCEPTION reduce production type_declarations -> type_declaration
-- On EOF reduce production type_declarations -> type_declaration
-- On DEF reduce production type_declarations -> type_declaration
-- On CLASS reduce production type_declarations -> type_declaration
-- On AND reduce production type_declarations -> type_declaration

State 1032:
structure_tail -> SEMISEMI . [ EOF ]
structure_tail -> SEMISEMI . seq_expr structure_tail [ EOF ]
structure_tail -> SEMISEMI . structure_item structure_tail [ EOF ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TYPE shift to state 967
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On OPEN shift to state 1033
-- On NEW shift to state 9
-- On MODULE shift to state 1035
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 1492
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1506
-- On CLASS shift to state 1508
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On structure_item shift to state 1512
-- On simple_expr shift to state 640
-- On seq_expr shift to state 1521
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623
-- On EOF reduce production structure_tail -> SEMISEMI

State 1033:
structure_item -> OPEN . mod_longident [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 2
-- On mod_longident shift to state 1034

State 1034:
mod_longident -> mod_longident . DOT UIDENT [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DOT DEF CLASS ]
structure_item -> OPEN mod_longident . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On DOT shift to state 304
-- On TYPE reduce production structure_item -> OPEN mod_longident
-- On SHARP reduce production structure_item -> OPEN mod_longident
-- On SEMISEMI reduce production structure_item -> OPEN mod_longident
-- On OPEN reduce production structure_item -> OPEN mod_longident
-- On MODULE reduce production structure_item -> OPEN mod_longident
-- On LET reduce production structure_item -> OPEN mod_longident
-- On EXTERNAL reduce production structure_item -> OPEN mod_longident
-- On EXCEPTION reduce production structure_item -> OPEN mod_longident
-- On EOF reduce production structure_item -> OPEN mod_longident
-- On DEF reduce production structure_item -> OPEN mod_longident
-- On CLASS reduce production structure_item -> OPEN mod_longident

State 1035:
structure_item -> MODULE . UIDENT module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
structure_item -> MODULE . TYPE ident EQUAL module_type [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1036
-- On TYPE shift to state 1488

State 1036:
structure_item -> MODULE UIDENT . module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1037
-- On EQUAL shift to state 1265
-- On COLON shift to state 1482
-- On module_binding shift to state 1487

State 1037:
module_binding -> LPAREN . UIDENT COLON module_type RPAREN module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1038

State 1038:
module_binding -> LPAREN UIDENT . COLON module_type RPAREN module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On COLON shift to state 1039

State 1039:
module_binding -> LPAREN UIDENT COLON . module_type RPAREN module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1263
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1040:
ident -> UIDENT . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
-- On WITH reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On SHARP reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On EQUAL reduce production ident -> UIDENT
-- On EOF reduce production ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT

State 1041:
module_type -> SIG . signature END [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> SIG . signature error [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On signature shift to state 1042
-- On error reduce production signature -> 
-- On VAL reduce production signature -> 
-- On TYPE reduce production signature -> 
-- On OPEN reduce production signature -> 
-- On MODULE reduce production signature -> 
-- On INCLUDE reduce production signature -> 
-- On EXTERNAL reduce production signature -> 
-- On EXCEPTION reduce production signature -> 
-- On END reduce production signature -> 
-- On CLASS reduce production signature -> 

State 1042:
module_type -> SIG signature . END [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> SIG signature . error [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
signature -> signature . signature_item [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature -> signature . signature_item SEMISEMI [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error shift to state 1043
-- On VAL shift to state 1044
-- On TYPE shift to state 1048
-- On OPEN shift to state 1098
-- On MODULE shift to state 1100
-- On INCLUDE shift to state 1110
-- On EXTERNAL shift to state 1180
-- On EXCEPTION shift to state 1188
-- On END shift to state 1262
-- On CLASS shift to state 1192
-- On signature_item shift to state 1247

State 1043:
module_type -> SIG signature error . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production module_type -> SIG signature error
-- On VAL reduce production module_type -> SIG signature error
-- On TYPE reduce production module_type -> SIG signature error
-- On SHARP reduce production module_type -> SIG signature error
-- On SEMISEMI reduce production module_type -> SIG signature error
-- On RPAREN reduce production module_type -> SIG signature error
-- On OPEN reduce production module_type -> SIG signature error
-- On MODULE reduce production module_type -> SIG signature error
-- On LET reduce production module_type -> SIG signature error
-- On INCLUDE reduce production module_type -> SIG signature error
-- On EXTERNAL reduce production module_type -> SIG signature error
-- On EXCEPTION reduce production module_type -> SIG signature error
-- On EQUAL reduce production module_type -> SIG signature error
-- On EOF reduce production module_type -> SIG signature error
-- On DEF reduce production module_type -> SIG signature error
-- On CLASS reduce production module_type -> SIG signature error

State 1044:
signature_item -> VAL . val_ident COLON core_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1045

State 1045:
signature_item -> VAL val_ident . COLON core_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On COLON shift to state 1046

State 1046:
signature_item -> VAL val_ident COLON . core_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 1047

State 1047:
core_type -> core_type . MINUSGREATER core_type [ error VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER INCLUDE EXTERNAL EXCEPTION END CLASS AS ]
core_type -> core_type . AS type_parameter [ error VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER INCLUDE EXTERNAL EXCEPTION END CLASS AS ]
signature_item -> VAL val_ident COLON core_type . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233
-- On error reduce production signature_item -> VAL val_ident COLON core_type
-- On VAL reduce production signature_item -> VAL val_ident COLON core_type
-- On TYPE reduce production signature_item -> VAL val_ident COLON core_type
-- On SEMISEMI reduce production signature_item -> VAL val_ident COLON core_type
-- On OPEN reduce production signature_item -> VAL val_ident COLON core_type
-- On MODULE reduce production signature_item -> VAL val_ident COLON core_type
-- On INCLUDE reduce production signature_item -> VAL val_ident COLON core_type
-- On EXTERNAL reduce production signature_item -> VAL val_ident COLON core_type
-- On EXCEPTION reduce production signature_item -> VAL val_ident COLON core_type
-- On END reduce production signature_item -> VAL val_ident COLON core_type
-- On CLASS reduce production signature_item -> VAL val_ident COLON core_type

State 1048:
signature_item -> TYPE . type_declarations [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1049
-- On type_parameter shift to state 1027
-- On type_declarations shift to state 1094
-- On type_declaration shift to state 1097
-- On LIDENT reduce production type_parameters -> 

State 1049:
type_declaration -> type_parameters . LIDENT type_kind constraints [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On LIDENT shift to state 1050

State 1050:
type_declaration -> type_parameters LIDENT . type_kind constraints [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On EQUAL shift to state 1051
-- On type_kind shift to state 1087
-- On error reduce production type_kind -> 
-- On VAL reduce production type_kind -> 
-- On TYPE reduce production type_kind -> 
-- On SEMISEMI reduce production type_kind -> 
-- On OPEN reduce production type_kind -> 
-- On MODULE reduce production type_kind -> 
-- On LET reduce production type_kind -> 
-- On INCLUDE reduce production type_kind -> 
-- On EXTERNAL reduce production type_kind -> 
-- On EXCEPTION reduce production type_kind -> 
-- On END reduce production type_kind -> 
-- On DEF reduce production type_kind -> 
-- On CONSTRAINT reduce production type_kind -> 
-- On CLASS reduce production type_kind -> 
-- On AND reduce production type_kind -> 

State 1051:
type_kind -> EQUAL . core_type [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . BAR constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . LBRACE label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL opt_bar constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL . core_type EQUAL LBRACE label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 1052
-- On TRUE shift to state 1053
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 1054
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On LBRACKET shift to state 1056
-- On LBRACE shift to state 1058
-- On FALSE shift to state 1062
-- On COLONCOLON shift to state 1063
-- On BAR shift to state 1064
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 1078
-- On constructor_declarations shift to state 1086
-- On constructor_declaration shift to state 1077
-- On constr_ident shift to state 1070

State 1052:
constr_ident -> UIDENT . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
-- On error reduce production constr_ident -> UIDENT
-- On VAL reduce production constr_ident -> UIDENT
-- On TYPE reduce production constr_ident -> UIDENT
-- On SEMISEMI reduce production constr_ident -> UIDENT
-- On OPEN reduce production constr_ident -> UIDENT
-- On OF reduce production constr_ident -> UIDENT
-- On MODULE reduce production constr_ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production constr_ident -> UIDENT
-- On INCLUDE reduce production constr_ident -> UIDENT
-- On EXTERNAL reduce production constr_ident -> UIDENT
-- On EXCEPTION reduce production constr_ident -> UIDENT
-- On END reduce production constr_ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production constr_ident -> UIDENT
-- On CONSTRAINT reduce production constr_ident -> UIDENT
-- On CLASS reduce production constr_ident -> UIDENT
-- On BAR reduce production constr_ident -> UIDENT
-- On AND reduce production constr_ident -> UIDENT

State 1053:
constr_ident -> TRUE . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> TRUE
-- On VAL reduce production constr_ident -> TRUE
-- On TYPE reduce production constr_ident -> TRUE
-- On SEMISEMI reduce production constr_ident -> TRUE
-- On OPEN reduce production constr_ident -> TRUE
-- On OF reduce production constr_ident -> TRUE
-- On MODULE reduce production constr_ident -> TRUE
-- On LET reduce production constr_ident -> TRUE
-- On INCLUDE reduce production constr_ident -> TRUE
-- On EXTERNAL reduce production constr_ident -> TRUE
-- On EXCEPTION reduce production constr_ident -> TRUE
-- On END reduce production constr_ident -> TRUE
-- On DEF reduce production constr_ident -> TRUE
-- On CONSTRAINT reduce production constr_ident -> TRUE
-- On CLASS reduce production constr_ident -> TRUE
-- On BAR reduce production constr_ident -> TRUE
-- On AND reduce production constr_ident -> TRUE

State 1054:
constr_ident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN type_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> LPAREN . core_type RPAREN [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
simple_core_type -> LPAREN . core_type_comma_list RPAREN SHARP class_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE MINUSGREATER LIDENT LET INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On RPAREN shift to state 1055
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 197
-- On core_type shift to state 206

State 1055:
constr_ident -> LPAREN RPAREN . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> LPAREN RPAREN
-- On VAL reduce production constr_ident -> LPAREN RPAREN
-- On TYPE reduce production constr_ident -> LPAREN RPAREN
-- On SEMISEMI reduce production constr_ident -> LPAREN RPAREN
-- On OPEN reduce production constr_ident -> LPAREN RPAREN
-- On OF reduce production constr_ident -> LPAREN RPAREN
-- On MODULE reduce production constr_ident -> LPAREN RPAREN
-- On LET reduce production constr_ident -> LPAREN RPAREN
-- On INCLUDE reduce production constr_ident -> LPAREN RPAREN
-- On EXTERNAL reduce production constr_ident -> LPAREN RPAREN
-- On EXCEPTION reduce production constr_ident -> LPAREN RPAREN
-- On END reduce production constr_ident -> LPAREN RPAREN
-- On DEF reduce production constr_ident -> LPAREN RPAREN
-- On CONSTRAINT reduce production constr_ident -> LPAREN RPAREN
-- On CLASS reduce production constr_ident -> LPAREN RPAREN
-- On BAR reduce production constr_ident -> LPAREN RPAREN
-- On AND reduce production constr_ident -> LPAREN RPAREN

State 1056:
constr_ident -> LBRACKET . RBRACKET [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On RBRACKET shift to state 1057

State 1057:
constr_ident -> LBRACKET RBRACKET . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> LBRACKET RBRACKET
-- On VAL reduce production constr_ident -> LBRACKET RBRACKET
-- On TYPE reduce production constr_ident -> LBRACKET RBRACKET
-- On SEMISEMI reduce production constr_ident -> LBRACKET RBRACKET
-- On OPEN reduce production constr_ident -> LBRACKET RBRACKET
-- On OF reduce production constr_ident -> LBRACKET RBRACKET
-- On MODULE reduce production constr_ident -> LBRACKET RBRACKET
-- On LET reduce production constr_ident -> LBRACKET RBRACKET
-- On INCLUDE reduce production constr_ident -> LBRACKET RBRACKET
-- On EXTERNAL reduce production constr_ident -> LBRACKET RBRACKET
-- On EXCEPTION reduce production constr_ident -> LBRACKET RBRACKET
-- On END reduce production constr_ident -> LBRACKET RBRACKET
-- On DEF reduce production constr_ident -> LBRACKET RBRACKET
-- On CONSTRAINT reduce production constr_ident -> LBRACKET RBRACKET
-- On CLASS reduce production constr_ident -> LBRACKET RBRACKET
-- On BAR reduce production constr_ident -> LBRACKET RBRACKET
-- On AND reduce production constr_ident -> LBRACKET RBRACKET

State 1058:
type_kind -> EQUAL LBRACE . label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 985
-- On label_declarations shift to state 1059
-- On label_declaration shift to state 994
-- On LIDENT reduce production mutable_flag -> 

State 1059:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind -> EQUAL LBRACE label_declarations . opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On SEMI shift to state 990
-- On opt_semi shift to state 1060
-- On RBRACE reduce production opt_semi -> 

State 1060:
type_kind -> EQUAL LBRACE label_declarations opt_semi . RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On RBRACE shift to state 1061

State 1061:
type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On error reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On VAL reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On TYPE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SEMISEMI reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On OPEN reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On MODULE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On LET reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On INCLUDE reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXTERNAL reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXCEPTION reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On END reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On DEF reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CONSTRAINT reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CLASS reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE
-- On AND reduce production type_kind -> EQUAL LBRACE label_declarations opt_semi RBRACE

State 1062:
constr_ident -> FALSE . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> FALSE
-- On VAL reduce production constr_ident -> FALSE
-- On TYPE reduce production constr_ident -> FALSE
-- On SEMISEMI reduce production constr_ident -> FALSE
-- On OPEN reduce production constr_ident -> FALSE
-- On OF reduce production constr_ident -> FALSE
-- On MODULE reduce production constr_ident -> FALSE
-- On LET reduce production constr_ident -> FALSE
-- On INCLUDE reduce production constr_ident -> FALSE
-- On EXTERNAL reduce production constr_ident -> FALSE
-- On EXCEPTION reduce production constr_ident -> FALSE
-- On END reduce production constr_ident -> FALSE
-- On DEF reduce production constr_ident -> FALSE
-- On CONSTRAINT reduce production constr_ident -> FALSE
-- On CLASS reduce production constr_ident -> FALSE
-- On BAR reduce production constr_ident -> FALSE
-- On AND reduce production constr_ident -> FALSE

State 1063:
constr_ident -> COLONCOLON . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> COLONCOLON
-- On VAL reduce production constr_ident -> COLONCOLON
-- On TYPE reduce production constr_ident -> COLONCOLON
-- On SEMISEMI reduce production constr_ident -> COLONCOLON
-- On OPEN reduce production constr_ident -> COLONCOLON
-- On OF reduce production constr_ident -> COLONCOLON
-- On MODULE reduce production constr_ident -> COLONCOLON
-- On LET reduce production constr_ident -> COLONCOLON
-- On INCLUDE reduce production constr_ident -> COLONCOLON
-- On EXTERNAL reduce production constr_ident -> COLONCOLON
-- On EXCEPTION reduce production constr_ident -> COLONCOLON
-- On END reduce production constr_ident -> COLONCOLON
-- On DEF reduce production constr_ident -> COLONCOLON
-- On CONSTRAINT reduce production constr_ident -> COLONCOLON
-- On CLASS reduce production constr_ident -> COLONCOLON
-- On BAR reduce production constr_ident -> COLONCOLON
-- On AND reduce production constr_ident -> COLONCOLON

State 1064:
type_kind -> EQUAL BAR . constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On UIDENT shift to state 1065
-- On TRUE shift to state 1053
-- On LPAREN shift to state 1066
-- On LBRACKET shift to state 1056
-- On FALSE shift to state 1062
-- On COLONCOLON shift to state 1063
-- On constructor_declarations shift to state 1067
-- On constructor_declaration shift to state 1077
-- On constr_ident shift to state 1070

State 1065:
constr_ident -> UIDENT . [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constr_ident -> UIDENT
-- On VAL reduce production constr_ident -> UIDENT
-- On TYPE reduce production constr_ident -> UIDENT
-- On SEMISEMI reduce production constr_ident -> UIDENT
-- On OPEN reduce production constr_ident -> UIDENT
-- On OF reduce production constr_ident -> UIDENT
-- On MODULE reduce production constr_ident -> UIDENT
-- On LET reduce production constr_ident -> UIDENT
-- On INCLUDE reduce production constr_ident -> UIDENT
-- On EXTERNAL reduce production constr_ident -> UIDENT
-- On EXCEPTION reduce production constr_ident -> UIDENT
-- On END reduce production constr_ident -> UIDENT
-- On DEF reduce production constr_ident -> UIDENT
-- On CONSTRAINT reduce production constr_ident -> UIDENT
-- On CLASS reduce production constr_ident -> UIDENT
-- On BAR reduce production constr_ident -> UIDENT
-- On AND reduce production constr_ident -> UIDENT

State 1066:
constr_ident -> LPAREN . RPAREN [ error VAL TYPE SEMISEMI OPEN OF MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On RPAREN shift to state 1055

State 1067:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL BAR constructor_declarations . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1068
-- On error reduce production type_kind -> EQUAL BAR constructor_declarations
-- On VAL reduce production type_kind -> EQUAL BAR constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL BAR constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL BAR constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On LET reduce production type_kind -> EQUAL BAR constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL BAR constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL BAR constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL BAR constructor_declarations
-- On END reduce production type_kind -> EQUAL BAR constructor_declarations
-- On DEF reduce production type_kind -> EQUAL BAR constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL BAR constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL BAR constructor_declarations
-- On AND reduce production type_kind -> EQUAL BAR constructor_declarations

State 1068:
constructor_declarations -> constructor_declarations BAR . constructor_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 1065
-- On TRUE shift to state 1053
-- On LPAREN shift to state 1066
-- On LBRACKET shift to state 1056
-- On FALSE shift to state 1062
-- On COLONCOLON shift to state 1063
-- On constructor_declaration shift to state 1069
-- On constr_ident shift to state 1070

State 1069:
constructor_declarations -> constructor_declarations BAR constructor_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On VAL reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On TYPE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On SEMISEMI reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On OPEN reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On MODULE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On LET reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On INCLUDE reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On EXTERNAL reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On EXCEPTION reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On END reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On DEF reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On CONSTRAINT reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On CLASS reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On BAR reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration
-- On AND reduce production constructor_declarations -> constructor_declarations BAR constructor_declaration

State 1070:
constructor_declaration -> constr_ident . constructor_arguments [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On OF shift to state 1071
-- On constructor_arguments shift to state 1076
-- On error reduce production constructor_arguments -> 
-- On VAL reduce production constructor_arguments -> 
-- On TYPE reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On LET reduce production constructor_arguments -> 
-- On INCLUDE reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On END reduce production constructor_arguments -> 
-- On DEF reduce production constructor_arguments -> 
-- On CONSTRAINT reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 
-- On BAR reduce production constructor_arguments -> 
-- On AND reduce production constructor_arguments -> 

State 1071:
constructor_arguments -> OF . core_type_list [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 1072
-- On mod_ext_longident shift to state 203
-- On core_type_list shift to state 1073

State 1072:
core_type_list -> simple_core_type . [ error VAL TYPE STAR SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . type_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 222
-- On LIDENT shift to state 201
-- On type_longident shift to state 224
-- On mod_ext_longident shift to state 203
-- On error reduce production core_type_list -> simple_core_type
-- On VAL reduce production core_type_list -> simple_core_type
-- On TYPE reduce production core_type_list -> simple_core_type
-- On STAR reduce production core_type_list -> simple_core_type
-- On SEMISEMI reduce production core_type_list -> simple_core_type
-- On OPEN reduce production core_type_list -> simple_core_type
-- On MODULE reduce production core_type_list -> simple_core_type
-- On LET reduce production core_type_list -> simple_core_type
-- On INCLUDE reduce production core_type_list -> simple_core_type
-- On EXTERNAL reduce production core_type_list -> simple_core_type
-- On EXCEPTION reduce production core_type_list -> simple_core_type
-- On END reduce production core_type_list -> simple_core_type
-- On DEF reduce production core_type_list -> simple_core_type
-- On CONSTRAINT reduce production core_type_list -> simple_core_type
-- On CLASS reduce production core_type_list -> simple_core_type
-- On BAR reduce production core_type_list -> simple_core_type
-- On AND reduce production core_type_list -> simple_core_type

State 1073:
constructor_arguments -> OF core_type_list . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
core_type_list -> core_type_list . STAR simple_core_type [ error VAL TYPE STAR SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On STAR shift to state 1074
-- On error reduce production constructor_arguments -> OF core_type_list
-- On VAL reduce production constructor_arguments -> OF core_type_list
-- On TYPE reduce production constructor_arguments -> OF core_type_list
-- On SEMISEMI reduce production constructor_arguments -> OF core_type_list
-- On OPEN reduce production constructor_arguments -> OF core_type_list
-- On MODULE reduce production constructor_arguments -> OF core_type_list
-- On LET reduce production constructor_arguments -> OF core_type_list
-- On INCLUDE reduce production constructor_arguments -> OF core_type_list
-- On EXTERNAL reduce production constructor_arguments -> OF core_type_list
-- On EXCEPTION reduce production constructor_arguments -> OF core_type_list
-- On END reduce production constructor_arguments -> OF core_type_list
-- On DEF reduce production constructor_arguments -> OF core_type_list
-- On CONSTRAINT reduce production constructor_arguments -> OF core_type_list
-- On CLASS reduce production constructor_arguments -> OF core_type_list
-- On BAR reduce production constructor_arguments -> OF core_type_list
-- On AND reduce production constructor_arguments -> OF core_type_list

State 1074:
core_type_list -> core_type_list STAR . simple_core_type [ error VAL TYPE STAR SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 1075
-- On mod_ext_longident shift to state 203

State 1075:
core_type_list -> core_type_list STAR simple_core_type . [ error VAL TYPE STAR SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . type_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
simple_core_type -> simple_core_type . SHARP class_longident [ error VAL UIDENT TYPE STAR SHARP SEMISEMI OPEN MODULE LIDENT LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On UIDENT shift to state 122
-- On SHARP shift to state 222
-- On LIDENT shift to state 201
-- On type_longident shift to state 224
-- On mod_ext_longident shift to state 203
-- On error reduce production core_type_list -> core_type_list STAR simple_core_type
-- On VAL reduce production core_type_list -> core_type_list STAR simple_core_type
-- On TYPE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On STAR reduce production core_type_list -> core_type_list STAR simple_core_type
-- On SEMISEMI reduce production core_type_list -> core_type_list STAR simple_core_type
-- On OPEN reduce production core_type_list -> core_type_list STAR simple_core_type
-- On MODULE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On LET reduce production core_type_list -> core_type_list STAR simple_core_type
-- On INCLUDE reduce production core_type_list -> core_type_list STAR simple_core_type
-- On EXTERNAL reduce production core_type_list -> core_type_list STAR simple_core_type
-- On EXCEPTION reduce production core_type_list -> core_type_list STAR simple_core_type
-- On END reduce production core_type_list -> core_type_list STAR simple_core_type
-- On DEF reduce production core_type_list -> core_type_list STAR simple_core_type
-- On CONSTRAINT reduce production core_type_list -> core_type_list STAR simple_core_type
-- On CLASS reduce production core_type_list -> core_type_list STAR simple_core_type
-- On BAR reduce production core_type_list -> core_type_list STAR simple_core_type
-- On AND reduce production core_type_list -> core_type_list STAR simple_core_type

State 1076:
constructor_declaration -> constr_ident constructor_arguments . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constructor_declaration -> constr_ident constructor_arguments
-- On VAL reduce production constructor_declaration -> constr_ident constructor_arguments
-- On TYPE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On SEMISEMI reduce production constructor_declaration -> constr_ident constructor_arguments
-- On OPEN reduce production constructor_declaration -> constr_ident constructor_arguments
-- On MODULE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On LET reduce production constructor_declaration -> constr_ident constructor_arguments
-- On INCLUDE reduce production constructor_declaration -> constr_ident constructor_arguments
-- On EXTERNAL reduce production constructor_declaration -> constr_ident constructor_arguments
-- On EXCEPTION reduce production constructor_declaration -> constr_ident constructor_arguments
-- On END reduce production constructor_declaration -> constr_ident constructor_arguments
-- On DEF reduce production constructor_declaration -> constr_ident constructor_arguments
-- On CONSTRAINT reduce production constructor_declaration -> constr_ident constructor_arguments
-- On CLASS reduce production constructor_declaration -> constr_ident constructor_arguments
-- On BAR reduce production constructor_declaration -> constr_ident constructor_arguments
-- On AND reduce production constructor_declaration -> constr_ident constructor_arguments

State 1077:
constructor_declarations -> constructor_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
-- On error reduce production constructor_declarations -> constructor_declaration
-- On VAL reduce production constructor_declarations -> constructor_declaration
-- On TYPE reduce production constructor_declarations -> constructor_declaration
-- On SEMISEMI reduce production constructor_declarations -> constructor_declaration
-- On OPEN reduce production constructor_declarations -> constructor_declaration
-- On MODULE reduce production constructor_declarations -> constructor_declaration
-- On LET reduce production constructor_declarations -> constructor_declaration
-- On INCLUDE reduce production constructor_declarations -> constructor_declaration
-- On EXTERNAL reduce production constructor_declarations -> constructor_declaration
-- On EXCEPTION reduce production constructor_declarations -> constructor_declaration
-- On END reduce production constructor_declarations -> constructor_declaration
-- On DEF reduce production constructor_declarations -> constructor_declaration
-- On CONSTRAINT reduce production constructor_declarations -> constructor_declaration
-- On CLASS reduce production constructor_declarations -> constructor_declaration
-- On BAR reduce production constructor_declarations -> constructor_declaration
-- On AND reduce production constructor_declarations -> constructor_declaration

State 1078:
core_type -> core_type . MINUSGREATER core_type [ error VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ error VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL END DEF CONSTRAINT CLASS AS AND ]
type_kind -> EQUAL core_type . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL opt_bar constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type . EQUAL LBRACE label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On MINUSGREATER shift to state 231
-- On EQUAL shift to state 1079
-- On AS shift to state 233
-- On error reduce production type_kind -> EQUAL core_type
-- On VAL reduce production type_kind -> EQUAL core_type
-- On TYPE reduce production type_kind -> EQUAL core_type
-- On SEMISEMI reduce production type_kind -> EQUAL core_type
-- On OPEN reduce production type_kind -> EQUAL core_type
-- On MODULE reduce production type_kind -> EQUAL core_type
-- On LET reduce production type_kind -> EQUAL core_type
-- On INCLUDE reduce production type_kind -> EQUAL core_type
-- On EXTERNAL reduce production type_kind -> EQUAL core_type
-- On EXCEPTION reduce production type_kind -> EQUAL core_type
-- On END reduce production type_kind -> EQUAL core_type
-- On DEF reduce production type_kind -> EQUAL core_type
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type
-- On CLASS reduce production type_kind -> EQUAL core_type
-- On AND reduce production type_kind -> EQUAL core_type

State 1079:
type_kind -> EQUAL core_type EQUAL . opt_bar constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_kind -> EQUAL core_type EQUAL . LBRACE label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On LBRACE shift to state 1080
-- On BAR shift to state 268
-- On opt_bar shift to state 1084
-- On UIDENT reduce production opt_bar -> 
-- On TRUE reduce production opt_bar -> 
-- On LPAREN reduce production opt_bar -> 
-- On LBRACKET reduce production opt_bar -> 
-- On FALSE reduce production opt_bar -> 
-- On COLONCOLON reduce production opt_bar -> 

State 1080:
type_kind -> EQUAL core_type EQUAL LBRACE . label_declarations opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 985
-- On label_declarations shift to state 1081
-- On label_declaration shift to state 994
-- On LIDENT reduce production mutable_flag -> 

State 1081:
label_declarations -> label_declarations . SEMI label_declaration [ SEMI RBRACE ]
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations . opt_semi RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On SEMI shift to state 990
-- On opt_semi shift to state 1082
-- On RBRACE reduce production opt_semi -> 

State 1082:
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi . RBRACE [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On RBRACE shift to state 1083

State 1083:
type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On error reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On VAL reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On TYPE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On SEMISEMI reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On OPEN reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On MODULE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On LET reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On INCLUDE reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXTERNAL reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On EXCEPTION reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On END reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On DEF reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On CLASS reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE
-- On AND reduce production type_kind -> EQUAL core_type EQUAL LBRACE label_declarations opt_semi RBRACE

State 1084:
type_kind -> EQUAL core_type EQUAL opt_bar . constructor_declarations [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On UIDENT shift to state 1065
-- On TRUE shift to state 1053
-- On LPAREN shift to state 1066
-- On LBRACKET shift to state 1056
-- On FALSE shift to state 1062
-- On COLONCOLON shift to state 1063
-- On constructor_declarations shift to state 1085
-- On constructor_declaration shift to state 1077
-- On constr_ident shift to state 1070

State 1085:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1068
-- On error reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On VAL reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On LET reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On END reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On DEF reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations
-- On AND reduce production type_kind -> EQUAL core_type EQUAL opt_bar constructor_declarations

State 1086:
constructor_declarations -> constructor_declarations . BAR constructor_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS BAR AND ]
type_kind -> EQUAL constructor_declarations . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On BAR shift to state 1068
-- On error reduce production type_kind -> EQUAL constructor_declarations
-- On VAL reduce production type_kind -> EQUAL constructor_declarations
-- On TYPE reduce production type_kind -> EQUAL constructor_declarations
-- On SEMISEMI reduce production type_kind -> EQUAL constructor_declarations
-- On OPEN reduce production type_kind -> EQUAL constructor_declarations
-- On MODULE reduce production type_kind -> EQUAL constructor_declarations
-- On LET reduce production type_kind -> EQUAL constructor_declarations
-- On INCLUDE reduce production type_kind -> EQUAL constructor_declarations
-- On EXTERNAL reduce production type_kind -> EQUAL constructor_declarations
-- On EXCEPTION reduce production type_kind -> EQUAL constructor_declarations
-- On END reduce production type_kind -> EQUAL constructor_declarations
-- On DEF reduce production type_kind -> EQUAL constructor_declarations
-- On CONSTRAINT reduce production type_kind -> EQUAL constructor_declarations
-- On CLASS reduce production type_kind -> EQUAL constructor_declarations
-- On AND reduce production type_kind -> EQUAL constructor_declarations

State 1087:
type_declaration -> type_parameters LIDENT type_kind . constraints [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On constraints shift to state 1088
-- On error reduce production constraints -> 
-- On VAL reduce production constraints -> 
-- On TYPE reduce production constraints -> 
-- On SEMISEMI reduce production constraints -> 
-- On OPEN reduce production constraints -> 
-- On MODULE reduce production constraints -> 
-- On LET reduce production constraints -> 
-- On INCLUDE reduce production constraints -> 
-- On EXTERNAL reduce production constraints -> 
-- On EXCEPTION reduce production constraints -> 
-- On END reduce production constraints -> 
-- On DEF reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On CLASS reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1088:
constraints -> constraints . CONSTRAINT constrain [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
type_declaration -> type_parameters LIDENT type_kind constraints . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On CONSTRAINT shift to state 1089
-- On error reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On VAL reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On TYPE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On SEMISEMI reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On OPEN reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On MODULE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On LET reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On INCLUDE reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On EXTERNAL reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On EXCEPTION reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On END reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On DEF reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On CLASS reduce production type_declaration -> type_parameters LIDENT type_kind constraints
-- On AND reduce production type_declaration -> type_parameters LIDENT type_kind constraints

State 1089:
constraints -> constraints CONSTRAINT . constrain [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On QUOTE shift to state 170
-- On type_parameter shift to state 1090
-- On constrain shift to state 1093

State 1090:
constrain -> type_parameter . EQUAL core_type [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On EQUAL shift to state 1091

State 1091:
constrain -> type_parameter EQUAL . core_type [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 1092

State 1092:
constrain -> type_parameter EQUAL core_type . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
core_type -> core_type . MINUSGREATER core_type [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AS AND ]
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233
-- On error reduce production constrain -> type_parameter EQUAL core_type
-- On WITH reduce production constrain -> type_parameter EQUAL core_type
-- On VIRTUAL reduce production constrain -> type_parameter EQUAL core_type
-- On VAL reduce production constrain -> type_parameter EQUAL core_type
-- On TYPE reduce production constrain -> type_parameter EQUAL core_type
-- On SEMISEMI reduce production constrain -> type_parameter EQUAL core_type
-- On RPAREN reduce production constrain -> type_parameter EQUAL core_type
-- On OPEN reduce production constrain -> type_parameter EQUAL core_type
-- On MODULE reduce production constrain -> type_parameter EQUAL core_type
-- On METHOD reduce production constrain -> type_parameter EQUAL core_type
-- On LET reduce production constrain -> type_parameter EQUAL core_type
-- On INHERIT reduce production constrain -> type_parameter EQUAL core_type
-- On INCLUDE reduce production constrain -> type_parameter EQUAL core_type
-- On EXTERNAL reduce production constrain -> type_parameter EQUAL core_type
-- On EXCEPTION reduce production constrain -> type_parameter EQUAL core_type
-- On END reduce production constrain -> type_parameter EQUAL core_type
-- On DEF reduce production constrain -> type_parameter EQUAL core_type
-- On CONSTRAINT reduce production constrain -> type_parameter EQUAL core_type
-- On CLASS reduce production constrain -> type_parameter EQUAL core_type
-- On AND reduce production constrain -> type_parameter EQUAL core_type

State 1093:
constraints -> constraints CONSTRAINT constrain . [ error WITH VIRTUAL VAL TYPE SEMISEMI RPAREN OPEN MODULE METHOD LET INHERIT INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
-- On error reduce production constraints -> constraints CONSTRAINT constrain
-- On WITH reduce production constraints -> constraints CONSTRAINT constrain
-- On VIRTUAL reduce production constraints -> constraints CONSTRAINT constrain
-- On VAL reduce production constraints -> constraints CONSTRAINT constrain
-- On TYPE reduce production constraints -> constraints CONSTRAINT constrain
-- On SEMISEMI reduce production constraints -> constraints CONSTRAINT constrain
-- On RPAREN reduce production constraints -> constraints CONSTRAINT constrain
-- On OPEN reduce production constraints -> constraints CONSTRAINT constrain
-- On MODULE reduce production constraints -> constraints CONSTRAINT constrain
-- On METHOD reduce production constraints -> constraints CONSTRAINT constrain
-- On LET reduce production constraints -> constraints CONSTRAINT constrain
-- On INHERIT reduce production constraints -> constraints CONSTRAINT constrain
-- On INCLUDE reduce production constraints -> constraints CONSTRAINT constrain
-- On EXTERNAL reduce production constraints -> constraints CONSTRAINT constrain
-- On EXCEPTION reduce production constraints -> constraints CONSTRAINT constrain
-- On END reduce production constraints -> constraints CONSTRAINT constrain
-- On DEF reduce production constraints -> constraints CONSTRAINT constrain
-- On CONSTRAINT reduce production constraints -> constraints CONSTRAINT constrain
-- On CLASS reduce production constraints -> constraints CONSTRAINT constrain
-- On AND reduce production constraints -> constraints CONSTRAINT constrain

State 1094:
signature_item -> TYPE type_declarations . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
type_declarations -> type_declarations . AND type_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS AND ]
-- On AND shift to state 1095
-- On error reduce production signature_item -> TYPE type_declarations
-- On VAL reduce production signature_item -> TYPE type_declarations
-- On TYPE reduce production signature_item -> TYPE type_declarations
-- On SEMISEMI reduce production signature_item -> TYPE type_declarations
-- On OPEN reduce production signature_item -> TYPE type_declarations
-- On MODULE reduce production signature_item -> TYPE type_declarations
-- On INCLUDE reduce production signature_item -> TYPE type_declarations
-- On EXTERNAL reduce production signature_item -> TYPE type_declarations
-- On EXCEPTION reduce production signature_item -> TYPE type_declarations
-- On END reduce production signature_item -> TYPE type_declarations
-- On CLASS reduce production signature_item -> TYPE type_declarations

State 1095:
type_declarations -> type_declarations AND . type_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1049
-- On type_parameter shift to state 1027
-- On type_declaration shift to state 1096
-- On LIDENT reduce production type_parameters -> 

State 1096:
type_declarations -> type_declarations AND type_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production type_declarations -> type_declarations AND type_declaration
-- On VAL reduce production type_declarations -> type_declarations AND type_declaration
-- On TYPE reduce production type_declarations -> type_declarations AND type_declaration
-- On SEMISEMI reduce production type_declarations -> type_declarations AND type_declaration
-- On OPEN reduce production type_declarations -> type_declarations AND type_declaration
-- On MODULE reduce production type_declarations -> type_declarations AND type_declaration
-- On LET reduce production type_declarations -> type_declarations AND type_declaration
-- On INCLUDE reduce production type_declarations -> type_declarations AND type_declaration
-- On EXTERNAL reduce production type_declarations -> type_declarations AND type_declaration
-- On EXCEPTION reduce production type_declarations -> type_declarations AND type_declaration
-- On END reduce production type_declarations -> type_declarations AND type_declaration
-- On DEF reduce production type_declarations -> type_declarations AND type_declaration
-- On CLASS reduce production type_declarations -> type_declarations AND type_declaration
-- On AND reduce production type_declarations -> type_declarations AND type_declaration

State 1097:
type_declarations -> type_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production type_declarations -> type_declaration
-- On VAL reduce production type_declarations -> type_declaration
-- On TYPE reduce production type_declarations -> type_declaration
-- On SEMISEMI reduce production type_declarations -> type_declaration
-- On OPEN reduce production type_declarations -> type_declaration
-- On MODULE reduce production type_declarations -> type_declaration
-- On LET reduce production type_declarations -> type_declaration
-- On INCLUDE reduce production type_declarations -> type_declaration
-- On EXTERNAL reduce production type_declarations -> type_declaration
-- On EXCEPTION reduce production type_declarations -> type_declaration
-- On END reduce production type_declarations -> type_declaration
-- On DEF reduce production type_declarations -> type_declaration
-- On CLASS reduce production type_declarations -> type_declaration
-- On AND reduce production type_declarations -> type_declaration

State 1098:
signature_item -> OPEN . mod_longident [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 17
-- On mod_longident shift to state 1099

State 1099:
mod_longident -> mod_longident . DOT UIDENT [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END DOT CLASS ]
signature_item -> OPEN mod_longident . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On DOT shift to state 77
-- On error reduce production signature_item -> OPEN mod_longident
-- On VAL reduce production signature_item -> OPEN mod_longident
-- On TYPE reduce production signature_item -> OPEN mod_longident
-- On SEMISEMI reduce production signature_item -> OPEN mod_longident
-- On OPEN reduce production signature_item -> OPEN mod_longident
-- On MODULE reduce production signature_item -> OPEN mod_longident
-- On INCLUDE reduce production signature_item -> OPEN mod_longident
-- On EXTERNAL reduce production signature_item -> OPEN mod_longident
-- On EXCEPTION reduce production signature_item -> OPEN mod_longident
-- On END reduce production signature_item -> OPEN mod_longident
-- On CLASS reduce production signature_item -> OPEN mod_longident

State 1100:
signature_item -> MODULE . UIDENT module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> MODULE . TYPE ident [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> MODULE . TYPE ident EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1101
-- On TYPE shift to state 1258

State 1101:
signature_item -> MODULE UIDENT . module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On LPAREN shift to state 1102
-- On COLON shift to state 1254
-- On module_declaration shift to state 1257

State 1102:
module_declaration -> LPAREN . UIDENT COLON module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1103

State 1103:
module_declaration -> LPAREN UIDENT . COLON module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On COLON shift to state 1104

State 1104:
module_declaration -> LPAREN UIDENT COLON . module_type RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1252
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1105:
module_type -> LPAREN . module_type RPAREN [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> LPAREN . module_type error [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1249
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1106:
ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
mod_ext_longident -> UIDENT . [ LPAREN DOT ]
-- On error reduce production ident -> UIDENT
-- On WITH reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On END reduce production ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT

State 1107:
module_type -> SIG . signature END [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> SIG . signature error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On signature shift to state 1108
-- On error reduce production signature -> 
-- On VAL reduce production signature -> 
-- On TYPE reduce production signature -> 
-- On OPEN reduce production signature -> 
-- On MODULE reduce production signature -> 
-- On INCLUDE reduce production signature -> 
-- On EXTERNAL reduce production signature -> 
-- On EXCEPTION reduce production signature -> 
-- On END reduce production signature -> 
-- On CLASS reduce production signature -> 

State 1108:
module_type -> SIG signature . END [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> SIG signature . error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
signature -> signature . signature_item [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature -> signature . signature_item SEMISEMI [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error shift to state 1109
-- On VAL shift to state 1044
-- On TYPE shift to state 1048
-- On OPEN shift to state 1098
-- On MODULE shift to state 1100
-- On INCLUDE shift to state 1110
-- On EXTERNAL shift to state 1180
-- On EXCEPTION shift to state 1188
-- On END shift to state 1191
-- On CLASS shift to state 1192
-- On signature_item shift to state 1247

State 1109:
module_type -> SIG signature error . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_type -> SIG signature error
-- On WITH reduce production module_type -> SIG signature error
-- On VAL reduce production module_type -> SIG signature error
-- On TYPE reduce production module_type -> SIG signature error
-- On SEMISEMI reduce production module_type -> SIG signature error
-- On RPAREN reduce production module_type -> SIG signature error
-- On OPEN reduce production module_type -> SIG signature error
-- On MODULE reduce production module_type -> SIG signature error
-- On LET reduce production module_type -> SIG signature error
-- On INCLUDE reduce production module_type -> SIG signature error
-- On EXTERNAL reduce production module_type -> SIG signature error
-- On EXCEPTION reduce production module_type -> SIG signature error
-- On END reduce production module_type -> SIG signature error
-- On DEF reduce production module_type -> SIG signature error
-- On CLASS reduce production module_type -> SIG signature error

State 1110:
signature_item -> INCLUDE . module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1179
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1111:
module_type -> LPAREN . module_type RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> LPAREN . module_type error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1176
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1112:
module_type -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 1113

State 1113:
module_type -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1114

State 1114:
module_type -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On COLON shift to state 1115

State 1115:
module_type -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1145
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1116:
module_type -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On LPAREN shift to state 1117

State 1117:
module_type -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On UIDENT shift to state 1118

State 1118:
module_type -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On COLON shift to state 1119

State 1119:
module_type -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1121
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1120:
module_type -> mty_longident . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production module_type -> mty_longident
-- On VAL reduce production module_type -> mty_longident
-- On TYPE reduce production module_type -> mty_longident
-- On SHARP reduce production module_type -> mty_longident
-- On SEMISEMI reduce production module_type -> mty_longident
-- On RPAREN reduce production module_type -> mty_longident
-- On OPEN reduce production module_type -> mty_longident
-- On MODULE reduce production module_type -> mty_longident
-- On LET reduce production module_type -> mty_longident
-- On INCLUDE reduce production module_type -> mty_longident
-- On EXTERNAL reduce production module_type -> mty_longident
-- On EXCEPTION reduce production module_type -> mty_longident
-- On EQUAL reduce production module_type -> mty_longident
-- On EOF reduce production module_type -> mty_longident
-- On DEF reduce production module_type -> mty_longident
-- On CLASS reduce production module_type -> mty_longident

State 1121:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1137

State 1122:
module_type -> module_type WITH . with_constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On TYPE shift to state 1123
-- On MODULE shift to state 1129
-- On with_constraints shift to state 1133
-- On with_constraint shift to state 1136

State 1123:
with_constraint -> TYPE . type_parameters label_longident EQUAL core_type constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1124
-- On type_parameter shift to state 1027
-- On UIDENT reduce production type_parameters -> 
-- On LIDENT reduce production type_parameters -> 

State 1124:
with_constraint -> TYPE type_parameters . label_longident EQUAL core_type constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On label_longident shift to state 1125

State 1125:
with_constraint -> TYPE type_parameters label_longident . EQUAL core_type constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On EQUAL shift to state 1126

State 1126:
with_constraint -> TYPE type_parameters label_longident EQUAL . core_type constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1127

State 1127:
core_type -> core_type . MINUSGREATER core_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AS AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type . constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On constraints shift to state 1128
-- On WITH reduce production constraints -> 
-- On VAL reduce production constraints -> 
-- On TYPE reduce production constraints -> 
-- On SHARP reduce production constraints -> 
-- On SEMISEMI reduce production constraints -> 
-- On RPAREN reduce production constraints -> 
-- On OPEN reduce production constraints -> 
-- On MODULE reduce production constraints -> 
-- On LET reduce production constraints -> 
-- On INCLUDE reduce production constraints -> 
-- On EXTERNAL reduce production constraints -> 
-- On EXCEPTION reduce production constraints -> 
-- On EQUAL reduce production constraints -> 
-- On EOF reduce production constraints -> 
-- On DEF reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On CLASS reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1128:
constraints -> constraints . CONSTRAINT constrain [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CONSTRAINT CLASS AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On CONSTRAINT shift to state 1022
-- On WITH reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On VAL reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On TYPE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On SHARP reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On SEMISEMI reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On RPAREN reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On OPEN reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On MODULE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On LET reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On INCLUDE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EXTERNAL reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EXCEPTION reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EQUAL reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EOF reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On DEF reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On CLASS reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On AND reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints

State 1129:
with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On mod_longident shift to state 1130

State 1130:
mod_longident -> mod_longident . DOT UIDENT [ EQUAL DOT ]
with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On EQUAL shift to state 1131
-- On DOT shift to state 304

State 1131:
with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On UIDENT shift to state 122
-- On mod_ext_longident shift to state 1132

State 1132:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DOT DEF CLASS AND ]
with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On LPAREN shift to state 156
-- On DOT shift to state 159
-- On WITH reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On VAL reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On TYPE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On SHARP reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On SEMISEMI reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On RPAREN reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On OPEN reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On MODULE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On LET reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On INCLUDE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EXTERNAL reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EXCEPTION reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EQUAL reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EOF reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On DEF reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On CLASS reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On AND reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident

State 1133:
module_type -> module_type WITH with_constraints . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
with_constraints -> with_constraints . AND with_constraint [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On AND shift to state 1134
-- On WITH reduce production module_type -> module_type WITH with_constraints
-- On VAL reduce production module_type -> module_type WITH with_constraints
-- On TYPE reduce production module_type -> module_type WITH with_constraints
-- On SHARP reduce production module_type -> module_type WITH with_constraints
-- On SEMISEMI reduce production module_type -> module_type WITH with_constraints
-- On RPAREN reduce production module_type -> module_type WITH with_constraints
-- On OPEN reduce production module_type -> module_type WITH with_constraints
-- On MODULE reduce production module_type -> module_type WITH with_constraints
-- On LET reduce production module_type -> module_type WITH with_constraints
-- On INCLUDE reduce production module_type -> module_type WITH with_constraints
-- On EXTERNAL reduce production module_type -> module_type WITH with_constraints
-- On EXCEPTION reduce production module_type -> module_type WITH with_constraints
-- On EQUAL reduce production module_type -> module_type WITH with_constraints
-- On EOF reduce production module_type -> module_type WITH with_constraints
-- On DEF reduce production module_type -> module_type WITH with_constraints
-- On CLASS reduce production module_type -> module_type WITH with_constraints

State 1134:
with_constraints -> with_constraints AND . with_constraint [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On TYPE shift to state 1123
-- On MODULE shift to state 1129
-- On with_constraint shift to state 1135

State 1135:
with_constraints -> with_constraints AND with_constraint . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On WITH reduce production with_constraints -> with_constraints AND with_constraint
-- On VAL reduce production with_constraints -> with_constraints AND with_constraint
-- On TYPE reduce production with_constraints -> with_constraints AND with_constraint
-- On SHARP reduce production with_constraints -> with_constraints AND with_constraint
-- On SEMISEMI reduce production with_constraints -> with_constraints AND with_constraint
-- On RPAREN reduce production with_constraints -> with_constraints AND with_constraint
-- On OPEN reduce production with_constraints -> with_constraints AND with_constraint
-- On MODULE reduce production with_constraints -> with_constraints AND with_constraint
-- On LET reduce production with_constraints -> with_constraints AND with_constraint
-- On INCLUDE reduce production with_constraints -> with_constraints AND with_constraint
-- On EXTERNAL reduce production with_constraints -> with_constraints AND with_constraint
-- On EXCEPTION reduce production with_constraints -> with_constraints AND with_constraint
-- On EQUAL reduce production with_constraints -> with_constraints AND with_constraint
-- On EOF reduce production with_constraints -> with_constraints AND with_constraint
-- On DEF reduce production with_constraints -> with_constraints AND with_constraint
-- On CLASS reduce production with_constraints -> with_constraints AND with_constraint
-- On AND reduce production with_constraints -> with_constraints AND with_constraint

State 1136:
with_constraints -> with_constraint . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS AND ]
-- On WITH reduce production with_constraints -> with_constraint
-- On VAL reduce production with_constraints -> with_constraint
-- On TYPE reduce production with_constraints -> with_constraint
-- On SHARP reduce production with_constraints -> with_constraint
-- On SEMISEMI reduce production with_constraints -> with_constraint
-- On RPAREN reduce production with_constraints -> with_constraint
-- On OPEN reduce production with_constraints -> with_constraint
-- On MODULE reduce production with_constraints -> with_constraint
-- On LET reduce production with_constraints -> with_constraint
-- On INCLUDE reduce production with_constraints -> with_constraint
-- On EXTERNAL reduce production with_constraints -> with_constraint
-- On EXCEPTION reduce production with_constraints -> with_constraint
-- On EQUAL reduce production with_constraints -> with_constraint
-- On EOF reduce production with_constraints -> with_constraint
-- On DEF reduce production with_constraints -> with_constraint
-- On CLASS reduce production with_constraints -> with_constraint
-- On AND reduce production with_constraints -> with_constraint

State 1137:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On MINUSGREATER shift to state 1138

State 1138:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_type [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1139
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1139:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH shift to state 1122
-- On WITH reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On VAL reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On TYPE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On SHARP reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On SEMISEMI reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On RPAREN reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On OPEN reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On MODULE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On LET reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On INCLUDE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EXTERNAL reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EXCEPTION reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EQUAL reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EOF reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On DEF reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On CLASS reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
** Conflict on WITH

State 1140:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
mty_longident -> mod_ext_longident . DOT ident [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On LPAREN shift to state 156
-- On DOT shift to state 1141

State 1141:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
mty_longident -> mod_ext_longident DOT . ident [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On UIDENT shift to state 1142
-- On LIDENT shift to state 135
-- On ident shift to state 1143

State 1142:
ident -> UIDENT . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
-- On WITH reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On SHARP reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LET reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On EQUAL reduce production ident -> UIDENT
-- On EOF reduce production ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT

State 1143:
mty_longident -> mod_ext_longident DOT ident . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production mty_longident -> mod_ext_longident DOT ident
-- On VAL reduce production mty_longident -> mod_ext_longident DOT ident
-- On TYPE reduce production mty_longident -> mod_ext_longident DOT ident
-- On SHARP reduce production mty_longident -> mod_ext_longident DOT ident
-- On SEMISEMI reduce production mty_longident -> mod_ext_longident DOT ident
-- On RPAREN reduce production mty_longident -> mod_ext_longident DOT ident
-- On OPEN reduce production mty_longident -> mod_ext_longident DOT ident
-- On MODULE reduce production mty_longident -> mod_ext_longident DOT ident
-- On LET reduce production mty_longident -> mod_ext_longident DOT ident
-- On INCLUDE reduce production mty_longident -> mod_ext_longident DOT ident
-- On EXTERNAL reduce production mty_longident -> mod_ext_longident DOT ident
-- On EXCEPTION reduce production mty_longident -> mod_ext_longident DOT ident
-- On EQUAL reduce production mty_longident -> mod_ext_longident DOT ident
-- On EOF reduce production mty_longident -> mod_ext_longident DOT ident
-- On DEF reduce production mty_longident -> mod_ext_longident DOT ident
-- On CLASS reduce production mty_longident -> mod_ext_longident DOT ident

State 1144:
mty_longident -> ident . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production mty_longident -> ident
-- On VAL reduce production mty_longident -> ident
-- On TYPE reduce production mty_longident -> ident
-- On SHARP reduce production mty_longident -> ident
-- On SEMISEMI reduce production mty_longident -> ident
-- On RPAREN reduce production mty_longident -> ident
-- On OPEN reduce production mty_longident -> ident
-- On MODULE reduce production mty_longident -> ident
-- On LET reduce production mty_longident -> ident
-- On INCLUDE reduce production mty_longident -> ident
-- On EXTERNAL reduce production mty_longident -> ident
-- On EXCEPTION reduce production mty_longident -> ident
-- On EQUAL reduce production mty_longident -> ident
-- On EOF reduce production mty_longident -> ident
-- On DEF reduce production mty_longident -> ident
-- On CLASS reduce production mty_longident -> ident

State 1145:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1146

State 1146:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On MINUSGREATER shift to state 1147

State 1147:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1149
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1148:
module_type -> mty_longident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_type -> mty_longident
-- On WITH reduce production module_type -> mty_longident
-- On VAL reduce production module_type -> mty_longident
-- On TYPE reduce production module_type -> mty_longident
-- On SEMISEMI reduce production module_type -> mty_longident
-- On RPAREN reduce production module_type -> mty_longident
-- On OPEN reduce production module_type -> mty_longident
-- On MODULE reduce production module_type -> mty_longident
-- On LET reduce production module_type -> mty_longident
-- On INCLUDE reduce production module_type -> mty_longident
-- On EXTERNAL reduce production module_type -> mty_longident
-- On EXCEPTION reduce production module_type -> mty_longident
-- On END reduce production module_type -> mty_longident
-- On DEF reduce production module_type -> mty_longident
-- On CLASS reduce production module_type -> mty_longident

State 1149:
module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On WITH shift to state 1150
-- On error reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On WITH reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On VAL reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On TYPE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On SEMISEMI reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On RPAREN reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On OPEN reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On MODULE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On LET reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On INCLUDE reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EXTERNAL reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On EXCEPTION reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On END reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On DEF reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
-- On CLASS reduce production module_type -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_type
** Conflict on WITH

State 1150:
module_type -> module_type WITH . with_constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On TYPE shift to state 1151
-- On MODULE shift to state 1157
-- On with_constraints shift to state 1167
-- On with_constraint shift to state 1170

State 1151:
with_constraint -> TYPE . type_parameters label_longident EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1152
-- On type_parameter shift to state 1027
-- On UIDENT reduce production type_parameters -> 
-- On LIDENT reduce production type_parameters -> 

State 1152:
with_constraint -> TYPE type_parameters . label_longident EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 54
-- On mod_longident shift to state 55
-- On label_longident shift to state 1153

State 1153:
with_constraint -> TYPE type_parameters label_longident . EQUAL core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On EQUAL shift to state 1154

State 1154:
with_constraint -> TYPE type_parameters label_longident EQUAL . core_type constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 1155

State 1155:
core_type -> core_type . MINUSGREATER core_type [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AS AND ]
core_type -> core_type . AS type_parameter [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE MINUSGREATER LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AS AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type . constraints [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233
-- On constraints shift to state 1156
-- On error reduce production constraints -> 
-- On WITH reduce production constraints -> 
-- On VAL reduce production constraints -> 
-- On TYPE reduce production constraints -> 
-- On SEMISEMI reduce production constraints -> 
-- On RPAREN reduce production constraints -> 
-- On OPEN reduce production constraints -> 
-- On MODULE reduce production constraints -> 
-- On LET reduce production constraints -> 
-- On INCLUDE reduce production constraints -> 
-- On EXTERNAL reduce production constraints -> 
-- On EXCEPTION reduce production constraints -> 
-- On END reduce production constraints -> 
-- On DEF reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On CLASS reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1156:
constraints -> constraints . CONSTRAINT constrain [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CONSTRAINT CLASS AND ]
with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On CONSTRAINT shift to state 1089
-- On error reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On WITH reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On VAL reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On TYPE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On SEMISEMI reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On RPAREN reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On OPEN reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On MODULE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On LET reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On INCLUDE reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EXTERNAL reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On EXCEPTION reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On END reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On DEF reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On CLASS reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints
-- On AND reduce production with_constraint -> TYPE type_parameters label_longident EQUAL core_type constraints

State 1157:
with_constraint -> MODULE . mod_longident EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On mod_longident shift to state 1158

State 1158:
mod_longident -> mod_longident . DOT UIDENT [ EQUAL DOT ]
with_constraint -> MODULE mod_longident . EQUAL mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On EQUAL shift to state 1159
-- On DOT shift to state 304

State 1159:
with_constraint -> MODULE mod_longident EQUAL . mod_ext_longident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 1160
-- On mod_ext_longident shift to state 1161

State 1160:
mod_ext_longident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On error reduce production mod_ext_longident -> UIDENT
-- On WITH reduce production mod_ext_longident -> UIDENT
-- On VAL reduce production mod_ext_longident -> UIDENT
-- On TYPE reduce production mod_ext_longident -> UIDENT
-- On SEMISEMI reduce production mod_ext_longident -> UIDENT
-- On RPAREN reduce production mod_ext_longident -> UIDENT
-- On OPEN reduce production mod_ext_longident -> UIDENT
-- On MODULE reduce production mod_ext_longident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> UIDENT
-- On LET reduce production mod_ext_longident -> UIDENT
-- On INCLUDE reduce production mod_ext_longident -> UIDENT
-- On EXTERNAL reduce production mod_ext_longident -> UIDENT
-- On EXCEPTION reduce production mod_ext_longident -> UIDENT
-- On END reduce production mod_ext_longident -> UIDENT
-- On DOT reduce production mod_ext_longident -> UIDENT
-- On DEF reduce production mod_ext_longident -> UIDENT
-- On CLASS reduce production mod_ext_longident -> UIDENT
-- On AND reduce production mod_ext_longident -> UIDENT

State 1161:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
with_constraint -> MODULE mod_longident EQUAL mod_ext_longident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On LPAREN shift to state 1162
-- On DOT shift to state 1165
-- On error reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On WITH reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On VAL reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On TYPE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On SEMISEMI reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On RPAREN reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On OPEN reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On MODULE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On LET reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On INCLUDE reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EXTERNAL reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On EXCEPTION reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On END reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On DEF reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On CLASS reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident
-- On AND reduce production with_constraint -> MODULE mod_longident EQUAL mod_ext_longident

State 1162:
mod_ext_longident -> mod_ext_longident LPAREN . mod_ext_longident RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On UIDENT shift to state 122
-- On mod_ext_longident shift to state 1163

State 1163:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ RPAREN LPAREN DOT ]
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On RPAREN shift to state 1164
-- On LPAREN shift to state 156
-- On DOT shift to state 159

State 1164:
mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On error reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On WITH reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On VAL reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On TYPE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On SEMISEMI reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On RPAREN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On OPEN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On MODULE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On LET reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On INCLUDE reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EXTERNAL reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On EXCEPTION reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On END reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On DOT reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On DEF reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On CLASS reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN
-- On AND reduce production mod_ext_longident -> mod_ext_longident LPAREN mod_ext_longident RPAREN

State 1165:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On UIDENT shift to state 1166

State 1166:
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET INCLUDE EXTERNAL EXCEPTION END DOT DEF CLASS AND ]
-- On error reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On WITH reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On VAL reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On TYPE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On SEMISEMI reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On RPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On OPEN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On MODULE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LET reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On INCLUDE reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EXTERNAL reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On EXCEPTION reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On END reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DOT reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DEF reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On CLASS reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On AND reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT

State 1167:
module_type -> module_type WITH with_constraints . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
with_constraints -> with_constraints . AND with_constraint [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On AND shift to state 1168
-- On error reduce production module_type -> module_type WITH with_constraints
-- On WITH reduce production module_type -> module_type WITH with_constraints
-- On VAL reduce production module_type -> module_type WITH with_constraints
-- On TYPE reduce production module_type -> module_type WITH with_constraints
-- On SEMISEMI reduce production module_type -> module_type WITH with_constraints
-- On RPAREN reduce production module_type -> module_type WITH with_constraints
-- On OPEN reduce production module_type -> module_type WITH with_constraints
-- On MODULE reduce production module_type -> module_type WITH with_constraints
-- On LET reduce production module_type -> module_type WITH with_constraints
-- On INCLUDE reduce production module_type -> module_type WITH with_constraints
-- On EXTERNAL reduce production module_type -> module_type WITH with_constraints
-- On EXCEPTION reduce production module_type -> module_type WITH with_constraints
-- On END reduce production module_type -> module_type WITH with_constraints
-- On DEF reduce production module_type -> module_type WITH with_constraints
-- On CLASS reduce production module_type -> module_type WITH with_constraints

State 1168:
with_constraints -> with_constraints AND . with_constraint [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On TYPE shift to state 1151
-- On MODULE shift to state 1157
-- On with_constraint shift to state 1169

State 1169:
with_constraints -> with_constraints AND with_constraint . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production with_constraints -> with_constraints AND with_constraint
-- On WITH reduce production with_constraints -> with_constraints AND with_constraint
-- On VAL reduce production with_constraints -> with_constraints AND with_constraint
-- On TYPE reduce production with_constraints -> with_constraints AND with_constraint
-- On SEMISEMI reduce production with_constraints -> with_constraints AND with_constraint
-- On RPAREN reduce production with_constraints -> with_constraints AND with_constraint
-- On OPEN reduce production with_constraints -> with_constraints AND with_constraint
-- On MODULE reduce production with_constraints -> with_constraints AND with_constraint
-- On LET reduce production with_constraints -> with_constraints AND with_constraint
-- On INCLUDE reduce production with_constraints -> with_constraints AND with_constraint
-- On EXTERNAL reduce production with_constraints -> with_constraints AND with_constraint
-- On EXCEPTION reduce production with_constraints -> with_constraints AND with_constraint
-- On END reduce production with_constraints -> with_constraints AND with_constraint
-- On DEF reduce production with_constraints -> with_constraints AND with_constraint
-- On CLASS reduce production with_constraints -> with_constraints AND with_constraint
-- On AND reduce production with_constraints -> with_constraints AND with_constraint

State 1170:
with_constraints -> with_constraint . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production with_constraints -> with_constraint
-- On WITH reduce production with_constraints -> with_constraint
-- On VAL reduce production with_constraints -> with_constraint
-- On TYPE reduce production with_constraints -> with_constraint
-- On SEMISEMI reduce production with_constraints -> with_constraint
-- On RPAREN reduce production with_constraints -> with_constraint
-- On OPEN reduce production with_constraints -> with_constraint
-- On MODULE reduce production with_constraints -> with_constraint
-- On LET reduce production with_constraints -> with_constraint
-- On INCLUDE reduce production with_constraints -> with_constraint
-- On EXTERNAL reduce production with_constraints -> with_constraint
-- On EXCEPTION reduce production with_constraints -> with_constraint
-- On END reduce production with_constraints -> with_constraint
-- On DEF reduce production with_constraints -> with_constraint
-- On CLASS reduce production with_constraints -> with_constraint
-- On AND reduce production with_constraints -> with_constraint

State 1171:
mod_ext_longident -> mod_ext_longident . DOT UIDENT [ LPAREN DOT ]
mod_ext_longident -> mod_ext_longident . LPAREN mod_ext_longident RPAREN [ LPAREN DOT ]
mty_longident -> mod_ext_longident . DOT ident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 156
-- On DOT shift to state 1172

State 1172:
mod_ext_longident -> mod_ext_longident DOT . UIDENT [ LPAREN DOT ]
mty_longident -> mod_ext_longident DOT . ident [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1173
-- On LIDENT shift to state 127
-- On ident shift to state 1174

State 1173:
ident -> UIDENT . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
mod_ext_longident -> mod_ext_longident DOT UIDENT . [ LPAREN DOT ]
-- On error reduce production ident -> UIDENT
-- On WITH reduce production ident -> UIDENT
-- On VAL reduce production ident -> UIDENT
-- On TYPE reduce production ident -> UIDENT
-- On SEMISEMI reduce production ident -> UIDENT
-- On RPAREN reduce production ident -> UIDENT
-- On OPEN reduce production ident -> UIDENT
-- On MODULE reduce production ident -> UIDENT
-- On LPAREN reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On LET reduce production ident -> UIDENT
-- On INCLUDE reduce production ident -> UIDENT
-- On EXTERNAL reduce production ident -> UIDENT
-- On EXCEPTION reduce production ident -> UIDENT
-- On END reduce production ident -> UIDENT
-- On DOT reduce production mod_ext_longident -> mod_ext_longident DOT UIDENT
-- On DEF reduce production ident -> UIDENT
-- On CLASS reduce production ident -> UIDENT

State 1174:
mty_longident -> mod_ext_longident DOT ident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production mty_longident -> mod_ext_longident DOT ident
-- On WITH reduce production mty_longident -> mod_ext_longident DOT ident
-- On VAL reduce production mty_longident -> mod_ext_longident DOT ident
-- On TYPE reduce production mty_longident -> mod_ext_longident DOT ident
-- On SEMISEMI reduce production mty_longident -> mod_ext_longident DOT ident
-- On RPAREN reduce production mty_longident -> mod_ext_longident DOT ident
-- On OPEN reduce production mty_longident -> mod_ext_longident DOT ident
-- On MODULE reduce production mty_longident -> mod_ext_longident DOT ident
-- On LET reduce production mty_longident -> mod_ext_longident DOT ident
-- On INCLUDE reduce production mty_longident -> mod_ext_longident DOT ident
-- On EXTERNAL reduce production mty_longident -> mod_ext_longident DOT ident
-- On EXCEPTION reduce production mty_longident -> mod_ext_longident DOT ident
-- On END reduce production mty_longident -> mod_ext_longident DOT ident
-- On DEF reduce production mty_longident -> mod_ext_longident DOT ident
-- On CLASS reduce production mty_longident -> mod_ext_longident DOT ident

State 1175:
mty_longident -> ident . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production mty_longident -> ident
-- On WITH reduce production mty_longident -> ident
-- On VAL reduce production mty_longident -> ident
-- On TYPE reduce production mty_longident -> ident
-- On SEMISEMI reduce production mty_longident -> ident
-- On RPAREN reduce production mty_longident -> ident
-- On OPEN reduce production mty_longident -> ident
-- On MODULE reduce production mty_longident -> ident
-- On LET reduce production mty_longident -> ident
-- On INCLUDE reduce production mty_longident -> ident
-- On EXTERNAL reduce production mty_longident -> ident
-- On EXCEPTION reduce production mty_longident -> ident
-- On END reduce production mty_longident -> ident
-- On DEF reduce production mty_longident -> ident
-- On CLASS reduce production mty_longident -> ident

State 1176:
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
module_type -> LPAREN module_type . RPAREN [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> LPAREN module_type . error [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error shift to state 1177
-- On WITH shift to state 1150
-- On RPAREN shift to state 1178

State 1177:
module_type -> LPAREN module_type error . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_type -> LPAREN module_type error
-- On WITH reduce production module_type -> LPAREN module_type error
-- On VAL reduce production module_type -> LPAREN module_type error
-- On TYPE reduce production module_type -> LPAREN module_type error
-- On SEMISEMI reduce production module_type -> LPAREN module_type error
-- On RPAREN reduce production module_type -> LPAREN module_type error
-- On OPEN reduce production module_type -> LPAREN module_type error
-- On MODULE reduce production module_type -> LPAREN module_type error
-- On LET reduce production module_type -> LPAREN module_type error
-- On INCLUDE reduce production module_type -> LPAREN module_type error
-- On EXTERNAL reduce production module_type -> LPAREN module_type error
-- On EXCEPTION reduce production module_type -> LPAREN module_type error
-- On END reduce production module_type -> LPAREN module_type error
-- On DEF reduce production module_type -> LPAREN module_type error
-- On CLASS reduce production module_type -> LPAREN module_type error

State 1178:
module_type -> LPAREN module_type RPAREN . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_type -> LPAREN module_type RPAREN
-- On WITH reduce production module_type -> LPAREN module_type RPAREN
-- On VAL reduce production module_type -> LPAREN module_type RPAREN
-- On TYPE reduce production module_type -> LPAREN module_type RPAREN
-- On SEMISEMI reduce production module_type -> LPAREN module_type RPAREN
-- On RPAREN reduce production module_type -> LPAREN module_type RPAREN
-- On OPEN reduce production module_type -> LPAREN module_type RPAREN
-- On MODULE reduce production module_type -> LPAREN module_type RPAREN
-- On LET reduce production module_type -> LPAREN module_type RPAREN
-- On INCLUDE reduce production module_type -> LPAREN module_type RPAREN
-- On EXTERNAL reduce production module_type -> LPAREN module_type RPAREN
-- On EXCEPTION reduce production module_type -> LPAREN module_type RPAREN
-- On END reduce production module_type -> LPAREN module_type RPAREN
-- On DEF reduce production module_type -> LPAREN module_type RPAREN
-- On CLASS reduce production module_type -> LPAREN module_type RPAREN

State 1179:
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> INCLUDE module_type . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On WITH shift to state 1150
-- On error reduce production signature_item -> INCLUDE module_type
-- On VAL reduce production signature_item -> INCLUDE module_type
-- On TYPE reduce production signature_item -> INCLUDE module_type
-- On SEMISEMI reduce production signature_item -> INCLUDE module_type
-- On OPEN reduce production signature_item -> INCLUDE module_type
-- On MODULE reduce production signature_item -> INCLUDE module_type
-- On INCLUDE reduce production signature_item -> INCLUDE module_type
-- On EXTERNAL reduce production signature_item -> INCLUDE module_type
-- On EXCEPTION reduce production signature_item -> INCLUDE module_type
-- On END reduce production signature_item -> INCLUDE module_type
-- On CLASS reduce production signature_item -> INCLUDE module_type

State 1180:
signature_item -> EXTERNAL . val_ident COLON core_type EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1181

State 1181:
signature_item -> EXTERNAL val_ident . COLON core_type EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On COLON shift to state 1182

State 1182:
signature_item -> EXTERNAL val_ident COLON . core_type EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1183

State 1183:
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER EQUAL AS ]
signature_item -> EXTERNAL val_ident COLON core_type . EQUAL primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On MINUSGREATER shift to state 167
-- On EQUAL shift to state 1184
-- On AS shift to state 169

State 1184:
signature_item -> EXTERNAL val_ident COLON core_type EQUAL . primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On STRING shift to state 1185
-- On primitive_declaration shift to state 1187

State 1185:
primitive_declaration -> STRING . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
primitive_declaration -> STRING . primitive_declaration [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On STRING shift to state 1185
-- On primitive_declaration shift to state 1186
-- On error reduce production primitive_declaration -> STRING
-- On VAL reduce production primitive_declaration -> STRING
-- On TYPE reduce production primitive_declaration -> STRING
-- On SEMISEMI reduce production primitive_declaration -> STRING
-- On OPEN reduce production primitive_declaration -> STRING
-- On MODULE reduce production primitive_declaration -> STRING
-- On LET reduce production primitive_declaration -> STRING
-- On INCLUDE reduce production primitive_declaration -> STRING
-- On EXTERNAL reduce production primitive_declaration -> STRING
-- On EXCEPTION reduce production primitive_declaration -> STRING
-- On END reduce production primitive_declaration -> STRING
-- On DEF reduce production primitive_declaration -> STRING
-- On CLASS reduce production primitive_declaration -> STRING

State 1186:
primitive_declaration -> STRING primitive_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production primitive_declaration -> STRING primitive_declaration
-- On VAL reduce production primitive_declaration -> STRING primitive_declaration
-- On TYPE reduce production primitive_declaration -> STRING primitive_declaration
-- On SEMISEMI reduce production primitive_declaration -> STRING primitive_declaration
-- On OPEN reduce production primitive_declaration -> STRING primitive_declaration
-- On MODULE reduce production primitive_declaration -> STRING primitive_declaration
-- On LET reduce production primitive_declaration -> STRING primitive_declaration
-- On INCLUDE reduce production primitive_declaration -> STRING primitive_declaration
-- On EXTERNAL reduce production primitive_declaration -> STRING primitive_declaration
-- On EXCEPTION reduce production primitive_declaration -> STRING primitive_declaration
-- On END reduce production primitive_declaration -> STRING primitive_declaration
-- On DEF reduce production primitive_declaration -> STRING primitive_declaration
-- On CLASS reduce production primitive_declaration -> STRING primitive_declaration

State 1187:
signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On VAL reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On TYPE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On SEMISEMI reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On OPEN reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On MODULE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On INCLUDE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXTERNAL reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXCEPTION reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On END reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On CLASS reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration

State 1188:
signature_item -> EXCEPTION . UIDENT constructor_arguments [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1189

State 1189:
signature_item -> EXCEPTION UIDENT . constructor_arguments [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On OF shift to state 1071
-- On constructor_arguments shift to state 1190
-- On error reduce production constructor_arguments -> 
-- On VAL reduce production constructor_arguments -> 
-- On TYPE reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On INCLUDE reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On END reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 

State 1190:
signature_item -> EXCEPTION UIDENT constructor_arguments . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On VAL reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On TYPE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On SEMISEMI reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On OPEN reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On MODULE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On INCLUDE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On EXTERNAL reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On EXCEPTION reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On END reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On CLASS reduce production signature_item -> EXCEPTION UIDENT constructor_arguments

State 1191:
module_type -> SIG signature END . [ error WITH VAL TYPE SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_type -> SIG signature END
-- On WITH reduce production module_type -> SIG signature END
-- On VAL reduce production module_type -> SIG signature END
-- On TYPE reduce production module_type -> SIG signature END
-- On SEMISEMI reduce production module_type -> SIG signature END
-- On RPAREN reduce production module_type -> SIG signature END
-- On OPEN reduce production module_type -> SIG signature END
-- On MODULE reduce production module_type -> SIG signature END
-- On LET reduce production module_type -> SIG signature END
-- On INCLUDE reduce production module_type -> SIG signature END
-- On EXTERNAL reduce production module_type -> SIG signature END
-- On EXCEPTION reduce production module_type -> SIG signature END
-- On END reduce production module_type -> SIG signature END
-- On DEF reduce production module_type -> SIG signature END
-- On CLASS reduce production module_type -> SIG signature END

State 1192:
signature_item -> CLASS . class_type_list END [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1194
-- On class_type_list shift to state 1242
-- On class_type shift to state 1246
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1193:
virtual_flag -> VIRTUAL . [ QUOTE LPAREN LIDENT CLOSED ]
-- On QUOTE reduce production virtual_flag -> VIRTUAL
-- On LPAREN reduce production virtual_flag -> VIRTUAL
-- On LIDENT reduce production virtual_flag -> VIRTUAL
-- On CLOSED reduce production virtual_flag -> VIRTUAL

State 1194:
class_type -> virtual_flag . closed_flag class_type_parameters LIDENT type_list self_type EQUAL constraints class_type_fields [ END AND ]
-- On CLOSED shift to state 1195
-- On closed_flag shift to state 1196
-- On QUOTE reduce production closed_flag -> 
-- On LPAREN reduce production closed_flag -> 
-- On LIDENT reduce production closed_flag -> 

State 1195:
closed_flag -> CLOSED . [ QUOTE LPAREN LIDENT ]
-- On QUOTE reduce production closed_flag -> CLOSED
-- On LPAREN reduce production closed_flag -> CLOSED
-- On LIDENT reduce production closed_flag -> CLOSED

State 1196:
class_type -> virtual_flag closed_flag . class_type_parameters LIDENT type_list self_type EQUAL constraints class_type_fields [ END AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1197
-- On type_parameter shift to state 1027
-- On class_type_parameters shift to state 1198
-- On LIDENT reduce production type_parameters -> 

State 1197:
class_type_parameters -> type_parameters . [ LIDENT ]
-- On LIDENT reduce production class_type_parameters -> type_parameters

State 1198:
class_type -> virtual_flag closed_flag class_type_parameters . LIDENT type_list self_type EQUAL constraints class_type_fields [ END AND ]
-- On LIDENT shift to state 1199

State 1199:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT . type_list self_type EQUAL constraints class_type_fields [ END AND ]
-- On LPAREN shift to state 1200
-- On type_list shift to state 1204

State 1200:
type_list -> LPAREN . core_type RPAREN type_list [ EQUAL COLON ]
type_list -> LPAREN . core_type RPAREN [ EQUAL COLON ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1201

State 1201:
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER AS ]
type_list -> LPAREN core_type . RPAREN type_list [ EQUAL COLON ]
type_list -> LPAREN core_type . RPAREN [ EQUAL COLON ]
-- On RPAREN shift to state 1202
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169

State 1202:
type_list -> LPAREN core_type RPAREN . type_list [ EQUAL COLON ]
type_list -> LPAREN core_type RPAREN . [ EQUAL COLON ]
-- On LPAREN shift to state 1200
-- On type_list shift to state 1203
-- On EQUAL reduce production type_list -> LPAREN core_type RPAREN
-- On COLON reduce production type_list -> LPAREN core_type RPAREN

State 1203:
type_list -> LPAREN core_type RPAREN type_list . [ EQUAL COLON ]
-- On EQUAL reduce production type_list -> LPAREN core_type RPAREN type_list
-- On COLON reduce production type_list -> LPAREN core_type RPAREN type_list

State 1204:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list . self_type EQUAL constraints class_type_fields [ END AND ]
-- On COLON shift to state 1205
-- On self_type shift to state 1207
-- On EQUAL reduce production self_type -> 

State 1205:
self_type -> COLON . type_parameter [ EQUAL ]
-- On QUOTE shift to state 170
-- On type_parameter shift to state 1206

State 1206:
self_type -> COLON type_parameter . [ EQUAL ]
-- On EQUAL reduce production self_type -> COLON type_parameter

State 1207:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type . EQUAL constraints class_type_fields [ END AND ]
-- On EQUAL shift to state 1208

State 1208:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type EQUAL . constraints class_type_fields [ END AND ]
-- On constraints shift to state 1209
-- On VIRTUAL reduce production constraints -> 
-- On VAL reduce production constraints -> 
-- On METHOD reduce production constraints -> 
-- On INHERIT reduce production constraints -> 
-- On END reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1209:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type EQUAL constraints . class_type_fields [ END AND ]
constraints -> constraints . CONSTRAINT constrain [ VIRTUAL VAL METHOD INHERIT END CONSTRAINT AND ]
-- On CONSTRAINT shift to state 1022
-- On class_type_fields shift to state 1210
-- On VIRTUAL reduce production class_type_fields -> 
-- On VAL reduce production class_type_fields -> 
-- On METHOD reduce production class_type_fields -> 
-- On INHERIT reduce production class_type_fields -> 
-- On END reduce production class_type_fields -> 
-- On AND reduce production class_type_fields -> 

State 1210:
class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type EQUAL constraints class_type_fields . [ END AND ]
class_type_fields -> class_type_fields . INHERIT ancestor_type [ VIRTUAL VAL METHOD INHERIT END AND ]
class_type_fields -> class_type_fields . VAL value_type [ VIRTUAL VAL METHOD INHERIT END AND ]
class_type_fields -> class_type_fields . virtual_method [ VIRTUAL VAL METHOD INHERIT END AND ]
class_type_fields -> class_type_fields . method_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL shift to state 1211
-- On VAL shift to state 1217
-- On METHOD shift to state 1225
-- On INHERIT shift to state 1230
-- On virtual_method shift to state 1240
-- On method_type shift to state 1241
-- On END reduce production class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type EQUAL constraints class_type_fields
-- On AND reduce production class_type -> virtual_flag closed_flag class_type_parameters LIDENT type_list self_type EQUAL constraints class_type_fields

State 1211:
virtual_method -> VIRTUAL . protected_flag label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On PROTECTED shift to state 1212
-- On protected_flag shift to state 1213
-- On LIDENT reduce production protected_flag -> 

State 1212:
protected_flag -> PROTECTED . [ LIDENT ]
-- On LIDENT reduce production protected_flag -> PROTECTED

State 1213:
virtual_method -> VIRTUAL protected_flag . label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 141
-- On label shift to state 1214

State 1214:
virtual_method -> VIRTUAL protected_flag label . COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On COLON shift to state 1215

State 1215:
virtual_method -> VIRTUAL protected_flag label COLON . core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1216

State 1216:
core_type -> core_type . MINUSGREATER core_type [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
core_type -> core_type . AS type_parameter [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
virtual_method -> VIRTUAL protected_flag label COLON core_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On VIRTUAL reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On VAL reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On METHOD reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On INHERIT reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On END reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On AND reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type

State 1217:
class_type_fields -> class_type_fields VAL . value_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On PRIVATE shift to state 1218
-- On value_type shift to state 1219
-- On private_flag shift to state 1220
-- On MUTABLE reduce production private_flag -> 
-- On LIDENT reduce production private_flag -> 

State 1218:
private_flag -> PRIVATE . [ MUTABLE LIDENT ]
-- On MUTABLE reduce production private_flag -> PRIVATE
-- On LIDENT reduce production private_flag -> PRIVATE

State 1219:
class_type_fields -> class_type_fields VAL value_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production class_type_fields -> class_type_fields VAL value_type
-- On VAL reduce production class_type_fields -> class_type_fields VAL value_type
-- On METHOD reduce production class_type_fields -> class_type_fields VAL value_type
-- On INHERIT reduce production class_type_fields -> class_type_fields VAL value_type
-- On END reduce production class_type_fields -> class_type_fields VAL value_type
-- On AND reduce production class_type_fields -> class_type_fields VAL value_type

State 1220:
value_type -> private_flag . mutable_flag label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
value_type -> private_flag . mutable_flag label [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 1221
-- On LIDENT reduce production mutable_flag -> 

State 1221:
value_type -> private_flag mutable_flag . label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
value_type -> private_flag mutable_flag . label [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 141
-- On label shift to state 1222

State 1222:
value_type -> private_flag mutable_flag label . COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
value_type -> private_flag mutable_flag label . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On COLON shift to state 1223
-- On VIRTUAL reduce production value_type -> private_flag mutable_flag label
-- On VAL reduce production value_type -> private_flag mutable_flag label
-- On METHOD reduce production value_type -> private_flag mutable_flag label
-- On INHERIT reduce production value_type -> private_flag mutable_flag label
-- On END reduce production value_type -> private_flag mutable_flag label
-- On AND reduce production value_type -> private_flag mutable_flag label

State 1223:
value_type -> private_flag mutable_flag label COLON . core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1224

State 1224:
core_type -> core_type . MINUSGREATER core_type [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
core_type -> core_type . AS type_parameter [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
value_type -> private_flag mutable_flag label COLON core_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On VIRTUAL reduce production value_type -> private_flag mutable_flag label COLON core_type
-- On VAL reduce production value_type -> private_flag mutable_flag label COLON core_type
-- On METHOD reduce production value_type -> private_flag mutable_flag label COLON core_type
-- On INHERIT reduce production value_type -> private_flag mutable_flag label COLON core_type
-- On END reduce production value_type -> private_flag mutable_flag label COLON core_type
-- On AND reduce production value_type -> private_flag mutable_flag label COLON core_type

State 1225:
method_type -> METHOD . protected_flag label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
method_type -> METHOD . protected_flag label [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On PROTECTED shift to state 1212
-- On protected_flag shift to state 1226
-- On LIDENT reduce production protected_flag -> 

State 1226:
method_type -> METHOD protected_flag . label COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
method_type -> METHOD protected_flag . label [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 141
-- On label shift to state 1227

State 1227:
method_type -> METHOD protected_flag label . COLON core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
method_type -> METHOD protected_flag label . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On COLON shift to state 1228
-- On VIRTUAL reduce production method_type -> METHOD protected_flag label
-- On VAL reduce production method_type -> METHOD protected_flag label
-- On METHOD reduce production method_type -> METHOD protected_flag label
-- On INHERIT reduce production method_type -> METHOD protected_flag label
-- On END reduce production method_type -> METHOD protected_flag label
-- On AND reduce production method_type -> METHOD protected_flag label

State 1228:
method_type -> METHOD protected_flag label COLON . core_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1229

State 1229:
core_type -> core_type . MINUSGREATER core_type [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
core_type -> core_type . AS type_parameter [ VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
method_type -> METHOD protected_flag label COLON core_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On VIRTUAL reduce production method_type -> METHOD protected_flag label COLON core_type
-- On VAL reduce production method_type -> METHOD protected_flag label COLON core_type
-- On METHOD reduce production method_type -> METHOD protected_flag label COLON core_type
-- On INHERIT reduce production method_type -> METHOD protected_flag label COLON core_type
-- On END reduce production method_type -> METHOD protected_flag label COLON core_type
-- On AND reduce production method_type -> METHOD protected_flag label COLON core_type

State 1230:
class_type_fields -> class_type_fields INHERIT . ancestor_type [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 1231
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1238
-- On ancestor_type shift to state 1239

State 1231:
ancestor_type -> LPAREN . core_type_comma_list RPAREN class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
ancestor_type -> LPAREN . core_type RPAREN class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 1232
-- On core_type shift to state 1235

State 1232:
ancestor_type -> LPAREN core_type_comma_list . RPAREN class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
-- On RPAREN shift to state 1233
-- On COMMA shift to state 191

State 1233:
ancestor_type -> LPAREN core_type_comma_list RPAREN . class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1234

State 1234:
ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident
-- On VAL reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident
-- On METHOD reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident
-- On INHERIT reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident
-- On END reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident
-- On AND reduce production ancestor_type -> LPAREN core_type_comma_list RPAREN class_longident

State 1235:
ancestor_type -> LPAREN core_type . RPAREN class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type . COMMA core_type [ RPAREN COMMA ]
-- On RPAREN shift to state 1236
-- On MINUSGREATER shift to state 167
-- On COMMA shift to state 195
-- On AS shift to state 169

State 1236:
ancestor_type -> LPAREN core_type RPAREN . class_longident [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1237

State 1237:
ancestor_type -> LPAREN core_type RPAREN class_longident . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production ancestor_type -> LPAREN core_type RPAREN class_longident
-- On VAL reduce production ancestor_type -> LPAREN core_type RPAREN class_longident
-- On METHOD reduce production ancestor_type -> LPAREN core_type RPAREN class_longident
-- On INHERIT reduce production ancestor_type -> LPAREN core_type RPAREN class_longident
-- On END reduce production ancestor_type -> LPAREN core_type RPAREN class_longident
-- On AND reduce production ancestor_type -> LPAREN core_type RPAREN class_longident

State 1238:
ancestor_type -> class_longident . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production ancestor_type -> class_longident
-- On VAL reduce production ancestor_type -> class_longident
-- On METHOD reduce production ancestor_type -> class_longident
-- On INHERIT reduce production ancestor_type -> class_longident
-- On END reduce production ancestor_type -> class_longident
-- On AND reduce production ancestor_type -> class_longident

State 1239:
class_type_fields -> class_type_fields INHERIT ancestor_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production class_type_fields -> class_type_fields INHERIT ancestor_type
-- On VAL reduce production class_type_fields -> class_type_fields INHERIT ancestor_type
-- On METHOD reduce production class_type_fields -> class_type_fields INHERIT ancestor_type
-- On INHERIT reduce production class_type_fields -> class_type_fields INHERIT ancestor_type
-- On END reduce production class_type_fields -> class_type_fields INHERIT ancestor_type
-- On AND reduce production class_type_fields -> class_type_fields INHERIT ancestor_type

State 1240:
class_type_fields -> class_type_fields virtual_method . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production class_type_fields -> class_type_fields virtual_method
-- On VAL reduce production class_type_fields -> class_type_fields virtual_method
-- On METHOD reduce production class_type_fields -> class_type_fields virtual_method
-- On INHERIT reduce production class_type_fields -> class_type_fields virtual_method
-- On END reduce production class_type_fields -> class_type_fields virtual_method
-- On AND reduce production class_type_fields -> class_type_fields virtual_method

State 1241:
class_type_fields -> class_type_fields method_type . [ VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL reduce production class_type_fields -> class_type_fields method_type
-- On VAL reduce production class_type_fields -> class_type_fields method_type
-- On METHOD reduce production class_type_fields -> class_type_fields method_type
-- On INHERIT reduce production class_type_fields -> class_type_fields method_type
-- On END reduce production class_type_fields -> class_type_fields method_type
-- On AND reduce production class_type_fields -> class_type_fields method_type

State 1242:
class_type_list -> class_type_list . AND class_type [ END AND ]
signature_item -> CLASS class_type_list . END [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On END shift to state 1243
-- On AND shift to state 1244

State 1243:
signature_item -> CLASS class_type_list END . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production signature_item -> CLASS class_type_list END
-- On VAL reduce production signature_item -> CLASS class_type_list END
-- On TYPE reduce production signature_item -> CLASS class_type_list END
-- On SEMISEMI reduce production signature_item -> CLASS class_type_list END
-- On OPEN reduce production signature_item -> CLASS class_type_list END
-- On MODULE reduce production signature_item -> CLASS class_type_list END
-- On INCLUDE reduce production signature_item -> CLASS class_type_list END
-- On EXTERNAL reduce production signature_item -> CLASS class_type_list END
-- On EXCEPTION reduce production signature_item -> CLASS class_type_list END
-- On END reduce production signature_item -> CLASS class_type_list END
-- On CLASS reduce production signature_item -> CLASS class_type_list END

State 1244:
class_type_list -> class_type_list AND . class_type [ END AND ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1194
-- On class_type shift to state 1245
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1245:
class_type_list -> class_type_list AND class_type . [ END AND ]
-- On END reduce production class_type_list -> class_type_list AND class_type
-- On AND reduce production class_type_list -> class_type_list AND class_type

State 1246:
class_type_list -> class_type . [ END AND ]
-- On END reduce production class_type_list -> class_type
-- On AND reduce production class_type_list -> class_type

State 1247:
signature -> signature signature_item . [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature -> signature signature_item . SEMISEMI [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On SEMISEMI shift to state 1248
-- On error reduce production signature -> signature signature_item
-- On VAL reduce production signature -> signature signature_item
-- On TYPE reduce production signature -> signature signature_item
-- On OPEN reduce production signature -> signature signature_item
-- On MODULE reduce production signature -> signature signature_item
-- On INCLUDE reduce production signature -> signature signature_item
-- On EXTERNAL reduce production signature -> signature signature_item
-- On EXCEPTION reduce production signature -> signature signature_item
-- On END reduce production signature -> signature signature_item
-- On CLASS reduce production signature -> signature signature_item

State 1248:
signature -> signature signature_item SEMISEMI . [ error VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production signature -> signature signature_item SEMISEMI
-- On VAL reduce production signature -> signature signature_item SEMISEMI
-- On TYPE reduce production signature -> signature signature_item SEMISEMI
-- On OPEN reduce production signature -> signature signature_item SEMISEMI
-- On MODULE reduce production signature -> signature signature_item SEMISEMI
-- On INCLUDE reduce production signature -> signature signature_item SEMISEMI
-- On EXTERNAL reduce production signature -> signature signature_item SEMISEMI
-- On EXCEPTION reduce production signature -> signature signature_item SEMISEMI
-- On END reduce production signature -> signature signature_item SEMISEMI
-- On CLASS reduce production signature -> signature signature_item SEMISEMI

State 1249:
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
module_type -> LPAREN module_type . RPAREN [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
module_type -> LPAREN module_type . error [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On error shift to state 1250
-- On WITH shift to state 1150
-- On RPAREN shift to state 1251

State 1250:
module_type -> LPAREN module_type error . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production module_type -> LPAREN module_type error
-- On VAL reduce production module_type -> LPAREN module_type error
-- On TYPE reduce production module_type -> LPAREN module_type error
-- On SHARP reduce production module_type -> LPAREN module_type error
-- On SEMISEMI reduce production module_type -> LPAREN module_type error
-- On RPAREN reduce production module_type -> LPAREN module_type error
-- On OPEN reduce production module_type -> LPAREN module_type error
-- On MODULE reduce production module_type -> LPAREN module_type error
-- On LET reduce production module_type -> LPAREN module_type error
-- On INCLUDE reduce production module_type -> LPAREN module_type error
-- On EXTERNAL reduce production module_type -> LPAREN module_type error
-- On EXCEPTION reduce production module_type -> LPAREN module_type error
-- On EQUAL reduce production module_type -> LPAREN module_type error
-- On EOF reduce production module_type -> LPAREN module_type error
-- On DEF reduce production module_type -> LPAREN module_type error
-- On CLASS reduce production module_type -> LPAREN module_type error

State 1251:
module_type -> LPAREN module_type RPAREN . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production module_type -> LPAREN module_type RPAREN
-- On VAL reduce production module_type -> LPAREN module_type RPAREN
-- On TYPE reduce production module_type -> LPAREN module_type RPAREN
-- On SHARP reduce production module_type -> LPAREN module_type RPAREN
-- On SEMISEMI reduce production module_type -> LPAREN module_type RPAREN
-- On RPAREN reduce production module_type -> LPAREN module_type RPAREN
-- On OPEN reduce production module_type -> LPAREN module_type RPAREN
-- On MODULE reduce production module_type -> LPAREN module_type RPAREN
-- On LET reduce production module_type -> LPAREN module_type RPAREN
-- On INCLUDE reduce production module_type -> LPAREN module_type RPAREN
-- On EXTERNAL reduce production module_type -> LPAREN module_type RPAREN
-- On EXCEPTION reduce production module_type -> LPAREN module_type RPAREN
-- On EQUAL reduce production module_type -> LPAREN module_type RPAREN
-- On EOF reduce production module_type -> LPAREN module_type RPAREN
-- On DEF reduce production module_type -> LPAREN module_type RPAREN
-- On CLASS reduce production module_type -> LPAREN module_type RPAREN

State 1252:
module_declaration -> LPAREN UIDENT COLON module_type . RPAREN module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1253

State 1253:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN . module_declaration [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On LPAREN shift to state 1102
-- On COLON shift to state 1254
-- On module_declaration shift to state 1256

State 1254:
module_declaration -> COLON . module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1255
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1255:
module_declaration -> COLON module_type . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On WITH shift to state 1150
-- On error reduce production module_declaration -> COLON module_type
-- On VAL reduce production module_declaration -> COLON module_type
-- On TYPE reduce production module_declaration -> COLON module_type
-- On SEMISEMI reduce production module_declaration -> COLON module_type
-- On OPEN reduce production module_declaration -> COLON module_type
-- On MODULE reduce production module_declaration -> COLON module_type
-- On INCLUDE reduce production module_declaration -> COLON module_type
-- On EXTERNAL reduce production module_declaration -> COLON module_type
-- On EXCEPTION reduce production module_declaration -> COLON module_type
-- On END reduce production module_declaration -> COLON module_type
-- On CLASS reduce production module_declaration -> COLON module_type

State 1256:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On VAL reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On TYPE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On SEMISEMI reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On OPEN reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On MODULE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On INCLUDE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On EXTERNAL reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On EXCEPTION reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On END reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On CLASS reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration

State 1257:
signature_item -> MODULE UIDENT module_declaration . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On error reduce production signature_item -> MODULE UIDENT module_declaration
-- On VAL reduce production signature_item -> MODULE UIDENT module_declaration
-- On TYPE reduce production signature_item -> MODULE UIDENT module_declaration
-- On SEMISEMI reduce production signature_item -> MODULE UIDENT module_declaration
-- On OPEN reduce production signature_item -> MODULE UIDENT module_declaration
-- On MODULE reduce production signature_item -> MODULE UIDENT module_declaration
-- On INCLUDE reduce production signature_item -> MODULE UIDENT module_declaration
-- On EXTERNAL reduce production signature_item -> MODULE UIDENT module_declaration
-- On EXCEPTION reduce production signature_item -> MODULE UIDENT module_declaration
-- On END reduce production signature_item -> MODULE UIDENT module_declaration
-- On CLASS reduce production signature_item -> MODULE UIDENT module_declaration

State 1258:
signature_item -> MODULE TYPE . ident [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> MODULE TYPE . ident EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 126
-- On LIDENT shift to state 127
-- On ident shift to state 1259

State 1259:
signature_item -> MODULE TYPE ident . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> MODULE TYPE ident . EQUAL module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On EQUAL shift to state 1260
-- On error reduce production signature_item -> MODULE TYPE ident
-- On VAL reduce production signature_item -> MODULE TYPE ident
-- On TYPE reduce production signature_item -> MODULE TYPE ident
-- On SEMISEMI reduce production signature_item -> MODULE TYPE ident
-- On OPEN reduce production signature_item -> MODULE TYPE ident
-- On MODULE reduce production signature_item -> MODULE TYPE ident
-- On INCLUDE reduce production signature_item -> MODULE TYPE ident
-- On EXTERNAL reduce production signature_item -> MODULE TYPE ident
-- On EXCEPTION reduce production signature_item -> MODULE TYPE ident
-- On END reduce production signature_item -> MODULE TYPE ident
-- On CLASS reduce production signature_item -> MODULE TYPE ident

State 1260:
signature_item -> MODULE TYPE ident EQUAL . module_type [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1261
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1261:
module_type -> module_type . WITH with_constraints [ error WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
signature_item -> MODULE TYPE ident EQUAL module_type . [ error VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION END CLASS ]
-- On WITH shift to state 1150
-- On error reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On VAL reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On TYPE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On SEMISEMI reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On OPEN reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On MODULE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On INCLUDE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On EXTERNAL reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On EXCEPTION reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On END reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On CLASS reduce production signature_item -> MODULE TYPE ident EQUAL module_type

State 1262:
module_type -> SIG signature END . [ WITH VAL TYPE SHARP SEMISEMI RPAREN OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EQUAL EOF DEF CLASS ]
-- On WITH reduce production module_type -> SIG signature END
-- On VAL reduce production module_type -> SIG signature END
-- On TYPE reduce production module_type -> SIG signature END
-- On SHARP reduce production module_type -> SIG signature END
-- On SEMISEMI reduce production module_type -> SIG signature END
-- On RPAREN reduce production module_type -> SIG signature END
-- On OPEN reduce production module_type -> SIG signature END
-- On MODULE reduce production module_type -> SIG signature END
-- On LET reduce production module_type -> SIG signature END
-- On INCLUDE reduce production module_type -> SIG signature END
-- On EXTERNAL reduce production module_type -> SIG signature END
-- On EXCEPTION reduce production module_type -> SIG signature END
-- On EQUAL reduce production module_type -> SIG signature END
-- On EOF reduce production module_type -> SIG signature END
-- On DEF reduce production module_type -> SIG signature END
-- On CLASS reduce production module_type -> SIG signature END

State 1263:
module_binding -> LPAREN UIDENT COLON module_type . RPAREN module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1264

State 1264:
module_binding -> LPAREN UIDENT COLON module_type RPAREN . module_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1037
-- On EQUAL shift to state 1265
-- On COLON shift to state 1482
-- On module_binding shift to state 1486

State 1265:
module_binding -> EQUAL . module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 2
-- On STRUCT shift to state 1266
-- On LPAREN shift to state 1460
-- On FUNCTOR shift to state 1468
-- On module_expr shift to state 1481
-- On mod_longident shift to state 1480

State 1266:
module_expr -> STRUCT . structure END [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> STRUCT . structure error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TYPE shift to state 1267
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On SEMISEMI shift to state 1269
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On OPEN shift to state 1270
-- On NEW shift to state 23
-- On MODULE shift to state 1272
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 1281
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1293
-- On CLASS shift to state 1344
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On structure_tail shift to state 1408
-- On structure_item shift to state 1409
-- On structure shift to state 1457
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1419
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1267:
structure_item -> TYPE . type_declarations [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1049
-- On type_parameter shift to state 1027
-- On type_declarations shift to state 1268
-- On type_declaration shift to state 1097
-- On LIDENT reduce production type_parameters -> 

State 1268:
structure_item -> TYPE type_declarations . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
type_declarations -> type_declarations . AND type_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On AND shift to state 1095
-- On error reduce production structure_item -> TYPE type_declarations
-- On TYPE reduce production structure_item -> TYPE type_declarations
-- On SEMISEMI reduce production structure_item -> TYPE type_declarations
-- On OPEN reduce production structure_item -> TYPE type_declarations
-- On MODULE reduce production structure_item -> TYPE type_declarations
-- On LET reduce production structure_item -> TYPE type_declarations
-- On EXTERNAL reduce production structure_item -> TYPE type_declarations
-- On EXCEPTION reduce production structure_item -> TYPE type_declarations
-- On END reduce production structure_item -> TYPE type_declarations
-- On DEF reduce production structure_item -> TYPE type_declarations
-- On CLASS reduce production structure_item -> TYPE type_declarations

State 1269:
structure_tail -> SEMISEMI . [ error END ]
structure_tail -> SEMISEMI . seq_expr structure_tail [ error END ]
structure_tail -> SEMISEMI . structure_item structure_tail [ error END ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TYPE shift to state 1267
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On OPEN shift to state 1270
-- On NEW shift to state 23
-- On MODULE shift to state 1272
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 1281
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1293
-- On CLASS shift to state 1344
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On structure_item shift to state 1453
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1455
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production structure_tail -> SEMISEMI
-- On END reduce production structure_tail -> SEMISEMI

State 1270:
structure_item -> OPEN . mod_longident [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 17
-- On mod_longident shift to state 1271

State 1271:
mod_longident -> mod_longident . DOT UIDENT [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DOT DEF CLASS ]
structure_item -> OPEN mod_longident . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On DOT shift to state 77
-- On error reduce production structure_item -> OPEN mod_longident
-- On TYPE reduce production structure_item -> OPEN mod_longident
-- On SEMISEMI reduce production structure_item -> OPEN mod_longident
-- On OPEN reduce production structure_item -> OPEN mod_longident
-- On MODULE reduce production structure_item -> OPEN mod_longident
-- On LET reduce production structure_item -> OPEN mod_longident
-- On EXTERNAL reduce production structure_item -> OPEN mod_longident
-- On EXCEPTION reduce production structure_item -> OPEN mod_longident
-- On END reduce production structure_item -> OPEN mod_longident
-- On DEF reduce production structure_item -> OPEN mod_longident
-- On CLASS reduce production structure_item -> OPEN mod_longident

State 1272:
structure_item -> MODULE . UIDENT module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
structure_item -> MODULE . TYPE ident EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1273
-- On TYPE shift to state 1449

State 1273:
structure_item -> MODULE UIDENT . module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 1274
-- On EQUAL shift to state 1279
-- On COLON shift to state 1443
-- On module_binding shift to state 1448

State 1274:
module_binding -> LPAREN . UIDENT COLON module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1275

State 1275:
module_binding -> LPAREN UIDENT . COLON module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On COLON shift to state 1276

State 1276:
module_binding -> LPAREN UIDENT COLON . module_type RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1277
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1277:
module_binding -> LPAREN UIDENT COLON module_type . RPAREN module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1278

State 1278:
module_binding -> LPAREN UIDENT COLON module_type RPAREN . module_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 1274
-- On EQUAL shift to state 1279
-- On COLON shift to state 1443
-- On module_binding shift to state 1447

State 1279:
module_binding -> EQUAL . module_expr [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1442
-- On mod_longident shift to state 1434

State 1280:
module_expr -> STRUCT . structure END [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> STRUCT . structure error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TYPE shift to state 1267
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On SEMISEMI shift to state 1269
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On OPEN shift to state 1270
-- On NEW shift to state 23
-- On MODULE shift to state 1272
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 1281
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1293
-- On CLASS shift to state 1344
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On structure_tail shift to state 1408
-- On structure_item shift to state 1409
-- On structure shift to state 1416
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1419
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1281:
expr -> LET . rec_flag let_bindings IN seq_expr [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings IN error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET . rec_flag let_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On REC shift to state 287
-- On rec_flag shift to state 1282
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 1282:
expr -> LET rec_flag . let_bindings IN seq_expr [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings IN error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET rec_flag . let_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 1283
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 1283:
expr -> LET rec_flag let_bindings . IN seq_expr [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . IN error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . error [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
structure_item -> LET rec_flag let_bindings . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error shift to state 848
-- On IN shift to state 849
-- On AND shift to state 799
-- On error reduce production structure_item -> LET rec_flag let_bindings
-- On TYPE reduce production structure_item -> LET rec_flag let_bindings
-- On SEMISEMI reduce production structure_item -> LET rec_flag let_bindings
-- On OPEN reduce production structure_item -> LET rec_flag let_bindings
-- On MODULE reduce production structure_item -> LET rec_flag let_bindings
-- On LET reduce production structure_item -> LET rec_flag let_bindings
-- On EXTERNAL reduce production structure_item -> LET rec_flag let_bindings
-- On EXCEPTION reduce production structure_item -> LET rec_flag let_bindings
-- On END reduce production structure_item -> LET rec_flag let_bindings
-- On DEF reduce production structure_item -> LET rec_flag let_bindings
-- On CLASS reduce production structure_item -> LET rec_flag let_bindings
** Conflict on error

State 1284:
structure_item -> EXTERNAL . val_ident COLON core_type EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1285

State 1285:
structure_item -> EXTERNAL val_ident . COLON core_type EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On COLON shift to state 1286

State 1286:
structure_item -> EXTERNAL val_ident COLON . core_type EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1287

State 1287:
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER EQUAL AS ]
structure_item -> EXTERNAL val_ident COLON core_type . EQUAL primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On MINUSGREATER shift to state 167
-- On EQUAL shift to state 1288
-- On AS shift to state 169

State 1288:
structure_item -> EXTERNAL val_ident COLON core_type EQUAL . primitive_declaration [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On STRING shift to state 1185
-- On primitive_declaration shift to state 1289

State 1289:
structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On TYPE reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On SEMISEMI reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On OPEN reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On MODULE reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On LET reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXTERNAL reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXCEPTION reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On END reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On DEF reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On CLASS reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration

State 1290:
structure_item -> EXCEPTION . UIDENT constructor_arguments [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1291

State 1291:
structure_item -> EXCEPTION UIDENT . constructor_arguments [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On OF shift to state 1071
-- On constructor_arguments shift to state 1292
-- On error reduce production constructor_arguments -> 
-- On TYPE reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On LET reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On END reduce production constructor_arguments -> 
-- On DEF reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 

State 1292:
structure_item -> EXCEPTION UIDENT constructor_arguments . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On TYPE reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On SEMISEMI reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On OPEN reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On MODULE reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On LET reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On EXTERNAL reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On EXCEPTION reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On END reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On DEF reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On CLASS reduce production structure_item -> EXCEPTION UIDENT constructor_arguments

State 1293:
expr -> DEF . def_bindings IN seq_expr [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> DEF . def_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 1294
-- On def_bindings shift to state 1340
-- On def_binding shift to state 1343

State 1294:
def_binding -> join_pattern . EQUAL process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
join_pattern -> join_pattern . BAR join_pattern [ EQUAL BAR ]
-- On EQUAL shift to state 1295
-- On BAR shift to state 597

State 1295:
def_binding -> join_pattern EQUAL . process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 1301
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1309
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 1325
-- On CHAR shift to state 357
-- On BEGIN shift to state 1328
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1333
-- On process shift to state 1339
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On error reduce production process -> 
-- On TYPE reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On OPEN reduce production process -> 
-- On MODULE reduce production process -> 
-- On LET reduce production process -> 
-- On IN reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On AND reduce production process -> 
** Conflict on LET DEF

State 1296:
process0 -> REPLY . static_expr to_ident [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_expr shift to state 1297
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 1297:
process0 -> REPLY static_expr . to_ident [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
static_expr -> static_expr . DOT label_longident [ error TYPE TO SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DOT DEF CLASS BAR AND ]
-- On TO shift to state 1298
-- On DOT shift to state 333
-- On to_ident shift to state 1300
-- On error reduce production to_ident -> 
-- On TYPE reduce production to_ident -> 
-- On SEMISEMI reduce production to_ident -> 
-- On OPEN reduce production to_ident -> 
-- On MODULE reduce production to_ident -> 
-- On LET reduce production to_ident -> 
-- On IN reduce production to_ident -> 
-- On EXTERNAL reduce production to_ident -> 
-- On EXCEPTION reduce production to_ident -> 
-- On END reduce production to_ident -> 
-- On ELSE reduce production to_ident -> 
-- On DEF reduce production to_ident -> 
-- On CLASS reduce production to_ident -> 
-- On BAR reduce production to_ident -> 
-- On AND reduce production to_ident -> 

State 1298:
to_ident -> TO . LIDENT [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On LIDENT shift to state 1299

State 1299:
to_ident -> TO LIDENT . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production to_ident -> TO LIDENT
-- On TYPE reduce production to_ident -> TO LIDENT
-- On SEMISEMI reduce production to_ident -> TO LIDENT
-- On OPEN reduce production to_ident -> TO LIDENT
-- On MODULE reduce production to_ident -> TO LIDENT
-- On LET reduce production to_ident -> TO LIDENT
-- On IN reduce production to_ident -> TO LIDENT
-- On EXTERNAL reduce production to_ident -> TO LIDENT
-- On EXCEPTION reduce production to_ident -> TO LIDENT
-- On END reduce production to_ident -> TO LIDENT
-- On ELSE reduce production to_ident -> TO LIDENT
-- On DEF reduce production to_ident -> TO LIDENT
-- On CLASS reduce production to_ident -> TO LIDENT
-- On BAR reduce production to_ident -> TO LIDENT
-- On AND reduce production to_ident -> TO LIDENT

State 1300:
process0 -> REPLY static_expr to_ident . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> REPLY static_expr to_ident
-- On TYPE reduce production process0 -> REPLY static_expr to_ident
-- On SEMISEMI reduce production process0 -> REPLY static_expr to_ident
-- On OPEN reduce production process0 -> REPLY static_expr to_ident
-- On MODULE reduce production process0 -> REPLY static_expr to_ident
-- On LET reduce production process0 -> REPLY static_expr to_ident
-- On IN reduce production process0 -> REPLY static_expr to_ident
-- On EXTERNAL reduce production process0 -> REPLY static_expr to_ident
-- On EXCEPTION reduce production process0 -> REPLY static_expr to_ident
-- On END reduce production process0 -> REPLY static_expr to_ident
-- On ELSE reduce production process0 -> REPLY static_expr to_ident
-- On DEF reduce production process0 -> REPLY static_expr to_ident
-- On CLASS reduce production process0 -> REPLY static_expr to_ident
-- On BAR reduce production process0 -> REPLY static_expr to_ident
-- On AND reduce production process0 -> REPLY static_expr to_ident

State 1301:
process -> LET . rec_flag let_bindings IN process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On REC shift to state 287
-- On rec_flag shift to state 1302
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 1302:
process -> LET rec_flag . let_bindings IN process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 401
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 809
-- On mod_longident shift to state 303
-- On let_bindings shift to state 1303
-- On let_binding shift to state 819
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 1303:
let_bindings -> let_bindings . AND let_binding [ IN AND ]
process -> LET rec_flag let_bindings . IN process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On IN shift to state 1304
-- On AND shift to state 817

State 1304:
process -> LET rec_flag let_bindings IN . process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 1301
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1309
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 1325
-- On CHAR shift to state 357
-- On BEGIN shift to state 1328
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1333
-- On process shift to state 1338
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On error reduce production process -> 
-- On TYPE reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On OPEN reduce production process -> 
-- On MODULE reduce production process -> 
-- On LET reduce production process -> 
-- On IN reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On AND reduce production process -> 
** Conflict on LET DEF

State 1305:
process0 -> LBRACEBARBARRBRACE . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> LBRACEBARBARRBRACE
-- On TYPE reduce production process0 -> LBRACEBARBARRBRACE
-- On SEMISEMI reduce production process0 -> LBRACEBARBARRBRACE
-- On OPEN reduce production process0 -> LBRACEBARBARRBRACE
-- On MODULE reduce production process0 -> LBRACEBARBARRBRACE
-- On LET reduce production process0 -> LBRACEBARBARRBRACE
-- On IN reduce production process0 -> LBRACEBARBARRBRACE
-- On EXTERNAL reduce production process0 -> LBRACEBARBARRBRACE
-- On EXCEPTION reduce production process0 -> LBRACEBARBARRBRACE
-- On END reduce production process0 -> LBRACEBARBARRBRACE
-- On ELSE reduce production process0 -> LBRACEBARBARRBRACE
-- On DEF reduce production process0 -> LBRACEBARBARRBRACE
-- On CLASS reduce production process0 -> LBRACEBARBARRBRACE
-- On BAR reduce production process0 -> LBRACEBARBARRBRACE
-- On AND reduce production process0 -> LBRACEBARBARRBRACE

State 1306:
process0 -> LBRACEBAR . process BARRBRACE [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 399
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 440
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 469
-- On CHAR shift to state 357
-- On BEGIN shift to state 472
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 588
-- On process shift to state 1307
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On BARRBRACE reduce production process -> 

State 1307:
process0 -> LBRACEBAR process . BARRBRACE [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On BARRBRACE shift to state 1308

State 1308:
process0 -> LBRACEBAR process BARRBRACE . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> LBRACEBAR process BARRBRACE
-- On TYPE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On SEMISEMI reduce production process0 -> LBRACEBAR process BARRBRACE
-- On OPEN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On MODULE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On LET reduce production process0 -> LBRACEBAR process BARRBRACE
-- On IN reduce production process0 -> LBRACEBAR process BARRBRACE
-- On EXTERNAL reduce production process0 -> LBRACEBAR process BARRBRACE
-- On EXCEPTION reduce production process0 -> LBRACEBAR process BARRBRACE
-- On END reduce production process0 -> LBRACEBAR process BARRBRACE
-- On ELSE reduce production process0 -> LBRACEBAR process BARRBRACE
-- On DEF reduce production process0 -> LBRACEBAR process BARRBRACE
-- On CLASS reduce production process0 -> LBRACEBAR process BARRBRACE
-- On BAR reduce production process0 -> LBRACEBAR process BARRBRACE
-- On AND reduce production process0 -> LBRACEBAR process BARRBRACE

State 1309:
process -> IF . expr THEN process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process0 -> IF . expr THEN process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS BAR AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 1310
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 1310:
expr -> expr . COLONCOLON expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
process -> IF expr . THEN process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process0 -> IF expr . THEN process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS BAR AND ]
-- On THEN shift to state 1311
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688

State 1311:
process -> IF expr THEN . process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process0 -> IF expr THEN . process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS BAR AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1312
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1324
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 1312:
process0 -> IF . expr THEN process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On NEW shift to state 9
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 403
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 635
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On simple_expr shift to state 640
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 1313
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 1313:
expr -> expr . COLONCOLON expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP0 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESSGREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP1 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP2 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP3 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . INFIXOP4 expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . SUBTRACTIVE expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . STAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . EQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . LESS expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . GREATER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . OR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . BARBAR expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERSAND expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . AMPERAMPER expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr -> expr . COLONEQUAL expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
expr_comma_list -> expr . COMMA expr [ THEN SUBTRACTIVE STAR OR LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EQUAL COMMA COLONEQUAL COLONCOLON BARBAR AMPERSAND AMPERAMPER ]
process0 -> IF expr . THEN process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On THEN shift to state 1314
-- On SUBTRACTIVE shift to state 656
-- On STAR shift to state 658
-- On OR shift to state 666
-- On LESSGREATER shift to state 668
-- On LESS shift to state 676
-- On INFIXOP4 shift to state 660
-- On INFIXOP3 shift to state 664
-- On INFIXOP2 shift to state 670
-- On INFIXOP1 shift to state 672
-- On INFIXOP0 shift to state 678
-- On GREATER shift to state 680
-- On EQUAL shift to state 682
-- On COMMA shift to state 691
-- On COLONEQUAL shift to state 693
-- On COLONCOLON shift to state 674
-- On BARBAR shift to state 684
-- On AMPERSAND shift to state 686
-- On AMPERAMPER shift to state 688

State 1314:
process0 -> IF expr THEN . process0 ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 320
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 438
-- On LBRACEBAR shift to state 439
-- On INT shift to state 258
-- On IF shift to state 741
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 579
-- On process0 shift to state 1315
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 1315:
process0 -> IF expr THEN process0 . ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On ELSE shift to state 1316

State 1316:
process0 -> IF expr THEN process0 ELSE . process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1312
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 357
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1323
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383

State 1317:
process0 -> static_expr . LESSLESSGREATERGREATER [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
process0 -> static_expr . LESSLESS static_comma_list GREATERGREATER [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
process0 -> static_expr . LESSLESS static_comma_list error [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
static_expr -> static_expr . DOT label_longident [ LESSLESSGREATERGREATER LESSLESS DOT ]
-- On LESSLESSGREATERGREATER shift to state 1318
-- On LESSLESS shift to state 1319
-- On DOT shift to state 362

State 1318:
process0 -> static_expr LESSLESSGREATERGREATER . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On TYPE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On SEMISEMI reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On OPEN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On MODULE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On LET reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On IN reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On EXTERNAL reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On EXCEPTION reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On END reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On ELSE reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On DEF reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On CLASS reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On BAR reduce production process0 -> static_expr LESSLESSGREATERGREATER
-- On AND reduce production process0 -> static_expr LESSLESSGREATERGREATER

State 1319:
process0 -> static_expr LESSLESS . static_comma_list GREATERGREATER [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
process0 -> static_expr LESSLESS . static_comma_list error [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On LPAREN shift to state 323
-- On LIDENT shift to state 47
-- On LBRACKETBAR shift to state 325
-- On LBRACKET shift to state 326
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On val_longident shift to state 328
-- On val_ident shift to state 329
-- On static_expr shift to state 582
-- On static_comma_list shift to state 1320
-- On mod_longident shift to state 339
-- On constr_longident shift to state 342
-- On constant shift to state 343

State 1320:
process0 -> static_expr LESSLESS static_comma_list . GREATERGREATER [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
process0 -> static_expr LESSLESS static_comma_list . error [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
static_comma_list -> static_comma_list . COMMA static_expr [ error GREATERGREATER COMMA ]
-- On error shift to state 1321
-- On GREATERGREATER shift to state 1322
-- On COMMA shift to state 586

State 1321:
process0 -> static_expr LESSLESS static_comma_list error . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On TYPE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On SEMISEMI reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On OPEN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On MODULE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On LET reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On IN reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On EXTERNAL reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On EXCEPTION reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On END reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On ELSE reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On DEF reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On CLASS reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On BAR reduce production process0 -> static_expr LESSLESS static_comma_list error
-- On AND reduce production process0 -> static_expr LESSLESS static_comma_list error

State 1322:
process0 -> static_expr LESSLESS static_comma_list GREATERGREATER . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On TYPE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On SEMISEMI reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On OPEN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On MODULE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On LET reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On IN reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On EXTERNAL reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On EXCEPTION reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On END reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On ELSE reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On DEF reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On CLASS reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On BAR reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER
-- On AND reduce production process0 -> static_expr LESSLESS static_comma_list GREATERGREATER

State 1323:
process0 -> IF expr THEN process0 ELSE process0 . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END ELSE DEF CLASS BAR AND ]
-- On error reduce production process0 -> IF expr THEN process0 ELSE process0
-- On TYPE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On SEMISEMI reduce production process0 -> IF expr THEN process0 ELSE process0
-- On OPEN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On MODULE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On LET reduce production process0 -> IF expr THEN process0 ELSE process0
-- On IN reduce production process0 -> IF expr THEN process0 ELSE process0
-- On EXTERNAL reduce production process0 -> IF expr THEN process0 ELSE process0
-- On EXCEPTION reduce production process0 -> IF expr THEN process0 ELSE process0
-- On END reduce production process0 -> IF expr THEN process0 ELSE process0
-- On ELSE reduce production process0 -> IF expr THEN process0 ELSE process0
-- On DEF reduce production process0 -> IF expr THEN process0 ELSE process0
-- On CLASS reduce production process0 -> IF expr THEN process0 ELSE process0
-- On BAR reduce production process0 -> IF expr THEN process0 ELSE process0
-- On AND reduce production process0 -> IF expr THEN process0 ELSE process0

State 1324:
process -> IF expr THEN process0 . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process0 -> IF expr THEN process0 . ELSE process0 [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS BAR AND ]
-- On ELSE shift to state 1316
-- On error reduce production process -> IF expr THEN process0
-- On TYPE reduce production process -> IF expr THEN process0
-- On SEMISEMI reduce production process -> IF expr THEN process0
-- On OPEN reduce production process -> IF expr THEN process0
-- On MODULE reduce production process -> IF expr THEN process0
-- On LET reduce production process -> IF expr THEN process0
-- On IN reduce production process -> IF expr THEN process0
-- On EXTERNAL reduce production process -> IF expr THEN process0
-- On EXCEPTION reduce production process -> IF expr THEN process0
-- On END reduce production process -> IF expr THEN process0
-- On DEF reduce production process -> IF expr THEN process0
-- On CLASS reduce production process -> IF expr THEN process0
-- On AND reduce production process -> IF expr THEN process0

State 1325:
process -> DEF . def_bindings IN process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 1326
-- On def_binding shift to state 595

State 1326:
def_bindings -> def_bindings . AND def_binding [ IN AND ]
process -> DEF def_bindings . IN process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On IN shift to state 1327
-- On AND shift to state 593

State 1327:
process -> DEF def_bindings IN . process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 1301
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1309
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 1325
-- On CHAR shift to state 357
-- On BEGIN shift to state 1328
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1333
-- On process shift to state 1337
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On error reduce production process -> 
-- On TYPE reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On OPEN reduce production process -> 
-- On MODULE reduce production process -> 
-- On LET reduce production process -> 
-- On IN reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On AND reduce production process -> 
** Conflict on LET DEF

State 1328:
process -> BEGIN . seq_expr END SEMI process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process -> BEGIN . seq_expr error [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1329
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 1329:
process -> BEGIN seq_expr . END SEMI process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process -> BEGIN seq_expr . error [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error shift to state 1330
-- On END shift to state 1331

State 1330:
process -> BEGIN seq_expr error . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production process -> BEGIN seq_expr error
-- On TYPE reduce production process -> BEGIN seq_expr error
-- On SEMISEMI reduce production process -> BEGIN seq_expr error
-- On OPEN reduce production process -> BEGIN seq_expr error
-- On MODULE reduce production process -> BEGIN seq_expr error
-- On LET reduce production process -> BEGIN seq_expr error
-- On IN reduce production process -> BEGIN seq_expr error
-- On EXTERNAL reduce production process -> BEGIN seq_expr error
-- On EXCEPTION reduce production process -> BEGIN seq_expr error
-- On END reduce production process -> BEGIN seq_expr error
-- On DEF reduce production process -> BEGIN seq_expr error
-- On CLASS reduce production process -> BEGIN seq_expr error
-- On AND reduce production process -> BEGIN seq_expr error

State 1331:
process -> BEGIN seq_expr END . SEMI process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On SEMI shift to state 1332

State 1332:
process -> BEGIN seq_expr END SEMI . process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 1301
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1309
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 1325
-- On CHAR shift to state 357
-- On BEGIN shift to state 1328
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1333
-- On process shift to state 1336
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On error reduce production process -> 
-- On TYPE reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On OPEN reduce production process -> 
-- On MODULE reduce production process -> 
-- On LET reduce production process -> 
-- On IN reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On AND reduce production process -> 
** Conflict on LET DEF

State 1333:
process -> process0 . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
process -> process0 . BAR process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On BAR shift to state 1334
-- On error reduce production process -> process0
-- On TYPE reduce production process -> process0
-- On SEMISEMI reduce production process -> process0
-- On OPEN reduce production process -> process0
-- On MODULE reduce production process -> process0
-- On LET reduce production process -> process0
-- On IN reduce production process -> process0
-- On EXTERNAL reduce production process -> process0
-- On EXCEPTION reduce production process -> process0
-- On END reduce production process -> process0
-- On DEF reduce production process -> process0
-- On CLASS reduce production process -> process0
-- On AND reduce production process -> process0

State 1334:
process -> process0 BAR . process [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On STRING shift to state 7
-- On REPLY shift to state 1296
-- On LPAREN shift to state 321
-- On LIDENT shift to state 246
-- On LET shift to state 1301
-- On LBRACKETBAR shift to state 322
-- On LBRACKET shift to state 324
-- On LBRACEBARBARRBRACE shift to state 1305
-- On LBRACEBAR shift to state 1306
-- On INT shift to state 258
-- On IF shift to state 1309
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On DEF shift to state 1325
-- On CHAR shift to state 357
-- On BEGIN shift to state 1328
-- On val_longident shift to state 358
-- On val_ident shift to state 359
-- On static_expr shift to state 1317
-- On process0 shift to state 1333
-- On process shift to state 1335
-- On mod_longident shift to state 378
-- On constr_longident shift to state 382
-- On constant shift to state 383
-- On error reduce production process -> 
-- On TYPE reduce production process -> 
-- On SEMISEMI reduce production process -> 
-- On OPEN reduce production process -> 
-- On MODULE reduce production process -> 
-- On LET reduce production process -> 
-- On IN reduce production process -> 
-- On EXTERNAL reduce production process -> 
-- On EXCEPTION reduce production process -> 
-- On END reduce production process -> 
-- On DEF reduce production process -> 
-- On CLASS reduce production process -> 
-- On AND reduce production process -> 
** Conflict on LET DEF

State 1335:
process -> process0 BAR process . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production process -> process0 BAR process
-- On TYPE reduce production process -> process0 BAR process
-- On SEMISEMI reduce production process -> process0 BAR process
-- On OPEN reduce production process -> process0 BAR process
-- On MODULE reduce production process -> process0 BAR process
-- On LET reduce production process -> process0 BAR process
-- On IN reduce production process -> process0 BAR process
-- On EXTERNAL reduce production process -> process0 BAR process
-- On EXCEPTION reduce production process -> process0 BAR process
-- On END reduce production process -> process0 BAR process
-- On DEF reduce production process -> process0 BAR process
-- On CLASS reduce production process -> process0 BAR process
-- On AND reduce production process -> process0 BAR process

State 1336:
process -> BEGIN seq_expr END SEMI process . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production process -> BEGIN seq_expr END SEMI process
-- On TYPE reduce production process -> BEGIN seq_expr END SEMI process
-- On SEMISEMI reduce production process -> BEGIN seq_expr END SEMI process
-- On OPEN reduce production process -> BEGIN seq_expr END SEMI process
-- On MODULE reduce production process -> BEGIN seq_expr END SEMI process
-- On LET reduce production process -> BEGIN seq_expr END SEMI process
-- On IN reduce production process -> BEGIN seq_expr END SEMI process
-- On EXTERNAL reduce production process -> BEGIN seq_expr END SEMI process
-- On EXCEPTION reduce production process -> BEGIN seq_expr END SEMI process
-- On END reduce production process -> BEGIN seq_expr END SEMI process
-- On DEF reduce production process -> BEGIN seq_expr END SEMI process
-- On CLASS reduce production process -> BEGIN seq_expr END SEMI process
-- On AND reduce production process -> BEGIN seq_expr END SEMI process

State 1337:
process -> DEF def_bindings IN process . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production process -> DEF def_bindings IN process
-- On TYPE reduce production process -> DEF def_bindings IN process
-- On SEMISEMI reduce production process -> DEF def_bindings IN process
-- On OPEN reduce production process -> DEF def_bindings IN process
-- On MODULE reduce production process -> DEF def_bindings IN process
-- On LET reduce production process -> DEF def_bindings IN process
-- On IN reduce production process -> DEF def_bindings IN process
-- On EXTERNAL reduce production process -> DEF def_bindings IN process
-- On EXCEPTION reduce production process -> DEF def_bindings IN process
-- On END reduce production process -> DEF def_bindings IN process
-- On DEF reduce production process -> DEF def_bindings IN process
-- On CLASS reduce production process -> DEF def_bindings IN process
-- On AND reduce production process -> DEF def_bindings IN process

State 1338:
process -> LET rec_flag let_bindings IN process . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production process -> LET rec_flag let_bindings IN process
-- On TYPE reduce production process -> LET rec_flag let_bindings IN process
-- On SEMISEMI reduce production process -> LET rec_flag let_bindings IN process
-- On OPEN reduce production process -> LET rec_flag let_bindings IN process
-- On MODULE reduce production process -> LET rec_flag let_bindings IN process
-- On LET reduce production process -> LET rec_flag let_bindings IN process
-- On IN reduce production process -> LET rec_flag let_bindings IN process
-- On EXTERNAL reduce production process -> LET rec_flag let_bindings IN process
-- On EXCEPTION reduce production process -> LET rec_flag let_bindings IN process
-- On END reduce production process -> LET rec_flag let_bindings IN process
-- On DEF reduce production process -> LET rec_flag let_bindings IN process
-- On CLASS reduce production process -> LET rec_flag let_bindings IN process
-- On AND reduce production process -> LET rec_flag let_bindings IN process

State 1339:
def_binding -> join_pattern EQUAL process . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production def_binding -> join_pattern EQUAL process
-- On TYPE reduce production def_binding -> join_pattern EQUAL process
-- On SEMISEMI reduce production def_binding -> join_pattern EQUAL process
-- On OPEN reduce production def_binding -> join_pattern EQUAL process
-- On MODULE reduce production def_binding -> join_pattern EQUAL process
-- On LET reduce production def_binding -> join_pattern EQUAL process
-- On IN reduce production def_binding -> join_pattern EQUAL process
-- On EXTERNAL reduce production def_binding -> join_pattern EQUAL process
-- On EXCEPTION reduce production def_binding -> join_pattern EQUAL process
-- On END reduce production def_binding -> join_pattern EQUAL process
-- On DEF reduce production def_binding -> join_pattern EQUAL process
-- On CLASS reduce production def_binding -> join_pattern EQUAL process
-- On AND reduce production def_binding -> join_pattern EQUAL process

State 1340:
def_bindings -> def_bindings . AND def_binding [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
expr -> DEF def_bindings . IN seq_expr [ error TYPE SUBTRACTIVE STAR SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL END DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> DEF def_bindings . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On IN shift to state 600
-- On AND shift to state 1341
-- On error reduce production structure_item -> DEF def_bindings
-- On TYPE reduce production structure_item -> DEF def_bindings
-- On SEMISEMI reduce production structure_item -> DEF def_bindings
-- On OPEN reduce production structure_item -> DEF def_bindings
-- On MODULE reduce production structure_item -> DEF def_bindings
-- On LET reduce production structure_item -> DEF def_bindings
-- On EXTERNAL reduce production structure_item -> DEF def_bindings
-- On EXCEPTION reduce production structure_item -> DEF def_bindings
-- On END reduce production structure_item -> DEF def_bindings
-- On DEF reduce production structure_item -> DEF def_bindings
-- On CLASS reduce production structure_item -> DEF def_bindings

State 1341:
def_bindings -> def_bindings AND . def_binding [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 1294
-- On def_binding shift to state 1342

State 1342:
def_bindings -> def_bindings AND def_binding . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production def_bindings -> def_bindings AND def_binding
-- On TYPE reduce production def_bindings -> def_bindings AND def_binding
-- On SEMISEMI reduce production def_bindings -> def_bindings AND def_binding
-- On OPEN reduce production def_bindings -> def_bindings AND def_binding
-- On MODULE reduce production def_bindings -> def_bindings AND def_binding
-- On LET reduce production def_bindings -> def_bindings AND def_binding
-- On IN reduce production def_bindings -> def_bindings AND def_binding
-- On EXTERNAL reduce production def_bindings -> def_bindings AND def_binding
-- On EXCEPTION reduce production def_bindings -> def_bindings AND def_binding
-- On END reduce production def_bindings -> def_bindings AND def_binding
-- On DEF reduce production def_bindings -> def_bindings AND def_binding
-- On CLASS reduce production def_bindings -> def_bindings AND def_binding
-- On AND reduce production def_bindings -> def_bindings AND def_binding

State 1343:
def_bindings -> def_binding . [ error TYPE SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION END DEF CLASS AND ]
-- On error reduce production def_bindings -> def_binding
-- On TYPE reduce production def_bindings -> def_binding
-- On SEMISEMI reduce production def_bindings -> def_binding
-- On OPEN reduce production def_bindings -> def_binding
-- On MODULE reduce production def_bindings -> def_binding
-- On LET reduce production def_bindings -> def_binding
-- On IN reduce production def_bindings -> def_binding
-- On EXTERNAL reduce production def_bindings -> def_binding
-- On EXCEPTION reduce production def_bindings -> def_binding
-- On END reduce production def_bindings -> def_binding
-- On DEF reduce production def_bindings -> def_binding
-- On CLASS reduce production def_bindings -> def_binding
-- On AND reduce production def_bindings -> def_binding

State 1344:
structure_item -> CLASS . class_list END [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
structure_item -> CLASS . class_list error [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1345
-- On class_list shift to state 1402
-- On class_def shift to state 1407
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1345:
class_def -> virtual_flag . closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields [ error END AND ]
-- On CLOSED shift to state 1195
-- On closed_flag shift to state 1346
-- On QUOTE reduce production closed_flag -> 
-- On LPAREN reduce production closed_flag -> 
-- On LIDENT reduce production closed_flag -> 

State 1346:
class_def -> virtual_flag closed_flag . class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields [ error END AND ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 1197
-- On type_parameter shift to state 1027
-- On class_type_parameters shift to state 1347
-- On LIDENT reduce production type_parameters -> 

State 1347:
class_def -> virtual_flag closed_flag class_type_parameters . LIDENT simple_pattern_list self self_type EQUAL constraints class_fields [ error END AND ]
-- On LIDENT shift to state 1348

State 1348:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT . simple_pattern_list self self_type EQUAL constraints class_fields [ error END AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On simple_pattern_list shift to state 1349
-- On simple_pattern shift to state 1401
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 1349:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list . self self_type EQUAL constraints class_fields [ error END AND ]
simple_pattern_list -> simple_pattern_list . simple_pattern [ UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING LPAREN LIDENT LBRACKET LBRACE INT FLOAT FALSE EQUAL COLON CHAR AS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On AS shift to state 1350
-- On val_ident shift to state 264
-- On simple_pattern shift to state 1352
-- On signed_constant shift to state 266
-- On self shift to state 1353
-- On mod_longident shift to state 303
-- On constr_longident shift to state 724
-- On constant shift to state 307
-- On EQUAL reduce production self -> 
-- On COLON reduce production self -> 

State 1350:
self -> AS . LIDENT [ EQUAL COLON ]
-- On LIDENT shift to state 1351

State 1351:
self -> AS LIDENT . [ EQUAL COLON ]
-- On EQUAL reduce production self -> AS LIDENT
-- On COLON reduce production self -> AS LIDENT

State 1352:
simple_pattern_list -> simple_pattern_list simple_pattern . [ UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING LPAREN LIDENT LBRACKET LBRACE INT FLOAT FALSE EQUAL COLON CHAR AS ]
-- On UNDERSCORE reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On UIDENT reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On TRUE reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On SUBTRACTIVE reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On STRING reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On LPAREN reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On LIDENT reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On LBRACKET reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On LBRACE reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On INT reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On FLOAT reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On FALSE reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On EQUAL reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On COLON reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On CHAR reduce production simple_pattern_list -> simple_pattern_list simple_pattern
-- On AS reduce production simple_pattern_list -> simple_pattern_list simple_pattern

State 1353:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self . self_type EQUAL constraints class_fields [ error END AND ]
-- On COLON shift to state 1205
-- On self_type shift to state 1354
-- On EQUAL reduce production self_type -> 

State 1354:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type . EQUAL constraints class_fields [ error END AND ]
-- On EQUAL shift to state 1355

State 1355:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL . constraints class_fields [ error END AND ]
-- On constraints shift to state 1356
-- On error reduce production constraints -> 
-- On VIRTUAL reduce production constraints -> 
-- On VAL reduce production constraints -> 
-- On METHOD reduce production constraints -> 
-- On INHERIT reduce production constraints -> 
-- On END reduce production constraints -> 
-- On CONSTRAINT reduce production constraints -> 
-- On AND reduce production constraints -> 

State 1356:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints . class_fields [ error END AND ]
constraints -> constraints . CONSTRAINT constrain [ error VIRTUAL VAL METHOD INHERIT END CONSTRAINT AND ]
-- On CONSTRAINT shift to state 1089
-- On class_fields shift to state 1357
-- On error reduce production class_fields -> 
-- On VIRTUAL reduce production class_fields -> 
-- On VAL reduce production class_fields -> 
-- On METHOD reduce production class_fields -> 
-- On INHERIT reduce production class_fields -> 
-- On END reduce production class_fields -> 
-- On AND reduce production class_fields -> 

State 1357:
class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields . [ error END AND ]
class_fields -> class_fields . INHERIT ancestor [ error VIRTUAL VAL METHOD INHERIT END AND ]
class_fields -> class_fields . VAL value [ error VIRTUAL VAL METHOD INHERIT END AND ]
class_fields -> class_fields . virtual_method [ error VIRTUAL VAL METHOD INHERIT END AND ]
class_fields -> class_fields . method_def [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On VIRTUAL shift to state 1358
-- On VAL shift to state 1363
-- On METHOD shift to state 1370
-- On INHERIT shift to state 1381
-- On virtual_method shift to state 1399
-- On method_def shift to state 1400
-- On error reduce production class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields
-- On END reduce production class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields
-- On AND reduce production class_def -> virtual_flag closed_flag class_type_parameters LIDENT simple_pattern_list self self_type EQUAL constraints class_fields

State 1358:
virtual_method -> VIRTUAL . protected_flag label COLON core_type [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On PROTECTED shift to state 1212
-- On protected_flag shift to state 1359
-- On LIDENT reduce production protected_flag -> 

State 1359:
virtual_method -> VIRTUAL protected_flag . label COLON core_type [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 141
-- On label shift to state 1360

State 1360:
virtual_method -> VIRTUAL protected_flag label . COLON core_type [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On COLON shift to state 1361

State 1361:
virtual_method -> VIRTUAL protected_flag label COLON . core_type [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 121
-- On UIDENT shift to state 122
-- On SHARP shift to state 123
-- On QUOTE shift to state 125
-- On LPAREN shift to state 129
-- On LIDENT shift to state 201
-- On LESSLESS shift to state 208
-- On LESS shift to state 214
-- On type_longident shift to state 218
-- On simple_core_type shift to state 219
-- On mod_ext_longident shift to state 203
-- On core_type_tuple shift to state 225
-- On core_type shift to state 1362

State 1362:
core_type -> core_type . MINUSGREATER core_type [ error VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
core_type -> core_type . AS type_parameter [ error VIRTUAL VAL MINUSGREATER METHOD INHERIT END AS AND ]
virtual_method -> VIRTUAL protected_flag label COLON core_type . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On MINUSGREATER shift to state 231
-- On AS shift to state 233
-- On error reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On VIRTUAL reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On VAL reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On METHOD reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On INHERIT reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On END reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type
-- On AND reduce production virtual_method -> VIRTUAL protected_flag label COLON core_type

State 1363:
class_fields -> class_fields VAL . value [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On PRIVATE shift to state 1218
-- On value shift to state 1364
-- On private_flag shift to state 1365
-- On MUTABLE reduce production private_flag -> 
-- On LIDENT reduce production private_flag -> 

State 1364:
class_fields -> class_fields VAL value . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production class_fields -> class_fields VAL value
-- On VIRTUAL reduce production class_fields -> class_fields VAL value
-- On VAL reduce production class_fields -> class_fields VAL value
-- On METHOD reduce production class_fields -> class_fields VAL value
-- On INHERIT reduce production class_fields -> class_fields VAL value
-- On END reduce production class_fields -> class_fields VAL value
-- On AND reduce production class_fields -> class_fields VAL value

State 1365:
value -> private_flag . mutable_flag label EQUAL seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
value -> private_flag . mutable_flag label [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On MUTABLE shift to state 984
-- On mutable_flag shift to state 1366
-- On LIDENT reduce production mutable_flag -> 

State 1366:
value -> private_flag mutable_flag . label EQUAL seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
value -> private_flag mutable_flag . label [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 477
-- On label shift to state 1367

State 1367:
value -> private_flag mutable_flag label . EQUAL seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
value -> private_flag mutable_flag label . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On EQUAL shift to state 1368
-- On error reduce production value -> private_flag mutable_flag label
-- On VIRTUAL reduce production value -> private_flag mutable_flag label
-- On VAL reduce production value -> private_flag mutable_flag label
-- On METHOD reduce production value -> private_flag mutable_flag label
-- On INHERIT reduce production value -> private_flag mutable_flag label
-- On END reduce production value -> private_flag mutable_flag label
-- On AND reduce production value -> private_flag mutable_flag label

State 1368:
value -> private_flag mutable_flag label EQUAL . seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1369
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 1369:
value -> private_flag mutable_flag label EQUAL seq_expr . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On VIRTUAL reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On VAL reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On METHOD reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On INHERIT reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On END reduce production value -> private_flag mutable_flag label EQUAL seq_expr
-- On AND reduce production value -> private_flag mutable_flag label EQUAL seq_expr

State 1370:
method_def -> METHOD . protected_flag label meth_binding [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On PROTECTED shift to state 1212
-- On protected_flag shift to state 1371
-- On LIDENT reduce production protected_flag -> 

State 1371:
method_def -> METHOD protected_flag . label meth_binding [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 141
-- On label shift to state 1372

State 1372:
method_def -> METHOD protected_flag label . meth_binding [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 1373
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 1375
-- On simple_pattern shift to state 1378
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On meth_binding shift to state 1380
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 1373:
meth_binding -> EQUAL . seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1374
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 1374:
meth_binding -> EQUAL seq_expr . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production meth_binding -> EQUAL seq_expr
-- On VIRTUAL reduce production meth_binding -> EQUAL seq_expr
-- On VAL reduce production meth_binding -> EQUAL seq_expr
-- On METHOD reduce production meth_binding -> EQUAL seq_expr
-- On INHERIT reduce production meth_binding -> EQUAL seq_expr
-- On END reduce production meth_binding -> EQUAL seq_expr
-- On AND reduce production meth_binding -> EQUAL seq_expr

State 1375:
meth_binding -> type_constraint . EQUAL seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On EQUAL shift to state 1376

State 1376:
meth_binding -> type_constraint EQUAL . seq_expr [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On WHILE shift to state 4
-- On UIDENT shift to state 17
-- On TRY shift to state 18
-- On TRUE shift to state 19
-- On SUBTRACTIVE shift to state 20
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On PARSER shift to state 31
-- On NEW shift to state 23
-- On MATCH shift to state 274
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 294
-- On LET shift to state 295
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACEBAR shift to state 319
-- On LBRACE shift to state 410
-- On LAZY shift to state 415
-- On INT shift to state 62
-- On IF shift to state 417
-- On FUNCTION shift to state 419
-- On FUN shift to state 431
-- On FOR shift to state 434
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On DEF shift to state 448
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On ASSERT shift to state 473
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 481
-- On seq_expr shift to state 1377
-- On mod_longident shift to state 339
-- On label shift to state 497
-- On expr_comma_list shift to state 499
-- On expr shift to state 544
-- On constr_longident shift to state 508
-- On constant shift to state 491

State 1377:
meth_binding -> type_constraint EQUAL seq_expr . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On VIRTUAL reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On VAL reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On METHOD reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On INHERIT reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On END reduce production meth_binding -> type_constraint EQUAL seq_expr
-- On AND reduce production meth_binding -> type_constraint EQUAL seq_expr

State 1378:
meth_binding -> simple_pattern . meth_binding [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EQUAL shift to state 1373
-- On COLONGREATER shift to state 364
-- On COLON shift to state 367
-- On CHAR shift to state 261
-- On val_ident shift to state 264
-- On type_constraint shift to state 1375
-- On simple_pattern shift to state 1378
-- On signed_constant shift to state 266
-- On mod_longident shift to state 303
-- On meth_binding shift to state 1379
-- On constr_longident shift to state 724
-- On constant shift to state 307

State 1379:
meth_binding -> simple_pattern meth_binding . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production meth_binding -> simple_pattern meth_binding
-- On VIRTUAL reduce production meth_binding -> simple_pattern meth_binding
-- On VAL reduce production meth_binding -> simple_pattern meth_binding
-- On METHOD reduce production meth_binding -> simple_pattern meth_binding
-- On INHERIT reduce production meth_binding -> simple_pattern meth_binding
-- On END reduce production meth_binding -> simple_pattern meth_binding
-- On AND reduce production meth_binding -> simple_pattern meth_binding

State 1380:
method_def -> METHOD protected_flag label meth_binding . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production method_def -> METHOD protected_flag label meth_binding
-- On VIRTUAL reduce production method_def -> METHOD protected_flag label meth_binding
-- On VAL reduce production method_def -> METHOD protected_flag label meth_binding
-- On METHOD reduce production method_def -> METHOD protected_flag label meth_binding
-- On INHERIT reduce production method_def -> METHOD protected_flag label meth_binding
-- On END reduce production method_def -> METHOD protected_flag label meth_binding
-- On AND reduce production method_def -> METHOD protected_flag label meth_binding

State 1381:
class_fields -> class_fields INHERIT . ancestor [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LPAREN shift to state 1382
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1395
-- On ancestor shift to state 1398

State 1382:
ancestor -> LPAREN . core_type_comma_list RPAREN class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
ancestor -> LPAREN . core_type RPAREN class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type_comma_list shift to state 1383
-- On core_type shift to state 1390

State 1383:
ancestor -> LPAREN core_type_comma_list . RPAREN class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
core_type_comma_list -> core_type_comma_list . COMMA core_type [ RPAREN COMMA ]
-- On RPAREN shift to state 1384
-- On COMMA shift to state 191

State 1384:
ancestor -> LPAREN core_type_comma_list RPAREN . class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1385

State 1385:
ancestor -> LPAREN core_type_comma_list RPAREN class_longident . simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr_list shift to state 1386
-- On simple_expr shift to state 568
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 1386:
ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list . self [ error VIRTUAL VAL METHOD INHERIT END AND ]
simple_expr_list -> simple_expr_list . simple_expr [ error VIRTUAL VAL UIDENT TRUE STRING PREFIXOP NEW METHOD LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INHERIT FLOAT FALSE END CHAR BEGIN AS AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On AS shift to state 1387
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 567
-- On self shift to state 1389
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production self -> 
-- On VIRTUAL reduce production self -> 
-- On VAL reduce production self -> 
-- On METHOD reduce production self -> 
-- On INHERIT reduce production self -> 
-- On END reduce production self -> 
-- On AND reduce production self -> 

State 1387:
self -> AS . LIDENT [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On LIDENT shift to state 1388

State 1388:
self -> AS LIDENT . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production self -> AS LIDENT
-- On VIRTUAL reduce production self -> AS LIDENT
-- On VAL reduce production self -> AS LIDENT
-- On METHOD reduce production self -> AS LIDENT
-- On INHERIT reduce production self -> AS LIDENT
-- On END reduce production self -> AS LIDENT
-- On AND reduce production self -> AS LIDENT

State 1389:
ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On VIRTUAL reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On VAL reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On METHOD reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On INHERIT reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On END reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self
-- On AND reduce production ancestor -> LPAREN core_type_comma_list RPAREN class_longident simple_expr_list self

State 1390:
ancestor -> LPAREN core_type . RPAREN class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
core_type -> core_type . MINUSGREATER core_type [ RPAREN MINUSGREATER COMMA AS ]
core_type -> core_type . AS type_parameter [ RPAREN MINUSGREATER COMMA AS ]
core_type_comma_list -> core_type . COMMA core_type [ RPAREN COMMA ]
-- On RPAREN shift to state 1391
-- On MINUSGREATER shift to state 167
-- On COMMA shift to state 195
-- On AS shift to state 169

State 1391:
ancestor -> LPAREN core_type RPAREN . class_longident simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 2
-- On LIDENT shift to state 10
-- On mod_longident shift to state 11
-- On class_longident shift to state 1392

State 1392:
ancestor -> LPAREN core_type RPAREN class_longident . simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr_list shift to state 1393
-- On simple_expr shift to state 568
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 1393:
ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list . self [ error VIRTUAL VAL METHOD INHERIT END AND ]
simple_expr_list -> simple_expr_list . simple_expr [ error VIRTUAL VAL UIDENT TRUE STRING PREFIXOP NEW METHOD LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INHERIT FLOAT FALSE END CHAR BEGIN AS AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On AS shift to state 1387
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 567
-- On self shift to state 1394
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production self -> 
-- On VIRTUAL reduce production self -> 
-- On VAL reduce production self -> 
-- On METHOD reduce production self -> 
-- On INHERIT reduce production self -> 
-- On END reduce production self -> 
-- On AND reduce production self -> 

State 1394:
ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On VIRTUAL reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On VAL reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On METHOD reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On INHERIT reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On END reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self
-- On AND reduce production ancestor -> LPAREN core_type RPAREN class_longident simple_expr_list self

State 1395:
ancestor -> class_longident . simple_expr_list self [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr_list shift to state 1396
-- On simple_expr shift to state 568
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491

State 1396:
ancestor -> class_longident simple_expr_list . self [ error VIRTUAL VAL METHOD INHERIT END AND ]
simple_expr_list -> simple_expr_list . simple_expr [ error VIRTUAL VAL UIDENT TRUE STRING PREFIXOP NEW METHOD LPAREN LOC LIDENT LBRACKETLESS LBRACKETBAR LBRACKET LBRACELESS LBRACE INT INHERIT FLOAT FALSE END CHAR BEGIN AS AND ]
-- On UIDENT shift to state 17
-- On TRUE shift to state 19
-- On STRING shift to state 21
-- On PREFIXOP shift to state 22
-- On NEW shift to state 23
-- On LPAREN shift to state 29
-- On LOC shift to state 291
-- On LIDENT shift to state 47
-- On LBRACKETLESS shift to state 310
-- On LBRACKETBAR shift to state 311
-- On LBRACKET shift to state 312
-- On LBRACELESS shift to state 313
-- On LBRACE shift to state 410
-- On INT shift to state 62
-- On FLOAT shift to state 63
-- On FALSE shift to state 64
-- On CHAR shift to state 327
-- On BEGIN shift to state 416
-- On AS shift to state 1387
-- On val_longident shift to state 474
-- On val_ident shift to state 329
-- On simple_expr shift to state 567
-- On self shift to state 1397
-- On mod_longident shift to state 339
-- On constr_longident shift to state 490
-- On constant shift to state 491
-- On error reduce production self -> 
-- On VIRTUAL reduce production self -> 
-- On VAL reduce production self -> 
-- On METHOD reduce production self -> 
-- On INHERIT reduce production self -> 
-- On END reduce production self -> 
-- On AND reduce production self -> 

State 1397:
ancestor -> class_longident simple_expr_list self . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production ancestor -> class_longident simple_expr_list self
-- On VIRTUAL reduce production ancestor -> class_longident simple_expr_list self
-- On VAL reduce production ancestor -> class_longident simple_expr_list self
-- On METHOD reduce production ancestor -> class_longident simple_expr_list self
-- On INHERIT reduce production ancestor -> class_longident simple_expr_list self
-- On END reduce production ancestor -> class_longident simple_expr_list self
-- On AND reduce production ancestor -> class_longident simple_expr_list self

State 1398:
class_fields -> class_fields INHERIT ancestor . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production class_fields -> class_fields INHERIT ancestor
-- On VIRTUAL reduce production class_fields -> class_fields INHERIT ancestor
-- On VAL reduce production class_fields -> class_fields INHERIT ancestor
-- On METHOD reduce production class_fields -> class_fields INHERIT ancestor
-- On INHERIT reduce production class_fields -> class_fields INHERIT ancestor
-- On END reduce production class_fields -> class_fields INHERIT ancestor
-- On AND reduce production class_fields -> class_fields INHERIT ancestor

State 1399:
class_fields -> class_fields virtual_method . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production class_fields -> class_fields virtual_method
-- On VIRTUAL reduce production class_fields -> class_fields virtual_method
-- On VAL reduce production class_fields -> class_fields virtual_method
-- On METHOD reduce production class_fields -> class_fields virtual_method
-- On INHERIT reduce production class_fields -> class_fields virtual_method
-- On END reduce production class_fields -> class_fields virtual_method
-- On AND reduce production class_fields -> class_fields virtual_method

State 1400:
class_fields -> class_fields method_def . [ error VIRTUAL VAL METHOD INHERIT END AND ]
-- On error reduce production class_fields -> class_fields method_def
-- On VIRTUAL reduce production class_fields -> class_fields method_def
-- On VAL reduce production class_fields -> class_fields method_def
-- On METHOD reduce production class_fields -> class_fields method_def
-- On INHERIT reduce production class_fields -> class_fields method_def
-- On END reduce production class_fields -> class_fields method_def
-- On AND reduce production class_fields -> class_fields method_def

State 1401:
simple_pattern_list -> simple_pattern . [ UNDERSCORE UIDENT TRUE SUBTRACTIVE STRING LPAREN LIDENT LBRACKET LBRACE INT FLOAT FALSE EQUAL COLON CHAR AS ]
-- On UNDERSCORE reduce production simple_pattern_list -> simple_pattern
-- On UIDENT reduce production simple_pattern_list -> simple_pattern
-- On TRUE reduce production simple_pattern_list -> simple_pattern
-- On SUBTRACTIVE reduce production simple_pattern_list -> simple_pattern
-- On STRING reduce production simple_pattern_list -> simple_pattern
-- On LPAREN reduce production simple_pattern_list -> simple_pattern
-- On LIDENT reduce production simple_pattern_list -> simple_pattern
-- On LBRACKET reduce production simple_pattern_list -> simple_pattern
-- On LBRACE reduce production simple_pattern_list -> simple_pattern
-- On INT reduce production simple_pattern_list -> simple_pattern
-- On FLOAT reduce production simple_pattern_list -> simple_pattern
-- On FALSE reduce production simple_pattern_list -> simple_pattern
-- On EQUAL reduce production simple_pattern_list -> simple_pattern
-- On COLON reduce production simple_pattern_list -> simple_pattern
-- On CHAR reduce production simple_pattern_list -> simple_pattern
-- On AS reduce production simple_pattern_list -> simple_pattern

State 1402:
class_list -> class_list . AND class_def [ error END AND ]
structure_item -> CLASS class_list . END [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
structure_item -> CLASS class_list . error [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error shift to state 1403
-- On END shift to state 1404
-- On AND shift to state 1405

State 1403:
structure_item -> CLASS class_list error . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production structure_item -> CLASS class_list error
-- On TYPE reduce production structure_item -> CLASS class_list error
-- On SEMISEMI reduce production structure_item -> CLASS class_list error
-- On OPEN reduce production structure_item -> CLASS class_list error
-- On MODULE reduce production structure_item -> CLASS class_list error
-- On LET reduce production structure_item -> CLASS class_list error
-- On EXTERNAL reduce production structure_item -> CLASS class_list error
-- On EXCEPTION reduce production structure_item -> CLASS class_list error
-- On END reduce production structure_item -> CLASS class_list error
-- On DEF reduce production structure_item -> CLASS class_list error
-- On CLASS reduce production structure_item -> CLASS class_list error

State 1404:
structure_item -> CLASS class_list END . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production structure_item -> CLASS class_list END
-- On TYPE reduce production structure_item -> CLASS class_list END
-- On SEMISEMI reduce production structure_item -> CLASS class_list END
-- On OPEN reduce production structure_item -> CLASS class_list END
-- On MODULE reduce production structure_item -> CLASS class_list END
-- On LET reduce production structure_item -> CLASS class_list END
-- On EXTERNAL reduce production structure_item -> CLASS class_list END
-- On EXCEPTION reduce production structure_item -> CLASS class_list END
-- On END reduce production structure_item -> CLASS class_list END
-- On DEF reduce production structure_item -> CLASS class_list END
-- On CLASS reduce production structure_item -> CLASS class_list END

State 1405:
class_list -> class_list AND . class_def [ error END AND ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1345
-- On class_def shift to state 1406
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1406:
class_list -> class_list AND class_def . [ error END AND ]
-- On error reduce production class_list -> class_list AND class_def
-- On END reduce production class_list -> class_list AND class_def
-- On AND reduce production class_list -> class_list AND class_def

State 1407:
class_list -> class_def . [ error END AND ]
-- On error reduce production class_list -> class_def
-- On END reduce production class_list -> class_def
-- On AND reduce production class_list -> class_def

State 1408:
structure -> structure_tail . [ error END ]
-- On error reduce production structure -> structure_tail
-- On END reduce production structure -> structure_tail

State 1409:
structure_tail -> structure_item . structure_tail [ error END ]
-- On TYPE shift to state 1267
-- On SEMISEMI shift to state 1269
-- On OPEN shift to state 1270
-- On MODULE shift to state 1272
-- On LET shift to state 1410
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1413
-- On CLASS shift to state 1344
-- On structure_tail shift to state 1415
-- On structure_item shift to state 1409
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1410:
structure_item -> LET . rec_flag let_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On REC shift to state 287
-- On rec_flag shift to state 1411
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 1411:
structure_item -> LET rec_flag . let_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 1412
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 1412:
let_bindings -> let_bindings . AND let_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS AND ]
structure_item -> LET rec_flag let_bindings . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On AND shift to state 799
-- On error reduce production structure_item -> LET rec_flag let_bindings
-- On TYPE reduce production structure_item -> LET rec_flag let_bindings
-- On SEMISEMI reduce production structure_item -> LET rec_flag let_bindings
-- On OPEN reduce production structure_item -> LET rec_flag let_bindings
-- On MODULE reduce production structure_item -> LET rec_flag let_bindings
-- On LET reduce production structure_item -> LET rec_flag let_bindings
-- On EXTERNAL reduce production structure_item -> LET rec_flag let_bindings
-- On EXCEPTION reduce production structure_item -> LET rec_flag let_bindings
-- On END reduce production structure_item -> LET rec_flag let_bindings
-- On DEF reduce production structure_item -> LET rec_flag let_bindings
-- On CLASS reduce production structure_item -> LET rec_flag let_bindings

State 1413:
structure_item -> DEF . def_bindings [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 1294
-- On def_bindings shift to state 1414
-- On def_binding shift to state 1343

State 1414:
def_bindings -> def_bindings . AND def_binding [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS AND ]
structure_item -> DEF def_bindings . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On AND shift to state 1341
-- On error reduce production structure_item -> DEF def_bindings
-- On TYPE reduce production structure_item -> DEF def_bindings
-- On SEMISEMI reduce production structure_item -> DEF def_bindings
-- On OPEN reduce production structure_item -> DEF def_bindings
-- On MODULE reduce production structure_item -> DEF def_bindings
-- On LET reduce production structure_item -> DEF def_bindings
-- On EXTERNAL reduce production structure_item -> DEF def_bindings
-- On EXCEPTION reduce production structure_item -> DEF def_bindings
-- On END reduce production structure_item -> DEF def_bindings
-- On DEF reduce production structure_item -> DEF def_bindings
-- On CLASS reduce production structure_item -> DEF def_bindings

State 1415:
structure_tail -> structure_item structure_tail . [ error END ]
-- On error reduce production structure_tail -> structure_item structure_tail
-- On END reduce production structure_tail -> structure_item structure_tail

State 1416:
module_expr -> STRUCT structure . END [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> STRUCT structure . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error shift to state 1417
-- On END shift to state 1418

State 1417:
module_expr -> STRUCT structure error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> STRUCT structure error
-- On TYPE reduce production module_expr -> STRUCT structure error
-- On SEMISEMI reduce production module_expr -> STRUCT structure error
-- On RPAREN reduce production module_expr -> STRUCT structure error
-- On OPEN reduce production module_expr -> STRUCT structure error
-- On MODULE reduce production module_expr -> STRUCT structure error
-- On LPAREN reduce production module_expr -> STRUCT structure error
-- On LET reduce production module_expr -> STRUCT structure error
-- On EXTERNAL reduce production module_expr -> STRUCT structure error
-- On EXCEPTION reduce production module_expr -> STRUCT structure error
-- On END reduce production module_expr -> STRUCT structure error
-- On DEF reduce production module_expr -> STRUCT structure error
-- On COLON reduce production module_expr -> STRUCT structure error
-- On CLASS reduce production module_expr -> STRUCT structure error

State 1418:
module_expr -> STRUCT structure END . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> STRUCT structure END
-- On TYPE reduce production module_expr -> STRUCT structure END
-- On SEMISEMI reduce production module_expr -> STRUCT structure END
-- On RPAREN reduce production module_expr -> STRUCT structure END
-- On OPEN reduce production module_expr -> STRUCT structure END
-- On MODULE reduce production module_expr -> STRUCT structure END
-- On LPAREN reduce production module_expr -> STRUCT structure END
-- On LET reduce production module_expr -> STRUCT structure END
-- On EXTERNAL reduce production module_expr -> STRUCT structure END
-- On EXCEPTION reduce production module_expr -> STRUCT structure END
-- On END reduce production module_expr -> STRUCT structure END
-- On DEF reduce production module_expr -> STRUCT structure END
-- On COLON reduce production module_expr -> STRUCT structure END
-- On CLASS reduce production module_expr -> STRUCT structure END

State 1419:
structure -> seq_expr . structure_tail [ error END ]
-- On TYPE shift to state 1267
-- On SEMISEMI shift to state 1269
-- On OPEN shift to state 1270
-- On MODULE shift to state 1272
-- On LET shift to state 1410
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1413
-- On CLASS shift to state 1344
-- On structure_tail shift to state 1420
-- On structure_item shift to state 1409
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1420:
structure -> seq_expr structure_tail . [ error END ]
-- On error reduce production structure -> seq_expr structure_tail
-- On END reduce production structure -> seq_expr structure_tail

State 1421:
module_expr -> LPAREN . module_expr COLON module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN . module_expr COLON module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN . module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN . module_expr error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1435
-- On mod_longident shift to state 1434

State 1422:
module_expr -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On LPAREN shift to state 1423

State 1423:
module_expr -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 1424

State 1424:
module_expr -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On COLON shift to state 1425

State 1425:
module_expr -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1426
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1426:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1427

State 1427:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On MINUSGREATER shift to state 1428

State 1428:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_expr [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1429
-- On mod_longident shift to state 1434

State 1429:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On LPAREN shift to state 1430
-- On error reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On TYPE reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On SEMISEMI reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On RPAREN reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On OPEN reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On MODULE reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On LPAREN reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On LET reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On EXTERNAL reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On EXCEPTION reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On END reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On DEF reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On COLON reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On CLASS reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
** Conflict on LPAREN

State 1430:
module_expr -> module_expr LPAREN . module_expr RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> module_expr LPAREN . module_expr error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1431
-- On mod_longident shift to state 1434

State 1431:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ error RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error shift to state 1432
-- On RPAREN shift to state 1433
-- On LPAREN shift to state 1430

State 1432:
module_expr -> module_expr LPAREN module_expr error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> module_expr LPAREN module_expr error
-- On TYPE reduce production module_expr -> module_expr LPAREN module_expr error
-- On SEMISEMI reduce production module_expr -> module_expr LPAREN module_expr error
-- On RPAREN reduce production module_expr -> module_expr LPAREN module_expr error
-- On OPEN reduce production module_expr -> module_expr LPAREN module_expr error
-- On MODULE reduce production module_expr -> module_expr LPAREN module_expr error
-- On LPAREN reduce production module_expr -> module_expr LPAREN module_expr error
-- On LET reduce production module_expr -> module_expr LPAREN module_expr error
-- On EXTERNAL reduce production module_expr -> module_expr LPAREN module_expr error
-- On EXCEPTION reduce production module_expr -> module_expr LPAREN module_expr error
-- On END reduce production module_expr -> module_expr LPAREN module_expr error
-- On DEF reduce production module_expr -> module_expr LPAREN module_expr error
-- On COLON reduce production module_expr -> module_expr LPAREN module_expr error
-- On CLASS reduce production module_expr -> module_expr LPAREN module_expr error

State 1433:
module_expr -> module_expr LPAREN module_expr RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On TYPE reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On SEMISEMI reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On RPAREN reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On OPEN reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On MODULE reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On LPAREN reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On LET reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On EXTERNAL reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On EXCEPTION reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On END reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On DEF reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On COLON reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On CLASS reduce production module_expr -> module_expr LPAREN module_expr RPAREN

State 1434:
mod_longident -> mod_longident . DOT UIDENT [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DOT DEF COLON CLASS ]
module_expr -> mod_longident . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On DOT shift to state 77
-- On error reduce production module_expr -> mod_longident
-- On TYPE reduce production module_expr -> mod_longident
-- On SEMISEMI reduce production module_expr -> mod_longident
-- On RPAREN reduce production module_expr -> mod_longident
-- On OPEN reduce production module_expr -> mod_longident
-- On MODULE reduce production module_expr -> mod_longident
-- On LPAREN reduce production module_expr -> mod_longident
-- On LET reduce production module_expr -> mod_longident
-- On EXTERNAL reduce production module_expr -> mod_longident
-- On EXCEPTION reduce production module_expr -> mod_longident
-- On END reduce production module_expr -> mod_longident
-- On DEF reduce production module_expr -> mod_longident
-- On COLON reduce production module_expr -> mod_longident
-- On CLASS reduce production module_expr -> mod_longident

State 1435:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN COLON ]
module_expr -> module_expr . LPAREN module_expr error [ error RPAREN LPAREN COLON ]
module_expr -> LPAREN module_expr . COLON module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN module_expr . COLON module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN module_expr . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN module_expr . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error shift to state 1436
-- On RPAREN shift to state 1437
-- On LPAREN shift to state 1430
-- On COLON shift to state 1438

State 1436:
module_expr -> LPAREN module_expr error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> LPAREN module_expr error
-- On TYPE reduce production module_expr -> LPAREN module_expr error
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr error
-- On RPAREN reduce production module_expr -> LPAREN module_expr error
-- On OPEN reduce production module_expr -> LPAREN module_expr error
-- On MODULE reduce production module_expr -> LPAREN module_expr error
-- On LPAREN reduce production module_expr -> LPAREN module_expr error
-- On LET reduce production module_expr -> LPAREN module_expr error
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr error
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr error
-- On END reduce production module_expr -> LPAREN module_expr error
-- On DEF reduce production module_expr -> LPAREN module_expr error
-- On COLON reduce production module_expr -> LPAREN module_expr error
-- On CLASS reduce production module_expr -> LPAREN module_expr error

State 1437:
module_expr -> LPAREN module_expr RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> LPAREN module_expr RPAREN
-- On TYPE reduce production module_expr -> LPAREN module_expr RPAREN
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr RPAREN
-- On RPAREN reduce production module_expr -> LPAREN module_expr RPAREN
-- On OPEN reduce production module_expr -> LPAREN module_expr RPAREN
-- On MODULE reduce production module_expr -> LPAREN module_expr RPAREN
-- On LPAREN reduce production module_expr -> LPAREN module_expr RPAREN
-- On LET reduce production module_expr -> LPAREN module_expr RPAREN
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr RPAREN
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr RPAREN
-- On END reduce production module_expr -> LPAREN module_expr RPAREN
-- On DEF reduce production module_expr -> LPAREN module_expr RPAREN
-- On COLON reduce production module_expr -> LPAREN module_expr RPAREN
-- On CLASS reduce production module_expr -> LPAREN module_expr RPAREN

State 1438:
module_expr -> LPAREN module_expr COLON . module_type RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN module_expr COLON . module_type error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1439
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1439:
module_expr -> LPAREN module_expr COLON module_type . RPAREN [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_expr -> LPAREN module_expr COLON module_type . error [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
-- On error shift to state 1440
-- On WITH shift to state 1150
-- On RPAREN shift to state 1441

State 1440:
module_expr -> LPAREN module_expr COLON module_type error . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On TYPE reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On RPAREN reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On OPEN reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On MODULE reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On LPAREN reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On LET reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On END reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On DEF reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On COLON reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On CLASS reduce production module_expr -> LPAREN module_expr COLON module_type error

State 1441:
module_expr -> LPAREN module_expr COLON module_type RPAREN . [ error TYPE SEMISEMI RPAREN OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF COLON CLASS ]
-- On error reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On TYPE reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On RPAREN reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On OPEN reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On MODULE reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On LPAREN reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On LET reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On END reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On DEF reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On COLON reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On CLASS reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN

State 1442:
module_binding -> EQUAL module_expr . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ error TYPE SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 1430
-- On error reduce production module_binding -> EQUAL module_expr
-- On TYPE reduce production module_binding -> EQUAL module_expr
-- On SEMISEMI reduce production module_binding -> EQUAL module_expr
-- On OPEN reduce production module_binding -> EQUAL module_expr
-- On MODULE reduce production module_binding -> EQUAL module_expr
-- On LET reduce production module_binding -> EQUAL module_expr
-- On EXTERNAL reduce production module_binding -> EQUAL module_expr
-- On EXCEPTION reduce production module_binding -> EQUAL module_expr
-- On END reduce production module_binding -> EQUAL module_expr
-- On DEF reduce production module_binding -> EQUAL module_expr
-- On CLASS reduce production module_binding -> EQUAL module_expr

State 1443:
module_binding -> COLON . module_type EQUAL module_expr [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1444
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1444:
module_binding -> COLON module_type . EQUAL module_expr [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH EQUAL ]
-- On WITH shift to state 1122
-- On EQUAL shift to state 1445

State 1445:
module_binding -> COLON module_type EQUAL . module_expr [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1446
-- On mod_longident shift to state 1434

State 1446:
module_binding -> COLON module_type EQUAL module_expr . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ error TYPE SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ error TYPE SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On LPAREN shift to state 1430
-- On error reduce production module_binding -> COLON module_type EQUAL module_expr
-- On TYPE reduce production module_binding -> COLON module_type EQUAL module_expr
-- On SEMISEMI reduce production module_binding -> COLON module_type EQUAL module_expr
-- On OPEN reduce production module_binding -> COLON module_type EQUAL module_expr
-- On MODULE reduce production module_binding -> COLON module_type EQUAL module_expr
-- On LET reduce production module_binding -> COLON module_type EQUAL module_expr
-- On EXTERNAL reduce production module_binding -> COLON module_type EQUAL module_expr
-- On EXCEPTION reduce production module_binding -> COLON module_type EQUAL module_expr
-- On END reduce production module_binding -> COLON module_type EQUAL module_expr
-- On DEF reduce production module_binding -> COLON module_type EQUAL module_expr
-- On CLASS reduce production module_binding -> COLON module_type EQUAL module_expr

State 1447:
module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On TYPE reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On SEMISEMI reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On OPEN reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On MODULE reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On LET reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On EXTERNAL reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On EXCEPTION reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On END reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On DEF reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On CLASS reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding

State 1448:
structure_item -> MODULE UIDENT module_binding . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On error reduce production structure_item -> MODULE UIDENT module_binding
-- On TYPE reduce production structure_item -> MODULE UIDENT module_binding
-- On SEMISEMI reduce production structure_item -> MODULE UIDENT module_binding
-- On OPEN reduce production structure_item -> MODULE UIDENT module_binding
-- On MODULE reduce production structure_item -> MODULE UIDENT module_binding
-- On LET reduce production structure_item -> MODULE UIDENT module_binding
-- On EXTERNAL reduce production structure_item -> MODULE UIDENT module_binding
-- On EXCEPTION reduce production structure_item -> MODULE UIDENT module_binding
-- On END reduce production structure_item -> MODULE UIDENT module_binding
-- On DEF reduce production structure_item -> MODULE UIDENT module_binding
-- On CLASS reduce production structure_item -> MODULE UIDENT module_binding

State 1449:
structure_item -> MODULE TYPE . ident EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 1450

State 1450:
structure_item -> MODULE TYPE ident . EQUAL module_type [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On EQUAL shift to state 1451

State 1451:
structure_item -> MODULE TYPE ident EQUAL . module_type [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1452
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1452:
module_type -> module_type . WITH with_constraints [ error WITH TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
structure_item -> MODULE TYPE ident EQUAL module_type . [ error TYPE SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION END DEF CLASS ]
-- On WITH shift to state 1150
-- On error reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On TYPE reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On SEMISEMI reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On OPEN reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On MODULE reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On LET reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On EXTERNAL reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On EXCEPTION reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On END reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On DEF reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On CLASS reduce production structure_item -> MODULE TYPE ident EQUAL module_type

State 1453:
structure_tail -> SEMISEMI structure_item . structure_tail [ error END ]
-- On TYPE shift to state 1267
-- On SEMISEMI shift to state 1269
-- On OPEN shift to state 1270
-- On MODULE shift to state 1272
-- On LET shift to state 1410
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1413
-- On CLASS shift to state 1344
-- On structure_tail shift to state 1454
-- On structure_item shift to state 1409
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1454:
structure_tail -> SEMISEMI structure_item structure_tail . [ error END ]
-- On error reduce production structure_tail -> SEMISEMI structure_item structure_tail
-- On END reduce production structure_tail -> SEMISEMI structure_item structure_tail

State 1455:
structure_tail -> SEMISEMI seq_expr . structure_tail [ error END ]
-- On TYPE shift to state 1267
-- On SEMISEMI shift to state 1269
-- On OPEN shift to state 1270
-- On MODULE shift to state 1272
-- On LET shift to state 1410
-- On EXTERNAL shift to state 1284
-- On EXCEPTION shift to state 1290
-- On DEF shift to state 1413
-- On CLASS shift to state 1344
-- On structure_tail shift to state 1456
-- On structure_item shift to state 1409
-- On error reduce production structure_tail -> 
-- On END reduce production structure_tail -> 

State 1456:
structure_tail -> SEMISEMI seq_expr structure_tail . [ error END ]
-- On error reduce production structure_tail -> SEMISEMI seq_expr structure_tail
-- On END reduce production structure_tail -> SEMISEMI seq_expr structure_tail

State 1457:
module_expr -> STRUCT structure . END [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> STRUCT structure . error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On error shift to state 1458
-- On END shift to state 1459

State 1458:
module_expr -> STRUCT structure error . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> STRUCT structure error
-- On SHARP reduce production module_expr -> STRUCT structure error
-- On SEMISEMI reduce production module_expr -> STRUCT structure error
-- On OPEN reduce production module_expr -> STRUCT structure error
-- On MODULE reduce production module_expr -> STRUCT structure error
-- On LPAREN reduce production module_expr -> STRUCT structure error
-- On LET reduce production module_expr -> STRUCT structure error
-- On EXTERNAL reduce production module_expr -> STRUCT structure error
-- On EXCEPTION reduce production module_expr -> STRUCT structure error
-- On EOF reduce production module_expr -> STRUCT structure error
-- On DEF reduce production module_expr -> STRUCT structure error
-- On CLASS reduce production module_expr -> STRUCT structure error

State 1459:
module_expr -> STRUCT structure END . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> STRUCT structure END
-- On SHARP reduce production module_expr -> STRUCT structure END
-- On SEMISEMI reduce production module_expr -> STRUCT structure END
-- On OPEN reduce production module_expr -> STRUCT structure END
-- On MODULE reduce production module_expr -> STRUCT structure END
-- On LPAREN reduce production module_expr -> STRUCT structure END
-- On LET reduce production module_expr -> STRUCT structure END
-- On EXTERNAL reduce production module_expr -> STRUCT structure END
-- On EXCEPTION reduce production module_expr -> STRUCT structure END
-- On EOF reduce production module_expr -> STRUCT structure END
-- On DEF reduce production module_expr -> STRUCT structure END
-- On CLASS reduce production module_expr -> STRUCT structure END

State 1460:
module_expr -> LPAREN . module_expr COLON module_type RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN . module_expr COLON module_type error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN . module_expr RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN . module_expr error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1461
-- On mod_longident shift to state 1434

State 1461:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN COLON ]
module_expr -> module_expr . LPAREN module_expr error [ error RPAREN LPAREN COLON ]
module_expr -> LPAREN module_expr . COLON module_type RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN module_expr . COLON module_type error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN module_expr . RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN module_expr . error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On error shift to state 1462
-- On RPAREN shift to state 1463
-- On LPAREN shift to state 1430
-- On COLON shift to state 1464

State 1462:
module_expr -> LPAREN module_expr error . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> LPAREN module_expr error
-- On SHARP reduce production module_expr -> LPAREN module_expr error
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr error
-- On OPEN reduce production module_expr -> LPAREN module_expr error
-- On MODULE reduce production module_expr -> LPAREN module_expr error
-- On LPAREN reduce production module_expr -> LPAREN module_expr error
-- On LET reduce production module_expr -> LPAREN module_expr error
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr error
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr error
-- On EOF reduce production module_expr -> LPAREN module_expr error
-- On DEF reduce production module_expr -> LPAREN module_expr error
-- On CLASS reduce production module_expr -> LPAREN module_expr error

State 1463:
module_expr -> LPAREN module_expr RPAREN . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> LPAREN module_expr RPAREN
-- On SHARP reduce production module_expr -> LPAREN module_expr RPAREN
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr RPAREN
-- On OPEN reduce production module_expr -> LPAREN module_expr RPAREN
-- On MODULE reduce production module_expr -> LPAREN module_expr RPAREN
-- On LPAREN reduce production module_expr -> LPAREN module_expr RPAREN
-- On LET reduce production module_expr -> LPAREN module_expr RPAREN
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr RPAREN
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr RPAREN
-- On EOF reduce production module_expr -> LPAREN module_expr RPAREN
-- On DEF reduce production module_expr -> LPAREN module_expr RPAREN
-- On CLASS reduce production module_expr -> LPAREN module_expr RPAREN

State 1464:
module_expr -> LPAREN module_expr COLON . module_type RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN module_expr COLON . module_type error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1106
-- On SIG shift to state 1107
-- On LPAREN shift to state 1111
-- On LIDENT shift to state 127
-- On FUNCTOR shift to state 1112
-- On mty_longident shift to state 1148
-- On module_type shift to state 1465
-- On mod_ext_longident shift to state 1171
-- On ident shift to state 1175

State 1465:
module_expr -> LPAREN module_expr COLON module_type . RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> LPAREN module_expr COLON module_type . error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ error WITH RPAREN ]
-- On error shift to state 1466
-- On WITH shift to state 1150
-- On RPAREN shift to state 1467

State 1466:
module_expr -> LPAREN module_expr COLON module_type error . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On SHARP reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On OPEN reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On MODULE reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On LPAREN reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On LET reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On EOF reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On DEF reduce production module_expr -> LPAREN module_expr COLON module_type error
-- On CLASS reduce production module_expr -> LPAREN module_expr COLON module_type error

State 1467:
module_expr -> LPAREN module_expr COLON module_type RPAREN . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On SHARP reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On SEMISEMI reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On OPEN reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On MODULE reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On LPAREN reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On LET reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On EXTERNAL reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On EXCEPTION reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On EOF reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On DEF reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN
-- On CLASS reduce production module_expr -> LPAREN module_expr COLON module_type RPAREN

State 1468:
module_expr -> FUNCTOR . LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1469

State 1469:
module_expr -> FUNCTOR LPAREN . UIDENT COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1470

State 1470:
module_expr -> FUNCTOR LPAREN UIDENT . COLON module_type RPAREN MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On COLON shift to state 1471

State 1471:
module_expr -> FUNCTOR LPAREN UIDENT COLON . module_type RPAREN MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1472
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1472:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type . RPAREN MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1473

State 1473:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN . MINUSGREATER module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On MINUSGREATER shift to state 1474

State 1474:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER . module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 2
-- On STRUCT shift to state 1266
-- On LPAREN shift to state 1460
-- On FUNCTOR shift to state 1468
-- On module_expr shift to state 1475
-- On mod_longident shift to state 1480

State 1475:
module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1476
-- On TYPE reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On SHARP reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On SEMISEMI reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On OPEN reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On MODULE reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On LPAREN reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On LET reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On EXTERNAL reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On EXCEPTION reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On EOF reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On DEF reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
-- On CLASS reduce production module_expr -> FUNCTOR LPAREN UIDENT COLON module_type RPAREN MINUSGREATER module_expr
** Conflict on LPAREN

State 1476:
module_expr -> module_expr LPAREN . module_expr RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr LPAREN . module_expr error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 17
-- On STRUCT shift to state 1280
-- On LPAREN shift to state 1421
-- On FUNCTOR shift to state 1422
-- On module_expr shift to state 1477
-- On mod_longident shift to state 1434

State 1477:
module_expr -> module_expr . LPAREN module_expr RPAREN [ error RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ error RPAREN LPAREN ]
module_expr -> module_expr LPAREN module_expr . error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On error shift to state 1478
-- On RPAREN shift to state 1479
-- On LPAREN shift to state 1430

State 1478:
module_expr -> module_expr LPAREN module_expr error . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> module_expr LPAREN module_expr error
-- On SHARP reduce production module_expr -> module_expr LPAREN module_expr error
-- On SEMISEMI reduce production module_expr -> module_expr LPAREN module_expr error
-- On OPEN reduce production module_expr -> module_expr LPAREN module_expr error
-- On MODULE reduce production module_expr -> module_expr LPAREN module_expr error
-- On LPAREN reduce production module_expr -> module_expr LPAREN module_expr error
-- On LET reduce production module_expr -> module_expr LPAREN module_expr error
-- On EXTERNAL reduce production module_expr -> module_expr LPAREN module_expr error
-- On EXCEPTION reduce production module_expr -> module_expr LPAREN module_expr error
-- On EOF reduce production module_expr -> module_expr LPAREN module_expr error
-- On DEF reduce production module_expr -> module_expr LPAREN module_expr error
-- On CLASS reduce production module_expr -> module_expr LPAREN module_expr error

State 1479:
module_expr -> module_expr LPAREN module_expr RPAREN . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On SHARP reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On SEMISEMI reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On OPEN reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On MODULE reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On LPAREN reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On LET reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On EXTERNAL reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On EXCEPTION reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On EOF reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On DEF reduce production module_expr -> module_expr LPAREN module_expr RPAREN
-- On CLASS reduce production module_expr -> module_expr LPAREN module_expr RPAREN

State 1480:
mod_longident -> mod_longident . DOT UIDENT [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DOT DEF CLASS ]
module_expr -> mod_longident . [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On DOT shift to state 304
-- On TYPE reduce production module_expr -> mod_longident
-- On SHARP reduce production module_expr -> mod_longident
-- On SEMISEMI reduce production module_expr -> mod_longident
-- On OPEN reduce production module_expr -> mod_longident
-- On MODULE reduce production module_expr -> mod_longident
-- On LPAREN reduce production module_expr -> mod_longident
-- On LET reduce production module_expr -> mod_longident
-- On EXTERNAL reduce production module_expr -> mod_longident
-- On EXCEPTION reduce production module_expr -> mod_longident
-- On EOF reduce production module_expr -> mod_longident
-- On DEF reduce production module_expr -> mod_longident
-- On CLASS reduce production module_expr -> mod_longident

State 1481:
module_binding -> EQUAL module_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1476
-- On TYPE reduce production module_binding -> EQUAL module_expr
-- On SHARP reduce production module_binding -> EQUAL module_expr
-- On SEMISEMI reduce production module_binding -> EQUAL module_expr
-- On OPEN reduce production module_binding -> EQUAL module_expr
-- On MODULE reduce production module_binding -> EQUAL module_expr
-- On LET reduce production module_binding -> EQUAL module_expr
-- On EXTERNAL reduce production module_binding -> EQUAL module_expr
-- On EXCEPTION reduce production module_binding -> EQUAL module_expr
-- On EOF reduce production module_binding -> EQUAL module_expr
-- On DEF reduce production module_binding -> EQUAL module_expr
-- On CLASS reduce production module_binding -> EQUAL module_expr

State 1482:
module_binding -> COLON . module_type EQUAL module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1483
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1483:
module_binding -> COLON module_type . EQUAL module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH EQUAL ]
-- On WITH shift to state 1122
-- On EQUAL shift to state 1484

State 1484:
module_binding -> COLON module_type EQUAL . module_expr [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 2
-- On STRUCT shift to state 1266
-- On LPAREN shift to state 1460
-- On FUNCTOR shift to state 1468
-- On module_expr shift to state 1485
-- On mod_longident shift to state 1480

State 1485:
module_binding -> COLON module_type EQUAL module_expr . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr RPAREN [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
module_expr -> module_expr . LPAREN module_expr error [ TYPE SHARP SEMISEMI OPEN MODULE LPAREN LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 1476
-- On TYPE reduce production module_binding -> COLON module_type EQUAL module_expr
-- On SHARP reduce production module_binding -> COLON module_type EQUAL module_expr
-- On SEMISEMI reduce production module_binding -> COLON module_type EQUAL module_expr
-- On OPEN reduce production module_binding -> COLON module_type EQUAL module_expr
-- On MODULE reduce production module_binding -> COLON module_type EQUAL module_expr
-- On LET reduce production module_binding -> COLON module_type EQUAL module_expr
-- On EXTERNAL reduce production module_binding -> COLON module_type EQUAL module_expr
-- On EXCEPTION reduce production module_binding -> COLON module_type EQUAL module_expr
-- On EOF reduce production module_binding -> COLON module_type EQUAL module_expr
-- On DEF reduce production module_binding -> COLON module_type EQUAL module_expr
-- On CLASS reduce production module_binding -> COLON module_type EQUAL module_expr

State 1486:
module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On SHARP reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On SEMISEMI reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On OPEN reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On MODULE reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On LET reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On EXTERNAL reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On EXCEPTION reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On EOF reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On DEF reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding
-- On CLASS reduce production module_binding -> LPAREN UIDENT COLON module_type RPAREN module_binding

State 1487:
structure_item -> MODULE UIDENT module_binding . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production structure_item -> MODULE UIDENT module_binding
-- On SHARP reduce production structure_item -> MODULE UIDENT module_binding
-- On SEMISEMI reduce production structure_item -> MODULE UIDENT module_binding
-- On OPEN reduce production structure_item -> MODULE UIDENT module_binding
-- On MODULE reduce production structure_item -> MODULE UIDENT module_binding
-- On LET reduce production structure_item -> MODULE UIDENT module_binding
-- On EXTERNAL reduce production structure_item -> MODULE UIDENT module_binding
-- On EXCEPTION reduce production structure_item -> MODULE UIDENT module_binding
-- On EOF reduce production structure_item -> MODULE UIDENT module_binding
-- On DEF reduce production structure_item -> MODULE UIDENT module_binding
-- On CLASS reduce production structure_item -> MODULE UIDENT module_binding

State 1488:
structure_item -> MODULE TYPE . ident EQUAL module_type [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 1489

State 1489:
structure_item -> MODULE TYPE ident . EQUAL module_type [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On EQUAL shift to state 1490

State 1490:
structure_item -> MODULE TYPE ident EQUAL . module_type [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1491
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1491:
module_type -> module_type . WITH with_constraints [ WITH TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
structure_item -> MODULE TYPE ident EQUAL module_type . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On WITH shift to state 1122
-- On TYPE reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On SHARP reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On SEMISEMI reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On OPEN reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On MODULE reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On LET reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On EXTERNAL reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On EXCEPTION reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On EOF reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On DEF reduce production structure_item -> MODULE TYPE ident EQUAL module_type
-- On CLASS reduce production structure_item -> MODULE TYPE ident EQUAL module_type

State 1492:
expr -> LET . rec_flag let_bindings IN seq_expr [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings IN error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET . rec_flag let_bindings error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET . rec_flag let_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On REC shift to state 287
-- On rec_flag shift to state 1493
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 1493:
expr -> LET rec_flag . let_bindings IN seq_expr [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings IN error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag . let_bindings error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> LET rec_flag . let_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 289
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 308
-- On mod_longident shift to state 303
-- On let_bindings shift to state 1494
-- On let_binding shift to state 801
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 1494:
expr -> LET rec_flag let_bindings . IN seq_expr [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . IN error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
expr -> LET rec_flag let_bindings . error [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
let_bindings -> let_bindings . AND let_binding [ error TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
structure_item -> LET rec_flag let_bindings . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On error shift to state 406
-- On IN shift to state 407
-- On AND shift to state 799
-- On TYPE reduce production structure_item -> LET rec_flag let_bindings
-- On SHARP reduce production structure_item -> LET rec_flag let_bindings
-- On SEMISEMI reduce production structure_item -> LET rec_flag let_bindings
-- On OPEN reduce production structure_item -> LET rec_flag let_bindings
-- On MODULE reduce production structure_item -> LET rec_flag let_bindings
-- On LET reduce production structure_item -> LET rec_flag let_bindings
-- On EXTERNAL reduce production structure_item -> LET rec_flag let_bindings
-- On EXCEPTION reduce production structure_item -> LET rec_flag let_bindings
-- On EOF reduce production structure_item -> LET rec_flag let_bindings
-- On DEF reduce production structure_item -> LET rec_flag let_bindings
-- On CLASS reduce production structure_item -> LET rec_flag let_bindings

State 1495:
structure_item -> EXTERNAL . val_ident COLON core_type EQUAL primitive_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1496

State 1496:
structure_item -> EXTERNAL val_ident . COLON core_type EQUAL primitive_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On COLON shift to state 1497

State 1497:
structure_item -> EXTERNAL val_ident COLON . core_type EQUAL primitive_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1498

State 1498:
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER EQUAL AS ]
structure_item -> EXTERNAL val_ident COLON core_type . EQUAL primitive_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On MINUSGREATER shift to state 167
-- On EQUAL shift to state 1499
-- On AS shift to state 169

State 1499:
structure_item -> EXTERNAL val_ident COLON core_type EQUAL . primitive_declaration [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On STRING shift to state 1500
-- On primitive_declaration shift to state 1502

State 1500:
primitive_declaration -> STRING . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS ]
primitive_declaration -> STRING . primitive_declaration [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On STRING shift to state 1500
-- On primitive_declaration shift to state 1501
-- On VAL reduce production primitive_declaration -> STRING
-- On TYPE reduce production primitive_declaration -> STRING
-- On SHARP reduce production primitive_declaration -> STRING
-- On SEMISEMI reduce production primitive_declaration -> STRING
-- On OPEN reduce production primitive_declaration -> STRING
-- On MODULE reduce production primitive_declaration -> STRING
-- On LET reduce production primitive_declaration -> STRING
-- On INCLUDE reduce production primitive_declaration -> STRING
-- On EXTERNAL reduce production primitive_declaration -> STRING
-- On EXCEPTION reduce production primitive_declaration -> STRING
-- On EOF reduce production primitive_declaration -> STRING
-- On DEF reduce production primitive_declaration -> STRING
-- On CLASS reduce production primitive_declaration -> STRING

State 1501:
primitive_declaration -> STRING primitive_declaration . [ VAL TYPE SHARP SEMISEMI OPEN MODULE LET INCLUDE EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On VAL reduce production primitive_declaration -> STRING primitive_declaration
-- On TYPE reduce production primitive_declaration -> STRING primitive_declaration
-- On SHARP reduce production primitive_declaration -> STRING primitive_declaration
-- On SEMISEMI reduce production primitive_declaration -> STRING primitive_declaration
-- On OPEN reduce production primitive_declaration -> STRING primitive_declaration
-- On MODULE reduce production primitive_declaration -> STRING primitive_declaration
-- On LET reduce production primitive_declaration -> STRING primitive_declaration
-- On INCLUDE reduce production primitive_declaration -> STRING primitive_declaration
-- On EXTERNAL reduce production primitive_declaration -> STRING primitive_declaration
-- On EXCEPTION reduce production primitive_declaration -> STRING primitive_declaration
-- On EOF reduce production primitive_declaration -> STRING primitive_declaration
-- On DEF reduce production primitive_declaration -> STRING primitive_declaration
-- On CLASS reduce production primitive_declaration -> STRING primitive_declaration

State 1502:
structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On SHARP reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On SEMISEMI reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On OPEN reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On MODULE reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On LET reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXTERNAL reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXCEPTION reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EOF reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On DEF reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On CLASS reduce production structure_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration

State 1503:
structure_item -> EXCEPTION . UIDENT constructor_arguments [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 1504

State 1504:
structure_item -> EXCEPTION UIDENT . constructor_arguments [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On OF shift to state 1004
-- On constructor_arguments shift to state 1505
-- On TYPE reduce production constructor_arguments -> 
-- On SHARP reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On LET reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On EOF reduce production constructor_arguments -> 
-- On DEF reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 

State 1505:
structure_item -> EXCEPTION UIDENT constructor_arguments . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On SHARP reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On SEMISEMI reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On OPEN reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On MODULE reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On LET reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On EXTERNAL reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On EXCEPTION reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On EOF reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On DEF reduce production structure_item -> EXCEPTION UIDENT constructor_arguments
-- On CLASS reduce production structure_item -> EXCEPTION UIDENT constructor_arguments

State 1506:
expr -> DEF . def_bindings IN seq_expr [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> DEF . def_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 1507
-- On def_binding shift to state 595

State 1507:
def_bindings -> def_bindings . AND def_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET IN EXTERNAL EXCEPTION EOF DEF CLASS AND ]
expr -> DEF def_bindings . IN seq_expr [ TYPE SUBTRACTIVE STAR SHARP SEMISEMI SEMI OR OPEN MODULE LET LESSGREATER LESS INFIXOP4 INFIXOP3 INFIXOP2 INFIXOP1 INFIXOP0 GREATER EXTERNAL EXCEPTION EQUAL EOF DEF COMMA COLONEQUAL COLONCOLON CLASS BARBAR AMPERSAND AMPERAMPER ]
structure_item -> DEF def_bindings . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On IN shift to state 637
-- On AND shift to state 593
-- On TYPE reduce production structure_item -> DEF def_bindings
-- On SHARP reduce production structure_item -> DEF def_bindings
-- On SEMISEMI reduce production structure_item -> DEF def_bindings
-- On OPEN reduce production structure_item -> DEF def_bindings
-- On MODULE reduce production structure_item -> DEF def_bindings
-- On LET reduce production structure_item -> DEF def_bindings
-- On EXTERNAL reduce production structure_item -> DEF def_bindings
-- On EXCEPTION reduce production structure_item -> DEF def_bindings
-- On EOF reduce production structure_item -> DEF def_bindings
-- On DEF reduce production structure_item -> DEF def_bindings
-- On CLASS reduce production structure_item -> DEF def_bindings

State 1508:
structure_item -> CLASS . class_list END [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
structure_item -> CLASS . class_list error [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1345
-- On class_list shift to state 1509
-- On class_def shift to state 1407
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1509:
class_list -> class_list . AND class_def [ error END AND ]
structure_item -> CLASS class_list . END [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
structure_item -> CLASS class_list . error [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On error shift to state 1510
-- On END shift to state 1511
-- On AND shift to state 1405

State 1510:
structure_item -> CLASS class_list error . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production structure_item -> CLASS class_list error
-- On SHARP reduce production structure_item -> CLASS class_list error
-- On SEMISEMI reduce production structure_item -> CLASS class_list error
-- On OPEN reduce production structure_item -> CLASS class_list error
-- On MODULE reduce production structure_item -> CLASS class_list error
-- On LET reduce production structure_item -> CLASS class_list error
-- On EXTERNAL reduce production structure_item -> CLASS class_list error
-- On EXCEPTION reduce production structure_item -> CLASS class_list error
-- On EOF reduce production structure_item -> CLASS class_list error
-- On DEF reduce production structure_item -> CLASS class_list error
-- On CLASS reduce production structure_item -> CLASS class_list error

State 1511:
structure_item -> CLASS class_list END . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production structure_item -> CLASS class_list END
-- On SHARP reduce production structure_item -> CLASS class_list END
-- On SEMISEMI reduce production structure_item -> CLASS class_list END
-- On OPEN reduce production structure_item -> CLASS class_list END
-- On MODULE reduce production structure_item -> CLASS class_list END
-- On LET reduce production structure_item -> CLASS class_list END
-- On EXTERNAL reduce production structure_item -> CLASS class_list END
-- On EXCEPTION reduce production structure_item -> CLASS class_list END
-- On EOF reduce production structure_item -> CLASS class_list END
-- On DEF reduce production structure_item -> CLASS class_list END
-- On CLASS reduce production structure_item -> CLASS class_list END

State 1512:
structure_tail -> SEMISEMI structure_item . structure_tail [ EOF ]
-- On TYPE shift to state 967
-- On SEMISEMI shift to state 1032
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On structure_tail shift to state 1518
-- On structure_item shift to state 1519
-- On EOF reduce production structure_tail -> 

State 1513:
structure_item -> LET . rec_flag let_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On REC shift to state 287
-- On rec_flag shift to state 1514
-- On UNDERSCORE reduce production rec_flag -> 
-- On UIDENT reduce production rec_flag -> 
-- On TRUE reduce production rec_flag -> 
-- On SUBTRACTIVE reduce production rec_flag -> 
-- On STRING reduce production rec_flag -> 
-- On LPAREN reduce production rec_flag -> 
-- On LIDENT reduce production rec_flag -> 
-- On LBRACKET reduce production rec_flag -> 
-- On LBRACE reduce production rec_flag -> 
-- On INT reduce production rec_flag -> 
-- On FLOAT reduce production rec_flag -> 
-- On FALSE reduce production rec_flag -> 
-- On CHAR reduce production rec_flag -> 

State 1514:
structure_item -> LET rec_flag . let_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UNDERSCORE shift to state 32
-- On UIDENT shift to state 2
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 33
-- On STRING shift to state 7
-- On LPAREN shift to state 36
-- On LIDENT shift to state 246
-- On LBRACKET shift to state 247
-- On LBRACE shift to state 253
-- On INT shift to state 258
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On CHAR shift to state 261
-- On val_ident shift to state 401
-- On simple_pattern shift to state 297
-- On signed_constant shift to state 266
-- On pattern_comma_list shift to state 298
-- On pattern shift to state 809
-- On mod_longident shift to state 303
-- On let_bindings shift to state 1515
-- On let_binding shift to state 819
-- On constr_longident shift to state 305
-- On constant shift to state 307

State 1515:
let_bindings -> let_bindings . AND let_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS AND ]
structure_item -> LET rec_flag let_bindings . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On AND shift to state 817
-- On TYPE reduce production structure_item -> LET rec_flag let_bindings
-- On SHARP reduce production structure_item -> LET rec_flag let_bindings
-- On SEMISEMI reduce production structure_item -> LET rec_flag let_bindings
-- On OPEN reduce production structure_item -> LET rec_flag let_bindings
-- On MODULE reduce production structure_item -> LET rec_flag let_bindings
-- On LET reduce production structure_item -> LET rec_flag let_bindings
-- On EXTERNAL reduce production structure_item -> LET rec_flag let_bindings
-- On EXCEPTION reduce production structure_item -> LET rec_flag let_bindings
-- On EOF reduce production structure_item -> LET rec_flag let_bindings
-- On DEF reduce production structure_item -> LET rec_flag let_bindings
-- On CLASS reduce production structure_item -> LET rec_flag let_bindings

State 1516:
structure_item -> DEF . def_bindings [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On LIDENT shift to state 449
-- On join_pattern shift to state 467
-- On def_bindings shift to state 1517
-- On def_binding shift to state 595

State 1517:
def_bindings -> def_bindings . AND def_binding [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS AND ]
structure_item -> DEF def_bindings . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On AND shift to state 593
-- On TYPE reduce production structure_item -> DEF def_bindings
-- On SHARP reduce production structure_item -> DEF def_bindings
-- On SEMISEMI reduce production structure_item -> DEF def_bindings
-- On OPEN reduce production structure_item -> DEF def_bindings
-- On MODULE reduce production structure_item -> DEF def_bindings
-- On LET reduce production structure_item -> DEF def_bindings
-- On EXTERNAL reduce production structure_item -> DEF def_bindings
-- On EXCEPTION reduce production structure_item -> DEF def_bindings
-- On EOF reduce production structure_item -> DEF def_bindings
-- On DEF reduce production structure_item -> DEF def_bindings
-- On CLASS reduce production structure_item -> DEF def_bindings

State 1518:
structure_tail -> SEMISEMI structure_item structure_tail . [ EOF ]
-- On EOF reduce production structure_tail -> SEMISEMI structure_item structure_tail

State 1519:
structure_tail -> structure_item . structure_tail [ EOF ]
-- On TYPE shift to state 967
-- On SEMISEMI shift to state 1032
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On structure_tail shift to state 1520
-- On structure_item shift to state 1519
-- On EOF reduce production structure_tail -> 

State 1520:
structure_tail -> structure_item structure_tail . [ EOF ]
-- On EOF reduce production structure_tail -> structure_item structure_tail

State 1521:
structure_tail -> SEMISEMI seq_expr . structure_tail [ EOF ]
-- On TYPE shift to state 967
-- On SEMISEMI shift to state 1032
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On structure_tail shift to state 1522
-- On structure_item shift to state 1519
-- On EOF reduce production structure_tail -> 

State 1522:
structure_tail -> SEMISEMI seq_expr structure_tail . [ EOF ]
-- On EOF reduce production structure_tail -> SEMISEMI seq_expr structure_tail

State 1523:
structure -> structure_tail . [ EOF ]
-- On EOF reduce production structure -> structure_tail

State 1524:
implementation -> structure . EOF [ # ]
-- On EOF shift to state 1525

State 1525:
implementation -> structure EOF . [ # ]
-- On # reduce production implementation -> structure EOF

State 1526:
structure -> seq_expr . structure_tail [ EOF ]
-- On TYPE shift to state 967
-- On SEMISEMI shift to state 1032
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On structure_tail shift to state 1527
-- On structure_item shift to state 1519
-- On EOF reduce production structure_tail -> 

State 1527:
structure -> seq_expr structure_tail . [ EOF ]
-- On EOF reduce production structure -> seq_expr structure_tail

State 1528:
implementation' -> implementation . [ # ]
-- On # accept implementation

State 1529:
interface' -> . interface [ # ]
-- On signature shift to state 1530
-- On interface shift to state 1571
-- On VAL reduce production signature -> 
-- On TYPE reduce production signature -> 
-- On OPEN reduce production signature -> 
-- On MODULE reduce production signature -> 
-- On INCLUDE reduce production signature -> 
-- On EXTERNAL reduce production signature -> 
-- On EXCEPTION reduce production signature -> 
-- On EOF reduce production signature -> 
-- On CLASS reduce production signature -> 

State 1530:
interface -> signature . EOF [ # ]
signature -> signature . signature_item [ VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature -> signature . signature_item SEMISEMI [ VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL shift to state 1531
-- On TYPE shift to state 1535
-- On OPEN shift to state 1537
-- On MODULE shift to state 1539
-- On INCLUDE shift to state 1554
-- On EXTERNAL shift to state 1556
-- On EXCEPTION shift to state 1562
-- On EOF shift to state 1565
-- On CLASS shift to state 1566
-- On signature_item shift to state 1569

State 1531:
signature_item -> VAL . val_ident COLON core_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1532

State 1532:
signature_item -> VAL val_ident . COLON core_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On COLON shift to state 1533

State 1533:
signature_item -> VAL val_ident COLON . core_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1534

State 1534:
core_type -> core_type . MINUSGREATER core_type [ VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER INCLUDE EXTERNAL EXCEPTION EOF CLASS AS ]
core_type -> core_type . AS type_parameter [ VAL TYPE SEMISEMI OPEN MODULE MINUSGREATER INCLUDE EXTERNAL EXCEPTION EOF CLASS AS ]
signature_item -> VAL val_ident COLON core_type . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On MINUSGREATER shift to state 167
-- On AS shift to state 169
-- On VAL reduce production signature_item -> VAL val_ident COLON core_type
-- On TYPE reduce production signature_item -> VAL val_ident COLON core_type
-- On SEMISEMI reduce production signature_item -> VAL val_ident COLON core_type
-- On OPEN reduce production signature_item -> VAL val_ident COLON core_type
-- On MODULE reduce production signature_item -> VAL val_ident COLON core_type
-- On INCLUDE reduce production signature_item -> VAL val_ident COLON core_type
-- On EXTERNAL reduce production signature_item -> VAL val_ident COLON core_type
-- On EXCEPTION reduce production signature_item -> VAL val_ident COLON core_type
-- On EOF reduce production signature_item -> VAL val_ident COLON core_type
-- On CLASS reduce production signature_item -> VAL val_ident COLON core_type

State 1535:
signature_item -> TYPE . type_declarations [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On QUOTE shift to state 170
-- On LPAREN shift to state 968
-- On type_parameters shift to state 974
-- On type_parameter shift to state 1027
-- On type_declarations shift to state 1536
-- On type_declaration shift to state 1031
-- On LIDENT reduce production type_parameters -> 

State 1536:
signature_item -> TYPE type_declarations . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
type_declarations -> type_declarations . AND type_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS AND ]
-- On AND shift to state 1029
-- On VAL reduce production signature_item -> TYPE type_declarations
-- On TYPE reduce production signature_item -> TYPE type_declarations
-- On SEMISEMI reduce production signature_item -> TYPE type_declarations
-- On OPEN reduce production signature_item -> TYPE type_declarations
-- On MODULE reduce production signature_item -> TYPE type_declarations
-- On INCLUDE reduce production signature_item -> TYPE type_declarations
-- On EXTERNAL reduce production signature_item -> TYPE type_declarations
-- On EXCEPTION reduce production signature_item -> TYPE type_declarations
-- On EOF reduce production signature_item -> TYPE type_declarations
-- On CLASS reduce production signature_item -> TYPE type_declarations

State 1537:
signature_item -> OPEN . mod_longident [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 2
-- On mod_longident shift to state 1538

State 1538:
mod_longident -> mod_longident . DOT UIDENT [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF DOT CLASS ]
signature_item -> OPEN mod_longident . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On DOT shift to state 304
-- On VAL reduce production signature_item -> OPEN mod_longident
-- On TYPE reduce production signature_item -> OPEN mod_longident
-- On SEMISEMI reduce production signature_item -> OPEN mod_longident
-- On OPEN reduce production signature_item -> OPEN mod_longident
-- On MODULE reduce production signature_item -> OPEN mod_longident
-- On INCLUDE reduce production signature_item -> OPEN mod_longident
-- On EXTERNAL reduce production signature_item -> OPEN mod_longident
-- On EXCEPTION reduce production signature_item -> OPEN mod_longident
-- On EOF reduce production signature_item -> OPEN mod_longident
-- On CLASS reduce production signature_item -> OPEN mod_longident

State 1539:
signature_item -> MODULE . UIDENT module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> MODULE . TYPE ident [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> MODULE . TYPE ident EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1540
-- On TYPE shift to state 1550

State 1540:
signature_item -> MODULE UIDENT . module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On LPAREN shift to state 1541
-- On COLON shift to state 1546
-- On module_declaration shift to state 1549

State 1541:
module_declaration -> LPAREN . UIDENT COLON module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1542

State 1542:
module_declaration -> LPAREN UIDENT . COLON module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On COLON shift to state 1543

State 1543:
module_declaration -> LPAREN UIDENT COLON . module_type RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1544
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1544:
module_declaration -> LPAREN UIDENT COLON module_type . RPAREN module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH RPAREN ]
-- On WITH shift to state 1122
-- On RPAREN shift to state 1545

State 1545:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN . module_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On LPAREN shift to state 1541
-- On COLON shift to state 1546
-- On module_declaration shift to state 1548

State 1546:
module_declaration -> COLON . module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1547
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1547:
module_declaration -> COLON module_type . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On WITH shift to state 1122
-- On VAL reduce production module_declaration -> COLON module_type
-- On TYPE reduce production module_declaration -> COLON module_type
-- On SEMISEMI reduce production module_declaration -> COLON module_type
-- On OPEN reduce production module_declaration -> COLON module_type
-- On MODULE reduce production module_declaration -> COLON module_type
-- On INCLUDE reduce production module_declaration -> COLON module_type
-- On EXTERNAL reduce production module_declaration -> COLON module_type
-- On EXCEPTION reduce production module_declaration -> COLON module_type
-- On EOF reduce production module_declaration -> COLON module_type
-- On CLASS reduce production module_declaration -> COLON module_type

State 1548:
module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On TYPE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On SEMISEMI reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On OPEN reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On MODULE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On INCLUDE reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On EXTERNAL reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On EXCEPTION reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On EOF reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration
-- On CLASS reduce production module_declaration -> LPAREN UIDENT COLON module_type RPAREN module_declaration

State 1549:
signature_item -> MODULE UIDENT module_declaration . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production signature_item -> MODULE UIDENT module_declaration
-- On TYPE reduce production signature_item -> MODULE UIDENT module_declaration
-- On SEMISEMI reduce production signature_item -> MODULE UIDENT module_declaration
-- On OPEN reduce production signature_item -> MODULE UIDENT module_declaration
-- On MODULE reduce production signature_item -> MODULE UIDENT module_declaration
-- On INCLUDE reduce production signature_item -> MODULE UIDENT module_declaration
-- On EXTERNAL reduce production signature_item -> MODULE UIDENT module_declaration
-- On EXCEPTION reduce production signature_item -> MODULE UIDENT module_declaration
-- On EOF reduce production signature_item -> MODULE UIDENT module_declaration
-- On CLASS reduce production signature_item -> MODULE UIDENT module_declaration

State 1550:
signature_item -> MODULE TYPE . ident [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> MODULE TYPE . ident EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 1551

State 1551:
signature_item -> MODULE TYPE ident . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> MODULE TYPE ident . EQUAL module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On EQUAL shift to state 1552
-- On VAL reduce production signature_item -> MODULE TYPE ident
-- On TYPE reduce production signature_item -> MODULE TYPE ident
-- On SEMISEMI reduce production signature_item -> MODULE TYPE ident
-- On OPEN reduce production signature_item -> MODULE TYPE ident
-- On MODULE reduce production signature_item -> MODULE TYPE ident
-- On INCLUDE reduce production signature_item -> MODULE TYPE ident
-- On EXTERNAL reduce production signature_item -> MODULE TYPE ident
-- On EXCEPTION reduce production signature_item -> MODULE TYPE ident
-- On EOF reduce production signature_item -> MODULE TYPE ident
-- On CLASS reduce production signature_item -> MODULE TYPE ident

State 1552:
signature_item -> MODULE TYPE ident EQUAL . module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1553
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1553:
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> MODULE TYPE ident EQUAL module_type . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On WITH shift to state 1122
-- On VAL reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On TYPE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On SEMISEMI reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On OPEN reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On MODULE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On INCLUDE reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On EXTERNAL reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On EXCEPTION reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On EOF reduce production signature_item -> MODULE TYPE ident EQUAL module_type
-- On CLASS reduce production signature_item -> MODULE TYPE ident EQUAL module_type

State 1554:
signature_item -> INCLUDE . module_type [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1040
-- On SIG shift to state 1041
-- On LPAREN shift to state 1105
-- On LIDENT shift to state 135
-- On FUNCTOR shift to state 1116
-- On mty_longident shift to state 1120
-- On module_type shift to state 1555
-- On mod_ext_longident shift to state 1140
-- On ident shift to state 1144

State 1555:
module_type -> module_type . WITH with_constraints [ WITH VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature_item -> INCLUDE module_type . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On WITH shift to state 1122
-- On VAL reduce production signature_item -> INCLUDE module_type
-- On TYPE reduce production signature_item -> INCLUDE module_type
-- On SEMISEMI reduce production signature_item -> INCLUDE module_type
-- On OPEN reduce production signature_item -> INCLUDE module_type
-- On MODULE reduce production signature_item -> INCLUDE module_type
-- On INCLUDE reduce production signature_item -> INCLUDE module_type
-- On EXTERNAL reduce production signature_item -> INCLUDE module_type
-- On EXCEPTION reduce production signature_item -> INCLUDE module_type
-- On EOF reduce production signature_item -> INCLUDE module_type
-- On CLASS reduce production signature_item -> INCLUDE module_type

State 1556:
signature_item -> EXTERNAL . val_ident COLON core_type EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On val_ident shift to state 1557

State 1557:
signature_item -> EXTERNAL val_ident . COLON core_type EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On COLON shift to state 1558

State 1558:
signature_item -> EXTERNAL val_ident COLON . core_type EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UNDERSCORE shift to state 130
-- On UIDENT shift to state 122
-- On SHARP shift to state 131
-- On QUOTE shift to state 133
-- On LPAREN shift to state 137
-- On LIDENT shift to state 138
-- On LESSLESS shift to state 139
-- On LESS shift to state 140
-- On type_longident shift to state 148
-- On simple_core_type shift to state 149
-- On mod_ext_longident shift to state 155
-- On core_type_tuple shift to state 163
-- On core_type shift to state 1559

State 1559:
core_type -> core_type . MINUSGREATER core_type [ MINUSGREATER EQUAL AS ]
core_type -> core_type . AS type_parameter [ MINUSGREATER EQUAL AS ]
signature_item -> EXTERNAL val_ident COLON core_type . EQUAL primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On MINUSGREATER shift to state 167
-- On EQUAL shift to state 1560
-- On AS shift to state 169

State 1560:
signature_item -> EXTERNAL val_ident COLON core_type EQUAL . primitive_declaration [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On STRING shift to state 1500
-- On primitive_declaration shift to state 1561

State 1561:
signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On TYPE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On SEMISEMI reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On OPEN reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On MODULE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On INCLUDE reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXTERNAL reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EXCEPTION reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On EOF reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration
-- On CLASS reduce production signature_item -> EXTERNAL val_ident COLON core_type EQUAL primitive_declaration

State 1562:
signature_item -> EXCEPTION . UIDENT constructor_arguments [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On UIDENT shift to state 1563

State 1563:
signature_item -> EXCEPTION UIDENT . constructor_arguments [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On OF shift to state 1004
-- On constructor_arguments shift to state 1564
-- On VAL reduce production constructor_arguments -> 
-- On TYPE reduce production constructor_arguments -> 
-- On SEMISEMI reduce production constructor_arguments -> 
-- On OPEN reduce production constructor_arguments -> 
-- On MODULE reduce production constructor_arguments -> 
-- On INCLUDE reduce production constructor_arguments -> 
-- On EXTERNAL reduce production constructor_arguments -> 
-- On EXCEPTION reduce production constructor_arguments -> 
-- On EOF reduce production constructor_arguments -> 
-- On CLASS reduce production constructor_arguments -> 

State 1564:
signature_item -> EXCEPTION UIDENT constructor_arguments . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On TYPE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On SEMISEMI reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On OPEN reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On MODULE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On INCLUDE reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On EXTERNAL reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On EXCEPTION reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On EOF reduce production signature_item -> EXCEPTION UIDENT constructor_arguments
-- On CLASS reduce production signature_item -> EXCEPTION UIDENT constructor_arguments

State 1565:
interface -> signature EOF . [ # ]
-- On # reduce production interface -> signature EOF

State 1566:
signature_item -> CLASS . class_type_list END [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VIRTUAL shift to state 1193
-- On virtual_flag shift to state 1194
-- On class_type_list shift to state 1567
-- On class_type shift to state 1246
-- On QUOTE reduce production virtual_flag -> 
-- On LPAREN reduce production virtual_flag -> 
-- On LIDENT reduce production virtual_flag -> 
-- On CLOSED reduce production virtual_flag -> 

State 1567:
class_type_list -> class_type_list . AND class_type [ END AND ]
signature_item -> CLASS class_type_list . END [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On END shift to state 1568
-- On AND shift to state 1244

State 1568:
signature_item -> CLASS class_type_list END . [ VAL TYPE SEMISEMI OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production signature_item -> CLASS class_type_list END
-- On TYPE reduce production signature_item -> CLASS class_type_list END
-- On SEMISEMI reduce production signature_item -> CLASS class_type_list END
-- On OPEN reduce production signature_item -> CLASS class_type_list END
-- On MODULE reduce production signature_item -> CLASS class_type_list END
-- On INCLUDE reduce production signature_item -> CLASS class_type_list END
-- On EXTERNAL reduce production signature_item -> CLASS class_type_list END
-- On EXCEPTION reduce production signature_item -> CLASS class_type_list END
-- On EOF reduce production signature_item -> CLASS class_type_list END
-- On CLASS reduce production signature_item -> CLASS class_type_list END

State 1569:
signature -> signature signature_item . [ VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
signature -> signature signature_item . SEMISEMI [ VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On SEMISEMI shift to state 1570
-- On VAL reduce production signature -> signature signature_item
-- On TYPE reduce production signature -> signature signature_item
-- On OPEN reduce production signature -> signature signature_item
-- On MODULE reduce production signature -> signature signature_item
-- On INCLUDE reduce production signature -> signature signature_item
-- On EXTERNAL reduce production signature -> signature signature_item
-- On EXCEPTION reduce production signature -> signature signature_item
-- On EOF reduce production signature -> signature signature_item
-- On CLASS reduce production signature -> signature signature_item

State 1570:
signature -> signature signature_item SEMISEMI . [ VAL TYPE OPEN MODULE INCLUDE EXTERNAL EXCEPTION EOF CLASS ]
-- On VAL reduce production signature -> signature signature_item SEMISEMI
-- On TYPE reduce production signature -> signature signature_item SEMISEMI
-- On OPEN reduce production signature -> signature signature_item SEMISEMI
-- On MODULE reduce production signature -> signature signature_item SEMISEMI
-- On INCLUDE reduce production signature -> signature signature_item SEMISEMI
-- On EXTERNAL reduce production signature -> signature signature_item SEMISEMI
-- On EXCEPTION reduce production signature -> signature signature_item SEMISEMI
-- On EOF reduce production signature -> signature signature_item SEMISEMI
-- On CLASS reduce production signature -> signature signature_item SEMISEMI

State 1571:
interface' -> interface . [ # ]
-- On # accept interface

State 1572:
toplevel_phrase' -> . toplevel_phrase [ # ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TYPE shift to state 967
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SHARP shift to state 1573
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On OPEN shift to state 1033
-- On NEW shift to state 9
-- On MODULE shift to state 1035
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 1492
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1579
-- On DEF shift to state 1506
-- On CLASS shift to state 1508
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On toplevel_phrase shift to state 1580
-- On toplevel_directive shift to state 1581
-- On top_structure shift to state 1583
-- On structure_item shift to state 1585
-- On simple_expr shift to state 640
-- On seq_expr shift to state 1587
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 1573:
toplevel_directive -> SHARP . ident [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP . ident STRING [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP . ident INT [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP . ident val_longident [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 134
-- On LIDENT shift to state 135
-- On ident shift to state 1574

State 1574:
toplevel_directive -> SHARP ident . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP ident . STRING [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP ident . INT [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
toplevel_directive -> SHARP ident . val_longident [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On UIDENT shift to state 2
-- On STRING shift to state 1575
-- On LPAREN shift to state 380
-- On LIDENT shift to state 246
-- On INT shift to state 1576
-- On val_longident shift to state 1577
-- On val_ident shift to state 359
-- On mod_longident shift to state 1578
-- On TYPE reduce production toplevel_directive -> SHARP ident
-- On SHARP reduce production toplevel_directive -> SHARP ident
-- On SEMISEMI reduce production toplevel_directive -> SHARP ident
-- On OPEN reduce production toplevel_directive -> SHARP ident
-- On MODULE reduce production toplevel_directive -> SHARP ident
-- On LET reduce production toplevel_directive -> SHARP ident
-- On EXTERNAL reduce production toplevel_directive -> SHARP ident
-- On EXCEPTION reduce production toplevel_directive -> SHARP ident
-- On EOF reduce production toplevel_directive -> SHARP ident
-- On DEF reduce production toplevel_directive -> SHARP ident
-- On CLASS reduce production toplevel_directive -> SHARP ident

State 1575:
toplevel_directive -> SHARP ident STRING . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production toplevel_directive -> SHARP ident STRING
-- On SHARP reduce production toplevel_directive -> SHARP ident STRING
-- On SEMISEMI reduce production toplevel_directive -> SHARP ident STRING
-- On OPEN reduce production toplevel_directive -> SHARP ident STRING
-- On MODULE reduce production toplevel_directive -> SHARP ident STRING
-- On LET reduce production toplevel_directive -> SHARP ident STRING
-- On EXTERNAL reduce production toplevel_directive -> SHARP ident STRING
-- On EXCEPTION reduce production toplevel_directive -> SHARP ident STRING
-- On EOF reduce production toplevel_directive -> SHARP ident STRING
-- On DEF reduce production toplevel_directive -> SHARP ident STRING
-- On CLASS reduce production toplevel_directive -> SHARP ident STRING

State 1576:
toplevel_directive -> SHARP ident INT . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production toplevel_directive -> SHARP ident INT
-- On SHARP reduce production toplevel_directive -> SHARP ident INT
-- On SEMISEMI reduce production toplevel_directive -> SHARP ident INT
-- On OPEN reduce production toplevel_directive -> SHARP ident INT
-- On MODULE reduce production toplevel_directive -> SHARP ident INT
-- On LET reduce production toplevel_directive -> SHARP ident INT
-- On EXTERNAL reduce production toplevel_directive -> SHARP ident INT
-- On EXCEPTION reduce production toplevel_directive -> SHARP ident INT
-- On EOF reduce production toplevel_directive -> SHARP ident INT
-- On DEF reduce production toplevel_directive -> SHARP ident INT
-- On CLASS reduce production toplevel_directive -> SHARP ident INT

State 1577:
toplevel_directive -> SHARP ident val_longident . [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On TYPE reduce production toplevel_directive -> SHARP ident val_longident
-- On SHARP reduce production toplevel_directive -> SHARP ident val_longident
-- On SEMISEMI reduce production toplevel_directive -> SHARP ident val_longident
-- On OPEN reduce production toplevel_directive -> SHARP ident val_longident
-- On MODULE reduce production toplevel_directive -> SHARP ident val_longident
-- On LET reduce production toplevel_directive -> SHARP ident val_longident
-- On EXTERNAL reduce production toplevel_directive -> SHARP ident val_longident
-- On EXCEPTION reduce production toplevel_directive -> SHARP ident val_longident
-- On EOF reduce production toplevel_directive -> SHARP ident val_longident
-- On DEF reduce production toplevel_directive -> SHARP ident val_longident
-- On CLASS reduce production toplevel_directive -> SHARP ident val_longident

State 1578:
mod_longident -> mod_longident . DOT UIDENT [ DOT ]
val_longident -> mod_longident . DOT val_ident [ TYPE SHARP SEMISEMI OPEN MODULE LET EXTERNAL EXCEPTION EOF DEF CLASS ]
-- On DOT shift to state 379

State 1579:
toplevel_phrase -> EOF . [ # ]
-- On # reduce production toplevel_phrase -> EOF

State 1580:
toplevel_phrase' -> toplevel_phrase . [ # ]
-- On # accept toplevel_phrase

State 1581:
toplevel_phrase -> toplevel_directive . SEMISEMI [ # ]
-- On SEMISEMI shift to state 1582

State 1582:
toplevel_phrase -> toplevel_directive SEMISEMI . [ # ]
-- On # reduce production toplevel_phrase -> toplevel_directive SEMISEMI

State 1583:
toplevel_phrase -> top_structure . SEMISEMI [ # ]
-- On SEMISEMI shift to state 1584

State 1584:
toplevel_phrase -> top_structure SEMISEMI . [ # ]
-- On # reduce production toplevel_phrase -> top_structure SEMISEMI

State 1585:
top_structure -> structure_item . [ SEMISEMI ]
top_structure -> structure_item . top_structure [ SEMISEMI ]
-- On TYPE shift to state 967
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On top_structure shift to state 1586
-- On structure_item shift to state 1585
-- On SEMISEMI reduce production top_structure -> structure_item

State 1586:
top_structure -> structure_item top_structure . [ SEMISEMI ]
-- On SEMISEMI reduce production top_structure -> structure_item top_structure

State 1587:
toplevel_phrase -> seq_expr . SEMISEMI [ # ]
-- On SEMISEMI shift to state 1588

State 1588:
toplevel_phrase -> seq_expr SEMISEMI . [ # ]
-- On # reduce production toplevel_phrase -> seq_expr SEMISEMI

State 1589:
use_file' -> . use_file [ # ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TYPE shift to state 967
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On OPEN shift to state 1033
-- On NEW shift to state 9
-- On MODULE shift to state 1035
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 1492
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1506
-- On CLASS shift to state 1508
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On use_file_tail shift to state 1603
-- On use_file shift to state 1604
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597
-- On simple_expr shift to state 640
-- On seq_expr shift to state 1605
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 1590:
use_file_tail -> SEMISEMI . EOF [ # ]
use_file_tail -> SEMISEMI . seq_expr use_file_tail [ # ]
use_file_tail -> SEMISEMI . structure_item use_file_tail [ # ]
use_file_tail -> SEMISEMI . toplevel_directive use_file_tail [ # ]
-- On WHILE shift to state 1
-- On UIDENT shift to state 2
-- On TYPE shift to state 967
-- On TRY shift to state 3
-- On TRUE shift to state 5
-- On SUBTRACTIVE shift to state 6
-- On STRING shift to state 7
-- On SHARP shift to state 1573
-- On PREFIXOP shift to state 8
-- On PARSER shift to state 275
-- On OPEN shift to state 1033
-- On NEW shift to state 9
-- On MODULE shift to state 1035
-- On MATCH shift to state 282
-- On LPAREN shift to state 16
-- On LOC shift to state 283
-- On LIDENT shift to state 285
-- On LET shift to state 1492
-- On LBRACKETLESS shift to state 292
-- On LBRACKETBAR shift to state 409
-- On LBRACKET shift to state 418
-- On LBRACELESS shift to state 423
-- On LBRACEBAR shift to state 437
-- On LBRACE shift to state 441
-- On LAZY shift to state 603
-- On INT shift to state 258
-- On IF shift to state 624
-- On FUNCTION shift to state 625
-- On FUN shift to state 629
-- On FOR shift to state 632
-- On FLOAT shift to state 259
-- On FALSE shift to state 260
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1591
-- On DEF shift to state 1506
-- On CLASS shift to state 1508
-- On CHAR shift to state 357
-- On BEGIN shift to state 604
-- On ASSERT shift to state 638
-- On val_longident shift to state 608
-- On val_ident shift to state 359
-- On toplevel_directive shift to state 1592
-- On structure_item shift to state 1599
-- On simple_expr shift to state 640
-- On seq_expr shift to state 1601
-- On mod_longident shift to state 378
-- On label shift to state 651
-- On expr_comma_list shift to state 653
-- On expr shift to state 708
-- On constr_longident shift to state 662
-- On constant shift to state 623

State 1591:
use_file_tail -> SEMISEMI EOF . [ # ]
-- On # reduce production use_file_tail -> SEMISEMI EOF

State 1592:
use_file_tail -> SEMISEMI toplevel_directive . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1594
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1593:
use_file_tail -> EOF . [ # ]
-- On # reduce production use_file_tail -> EOF

State 1594:
use_file_tail -> SEMISEMI toplevel_directive use_file_tail . [ # ]
-- On # reduce production use_file_tail -> SEMISEMI toplevel_directive use_file_tail

State 1595:
use_file_tail -> toplevel_directive . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1596
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1596:
use_file_tail -> toplevel_directive use_file_tail . [ # ]
-- On # reduce production use_file_tail -> toplevel_directive use_file_tail

State 1597:
use_file_tail -> structure_item . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1598
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1598:
use_file_tail -> structure_item use_file_tail . [ # ]
-- On # reduce production use_file_tail -> structure_item use_file_tail

State 1599:
use_file_tail -> SEMISEMI structure_item . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1600
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1600:
use_file_tail -> SEMISEMI structure_item use_file_tail . [ # ]
-- On # reduce production use_file_tail -> SEMISEMI structure_item use_file_tail

State 1601:
use_file_tail -> SEMISEMI seq_expr . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1602
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1602:
use_file_tail -> SEMISEMI seq_expr use_file_tail . [ # ]
-- On # reduce production use_file_tail -> SEMISEMI seq_expr use_file_tail

State 1603:
use_file -> use_file_tail . [ # ]
-- On # reduce production use_file -> use_file_tail

State 1604:
use_file' -> use_file . [ # ]
-- On # accept use_file

State 1605:
use_file -> seq_expr . use_file_tail [ # ]
-- On TYPE shift to state 967
-- On SHARP shift to state 1573
-- On SEMISEMI shift to state 1590
-- On OPEN shift to state 1033
-- On MODULE shift to state 1035
-- On LET shift to state 1513
-- On EXTERNAL shift to state 1495
-- On EXCEPTION shift to state 1503
-- On EOF shift to state 1593
-- On DEF shift to state 1516
-- On CLASS shift to state 1508
-- On use_file_tail shift to state 1606
-- On toplevel_directive shift to state 1595
-- On structure_item shift to state 1597

State 1606:
use_file -> seq_expr use_file_tail . [ # ]
-- On # reduce production use_file -> seq_expr use_file_tail

