Grammar has 102 nonterminal symbols, among which 2 start symbols.
Grammar has 85 terminal symbols.
Grammar has 286 productions.
nullable(with_statement) = false
nullable(while_statement) = false
nullable(variable_with_loc) = false
nullable(variable_statement) = false
nullable(variable) = false
nullable(try_statement) = false
nullable(throw_statement) = false
nullable(ternary(post_in_expression_no_statement,assignment_expression)) = false
nullable(ternary(post_in_expression_no_in,assignment_expression_no_in)) = false
nullable(ternary(post_in_expression,assignment_expression)) = false
nullable(switch_statement) = false
nullable(statement_no_semi) = false
nullable(statement_need_semi) = false
nullable(statement) = false
nullable(standalone_expression) = false
nullable(source_element) = false
nullable(separated_or_terminated_list(T_COMMA,object_key_value)) = false
nullable(separated_nonempty_list(T_COMMA,variable)) = false
nullable(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_no_in)))) = false
nullable(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_)))) = false
nullable(separated_nonempty_list(T_COMMA,assignment_expression)) = false
nullable(return_statement) = false
nullable(regex_literal) = false
nullable(property_name) = false
nullable(program) = false
nullable(primary_expression_no_statement) = false
nullable(primary_expression) = false
nullable(pre_in_expression_no_statement) = false
nullable(pre_in_expression) = false
nullable(postfix_operator) = false
nullable(post_in_expression_no_statement) = false
nullable(post_in_expression_no_in) = false
nullable(post_in_expression) = false
nullable(option(variable)) = true
nullable(option(pair(default_clause,list(case_clause)))) = true
nullable(option(label)) = true
nullable(option(initializer_no_in)) = true
nullable(option(initializer_)) = true
nullable(option(finally)) = true
nullable(option(expression_no_in)) = true
nullable(option(expression)) = true
nullable(object_literal) = false
nullable(object_key_value) = false
nullable(numeric_literal) = false
nullable(null_literal) = false
nullable(new_expression_no_statement) = false
nullable(new_expression) = false
nullable(member_expression_no_statement) = false
nullable(member_expression) = false
nullable(loption(separated_nonempty_list(T_COMMA,variable))) = true
nullable(loption(separated_nonempty_list(T_COMMA,assignment_expression))) = true
nullable(list(statement)) = true
nullable(list(source_element)) = true
nullable(list(case_clause)) = true
nullable(left_hand_side_expression_no_statement) = false
nullable(left_hand_side_expression) = false
nullable(labeled_statement) = false
nullable(label) = false
nullable(initializer_no_in) = false
nullable(initializer_) = false
nullable(if_statement) = false
nullable(identifier) = false
nullable(function_expression) = false
nullable(function_declaration) = false
nullable(for_statement) = false
nullable(for_in_statement) = false
nullable(finally) = false
nullable(expression_statement) = false
nullable(expression_no_statement) = false
nullable(expression_no_in) = false
nullable(expression) = false
nullable(empty_statement) = false
nullable(empty) = true
nullable(elison_rev) = false
nullable(elison) = false
nullable(element_list_rev) = false
nullable(element_list) = false
nullable(either(T_SEMICOLON,T_VIRTUAL_SEMICOLON)) = false
nullable(do_while_statement) = false
nullable(default_clause) = false
nullable(debugger_statement) = false
nullable(curly_block(separated_or_terminated_list(T_COMMA,object_key_value))) = false
nullable(curly_block(list(statement))) = false
nullable(curly_block(list(source_element))) = false
nullable(curly_block(empty)) = false
nullable(continue_statement) = false
nullable(conditional_expression_no_statement) = false
nullable(conditional_expression_no_in) = false
nullable(conditional_expression) = false
nullable(catch) = false
nullable(case_clause) = false
nullable(call_expression_no_statement) = false
nullable(call_expression) = false
nullable(break_statement) = false
nullable(boolean_literal) = false
nullable(block) = false
nullable(assignment_operator) = false
nullable(assignment_expression_no_statement) = false
nullable(assignment_expression_no_in) = false
nullable(assignment_expression) = false
nullable(array_literal) = false
nullable(arguments) = false
first(with_statement) = T_WITH
first(while_statement) = T_WHILE
first(variable_with_loc) = T_IDENTIFIER
first(variable_statement) = T_VAR
first(variable) = T_IDENTIFIER
first(try_statement) = T_TRY
first(throw_statement) = T_THROW
first(ternary(post_in_expression_no_statement,assignment_expression)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(ternary(post_in_expression_no_in,assignment_expression_no_in)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(ternary(post_in_expression,assignment_expression)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(switch_statement) = T_SWITCH
first(statement_no_semi) = T_WITH T_WHILE T_TRY T_SWITCH T_SEMICOLON T_LCURLY T_IF T_IDENTIFIER T_FOR
first(statement_need_semi) = T_VOID T_VAR T_TYPEOF T_TRUE T_THROW T_THIS T_STRING T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT
first(statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT
first(standalone_expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(source_element) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT
first(separated_or_terminated_list(T_COMMA,object_key_value)) = T_STRING T_NUMBER T_IDENTIFIER
first(separated_nonempty_list(T_COMMA,variable)) = T_IDENTIFIER
first(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_no_in)))) = T_IDENTIFIER
first(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_)))) = T_IDENTIFIER
first(separated_nonempty_list(T_COMMA,assignment_expression)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(return_statement) = T_RETURN
first(regex_literal) = T_REGEX
first(property_name) = T_STRING T_NUMBER T_IDENTIFIER
first(program) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT EOF
first(primary_expression_no_statement) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE
first(primary_expression) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE
first(pre_in_expression_no_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(pre_in_expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(postfix_operator) = T_INCR_NB T_DECR_NB
first(post_in_expression_no_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(post_in_expression_no_in) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(post_in_expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(option(variable)) = T_IDENTIFIER
first(option(pair(default_clause,list(case_clause)))) = T_DEFAULT
first(option(label)) = T_IDENTIFIER
first(option(initializer_no_in)) = T_ASSIGN
first(option(initializer_)) = T_ASSIGN
first(option(finally)) = T_FINALLY
first(option(expression_no_in)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(option(expression)) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(object_literal) = T_LCURLY
first(object_key_value) = T_STRING T_NUMBER T_IDENTIFIER
first(numeric_literal) = T_NUMBER
first(null_literal) = T_NULL
first(new_expression_no_statement) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE
first(new_expression) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE
first(member_expression_no_statement) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE
first(member_expression) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE
first(loption(separated_nonempty_list(T_COMMA,variable))) = T_IDENTIFIER
first(loption(separated_nonempty_list(T_COMMA,assignment_expression))) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(list(statement)) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT
first(list(source_element)) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT
first(list(case_clause)) = T_CASE
first(left_hand_side_expression_no_statement) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE
first(left_hand_side_expression) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE
first(labeled_statement) = T_IDENTIFIER
first(label) = T_IDENTIFIER
first(initializer_no_in) = T_ASSIGN
first(initializer_) = T_ASSIGN
first(if_statement) = T_IF
first(identifier) = T_IDENTIFIER
first(function_expression) = T_FUNCTION
first(function_declaration) = T_FUNCTION
first(for_statement) = T_FOR
first(for_in_statement) = T_FOR
first(finally) = T_FINALLY
first(expression_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(expression_no_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(expression_no_in) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(empty_statement) = T_SEMICOLON
first(empty) = 
first(elison_rev) = T_COMMA
first(elison) = T_COMMA
first(element_list_rev) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_COMMA T_BIT_NOT
first(element_list) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_COMMA T_BIT_NOT
first(either(T_SEMICOLON,T_VIRTUAL_SEMICOLON)) = T_VIRTUAL_SEMICOLON T_SEMICOLON
first(do_while_statement) = T_DO
first(default_clause) = T_DEFAULT
first(debugger_statement) = T_DEBUGGER
first(curly_block(separated_or_terminated_list(T_COMMA,object_key_value))) = T_LCURLY
first(curly_block(list(statement))) = T_LCURLY
first(curly_block(list(source_element))) = T_LCURLY
first(curly_block(empty)) = T_LCURLY
first(continue_statement) = T_CONTINUE
first(conditional_expression_no_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(conditional_expression_no_in) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(conditional_expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(catch) = T_CATCH
first(case_clause) = T_CASE
first(call_expression_no_statement) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LBRACKET T_IDENTIFIER T_FALSE
first(call_expression) = T_TRUE T_THIS T_STRING T_REGEX T_NUMBER T_NULL T_NEW T_LPAREN T_LCURLY T_LBRACKET T_IDENTIFIER T_FUNCTION T_FALSE
first(break_statement) = T_BREAK
first(boolean_literal) = T_TRUE T_FALSE
first(block) = T_LCURLY
first(assignment_operator) = T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_PLUS_ASSIGN T_MULT_ASSIGN T_MOD_ASSIGN T_MINUS_ASSIGN T_LSHIFT_ASSIGN T_DIV_ASSIGN T_BIT_XOR_ASSIGN T_BIT_OR_ASSIGN T_BIT_AND_ASSIGN T_ASSIGN
first(assignment_expression_no_statement) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(assignment_expression_no_in) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(assignment_expression) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
first(array_literal) = T_LBRACKET
first(arguments) = T_LPAREN
minimal(with_statement) = (* 5 *) T_WITH T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(while_statement) = (* 5 *) T_WHILE T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(variable_with_loc) = (* 1 *) T_IDENTIFIER
minimal(variable_statement) = (* 2 *) T_VAR T_IDENTIFIER
minimal(variable) = (* 1 *) T_IDENTIFIER
minimal(try_statement) = (* 6 *) T_TRY T_LCURLY T_RCURLY T_FINALLY T_LCURLY T_RCURLY
minimal(throw_statement) = (* 2 *) T_THROW T_THIS
minimal(ternary(post_in_expression_no_statement,assignment_expression)) = (* 5 *) T_THIS T_PLING T_THIS T_COLON T_THIS
minimal(ternary(post_in_expression_no_in,assignment_expression_no_in)) = (* 5 *) T_THIS T_PLING T_THIS T_COLON T_THIS
minimal(ternary(post_in_expression,assignment_expression)) = (* 5 *) T_THIS T_PLING T_THIS T_COLON T_THIS
minimal(switch_statement) = (* 6 *) T_SWITCH T_LPAREN T_THIS T_RPAREN T_LCURLY T_RCURLY
minimal(statement_no_semi) = (* 1 *) T_SEMICOLON
minimal(statement_need_semi) = (* 1 *) T_THIS
minimal(statement) = (* 1 *) T_SEMICOLON
minimal(standalone_expression) = (* 2 *) T_THIS EOF
minimal(source_element) = (* 1 *) T_SEMICOLON
minimal(separated_or_terminated_list(T_COMMA,object_key_value)) = (* 3 *) T_IDENTIFIER T_COLON T_THIS
minimal(separated_nonempty_list(T_COMMA,variable)) = (* 1 *) T_IDENTIFIER
minimal(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_no_in)))) = (* 1 *) T_IDENTIFIER
minimal(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_)))) = (* 1 *) T_IDENTIFIER
minimal(separated_nonempty_list(T_COMMA,assignment_expression)) = (* 1 *) T_THIS
minimal(return_statement) = (* 1 *) T_RETURN
minimal(regex_literal) = (* 1 *) T_REGEX
minimal(property_name) = (* 1 *) T_IDENTIFIER
minimal(program) = (* 1 *) EOF
minimal(primary_expression_no_statement) = (* 1 *) T_THIS
minimal(primary_expression) = (* 1 *) T_THIS
minimal(pre_in_expression_no_statement) = (* 1 *) T_THIS
minimal(pre_in_expression) = (* 1 *) T_THIS
minimal(postfix_operator) = (* 1 *) T_INCR_NB
minimal(post_in_expression_no_statement) = (* 1 *) T_THIS
minimal(post_in_expression_no_in) = (* 1 *) T_THIS
minimal(post_in_expression) = (* 1 *) T_THIS
minimal(option(variable)) = (* 0 *)
minimal(option(pair(default_clause,list(case_clause)))) = (* 0 *)
minimal(option(label)) = (* 0 *)
minimal(option(initializer_no_in)) = (* 0 *)
minimal(option(initializer_)) = (* 0 *)
minimal(option(finally)) = (* 0 *)
minimal(option(expression_no_in)) = (* 0 *)
minimal(option(expression)) = (* 0 *)
minimal(object_literal) = (* 2 *) T_LCURLY T_RCURLY
minimal(object_key_value) = (* 3 *) T_IDENTIFIER T_COLON T_THIS
minimal(numeric_literal) = (* 1 *) T_NUMBER
minimal(null_literal) = (* 1 *) T_NULL
minimal(new_expression_no_statement) = (* 1 *) T_THIS
minimal(new_expression) = (* 1 *) T_THIS
minimal(member_expression_no_statement) = (* 1 *) T_THIS
minimal(member_expression) = (* 1 *) T_THIS
minimal(loption(separated_nonempty_list(T_COMMA,variable))) = (* 0 *)
minimal(loption(separated_nonempty_list(T_COMMA,assignment_expression))) = (* 0 *)
minimal(list(statement)) = (* 0 *)
minimal(list(source_element)) = (* 0 *)
minimal(list(case_clause)) = (* 0 *)
minimal(left_hand_side_expression_no_statement) = (* 1 *) T_THIS
minimal(left_hand_side_expression) = (* 1 *) T_THIS
minimal(labeled_statement) = (* 3 *) T_IDENTIFIER T_COLON T_SEMICOLON
minimal(label) = (* 1 *) T_IDENTIFIER
minimal(initializer_no_in) = (* 2 *) T_ASSIGN T_THIS
minimal(initializer_) = (* 2 *) T_ASSIGN T_THIS
minimal(if_statement) = (* 5 *) T_IF T_LPAREN T_THIS T_RPAREN T_SEMICOLON
minimal(identifier) = (* 1 *) T_IDENTIFIER
minimal(function_expression) = (* 5 *) T_FUNCTION T_LPAREN T_RPAREN T_LCURLY T_RCURLY
minimal(function_declaration) = (* 6 *) T_FUNCTION T_IDENTIFIER T_LPAREN T_RPAREN T_LCURLY T_RCURLY
minimal(for_statement) = (* 6 *) T_FOR T_LPAREN T_SEMICOLON T_SEMICOLON T_RPAREN T_SEMICOLON
minimal(for_in_statement) = (* 7 *) T_FOR T_LPAREN T_THIS T_IN T_THIS T_RPAREN T_SEMICOLON
minimal(finally) = (* 3 *) T_FINALLY T_LCURLY T_RCURLY
minimal(expression_statement) = (* 1 *) T_THIS
minimal(expression_no_statement) = (* 1 *) T_THIS
minimal(expression_no_in) = (* 1 *) T_THIS
minimal(expression) = (* 1 *) T_THIS
minimal(empty_statement) = (* 1 *) T_SEMICOLON
minimal(empty) = (* 0 *)
minimal(elison_rev) = (* 1 *) T_COMMA
minimal(elison) = (* 1 *) T_COMMA
minimal(element_list_rev) = (* 1 *) T_THIS
minimal(element_list) = (* 1 *) T_THIS
minimal(either(T_SEMICOLON,T_VIRTUAL_SEMICOLON)) = (* 1 *) T_SEMICOLON
minimal(do_while_statement) = (* 6 *) T_DO T_SEMICOLON T_WHILE T_LPAREN T_THIS T_RPAREN
minimal(default_clause) = (* 2 *) T_DEFAULT T_COLON
minimal(debugger_statement) = (* 1 *) T_DEBUGGER
minimal(curly_block(separated_or_terminated_list(T_COMMA,object_key_value))) = (* 5 *) T_LCURLY T_IDENTIFIER T_COLON T_THIS T_RCURLY
minimal(curly_block(list(statement))) = (* 2 *) T_LCURLY T_RCURLY
minimal(curly_block(list(source_element))) = (* 2 *) T_LCURLY T_RCURLY
minimal(curly_block(empty)) = (* 2 *) T_LCURLY T_RCURLY
minimal(continue_statement) = (* 1 *) T_CONTINUE
minimal(conditional_expression_no_statement) = (* 1 *) T_THIS
minimal(conditional_expression_no_in) = (* 1 *) T_THIS
minimal(conditional_expression) = (* 1 *) T_THIS
minimal(catch) = (* 6 *) T_CATCH T_LPAREN T_IDENTIFIER T_RPAREN T_LCURLY T_RCURLY
minimal(case_clause) = (* 3 *) T_CASE T_THIS T_COLON
minimal(call_expression_no_statement) = (* 3 *) T_THIS T_LPAREN T_RPAREN
minimal(call_expression) = (* 3 *) T_THIS T_LPAREN T_RPAREN
minimal(break_statement) = (* 1 *) T_BREAK
minimal(boolean_literal) = (* 1 *) T_TRUE
minimal(block) = (* 2 *) T_LCURLY T_RCURLY
minimal(assignment_operator) = (* 1 *) T_ASSIGN
minimal(assignment_expression_no_statement) = (* 1 *) T_THIS
minimal(assignment_expression_no_in) = (* 1 *) T_THIS
minimal(assignment_expression) = (* 1 *) T_THIS
minimal(array_literal) = (* 2 *) T_LBRACKET T_RBRACKET
minimal(arguments) = (* 2 *) T_LPAREN T_RPAREN
follow(with_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(while_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(variable_with_loc) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(variable_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(variable) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT T_ASSIGN EOF
follow(try_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(throw_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(ternary(post_in_expression_no_statement,assignment_expression)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(ternary(post_in_expression_no_in,assignment_expression_no_in)) = T_SEMICOLON T_IN T_COMMA T_COLON
follow(ternary(post_in_expression,assignment_expression)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_NOT EOF
follow(switch_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(statement_no_semi) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(statement_need_semi) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(standalone_expression) = #
follow(source_element) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT EOF
follow(separated_or_terminated_list(T_COMMA,object_key_value)) = T_RCURLY
follow(separated_nonempty_list(T_COMMA,variable)) = T_RPAREN
follow(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_no_in)))) = T_SEMICOLON
follow(separated_nonempty_list(T_COMMA,pair(variable,option(initializer_)))) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(separated_nonempty_list(T_COMMA,assignment_expression)) = T_RPAREN
follow(return_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(regex_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(property_name) = T_COLON
follow(program) = #
follow(primary_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(primary_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(pre_in_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RETURN T_REGEX T_RCURLY T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT T_MOD T_MINUS T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR T_BIT_OR T_BIT_NOT T_BIT_AND T_AND EOF
follow(pre_in_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT T_MOD T_MINUS T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR T_BIT_OR T_BIT_NOT T_BIT_AND T_AND EOF
follow(postfix_operator) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT T_MOD T_MINUS T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR T_BIT_OR T_BIT_NOT T_BIT_AND T_AND EOF
follow(post_in_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MINUS T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR T_BIT_OR T_BIT_NOT T_BIT_AND T_AND EOF
follow(post_in_expression_no_in) = T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_PLING T_OR T_NOT_EQUAL T_LESS_THAN_EQUAL T_LESS_THAN T_INSTANCEOF T_IN T_GREATER_THAN_EQUAL T_GREATER_THAN T_EQUAL T_COMMA T_COLON T_BIT_XOR T_BIT_OR T_BIT_AND T_AND
follow(post_in_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MINUS T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR T_BIT_OR T_BIT_NOT T_BIT_AND T_AND EOF
follow(option(variable)) = T_LPAREN
follow(option(pair(default_clause,list(case_clause)))) = T_RCURLY
follow(option(label)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(option(initializer_no_in)) = T_SEMICOLON T_IN T_COMMA
follow(option(initializer_)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(option(finally)) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(option(expression_no_in)) = T_SEMICOLON
follow(option(expression)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(object_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(object_key_value) = T_RCURLY T_COMMA
follow(numeric_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(null_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(new_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RETURN T_REGEX T_RCURLY T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(new_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(member_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RETURN T_REGEX T_RCURLY T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(member_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(loption(separated_nonempty_list(T_COMMA,variable))) = T_RPAREN
follow(loption(separated_nonempty_list(T_COMMA,assignment_expression))) = T_RPAREN
follow(list(statement)) = T_RCURLY T_DEFAULT T_CASE
follow(list(source_element)) = T_RCURLY EOF
follow(list(case_clause)) = T_RCURLY T_DEFAULT
follow(left_hand_side_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RETURN T_REGEX T_RCURLY T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(left_hand_side_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(labeled_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(label) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COLON T_CASE T_BREAK T_BIT_NOT EOF
follow(initializer_no_in) = T_SEMICOLON T_IN T_COMMA
follow(initializer_) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(if_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(identifier) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(function_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(function_declaration) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_DO T_DELETE T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_BREAK T_BIT_NOT EOF
follow(for_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(for_in_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(finally) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(expression_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(expression_no_in) = T_SEMICOLON T_COMMA
follow(expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_NOT EOF
follow(empty_statement) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(empty) = T_RCURLY
follow(elison_rev) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_COMMA T_BIT_NOT
follow(elison) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_COMMA T_BIT_NOT
follow(element_list_rev) = T_RBRACKET T_COMMA
follow(element_list) = T_RBRACKET
follow(either(T_SEMICOLON,T_VIRTUAL_SEMICOLON)) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(do_while_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(default_clause) = T_RCURLY T_CASE
follow(debugger_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(curly_block(separated_or_terminated_list(T_COMMA,object_key_value))) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(curly_block(list(statement))) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FINALLY T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CATCH T_CASE T_BREAK T_BIT_NOT EOF
follow(curly_block(list(source_element))) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(curly_block(empty)) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(continue_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(conditional_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(conditional_expression_no_in) = T_SEMICOLON T_IN T_COMMA T_COLON
follow(conditional_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_NOT EOF
follow(catch) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FINALLY T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(case_clause) = T_RCURLY T_DEFAULT T_CASE
follow(call_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RETURN T_REGEX T_RCURLY T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(call_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(break_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CASE T_BREAK T_BIT_NOT EOF
follow(boolean_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(block) = T_WITH T_WHILE T_VOID T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FINALLY T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_CATCH T_CASE T_BREAK T_BIT_NOT EOF
follow(assignment_operator) = T_VOID T_TYPEOF T_TRUE T_THIS T_STRING T_REGEX T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IDENTIFIER T_FUNCTION T_FALSE T_DELETE T_DECR_NB T_DECR T_BIT_NOT
follow(assignment_expression_no_statement) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RETURN T_REGEX T_RCURLY T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_CASE T_BREAK T_BIT_NOT EOF
follow(assignment_expression_no_in) = T_SEMICOLON T_IN T_COMMA T_COLON
follow(assignment_expression) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_SEMICOLON T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS T_NUMBER T_NULL T_NOT T_NEW T_MINUS T_LPAREN T_LCURLY T_LBRACKET T_INCR_NB T_INCR T_IF T_IDENTIFIER T_FUNCTION T_FOR T_FALSE T_ELSE T_DO T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_NOT EOF
follow(array_literal) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
follow(arguments) = T_WITH T_WHILE T_VOID T_VIRTUAL_SEMICOLON T_VAR T_TYPEOF T_TRY T_TRUE T_THROW T_THIS T_SWITCH T_STRING T_STRICT_NOT_EQUAL T_STRICT_EQUAL T_SEMICOLON T_RSHIFT_ASSIGN T_RSHIFT3_ASSIGN T_RSHIFT3 T_RSHIFT T_RPAREN T_RETURN T_REGEX T_RCURLY T_RBRACKET T_PLUS_ASSIGN T_PLUS T_PLING T_PERIOD T_OR T_NUMBER T_NULL T_NOT_EQUAL T_NOT T_NEW T_MULT_ASSIGN T_MULT T_MOD_ASSIGN T_MOD T_MINUS_ASSIGN T_MINUS T_LSHIFT_ASSIGN T_LSHIFT T_LPAREN T_LESS_THAN_EQUAL T_LESS_THAN T_LCURLY T_LBRACKET T_INSTANCEOF T_INCR_NB T_INCR T_IN T_IF T_IDENTIFIER T_GREATER_THAN_EQUAL T_GREATER_THAN T_FUNCTION T_FOR T_FALSE T_EQUAL T_ELSE T_DO T_DIV_ASSIGN T_DIV T_DELETE T_DEFAULT T_DECR_NB T_DECR T_DEBUGGER T_CONTINUE T_COMMA T_COLON T_CASE T_BREAK T_BIT_XOR_ASSIGN T_BIT_XOR T_BIT_OR_ASSIGN T_BIT_OR T_BIT_NOT T_BIT_AND_ASSIGN T_BIT_AND T_ASSIGN T_AND EOF
Built an LR(0) automaton with 503 states.
The grammar is not SLR(1) -- 103 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 503 states.
1041 shift/reduce conflicts were silently solved.
Warning: 12 states have shift/reduce conflicts.
Warning: 47 shift/reduce conflicts were arbitrarily resolved.
184 out of 503 states have a default reduction.
225 out of 503 states are represented.
0 out of 191 symbols keep track of their start position.
0 out of 191 symbols keep track of their end position.
125 out of 288 productions exploit shiftreduce optimization.
0 out of 503 states can peek at an error.
1402 functions before inlining, 180 functions after inlining.
