Grammar has 3 nonterminal symbols, among which 1 start symbols.
Grammar has 3 terminal symbols.
Grammar has 6 productions.
nullable(plus) = false
nullable(indir) = false
nullable(expr) = false
first(plus) = PLUS INT
first(indir) = PLUS INT
first(expr) = PLUS INT
minimal(plus) = (* 3 *) INT PLUS INT
minimal(indir) = (* 3 *) INT PLUS INT
minimal(expr) = (* 1 *) INT
follow(plus) = PLUS MINUS INT #
follow(indir) = PLUS MINUS INT #
follow(expr) = PLUS MINUS INT #
Built an LR(0) automaton with 14 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 15 states.
Warning: 2 states have shift/reduce conflicts.
Warning: 2 states have reduce/reduce conflicts.
Warning: 2 shift/reduce conflicts were arbitrarily resolved.
Warning: 2 reduce/reduce conflicts were arbitrarily resolved.
Warning: 7 end-of-stream conflicts were arbitrarily resolved.
File "ketti.mly", line 5, characters 0-4:
Warning: symbol expr is never accepted.
Warning: in total, 1 production is never reduced.
3 out of 15 states have a default reduction.
4 out of 15 states are represented.
0 out of 9 symbols keep track of their start position.
0 out of 9 symbols keep track of their end position.
3 out of 7 productions exploit shiftreduce optimization.
28 functions before inlining, 8 functions after inlining.
