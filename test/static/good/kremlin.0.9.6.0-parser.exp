Grammar has 16 nonterminal symbols, among which 4 start symbols.
Grammar has 14 terminal symbols.
Grammar has 30 productions.
nullable(warn_error_list) = false
nullable(warn_error) = false
nullable(separated_nonempty_list(PLUS,api)) = true
nullable(separated_nonempty_list(DOT,uident)) = false
nullable(separated_nonempty_list(COMMA,pat)) = false
nullable(range) = false
nullable(pat) = false
nullable(nonempty_list(warn_error)) = false
nullable(mident) = true
nullable(loption(separated_nonempty_list(DOT,uident))) = true
nullable(loption(separated_nonempty_list(COMMA,pat))) = true
nullable(lid) = false
nullable(flag) = false
nullable(drop) = false
nullable(bundle) = false
nullable(api) = true
first(warn_error_list) = PLUS MINUS AT
first(warn_error) = PLUS MINUS AT
first(separated_nonempty_list(PLUS,api)) = UIDENT PUBLIC PLUS
first(separated_nonempty_list(DOT,uident)) = UIDENT
first(separated_nonempty_list(COMMA,pat)) = UIDENT STAR
first(range) = INT
first(pat) = UIDENT STAR
first(nonempty_list(warn_error)) = PLUS MINUS AT
first(mident) = UIDENT
first(loption(separated_nonempty_list(DOT,uident))) = UIDENT
first(loption(separated_nonempty_list(COMMA,pat))) = UIDENT STAR
first(lid) = UIDENT LIDENT
first(flag) = PLUS MINUS AT
first(drop) = UIDENT STAR EOF
first(bundle) = UIDENT STAR PUBLIC PLUS EQUALS
first(api) = UIDENT PUBLIC
minimal(warn_error_list) = (* 3 *) AT INT EOF
minimal(warn_error) = (* 2 *) AT INT
minimal(separated_nonempty_list(PLUS,api)) = (* 0 *)
minimal(separated_nonempty_list(DOT,uident)) = (* 1 *) UIDENT
minimal(separated_nonempty_list(COMMA,pat)) = (* 1 *) STAR
minimal(range) = (* 1 *) INT
minimal(pat) = (* 1 *) STAR
minimal(nonempty_list(warn_error)) = (* 2 *) AT INT
minimal(mident) = (* 0 *)
minimal(loption(separated_nonempty_list(DOT,uident))) = (* 0 *)
minimal(loption(separated_nonempty_list(COMMA,pat))) = (* 0 *)
minimal(lid) = (* 1 *) LIDENT
minimal(flag) = (* 1 *) AT
minimal(drop) = (* 1 *) EOF
minimal(bundle) = (* 2 *) STAR EOF
minimal(api) = (* 0 *)
follow(warn_error_list) = #
follow(warn_error) = PLUS MINUS EOF AT
follow(separated_nonempty_list(PLUS,api)) = EQUALS
follow(separated_nonempty_list(DOT,uident)) = RPAREN PLUS EQUALS
follow(separated_nonempty_list(COMMA,pat)) = EOF
follow(range) = PLUS MINUS EOF AT
follow(pat) = EOF COMMA
follow(nonempty_list(warn_error)) = EOF
follow(mident) = RPAREN PLUS EQUALS
follow(loption(separated_nonempty_list(DOT,uident))) = RPAREN PLUS EQUALS
follow(loption(separated_nonempty_list(COMMA,pat))) = EOF
follow(lid) = #
follow(flag) = INT
follow(drop) = #
follow(bundle) = #
follow(api) = PLUS EQUALS
Built an LR(0) automaton with 56 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 56 states.
26 out of 56 states have a default reduction.
13 out of 56 states are represented.
0 out of 36 symbols keep track of their start position.
0 out of 36 symbols keep track of their end position.
20 out of 34 productions exploit shiftreduce optimization.
114 functions before inlining, 32 functions after inlining.
