State 0:
## Known stack suffix:
##
## LR(1) items:
axioms' -> . axioms [ # ]
## Transitions:
-- On IDENT shift to state 1
-- On inv shift to state 4
-- On axioms shift to state 35
-- On axiom_rule_list shift to state 36
-- On axiom_rule shift to state 37
## Reductions:
-- On #
--   reduce production axioms ->
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production axioms ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1:
## Known stack suffix:
## IDENT
## LR(1) items:
inv -> IDENT . [ SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW # ]
inv -> IDENT . DOUBLECOLON IDENT [ SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On DOUBLECOLON shift to state 2
## Reductions:
-- On SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW #
--   reduce production inv -> IDENT
** End-of-stream conflict on SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT DOUBLECOLON CONC_ARROW
**   There is a tension between
**   (1) reducing production inv -> IDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 2:
## Known stack suffix:
## IDENT DOUBLECOLON
## LR(1) items:
inv -> IDENT DOUBLECOLON . IDENT [ SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On IDENT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## IDENT DOUBLECOLON IDENT
## LR(1) items:
inv -> IDENT DOUBLECOLON IDENT . [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW COMMA CLOSE_BRACK # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW COMMA CLOSE_BRACK #
--   reduce production inv -> IDENT DOUBLECOLON IDENT
** End-of-stream conflict on SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW COMMA CLOSE_BRACK
**   There is a tension between
**   (1) reducing production inv -> IDENT DOUBLECOLON IDENT
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 4:
## Known stack suffix:
## inv
## LR(1) items:
axiom_rule -> inv . axiom_cases [ IDENT # ]
## Transitions:
-- On OPEN_BRACK shift to state 5
-- On axiom_cases shift to state 34
## Reductions:
-- On IDENT #
--   reduce production axiom_cases ->
** End-of-stream conflict on OPEN_BRACK IDENT
**   There is a tension between
**   (1) reducing production axiom_cases ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 5:
## Known stack suffix:
## OPEN_BRACK
## LR(1) items:
axiom_cases -> OPEN_BRACK . axiom_case_list CLOSE_BRACK [ IDENT # ]
## Transitions:
-- On NUMBER shift to state 6
-- On axiom_case_list shift to state 29
-- On axiom_case shift to state 31
## Reductions:

State 6:
## Known stack suffix:
## NUMBER
## LR(1) items:
axiom_case -> NUMBER . COLON maybe_empty_axiom_tag_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On COLON shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## NUMBER COLON
## LR(1) items:
axiom_case -> NUMBER COLON . maybe_empty_axiom_tag_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On maybe_empty_axiom_tag_list shift to state 16
-- On inv_group shift to state 17
-- On inv shift to state 23
-- On axiom_list shift to state 28
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production maybe_empty_axiom_tag_list ->

State 8:
## Known stack suffix:
## IDENT
## LR(1) items:
inv -> IDENT . [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
inv -> IDENT . DOUBLECOLON IDENT [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
inv_group -> IDENT . DOUBLECOLON OPEN_BRACE ident_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
## Transitions:
-- On DOUBLECOLON shift to state 9
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK
--   reduce production inv -> IDENT

State 9:
## Known stack suffix:
## IDENT DOUBLECOLON
## LR(1) items:
inv -> IDENT DOUBLECOLON . IDENT [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
inv_group -> IDENT DOUBLECOLON . OPEN_BRACE ident_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
## Transitions:
-- On OPEN_BRACE shift to state 10
-- On IDENT shift to state 3
## Reductions:

State 10:
## Known stack suffix:
## IDENT DOUBLECOLON OPEN_BRACE
## LR(1) items:
inv_group -> IDENT DOUBLECOLON OPEN_BRACE . ident_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 11
-- On ident_list shift to state 14
## Reductions:

State 11:
## Known stack suffix:
## IDENT
## LR(1) items:
ident_list -> IDENT . [ CLOSE_BRACE BAR ]
ident_list -> IDENT . COMMA ident_list [ CLOSE_BRACE BAR ]
## Transitions:
-- On COMMA shift to state 12
## Reductions:
-- On CLOSE_BRACE BAR
--   reduce production ident_list -> IDENT

State 12:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
ident_list -> IDENT COMMA . ident_list [ CLOSE_BRACE BAR ]
## Transitions:
-- On IDENT shift to state 11
-- On ident_list shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## IDENT COMMA ident_list
## LR(1) items:
ident_list -> IDENT COMMA ident_list . [ CLOSE_BRACE BAR ]
## Transitions:
## Reductions:
-- On CLOSE_BRACE BAR
--   reduce production ident_list -> IDENT COMMA ident_list

State 14:
## Known stack suffix:
## IDENT DOUBLECOLON OPEN_BRACE ident_list
## LR(1) items:
inv_group -> IDENT DOUBLECOLON OPEN_BRACE ident_list . CLOSE_BRACE [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
## Transitions:
-- On CLOSE_BRACE shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## IDENT DOUBLECOLON OPEN_BRACE ident_list CLOSE_BRACE
## LR(1) items:
inv_group -> IDENT DOUBLECOLON OPEN_BRACE ident_list CLOSE_BRACE . [ SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_PAREN OPEN_BRACE CONC_ARROW COMMA CLOSE_BRACK
--   reduce production inv_group -> IDENT DOUBLECOLON OPEN_BRACE ident_list CLOSE_BRACE

State 16:
## Known stack suffix:
## NUMBER COLON maybe_empty_axiom_tag_list
## LR(1) items:
axiom_case -> NUMBER COLON maybe_empty_axiom_tag_list . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production axiom_case -> NUMBER COLON maybe_empty_axiom_tag_list

State 17:
## Known stack suffix:
## inv_group
## LR(1) items:
axiom_list -> inv_group . axiom_kind [ SEMICOLON CLOSE_BRACK ]
axiom_list -> inv_group . axiom_kind COMMA axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On OPEN_PAREN shift to state 18
-- On axiom_kind shift to state 21
## Reductions:
-- On SEMICOLON COMMA CLOSE_BRACK
--   reduce production axiom_kind ->

State 18:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
axiom_kind -> OPEN_PAREN . AXIOM_FORALL CLOSE_PAREN [ SEMICOLON COMMA CLOSE_BRACK ]
## Transitions:
-- On AXIOM_FORALL shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## OPEN_PAREN AXIOM_FORALL
## LR(1) items:
axiom_kind -> OPEN_PAREN AXIOM_FORALL . CLOSE_PAREN [ SEMICOLON COMMA CLOSE_BRACK ]
## Transitions:
-- On CLOSE_PAREN shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## OPEN_PAREN AXIOM_FORALL CLOSE_PAREN
## LR(1) items:
axiom_kind -> OPEN_PAREN AXIOM_FORALL CLOSE_PAREN . [ SEMICOLON COMMA CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON COMMA CLOSE_BRACK
--   reduce production axiom_kind -> OPEN_PAREN AXIOM_FORALL CLOSE_PAREN

State 21:
## Known stack suffix:
## inv_group axiom_kind
## LR(1) items:
axiom_list -> inv_group axiom_kind . [ SEMICOLON CLOSE_BRACK ]
axiom_list -> inv_group axiom_kind . COMMA axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On COMMA shift to state 22
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production axiom_list -> inv_group axiom_kind

State 22:
## Known stack suffix:
## inv_group axiom_kind COMMA
## LR(1) items:
axiom_list -> inv_group axiom_kind COMMA . axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On inv_group shift to state 17
-- On inv shift to state 23
-- On axiom_list shift to state 27
## Reductions:

State 23:
## Known stack suffix:
## inv
## LR(1) items:
axiom_list -> inv . axiom_kind [ SEMICOLON CLOSE_BRACK ]
axiom_list -> inv . axiom_kind COMMA axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On OPEN_PAREN shift to state 18
-- On axiom_kind shift to state 24
## Reductions:
-- On SEMICOLON COMMA CLOSE_BRACK
--   reduce production axiom_kind ->

State 24:
## Known stack suffix:
## inv axiom_kind
## LR(1) items:
axiom_list -> inv axiom_kind . [ SEMICOLON CLOSE_BRACK ]
axiom_list -> inv axiom_kind . COMMA axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On COMMA shift to state 25
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production axiom_list -> inv axiom_kind

State 25:
## Known stack suffix:
## inv axiom_kind COMMA
## LR(1) items:
axiom_list -> inv axiom_kind COMMA . axiom_list [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On inv_group shift to state 17
-- On inv shift to state 23
-- On axiom_list shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## inv axiom_kind COMMA axiom_list
## LR(1) items:
axiom_list -> inv axiom_kind COMMA axiom_list . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production axiom_list -> inv axiom_kind COMMA axiom_list

State 27:
## Known stack suffix:
## inv_group axiom_kind COMMA axiom_list
## LR(1) items:
axiom_list -> inv_group axiom_kind COMMA axiom_list . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production axiom_list -> inv_group axiom_kind COMMA axiom_list

State 28:
## Known stack suffix:
## axiom_list
## LR(1) items:
maybe_empty_axiom_tag_list -> axiom_list . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production maybe_empty_axiom_tag_list -> axiom_list

State 29:
## Known stack suffix:
## OPEN_BRACK axiom_case_list
## LR(1) items:
axiom_cases -> OPEN_BRACK axiom_case_list . CLOSE_BRACK [ IDENT # ]
## Transitions:
-- On CLOSE_BRACK shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## OPEN_BRACK axiom_case_list CLOSE_BRACK
## LR(1) items:
axiom_cases -> OPEN_BRACK axiom_case_list CLOSE_BRACK . [ IDENT # ]
## Transitions:
## Reductions:
-- On IDENT #
--   reduce production axiom_cases -> OPEN_BRACK axiom_case_list CLOSE_BRACK
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production axiom_cases -> OPEN_BRACK axiom_case_list CLOSE_BRACK
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 31:
## Known stack suffix:
## axiom_case
## LR(1) items:
axiom_case_list -> axiom_case . [ CLOSE_BRACK ]
axiom_case_list -> axiom_case . SEMICOLON axiom_case_list [ CLOSE_BRACK ]
## Transitions:
-- On SEMICOLON shift to state 32
## Reductions:
-- On CLOSE_BRACK
--   reduce production axiom_case_list -> axiom_case

State 32:
## Known stack suffix:
## axiom_case SEMICOLON
## LR(1) items:
axiom_case_list -> axiom_case SEMICOLON . axiom_case_list [ CLOSE_BRACK ]
## Transitions:
-- On NUMBER shift to state 6
-- On axiom_case_list shift to state 33
-- On axiom_case shift to state 31
## Reductions:

State 33:
## Known stack suffix:
## axiom_case SEMICOLON axiom_case_list
## LR(1) items:
axiom_case_list -> axiom_case SEMICOLON axiom_case_list . [ CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On CLOSE_BRACK
--   reduce production axiom_case_list -> axiom_case SEMICOLON axiom_case_list

State 34:
## Known stack suffix:
## inv axiom_cases
## LR(1) items:
axiom_rule -> inv axiom_cases . [ IDENT # ]
## Transitions:
## Reductions:
-- On IDENT #
--   reduce production axiom_rule -> inv axiom_cases
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production axiom_rule -> inv axiom_cases
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 35:
## Known stack suffix:
## axioms
## LR(1) items:
axioms' -> axioms . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept axioms

State 36:
## Known stack suffix:
## axiom_rule_list
## LR(1) items:
axioms -> axiom_rule_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production axioms -> axiom_rule_list

State 37:
## Known stack suffix:
## axiom_rule
## LR(1) items:
axiom_rule_list -> axiom_rule . [ # ]
axiom_rule_list -> axiom_rule . axiom_rule_list [ # ]
## Transitions:
-- On IDENT shift to state 1
-- On inv shift to state 4
-- On axiom_rule_list shift to state 38
-- On axiom_rule shift to state 37
## Reductions:
-- On #
--   reduce production axiom_rule_list -> axiom_rule
** End-of-stream conflict on IDENT
**   There is a tension between
**   (1) reducing production axiom_rule_list -> axiom_rule
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 38:
## Known stack suffix:
## axiom_rule axiom_rule_list
## LR(1) items:
axiom_rule_list -> axiom_rule axiom_rule_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production axiom_rule_list -> axiom_rule axiom_rule_list

State 39:
## Known stack suffix:
##
## LR(1) items:
graph' -> . graph [ # ]
## Transitions:
-- On IDENT shift to state 8
-- On rule_list shift to state 40
-- On rule shift to state 41
-- On maybe_empty_tag_list shift to state 43
-- On inv_list shift to state 79
-- On inv_group shift to state 80
-- On inv shift to state 83
-- On graph shift to state 112
## Reductions:
-- On #
--   reduce production graph ->
-- On SEQ_ARROW CONC_ARROW
--   reduce production maybe_empty_tag_list ->
** End-of-stream conflict on SEQ_ARROW IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production graph ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 40:
## Known stack suffix:
## rule_list
## LR(1) items:
graph -> rule_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production graph -> rule_list

State 41:
## Known stack suffix:
## rule
## LR(1) items:
rule_list -> rule . [ # ]
rule_list -> rule . rule_list [ # ]
## Transitions:
-- On IDENT shift to state 8
-- On rule_list shift to state 42
-- On rule shift to state 41
-- On maybe_empty_tag_list shift to state 43
-- On inv_list shift to state 79
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:
-- On SEQ_ARROW CONC_ARROW
--   reduce production maybe_empty_tag_list ->
-- On #
--   reduce production rule_list -> rule
** End-of-stream conflict on SEQ_ARROW IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production rule_list -> rule
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 42:
## Known stack suffix:
## rule rule_list
## LR(1) items:
rule_list -> rule rule_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production rule_list -> rule rule_list

State 43:
## Known stack suffix:
## maybe_empty_tag_list
## LR(1) items:
rule -> maybe_empty_tag_list . CONC_ARROW inv cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
rule -> maybe_empty_tag_list . SEQ_ARROW inv seq_cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On SEQ_ARROW shift to state 44
-- On CONC_ARROW shift to state 93
## Reductions:

State 44:
## Known stack suffix:
## maybe_empty_tag_list SEQ_ARROW
## LR(1) items:
rule -> maybe_empty_tag_list SEQ_ARROW . inv seq_cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On IDENT shift to state 1
-- On inv shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## maybe_empty_tag_list SEQ_ARROW inv
## LR(1) items:
rule -> maybe_empty_tag_list SEQ_ARROW inv . seq_cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On OPEN_BRACK shift to state 46
-- On seq_cases shift to state 91
## Reductions:
-- On SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW #
--   reduce production seq_cases ->
** End-of-stream conflict on SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production seq_cases ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 46:
## Known stack suffix:
## OPEN_BRACK
## LR(1) items:
seq_cases -> OPEN_BRACK . seq_case_list CLOSE_BRACK [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On NUMBER shift to state 47
-- On seq_case_list shift to state 86
-- On seq_case shift to state 88
## Reductions:

State 47:
## Known stack suffix:
## NUMBER
## LR(1) items:
seq_case -> NUMBER . COLON maybe_empty_tag_list tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On COLON shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## NUMBER COLON
## LR(1) items:
seq_case -> NUMBER COLON . maybe_empty_tag_list tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On maybe_empty_tag_list shift to state 49
-- On inv_list shift to state 79
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:
-- On SEMICOLON OPEN_BRACE CLOSE_BRACK
--   reduce production maybe_empty_tag_list ->

State 49:
## Known stack suffix:
## NUMBER COLON maybe_empty_tag_list
## LR(1) items:
seq_case -> NUMBER COLON maybe_empty_tag_list . tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 78
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production tactics ->

State 50:
## Known stack suffix:
## OPEN_BRACE
## LR(1) items:
tactics -> OPEN_BRACE . smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On SMP_UNION shift to state 51
-- On SMP_PRUNING shift to state 53
-- On SMP_DNF shift to state 55
-- On smp_strategy shift to state 57
## Reductions:
-- On IDENT BAR
--   reduce production smp_strategy ->

State 51:
## Known stack suffix:
## SMP_UNION
## LR(1) items:
smp_strategy -> SMP_UNION . COLON [ IDENT BAR ]
## Transitions:
-- On COLON shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## SMP_UNION COLON
## LR(1) items:
smp_strategy -> SMP_UNION COLON . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production smp_strategy -> SMP_UNION COLON

State 53:
## Known stack suffix:
## SMP_PRUNING
## LR(1) items:
smp_strategy -> SMP_PRUNING . COLON [ IDENT BAR ]
## Transitions:
-- On COLON shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## SMP_PRUNING COLON
## LR(1) items:
smp_strategy -> SMP_PRUNING COLON . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production smp_strategy -> SMP_PRUNING COLON

State 55:
## Known stack suffix:
## SMP_DNF
## LR(1) items:
smp_strategy -> SMP_DNF . COLON [ IDENT BAR ]
## Transitions:
-- On COLON shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## SMP_DNF COLON
## LR(1) items:
smp_strategy -> SMP_DNF COLON . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production smp_strategy -> SMP_DNF COLON

State 57:
## Known stack suffix:
## OPEN_BRACE smp_strategy
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy . support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On IDENT shift to state 58
-- On BAR shift to state 59
-- On support_split_tactic_list shift to state 60
-- On support_split_tactic shift to state 76
## Reductions:

State 58:
## Known stack suffix:
## IDENT
## LR(1) items:
support_split_tactic -> IDENT . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_split_tactic -> IDENT

State 59:
## Known stack suffix:
## BAR
## LR(1) items:
support_split_tactic_list -> BAR . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_split_tactic_list -> BAR

State 60:
## Known stack suffix:
## OPEN_BRACE smp_strategy support_split_tactic_list
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy support_split_tactic_list . support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On IDENT shift to state 61
-- On BAR shift to state 62
-- On support_tactic_list shift to state 63
-- On support_tactic shift to state 74
## Reductions:

State 61:
## Known stack suffix:
## IDENT
## LR(1) items:
support_tactic -> IDENT . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_tactic -> IDENT

State 62:
## Known stack suffix:
## BAR
## LR(1) items:
support_tactic_list -> BAR . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_tactic_list -> BAR

State 63:
## Known stack suffix:
## OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list . formula_split_tactic_list formula_tactic_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On IDENT shift to state 64
-- On BAR shift to state 65
-- On formula_split_tactic_list shift to state 66
-- On formula_split_tactic shift to state 72
## Reductions:

State 64:
## Known stack suffix:
## IDENT
## LR(1) items:
formula_split_tactic -> IDENT . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production formula_split_tactic -> IDENT

State 65:
## Known stack suffix:
## BAR
## LR(1) items:
formula_split_tactic_list -> BAR . [ IDENT CLOSE_BRACE ]
## Transitions:
## Reductions:
-- On IDENT CLOSE_BRACE
--   reduce production formula_split_tactic_list -> BAR

State 66:
## Known stack suffix:
## OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list . formula_tactic_list CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On IDENT shift to state 67
-- On formula_tactic_list shift to state 68
-- On formula_tactic shift to state 70
## Reductions:
-- On CLOSE_BRACE
--   reduce production formula_tactic_list ->

State 67:
## Known stack suffix:
## IDENT
## LR(1) items:
formula_tactic -> IDENT . [ IDENT CLOSE_BRACE ]
## Transitions:
## Reductions:
-- On IDENT CLOSE_BRACE
--   reduce production formula_tactic -> IDENT

State 68:
## Known stack suffix:
## OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list . CLOSE_BRACE [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
-- On CLOSE_BRACE shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE
## LR(1) items:
tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE . [ SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK #
--   reduce production tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE
** End-of-stream conflict on SEQ_ARROW SEMICOLON IDENT CONC_ARROW CLOSE_BRACK
**   There is a tension between
**   (1) reducing production tactics -> OPEN_BRACE smp_strategy support_split_tactic_list support_tactic_list formula_split_tactic_list formula_tactic_list CLOSE_BRACE
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 70:
## Known stack suffix:
## formula_tactic
## LR(1) items:
formula_tactic_list -> formula_tactic . formula_tactic_list [ CLOSE_BRACE ]
## Transitions:
-- On IDENT shift to state 67
-- On formula_tactic_list shift to state 71
-- On formula_tactic shift to state 70
## Reductions:
-- On CLOSE_BRACE
--   reduce production formula_tactic_list ->

State 71:
## Known stack suffix:
## formula_tactic formula_tactic_list
## LR(1) items:
formula_tactic_list -> formula_tactic formula_tactic_list . [ CLOSE_BRACE ]
## Transitions:
## Reductions:
-- On CLOSE_BRACE
--   reduce production formula_tactic_list -> formula_tactic formula_tactic_list

State 72:
## Known stack suffix:
## formula_split_tactic
## LR(1) items:
formula_split_tactic_list -> formula_split_tactic . formula_split_tactic_list [ IDENT CLOSE_BRACE ]
## Transitions:
-- On IDENT shift to state 64
-- On BAR shift to state 65
-- On formula_split_tactic_list shift to state 73
-- On formula_split_tactic shift to state 72
## Reductions:

State 73:
## Known stack suffix:
## formula_split_tactic formula_split_tactic_list
## LR(1) items:
formula_split_tactic_list -> formula_split_tactic formula_split_tactic_list . [ IDENT CLOSE_BRACE ]
## Transitions:
## Reductions:
-- On IDENT CLOSE_BRACE
--   reduce production formula_split_tactic_list -> formula_split_tactic formula_split_tactic_list

State 74:
## Known stack suffix:
## support_tactic
## LR(1) items:
support_tactic_list -> support_tactic . support_tactic_list [ IDENT BAR ]
## Transitions:
-- On IDENT shift to state 61
-- On BAR shift to state 62
-- On support_tactic_list shift to state 75
-- On support_tactic shift to state 74
## Reductions:

State 75:
## Known stack suffix:
## support_tactic support_tactic_list
## LR(1) items:
support_tactic_list -> support_tactic support_tactic_list . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_tactic_list -> support_tactic support_tactic_list

State 76:
## Known stack suffix:
## support_split_tactic
## LR(1) items:
support_split_tactic_list -> support_split_tactic . support_split_tactic_list [ IDENT BAR ]
## Transitions:
-- On IDENT shift to state 58
-- On BAR shift to state 59
-- On support_split_tactic_list shift to state 77
-- On support_split_tactic shift to state 76
## Reductions:

State 77:
## Known stack suffix:
## support_split_tactic support_split_tactic_list
## LR(1) items:
support_split_tactic_list -> support_split_tactic support_split_tactic_list . [ IDENT BAR ]
## Transitions:
## Reductions:
-- On IDENT BAR
--   reduce production support_split_tactic_list -> support_split_tactic support_split_tactic_list

State 78:
## Known stack suffix:
## NUMBER COLON maybe_empty_tag_list tactics
## LR(1) items:
seq_case -> NUMBER COLON maybe_empty_tag_list tactics . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production seq_case -> NUMBER COLON maybe_empty_tag_list tactics

State 79:
## Known stack suffix:
## inv_list
## LR(1) items:
maybe_empty_tag_list -> inv_list . [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK
--   reduce production maybe_empty_tag_list -> inv_list

State 80:
## Known stack suffix:
## inv_group
## LR(1) items:
inv_list -> inv_group . [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
inv_list -> inv_group . COMMA inv_list [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
-- On COMMA shift to state 81
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK
--   reduce production inv_list -> inv_group

State 81:
## Known stack suffix:
## inv_group COMMA
## LR(1) items:
inv_list -> inv_group COMMA . inv_list [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On inv_list shift to state 82
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:

State 82:
## Known stack suffix:
## inv_group COMMA inv_list
## LR(1) items:
inv_list -> inv_group COMMA inv_list . [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK
--   reduce production inv_list -> inv_group COMMA inv_list

State 83:
## Known stack suffix:
## inv
## LR(1) items:
inv_list -> inv . [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
inv_list -> inv . COMMA inv_list [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
-- On COMMA shift to state 84
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK
--   reduce production inv_list -> inv

State 84:
## Known stack suffix:
## inv COMMA
## LR(1) items:
inv_list -> inv COMMA . inv_list [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On inv_list shift to state 85
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:

State 85:
## Known stack suffix:
## inv COMMA inv_list
## LR(1) items:
inv_list -> inv COMMA inv_list . [ SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEQ_ARROW SEMICOLON OPEN_BRACE CONC_ARROW CLOSE_BRACK
--   reduce production inv_list -> inv COMMA inv_list

State 86:
## Known stack suffix:
## OPEN_BRACK seq_case_list
## LR(1) items:
seq_cases -> OPEN_BRACK seq_case_list . CLOSE_BRACK [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On CLOSE_BRACK shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## OPEN_BRACK seq_case_list CLOSE_BRACK
## LR(1) items:
seq_cases -> OPEN_BRACK seq_case_list CLOSE_BRACK . [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW #
--   reduce production seq_cases -> OPEN_BRACK seq_case_list CLOSE_BRACK
** End-of-stream conflict on SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production seq_cases -> OPEN_BRACK seq_case_list CLOSE_BRACK
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 88:
## Known stack suffix:
## seq_case
## LR(1) items:
seq_case_list -> seq_case . [ CLOSE_BRACK ]
seq_case_list -> seq_case . SEMICOLON seq_case_list [ CLOSE_BRACK ]
## Transitions:
-- On SEMICOLON shift to state 89
## Reductions:
-- On CLOSE_BRACK
--   reduce production seq_case_list -> seq_case

State 89:
## Known stack suffix:
## seq_case SEMICOLON
## LR(1) items:
seq_case_list -> seq_case SEMICOLON . seq_case_list [ CLOSE_BRACK ]
## Transitions:
-- On NUMBER shift to state 47
-- On seq_case_list shift to state 90
-- On seq_case shift to state 88
## Reductions:

State 90:
## Known stack suffix:
## seq_case SEMICOLON seq_case_list
## LR(1) items:
seq_case_list -> seq_case SEMICOLON seq_case_list . [ CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On CLOSE_BRACK
--   reduce production seq_case_list -> seq_case SEMICOLON seq_case_list

State 91:
## Known stack suffix:
## maybe_empty_tag_list SEQ_ARROW inv seq_cases
## LR(1) items:
rule -> maybe_empty_tag_list SEQ_ARROW inv seq_cases . tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 92
## Reductions:
-- On SEQ_ARROW IDENT CONC_ARROW #
--   reduce production tactics ->
** End-of-stream conflict on SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production tactics ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 92:
## Known stack suffix:
## maybe_empty_tag_list SEQ_ARROW inv seq_cases tactics
## LR(1) items:
rule -> maybe_empty_tag_list SEQ_ARROW inv seq_cases tactics . [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW IDENT CONC_ARROW #
--   reduce production rule -> maybe_empty_tag_list SEQ_ARROW inv seq_cases tactics
** End-of-stream conflict on SEQ_ARROW IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production rule -> maybe_empty_tag_list SEQ_ARROW inv seq_cases tactics
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 93:
## Known stack suffix:
## maybe_empty_tag_list CONC_ARROW
## LR(1) items:
rule -> maybe_empty_tag_list CONC_ARROW . inv cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On IDENT shift to state 1
-- On inv shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## maybe_empty_tag_list CONC_ARROW inv
## LR(1) items:
rule -> maybe_empty_tag_list CONC_ARROW inv . cases tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On OPEN_BRACK shift to state 95
-- On cases shift to state 110
## Reductions:
-- On SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW #
--   reduce production cases ->
** End-of-stream conflict on SEQ_ARROW OPEN_BRACK OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production cases ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 95:
## Known stack suffix:
## OPEN_BRACK
## LR(1) items:
cases -> OPEN_BRACK . case_list CLOSE_BRACK [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On NUMBER shift to state 96
-- On case_list shift to state 105
-- On case shift to state 107
## Reductions:

State 96:
## Known stack suffix:
## NUMBER
## LR(1) items:
case -> NUMBER . COLON premise maybe_empty_tag_list tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On COLON shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## NUMBER COLON
## LR(1) items:
case -> NUMBER COLON . premise maybe_empty_tag_list tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On SELF_PREMISE shift to state 98
-- On OTHERS_PREMISE shift to state 100
-- On premise shift to state 102
## Reductions:
-- On SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK
--   reduce production premise ->

State 98:
## Known stack suffix:
## SELF_PREMISE
## LR(1) items:
premise -> SELF_PREMISE . COLON [ SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK ]
## Transitions:
-- On COLON shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## SELF_PREMISE COLON
## LR(1) items:
premise -> SELF_PREMISE COLON . [ SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK
--   reduce production premise -> SELF_PREMISE COLON

State 100:
## Known stack suffix:
## OTHERS_PREMISE
## LR(1) items:
premise -> OTHERS_PREMISE . COLON [ SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK ]
## Transitions:
-- On COLON shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## OTHERS_PREMISE COLON
## LR(1) items:
premise -> OTHERS_PREMISE COLON . [ SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE IDENT CLOSE_BRACK
--   reduce production premise -> OTHERS_PREMISE COLON

State 102:
## Known stack suffix:
## NUMBER COLON premise
## LR(1) items:
case -> NUMBER COLON premise . maybe_empty_tag_list tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On IDENT shift to state 8
-- On maybe_empty_tag_list shift to state 103
-- On inv_list shift to state 79
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:
-- On SEMICOLON OPEN_BRACE CLOSE_BRACK
--   reduce production maybe_empty_tag_list ->

State 103:
## Known stack suffix:
## NUMBER COLON premise maybe_empty_tag_list
## LR(1) items:
case -> NUMBER COLON premise maybe_empty_tag_list . tactics [ SEMICOLON CLOSE_BRACK ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 104
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production tactics ->

State 104:
## Known stack suffix:
## NUMBER COLON premise maybe_empty_tag_list tactics
## LR(1) items:
case -> NUMBER COLON premise maybe_empty_tag_list tactics . [ SEMICOLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On SEMICOLON CLOSE_BRACK
--   reduce production case -> NUMBER COLON premise maybe_empty_tag_list tactics

State 105:
## Known stack suffix:
## OPEN_BRACK case_list
## LR(1) items:
cases -> OPEN_BRACK case_list . CLOSE_BRACK [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
-- On CLOSE_BRACK shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## OPEN_BRACK case_list CLOSE_BRACK
## LR(1) items:
cases -> OPEN_BRACK case_list CLOSE_BRACK . [ SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW #
--   reduce production cases -> OPEN_BRACK case_list CLOSE_BRACK
** End-of-stream conflict on SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production cases -> OPEN_BRACK case_list CLOSE_BRACK
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 107:
## Known stack suffix:
## case
## LR(1) items:
case_list -> case . [ CLOSE_BRACK ]
case_list -> case . SEMICOLON case_list [ CLOSE_BRACK ]
## Transitions:
-- On SEMICOLON shift to state 108
## Reductions:
-- On CLOSE_BRACK
--   reduce production case_list -> case

State 108:
## Known stack suffix:
## case SEMICOLON
## LR(1) items:
case_list -> case SEMICOLON . case_list [ CLOSE_BRACK ]
## Transitions:
-- On NUMBER shift to state 96
-- On case_list shift to state 109
-- On case shift to state 107
## Reductions:

State 109:
## Known stack suffix:
## case SEMICOLON case_list
## LR(1) items:
case_list -> case SEMICOLON case_list . [ CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On CLOSE_BRACK
--   reduce production case_list -> case SEMICOLON case_list

State 110:
## Known stack suffix:
## maybe_empty_tag_list CONC_ARROW inv cases
## LR(1) items:
rule -> maybe_empty_tag_list CONC_ARROW inv cases . tactics [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 111
## Reductions:
-- On SEQ_ARROW IDENT CONC_ARROW #
--   reduce production tactics ->
** End-of-stream conflict on SEQ_ARROW OPEN_BRACE IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production tactics ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 111:
## Known stack suffix:
## maybe_empty_tag_list CONC_ARROW inv cases tactics
## LR(1) items:
rule -> maybe_empty_tag_list CONC_ARROW inv cases tactics . [ SEQ_ARROW IDENT CONC_ARROW # ]
## Transitions:
## Reductions:
-- On SEQ_ARROW IDENT CONC_ARROW #
--   reduce production rule -> maybe_empty_tag_list CONC_ARROW inv cases tactics
** End-of-stream conflict on SEQ_ARROW IDENT CONC_ARROW
**   There is a tension between
**   (1) reducing production rule -> maybe_empty_tag_list CONC_ARROW inv cases tactics
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 112:
## Known stack suffix:
## graph
## LR(1) items:
graph' -> graph . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept graph

State 113:
## Known stack suffix:
##
## LR(1) items:
pvd_support' -> . pvd_support [ # ]
## Transitions:
-- On TACTICS shift to state 114
-- On pvd_support shift to state 159
## Reductions:

State 114:
## Known stack suffix:
## TACTICS
## LR(1) items:
pvd_support -> TACTICS . COLON tactic_case_list FACTS COLON fact_list [ # ]
## Transitions:
-- On COLON shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## TACTICS COLON
## LR(1) items:
pvd_support -> TACTICS COLON . tactic_case_list FACTS COLON fact_list [ # ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On NUMBER shift to state 116
-- On tactics shift to state 139
-- On tactic_case_list shift to state 141
-- On tactic_case shift to state 157
## Reductions:
-- On FACTS
--   reduce production tactic_case_list ->
-- On SEMICOLON
--   reduce production tactics ->

State 116:
## Known stack suffix:
## NUMBER
## LR(1) items:
tactic_case -> NUMBER . COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
tactic_case -> NUMBER . COLON condition COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
tactic_case -> NUMBER . COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On COLON shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## NUMBER COLON
## LR(1) items:
tactic_case -> NUMBER COLON . tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
tactic_case -> NUMBER COLON . condition COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
tactic_case -> NUMBER COLON . OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On OPEN_BRACK shift to state 118
-- On OPEN_BRACE shift to state 50
-- On COND_INITIATION shift to state 121
-- On COND_FAIRNESS shift to state 122
-- On COND_CONSECUTION shift to state 123
-- On COND_ACCEPTANCE shift to state 124
-- On tactics shift to state 133
-- On condition shift to state 135
## Reductions:
-- On SEMICOLON
--   reduce production tactics ->

State 118:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK . ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On IDENT shift to state 11
-- On ident_list shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list . BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On BAR shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR . condition_list CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On COND_INITIATION shift to state 121
-- On COND_FAIRNESS shift to state 122
-- On COND_CONSECUTION shift to state 123
-- On COND_ACCEPTANCE shift to state 124
-- On condition_list shift to state 125
-- On condition shift to state 130
## Reductions:

State 121:
## Known stack suffix:
## COND_INITIATION
## LR(1) items:
condition -> COND_INITIATION . [ COMMA COLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On COMMA COLON CLOSE_BRACK
--   reduce production condition -> COND_INITIATION

State 122:
## Known stack suffix:
## COND_FAIRNESS
## LR(1) items:
condition -> COND_FAIRNESS . [ COMMA COLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On COMMA COLON CLOSE_BRACK
--   reduce production condition -> COND_FAIRNESS

State 123:
## Known stack suffix:
## COND_CONSECUTION
## LR(1) items:
condition -> COND_CONSECUTION . [ COMMA COLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On COMMA COLON CLOSE_BRACK
--   reduce production condition -> COND_CONSECUTION

State 124:
## Known stack suffix:
## COND_ACCEPTANCE
## LR(1) items:
condition -> COND_ACCEPTANCE . [ COMMA COLON CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On COMMA COLON CLOSE_BRACK
--   reduce production condition -> COND_ACCEPTANCE

State 125:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR condition_list
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list . CLOSE_BRACK COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On CLOSE_BRACK shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK . COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On COLON shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON . tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 128
## Reductions:
-- On SEMICOLON
--   reduce production tactics ->

State 128:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics . SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On SEMICOLON shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON
## LR(1) items:
tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON . [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE NUMBER FACTS
--   reduce production tactic_case -> NUMBER COLON OPEN_BRACK ident_list BAR condition_list CLOSE_BRACK COLON tactics SEMICOLON

State 130:
## Known stack suffix:
## condition
## LR(1) items:
condition_list -> condition . [ CLOSE_BRACK ]
condition_list -> condition . COMMA condition_list [ CLOSE_BRACK ]
## Transitions:
-- On COMMA shift to state 131
## Reductions:
-- On CLOSE_BRACK
--   reduce production condition_list -> condition

State 131:
## Known stack suffix:
## condition COMMA
## LR(1) items:
condition_list -> condition COMMA . condition_list [ CLOSE_BRACK ]
## Transitions:
-- On COND_INITIATION shift to state 121
-- On COND_FAIRNESS shift to state 122
-- On COND_CONSECUTION shift to state 123
-- On COND_ACCEPTANCE shift to state 124
-- On condition_list shift to state 132
-- On condition shift to state 130
## Reductions:

State 132:
## Known stack suffix:
## condition COMMA condition_list
## LR(1) items:
condition_list -> condition COMMA condition_list . [ CLOSE_BRACK ]
## Transitions:
## Reductions:
-- On CLOSE_BRACK
--   reduce production condition_list -> condition COMMA condition_list

State 133:
## Known stack suffix:
## NUMBER COLON tactics
## LR(1) items:
tactic_case -> NUMBER COLON tactics . SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On SEMICOLON shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## NUMBER COLON tactics SEMICOLON
## LR(1) items:
tactic_case -> NUMBER COLON tactics SEMICOLON . [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE NUMBER FACTS
--   reduce production tactic_case -> NUMBER COLON tactics SEMICOLON

State 135:
## Known stack suffix:
## NUMBER COLON condition
## LR(1) items:
tactic_case -> NUMBER COLON condition . COLON tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On COLON shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## NUMBER COLON condition COLON
## LR(1) items:
tactic_case -> NUMBER COLON condition COLON . tactics SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On tactics shift to state 137
## Reductions:
-- On SEMICOLON
--   reduce production tactics ->

State 137:
## Known stack suffix:
## NUMBER COLON condition COLON tactics
## LR(1) items:
tactic_case -> NUMBER COLON condition COLON tactics . SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On SEMICOLON shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## NUMBER COLON condition COLON tactics SEMICOLON
## LR(1) items:
tactic_case -> NUMBER COLON condition COLON tactics SEMICOLON . [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE NUMBER FACTS
--   reduce production tactic_case -> NUMBER COLON condition COLON tactics SEMICOLON

State 139:
## Known stack suffix:
## tactics
## LR(1) items:
tactic_case -> tactics . SEMICOLON [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
-- On SEMICOLON shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## tactics SEMICOLON
## LR(1) items:
tactic_case -> tactics SEMICOLON . [ SEMICOLON OPEN_BRACE NUMBER FACTS ]
## Transitions:
## Reductions:
-- On SEMICOLON OPEN_BRACE NUMBER FACTS
--   reduce production tactic_case -> tactics SEMICOLON

State 141:
## Known stack suffix:
## TACTICS COLON tactic_case_list
## LR(1) items:
pvd_support -> TACTICS COLON tactic_case_list . FACTS COLON fact_list [ # ]
## Transitions:
-- On FACTS shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## TACTICS COLON tactic_case_list FACTS
## LR(1) items:
pvd_support -> TACTICS COLON tactic_case_list FACTS . COLON fact_list [ # ]
## Transitions:
-- On COLON shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## TACTICS COLON tactic_case_list FACTS COLON
## LR(1) items:
pvd_support -> TACTICS COLON tactic_case_list FACTS COLON . fact_list [ # ]
## Transitions:
-- On NUMBER shift to state 144
-- On IDENT shift to state 8
-- On inv_list shift to state 152
-- On inv_group shift to state 80
-- On inv shift to state 83
-- On fact_list shift to state 154
-- On fact shift to state 155
## Reductions:
-- On #
--   reduce production fact_list ->
** End-of-stream conflict on NUMBER IDENT
**   There is a tension between
**   (1) reducing production fact_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 144:
## Known stack suffix:
## NUMBER
## LR(1) items:
fact -> NUMBER . COLON inv_list SEMICOLON [ NUMBER IDENT # ]
fact -> NUMBER . COLON condition COLON inv_list SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On COLON shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## NUMBER COLON
## LR(1) items:
fact -> NUMBER COLON . inv_list SEMICOLON [ NUMBER IDENT # ]
fact -> NUMBER COLON . condition COLON inv_list SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On IDENT shift to state 8
-- On COND_INITIATION shift to state 121
-- On COND_FAIRNESS shift to state 122
-- On COND_CONSECUTION shift to state 123
-- On COND_ACCEPTANCE shift to state 124
-- On inv_list shift to state 146
-- On inv_group shift to state 80
-- On inv shift to state 83
-- On condition shift to state 148
## Reductions:

State 146:
## Known stack suffix:
## NUMBER COLON inv_list
## LR(1) items:
fact -> NUMBER COLON inv_list . SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On SEMICOLON shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## NUMBER COLON inv_list SEMICOLON
## LR(1) items:
fact -> NUMBER COLON inv_list SEMICOLON . [ NUMBER IDENT # ]
## Transitions:
## Reductions:
-- On NUMBER IDENT #
--   reduce production fact -> NUMBER COLON inv_list SEMICOLON
** End-of-stream conflict on NUMBER IDENT
**   There is a tension between
**   (1) reducing production fact -> NUMBER COLON inv_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 148:
## Known stack suffix:
## NUMBER COLON condition
## LR(1) items:
fact -> NUMBER COLON condition . COLON inv_list SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On COLON shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## NUMBER COLON condition COLON
## LR(1) items:
fact -> NUMBER COLON condition COLON . inv_list SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On IDENT shift to state 8
-- On inv_list shift to state 150
-- On inv_group shift to state 80
-- On inv shift to state 83
## Reductions:

State 150:
## Known stack suffix:
## NUMBER COLON condition COLON inv_list
## LR(1) items:
fact -> NUMBER COLON condition COLON inv_list . SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On SEMICOLON shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## NUMBER COLON condition COLON inv_list SEMICOLON
## LR(1) items:
fact -> NUMBER COLON condition COLON inv_list SEMICOLON . [ NUMBER IDENT # ]
## Transitions:
## Reductions:
-- On NUMBER IDENT #
--   reduce production fact -> NUMBER COLON condition COLON inv_list SEMICOLON
** End-of-stream conflict on NUMBER IDENT
**   There is a tension between
**   (1) reducing production fact -> NUMBER COLON condition COLON inv_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 152:
## Known stack suffix:
## inv_list
## LR(1) items:
fact -> inv_list . SEMICOLON [ NUMBER IDENT # ]
## Transitions:
-- On SEMICOLON shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## inv_list SEMICOLON
## LR(1) items:
fact -> inv_list SEMICOLON . [ NUMBER IDENT # ]
## Transitions:
## Reductions:
-- On NUMBER IDENT #
--   reduce production fact -> inv_list SEMICOLON
** End-of-stream conflict on NUMBER IDENT
**   There is a tension between
**   (1) reducing production fact -> inv_list SEMICOLON
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 154:
## Known stack suffix:
## TACTICS COLON tactic_case_list FACTS COLON fact_list
## LR(1) items:
pvd_support -> TACTICS COLON tactic_case_list FACTS COLON fact_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production pvd_support -> TACTICS COLON tactic_case_list FACTS COLON fact_list

State 155:
## Known stack suffix:
## fact
## LR(1) items:
fact_list -> fact . fact_list [ # ]
## Transitions:
-- On NUMBER shift to state 144
-- On IDENT shift to state 8
-- On inv_list shift to state 152
-- On inv_group shift to state 80
-- On inv shift to state 83
-- On fact_list shift to state 156
-- On fact shift to state 155
## Reductions:
-- On #
--   reduce production fact_list ->
** End-of-stream conflict on NUMBER IDENT
**   There is a tension between
**   (1) reducing production fact_list ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 156:
## Known stack suffix:
## fact fact_list
## LR(1) items:
fact_list -> fact fact_list . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production fact_list -> fact fact_list

State 157:
## Known stack suffix:
## tactic_case
## LR(1) items:
tactic_case_list -> tactic_case . tactic_case_list [ FACTS ]
## Transitions:
-- On OPEN_BRACE shift to state 50
-- On NUMBER shift to state 116
-- On tactics shift to state 139
-- On tactic_case_list shift to state 158
-- On tactic_case shift to state 157
## Reductions:
-- On FACTS
--   reduce production tactic_case_list ->
-- On SEMICOLON
--   reduce production tactics ->

State 158:
## Known stack suffix:
## tactic_case tactic_case_list
## LR(1) items:
tactic_case_list -> tactic_case tactic_case_list . [ FACTS ]
## Transitions:
## Reductions:
-- On FACTS
--   reduce production tactic_case_list -> tactic_case tactic_case_list

State 159:
## Known stack suffix:
## pvd_support
## LR(1) items:
pvd_support' -> pvd_support . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept pvd_support

