File "leap_SpecParser.mly", line 53, characters 7-10:
Warning: the token EOF is unused.
Grammar has 10 nonterminal symbols, among which 2 start symbols.
Grammar has 23 terminal symbols.
Grammar has 35 productions.
nullable(term) = false
nullable(specification) = false
nullable(one_spec) = false
nullable(one_invariant) = false
nullable(literal_list) = false
nullable(literal) = false
nullable(invariant_list) = false
nullable(integer) = false
nullable(formula) = false
nullable(conjunction_of_literals) = false
first(term) = OPEN_PAREN NUMBER MATH_MINUS IDENT
first(specification) = IDENT
first(one_spec) = IDENT
first(one_invariant) = IDENT
first(literal_list) = OPEN_PAREN NUMBER MATH_MINUS IDENT
first(literal) = OPEN_PAREN NUMBER MATH_MINUS IDENT
first(invariant_list) = IDENT
first(integer) = OPEN_PAREN NUMBER MATH_MINUS IDENT
first(formula) = OPEN_PAREN NUMBER MATH_MINUS LOGICAL_TRUE LOGICAL_NOT LOGICAL_FALSE IDENT
first(conjunction_of_literals) = OPEN_PAREN NUMBER MATH_MINUS LOGICAL_TRUE LOGICAL_FALSE IDENT
minimal(term) = (* 1 *) IDENT
minimal(specification) = (* 3 *) IDENT COLON LOGICAL_TRUE
minimal(one_spec) = (* 3 *) IDENT COLON LOGICAL_TRUE
minimal(one_invariant) = (* 3 *) IDENT COLON LOGICAL_FALSE
minimal(literal_list) = (* 3 *) IDENT MATH_LESS IDENT
minimal(literal) = (* 3 *) IDENT MATH_LESS IDENT
minimal(invariant_list) = (* 3 *) IDENT COLON LOGICAL_FALSE
minimal(integer) = (* 1 *) IDENT
minimal(formula) = (* 1 *) LOGICAL_TRUE
minimal(conjunction_of_literals) = (* 1 *) LOGICAL_FALSE
maximal(term) = infinity
maximal(specification) = infinity
maximal(one_spec) = infinity
maximal(one_invariant) = infinity
maximal(literal_list) = infinity
maximal(literal) = infinity
maximal(invariant_list) = infinity
maximal(integer) = infinity
maximal(formula) = infinity
maximal(conjunction_of_literals) = infinity
follow(term) = NOT_EQUALS LOGICAL_THEN LOGICAL_OR LOGICAL_IFF LOGICAL_AND IDENT EQUALS CLOSE_PAREN #
follow(specification) = #
follow(one_spec) = IDENT #
follow(one_invariant) = IDENT #
follow(literal_list) = IDENT #
follow(literal) = LOGICAL_THEN LOGICAL_OR LOGICAL_IFF LOGICAL_AND IDENT CLOSE_PAREN #
follow(invariant_list) = #
follow(integer) = NOT_EQUALS MATH_PLUS MATH_MULT MATH_MINUS MATH_LESS_EQ MATH_LESS MATH_GREATER_EQ MATH_GREATER MATH_DIV LOGICAL_THEN LOGICAL_OR LOGICAL_IFF LOGICAL_AND IDENT EQUALS CLOSE_PAREN #
follow(formula) = LOGICAL_THEN LOGICAL_OR LOGICAL_IFF LOGICAL_AND IDENT CLOSE_PAREN #
follow(conjunction_of_literals) = IDENT #
Built an LR(0) automaton with 67 states.
The grammar is not SLR(1) -- 11 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 67 states.
40 shift/reduce conflicts were silently solved.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to EQUALS is never useful.
File "leap_SpecParser.mly", line 56, characters 0-9:
Warning: the precedence level assigned to IDENT is never useful.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to MATH_GREATER is never useful.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to MATH_GREATER_EQ is never useful.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to MATH_LESS is never useful.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to MATH_LESS_EQ is never useful.
File "leap_SpecParser.mly", line 55, characters 0-9:
Warning: the precedence level assigned to NOT_EQUALS is never useful.
Warning: 33 end-of-stream conflicts were arbitrarily resolved.
File "leap_SpecParser.mly", line 99, characters 3-16:
Warning: production invariant_list -> one_invariant is never reduced.
File "leap_SpecParser.mly", line 89, characters 0-8:
Warning: production specification -> one_spec is never reduced.
Warning: in total, 2 productions are never reduced.
22 out of 67 states have a default reduction.
25 out of 67 states are represented.
0 out of 37 symbols keep track of their start position.
0 out of 37 symbols keep track of their end position.
17 out of 37 productions exploit shiftreduce optimization.
0 out of 67 states can peek at an error.
185 functions before inlining, 34 functions after inlining.
