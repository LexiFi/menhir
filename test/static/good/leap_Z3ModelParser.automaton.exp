State 0:
## Known stack suffix:
##
## LR(1) items:
generic_model' -> . generic_model [ # ]
## Transitions:
-- On OPEN_PAREN shift to state 1
-- On generic_model shift to state 113
## Reductions:
-- On #
--   reduce production generic_model ->
** End-of-stream conflict on OPEN_PAREN
**   There is a tension between
**   (1) reducing production generic_model ->
**   without even requesting a lookahead token, and
**   (2) testing whether the lookahead token is a member of the above set.

State 1:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
generic_model -> OPEN_PAREN . MODEL assertion_list CLOSE_PAREN [ # ]
## Transitions:
-- On MODEL shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## OPEN_PAREN MODEL
## LR(1) items:
generic_model -> OPEN_PAREN MODEL . assertion_list CLOSE_PAREN [ # ]
## Transitions:
-- On OPEN_PAREN shift to state 3
-- On universe_decl shift to state 106
-- On define_fun shift to state 107
-- On cardinality_constraint shift to state 108
-- On assertion_list shift to state 109
-- On assertion shift to state 111
## Reductions:

State 3:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
cardinality_constraint -> OPEN_PAREN . FORALL params conds CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN . DEFINE_FUN var params type_decl as_array CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN . DEFINE_FUN var params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN . DEFINE_FUN ARRAY_ID params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
universe_decl -> OPEN_PAREN . DECLARE_FUN IDENT params type_decl CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On FORALL shift to state 4
-- On DEFINE_FUN shift to state 41
-- On DECLARE_FUN shift to state 101
## Reductions:

State 4:
## Known stack suffix:
## OPEN_PAREN FORALL
## LR(1) items:
cardinality_constraint -> OPEN_PAREN FORALL . params conds CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 5
-- On params shift to state 19
## Reductions:

State 5:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
params -> OPEN_PAREN . param_list CLOSE_PAREN [ OPEN_PAREN IDENT ]
## Transitions:
-- On OPEN_PAREN shift to state 6
-- On param_list shift to state 17
## Reductions:
-- On CLOSE_PAREN
--   reduce production param_list ->

State 6:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
param_list -> OPEN_PAREN . IDENT type_decl CLOSE_PAREN param_list [ CLOSE_PAREN ]
## Transitions:
-- On IDENT shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## OPEN_PAREN IDENT
## LR(1) items:
param_list -> OPEN_PAREN IDENT . type_decl CLOSE_PAREN param_list [ CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 14
## Reductions:

State 8:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
type_decl -> OPEN_PAREN . ARRAY type_decl type_decl CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On ARRAY shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## OPEN_PAREN ARRAY
## LR(1) items:
type_decl -> OPEN_PAREN ARRAY . type_decl type_decl CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 11
## Reductions:

State 10:
## Known stack suffix:
## IDENT
## LR(1) items:
type_decl -> IDENT . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production type_decl -> IDENT

State 11:
## Known stack suffix:
## OPEN_PAREN ARRAY type_decl
## LR(1) items:
type_decl -> OPEN_PAREN ARRAY type_decl . type_decl CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## OPEN_PAREN ARRAY type_decl type_decl
## LR(1) items:
type_decl -> OPEN_PAREN ARRAY type_decl type_decl . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## OPEN_PAREN ARRAY type_decl type_decl CLOSE_PAREN
## LR(1) items:
type_decl -> OPEN_PAREN ARRAY type_decl type_decl CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production type_decl -> OPEN_PAREN ARRAY type_decl type_decl CLOSE_PAREN

State 14:
## Known stack suffix:
## OPEN_PAREN IDENT type_decl
## LR(1) items:
param_list -> OPEN_PAREN IDENT type_decl . CLOSE_PAREN param_list [ CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## OPEN_PAREN IDENT type_decl CLOSE_PAREN
## LR(1) items:
param_list -> OPEN_PAREN IDENT type_decl CLOSE_PAREN . param_list [ CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 6
-- On param_list shift to state 16
## Reductions:
-- On CLOSE_PAREN
--   reduce production param_list ->

State 16:
## Known stack suffix:
## OPEN_PAREN IDENT type_decl CLOSE_PAREN param_list
## LR(1) items:
param_list -> OPEN_PAREN IDENT type_decl CLOSE_PAREN param_list . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production param_list -> OPEN_PAREN IDENT type_decl CLOSE_PAREN param_list

State 17:
## Known stack suffix:
## OPEN_PAREN param_list
## LR(1) items:
params -> OPEN_PAREN param_list . CLOSE_PAREN [ OPEN_PAREN IDENT ]
## Transitions:
-- On CLOSE_PAREN shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## OPEN_PAREN param_list CLOSE_PAREN
## LR(1) items:
params -> OPEN_PAREN param_list CLOSE_PAREN . [ OPEN_PAREN IDENT ]
## Transitions:
## Reductions:
-- On OPEN_PAREN IDENT
--   reduce production params -> OPEN_PAREN param_list CLOSE_PAREN

State 19:
## Known stack suffix:
## OPEN_PAREN FORALL params
## LR(1) items:
cardinality_constraint -> OPEN_PAREN FORALL params . conds CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 20
-- On conds shift to state 38
-- On cond_elem shift to state 40
## Reductions:

State 20:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
cond_elem -> OPEN_PAREN . EQUAL IDENT constant CLOSE_PAREN [ CLOSE_PAREN ]
conds -> OPEN_PAREN . OR cond_list CLOSE_PAREN [ CLOSE_PAREN ]
## Transitions:
-- On OR shift to state 21
-- On EQUAL shift to state 23
## Reductions:

State 21:
## Known stack suffix:
## OPEN_PAREN OR
## LR(1) items:
conds -> OPEN_PAREN OR . cond_list CLOSE_PAREN [ CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 22
-- On cond_list shift to state 34
-- On cond_elem shift to state 36
## Reductions:
-- On CLOSE_PAREN
--   reduce production cond_list ->

State 22:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
cond_elem -> OPEN_PAREN . EQUAL IDENT constant CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On EQUAL shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## OPEN_PAREN EQUAL
## LR(1) items:
cond_elem -> OPEN_PAREN EQUAL . IDENT constant CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On IDENT shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## OPEN_PAREN EQUAL IDENT
## LR(1) items:
cond_elem -> OPEN_PAREN EQUAL IDENT . constant CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On constant shift to state 32
## Reductions:

State 25:
## Known stack suffix:
## TID_ELEM
## LR(1) items:
constant -> TID_ELEM . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> TID_ELEM

State 26:
## Known stack suffix:
## NUMBER
## LR(1) items:
constant -> NUMBER . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> NUMBER

State 27:
## Known stack suffix:
## NO_THREAD
## LR(1) items:
constant -> NO_THREAD . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> NO_THREAD

State 28:
## Known stack suffix:
## IDENT
## LR(1) items:
constant -> IDENT . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> IDENT

State 29:
## Known stack suffix:
## ELEM_ELEM
## LR(1) items:
constant -> ELEM_ELEM . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> ELEM_ELEM

State 30:
## Known stack suffix:
## BOOL
## LR(1) items:
constant -> BOOL . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> BOOL

State 31:
## Known stack suffix:
## ADDR_ELEM
## LR(1) items:
constant -> ADDR_ELEM . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production constant -> ADDR_ELEM

State 32:
## Known stack suffix:
## OPEN_PAREN EQUAL IDENT constant
## LR(1) items:
cond_elem -> OPEN_PAREN EQUAL IDENT constant . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## OPEN_PAREN EQUAL IDENT constant CLOSE_PAREN
## LR(1) items:
cond_elem -> OPEN_PAREN EQUAL IDENT constant CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production cond_elem -> OPEN_PAREN EQUAL IDENT constant CLOSE_PAREN

State 34:
## Known stack suffix:
## OPEN_PAREN OR cond_list
## LR(1) items:
conds -> OPEN_PAREN OR cond_list . CLOSE_PAREN [ CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## OPEN_PAREN OR cond_list CLOSE_PAREN
## LR(1) items:
conds -> OPEN_PAREN OR cond_list CLOSE_PAREN . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production conds -> OPEN_PAREN OR cond_list CLOSE_PAREN

State 36:
## Known stack suffix:
## cond_elem
## LR(1) items:
cond_list -> cond_elem . cond_list [ CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 22
-- On cond_list shift to state 37
-- On cond_elem shift to state 36
## Reductions:
-- On CLOSE_PAREN
--   reduce production cond_list ->

State 37:
## Known stack suffix:
## cond_elem cond_list
## LR(1) items:
cond_list -> cond_elem cond_list . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production cond_list -> cond_elem cond_list

State 38:
## Known stack suffix:
## OPEN_PAREN FORALL params conds
## LR(1) items:
cardinality_constraint -> OPEN_PAREN FORALL params conds . CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## OPEN_PAREN FORALL params conds CLOSE_PAREN
## LR(1) items:
cardinality_constraint -> OPEN_PAREN FORALL params conds CLOSE_PAREN . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production cardinality_constraint -> OPEN_PAREN FORALL params conds CLOSE_PAREN

State 40:
## Known stack suffix:
## cond_elem
## LR(1) items:
conds -> cond_elem . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production conds -> cond_elem

State 41:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN . var params type_decl as_array CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN DEFINE_FUN . var params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN DEFINE_FUN . ARRAY_ID params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On IDENT shift to state 42
-- On ERROR shift to state 43
-- On ARRAY_ID shift to state 44
-- On var shift to state 94
## Reductions:

State 42:
## Known stack suffix:
## IDENT
## LR(1) items:
var -> IDENT . [ OPEN_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN
--   reduce production var -> IDENT

State 43:
## Known stack suffix:
## ERROR
## LR(1) items:
var -> ERROR . [ OPEN_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN
--   reduce production var -> ERROR

State 44:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN ARRAY_ID
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID . params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 5
-- On params shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN ARRAY_ID params
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID params . type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl . value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 47
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 92
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
## Reductions:

State 47:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
const_array -> OPEN_PAREN . OPEN_PAREN AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN [ CLOSE_PAREN ]
ite -> OPEN_PAREN . ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN [ CLOSE_PAREN ]
record -> OPEN_PAREN . IDENT abs_value_list CLOSE_PAREN [ CLOSE_PAREN ]
store -> OPEN_PAREN . STORE abs_value constant value CLOSE_PAREN [ CLOSE_PAREN ]
## Transitions:
-- On STORE shift to state 48
-- On OPEN_PAREN shift to state 54
-- On ITE shift to state 66
-- On IDENT shift to state 76
## Reductions:

State 48:
## Known stack suffix:
## OPEN_PAREN STORE
## LR(1) items:
store -> OPEN_PAREN STORE . abs_value constant value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 49
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 72
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
-- On as_array shift to state 73
-- On abs_value shift to state 88
## Reductions:

State 49:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
as_array -> OPEN_PAREN . UNDERSCORE AS_ARRAY ARRAY_ID CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
const_array -> OPEN_PAREN . OPEN_PAREN AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
ite -> OPEN_PAREN . ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
record -> OPEN_PAREN . IDENT abs_value_list CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
store -> OPEN_PAREN . STORE abs_value constant value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On UNDERSCORE shift to state 50
-- On STORE shift to state 48
-- On OPEN_PAREN shift to state 54
-- On ITE shift to state 66
-- On IDENT shift to state 76
## Reductions:

State 50:
## Known stack suffix:
## OPEN_PAREN UNDERSCORE
## LR(1) items:
as_array -> OPEN_PAREN UNDERSCORE . AS_ARRAY ARRAY_ID CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On AS_ARRAY shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## OPEN_PAREN UNDERSCORE AS_ARRAY
## LR(1) items:
as_array -> OPEN_PAREN UNDERSCORE AS_ARRAY . ARRAY_ID CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On ARRAY_ID shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## OPEN_PAREN UNDERSCORE AS_ARRAY ARRAY_ID
## LR(1) items:
as_array -> OPEN_PAREN UNDERSCORE AS_ARRAY ARRAY_ID . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## OPEN_PAREN UNDERSCORE AS_ARRAY ARRAY_ID CLOSE_PAREN
## LR(1) items:
as_array -> OPEN_PAREN UNDERSCORE AS_ARRAY ARRAY_ID CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production as_array -> OPEN_PAREN UNDERSCORE AS_ARRAY ARRAY_ID CLOSE_PAREN

State 54:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN . AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On AS shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS . CONST type_decl CLOSE_PAREN value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CONST shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS CONST
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS CONST . type_decl CLOSE_PAREN value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 57
## Reductions:

State 57:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS CONST type_decl
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS CONST type_decl . CLOSE_PAREN value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN . value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 47
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 59
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
## Reductions:

State 59:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN value
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN value . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN
## LR(1) items:
const_array -> OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production const_array -> OPEN_PAREN OPEN_PAREN AS CONST type_decl CLOSE_PAREN value CLOSE_PAREN

State 61:
## Known stack suffix:
## store
## LR(1) items:
value -> store . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production value -> store

State 62:
## Known stack suffix:
## record
## LR(1) items:
value -> record . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production value -> record

State 63:
## Known stack suffix:
## ite
## LR(1) items:
value -> ite . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production value -> ite

State 64:
## Known stack suffix:
## constant
## LR(1) items:
value -> constant . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production value -> constant

State 65:
## Known stack suffix:
## const_array
## LR(1) items:
value -> const_array . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production value -> const_array

State 66:
## Known stack suffix:
## OPEN_PAREN ITE
## LR(1) items:
ite -> OPEN_PAREN ITE . cond_elem_as_arguments abs_value else_ite CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On OPEN_PAREN shift to state 67
-- On cond_elem_as_arguments shift to state 71
-- On cond_elem shift to state 87
## Reductions:

State 67:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
cond_elem -> OPEN_PAREN . EQUAL IDENT constant CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
cond_elem_as_arguments -> OPEN_PAREN . AND cond_list CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
## Transitions:
-- On EQUAL shift to state 23
-- On AND shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## OPEN_PAREN AND
## LR(1) items:
cond_elem_as_arguments -> OPEN_PAREN AND . cond_list CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
## Transitions:
-- On OPEN_PAREN shift to state 22
-- On cond_list shift to state 69
-- On cond_elem shift to state 36
## Reductions:
-- On CLOSE_PAREN
--   reduce production cond_list ->

State 69:
## Known stack suffix:
## OPEN_PAREN AND cond_list
## LR(1) items:
cond_elem_as_arguments -> OPEN_PAREN AND cond_list . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## OPEN_PAREN AND cond_list CLOSE_PAREN
## LR(1) items:
cond_elem_as_arguments -> OPEN_PAREN AND cond_list CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM
--   reduce production cond_elem_as_arguments -> OPEN_PAREN AND cond_list CLOSE_PAREN

State 71:
## Known stack suffix:
## OPEN_PAREN ITE cond_elem_as_arguments
## LR(1) items:
ite -> OPEN_PAREN ITE cond_elem_as_arguments . abs_value else_ite CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 49
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 72
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
-- On as_array shift to state 73
-- On abs_value shift to state 74
## Reductions:

State 72:
## Known stack suffix:
## value
## LR(1) items:
abs_value -> value . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production abs_value -> value

State 73:
## Known stack suffix:
## as_array
## LR(1) items:
abs_value -> as_array . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production abs_value -> as_array

State 74:
## Known stack suffix:
## OPEN_PAREN ITE cond_elem_as_arguments abs_value
## LR(1) items:
ite -> OPEN_PAREN ITE cond_elem_as_arguments abs_value . else_ite CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 75
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On record shift to state 81
-- On ite shift to state 82
-- On else_ite shift to state 83
-- On constant shift to state 85
-- On as_array shift to state 86
## Reductions:

State 75:
## Known stack suffix:
## OPEN_PAREN
## LR(1) items:
as_array -> OPEN_PAREN . UNDERSCORE AS_ARRAY ARRAY_ID CLOSE_PAREN [ CLOSE_PAREN ]
ite -> OPEN_PAREN . ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN [ CLOSE_PAREN ]
record -> OPEN_PAREN . IDENT abs_value_list CLOSE_PAREN [ CLOSE_PAREN ]
## Transitions:
-- On UNDERSCORE shift to state 50
-- On ITE shift to state 66
-- On IDENT shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## OPEN_PAREN IDENT
## LR(1) items:
record -> OPEN_PAREN IDENT . abs_value_list CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 49
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 72
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
-- On as_array shift to state 73
-- On abs_value_list shift to state 77
-- On abs_value shift to state 79
## Reductions:

State 77:
## Known stack suffix:
## OPEN_PAREN IDENT abs_value_list
## LR(1) items:
record -> OPEN_PAREN IDENT abs_value_list . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## OPEN_PAREN IDENT abs_value_list CLOSE_PAREN
## LR(1) items:
record -> OPEN_PAREN IDENT abs_value_list CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production record -> OPEN_PAREN IDENT abs_value_list CLOSE_PAREN

State 79:
## Known stack suffix:
## abs_value
## LR(1) items:
abs_value_list -> abs_value . [ CLOSE_PAREN ]
abs_value_list -> abs_value . abs_value_list [ CLOSE_PAREN ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 49
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 72
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
-- On as_array shift to state 73
-- On abs_value_list shift to state 80
-- On abs_value shift to state 79
## Reductions:
-- On CLOSE_PAREN
--   reduce production abs_value_list -> abs_value

State 80:
## Known stack suffix:
## abs_value abs_value_list
## LR(1) items:
abs_value_list -> abs_value abs_value_list . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production abs_value_list -> abs_value abs_value_list

State 81:
## Known stack suffix:
## record
## LR(1) items:
else_ite -> record . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production else_ite -> record

State 82:
## Known stack suffix:
## ite
## LR(1) items:
else_ite -> ite . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production else_ite -> ite

State 83:
## Known stack suffix:
## OPEN_PAREN ITE cond_elem_as_arguments abs_value else_ite
## LR(1) items:
ite -> OPEN_PAREN ITE cond_elem_as_arguments abs_value else_ite . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## OPEN_PAREN ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN
## LR(1) items:
ite -> OPEN_PAREN ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production ite -> OPEN_PAREN ITE cond_elem_as_arguments abs_value else_ite CLOSE_PAREN

State 85:
## Known stack suffix:
## constant
## LR(1) items:
else_ite -> constant . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production else_ite -> constant

State 86:
## Known stack suffix:
## as_array
## LR(1) items:
else_ite -> as_array . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production else_ite -> as_array

State 87:
## Known stack suffix:
## cond_elem
## LR(1) items:
cond_elem_as_arguments -> cond_elem . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM BOOL ADDR_ELEM
--   reduce production cond_elem_as_arguments -> cond_elem

State 88:
## Known stack suffix:
## OPEN_PAREN STORE abs_value
## LR(1) items:
store -> OPEN_PAREN STORE abs_value . constant value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On constant shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## OPEN_PAREN STORE abs_value constant
## LR(1) items:
store -> OPEN_PAREN STORE abs_value constant . value CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 47
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 90
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
## Reductions:

State 90:
## Known stack suffix:
## OPEN_PAREN STORE abs_value constant value
## LR(1) items:
store -> OPEN_PAREN STORE abs_value constant value . CLOSE_PAREN [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
-- On CLOSE_PAREN shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## OPEN_PAREN STORE abs_value constant value CLOSE_PAREN
## LR(1) items:
store -> OPEN_PAREN STORE abs_value constant value CLOSE_PAREN . [ TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM ]
## Transitions:
## Reductions:
-- On TID_ELEM OPEN_PAREN NUMBER NO_THREAD IDENT ELEM_ELEM CLOSE_PAREN BOOL ADDR_ELEM
--   reduce production store -> OPEN_PAREN STORE abs_value constant value CLOSE_PAREN

State 92:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl value
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl value . CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl value CLOSE_PAREN
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl value CLOSE_PAREN . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production define_fun -> OPEN_PAREN DEFINE_FUN ARRAY_ID params type_decl value CLOSE_PAREN

State 94:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var . params type_decl as_array CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN DEFINE_FUN var . params type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 5
-- On params shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params . type_decl as_array CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN DEFINE_FUN var params . type_decl value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params type_decl
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl . as_array CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl . value CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On TID_ELEM shift to state 25
-- On OPEN_PAREN shift to state 49
-- On NUMBER shift to state 26
-- On NO_THREAD shift to state 27
-- On IDENT shift to state 28
-- On ELEM_ELEM shift to state 29
-- On BOOL shift to state 30
-- On ADDR_ELEM shift to state 31
-- On value shift to state 97
-- On store shift to state 61
-- On record shift to state 62
-- On ite shift to state 63
-- On constant shift to state 64
-- On const_array shift to state 65
-- On as_array shift to state 99
## Reductions:

State 97:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params type_decl value
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl value . CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params type_decl value CLOSE_PAREN
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl value CLOSE_PAREN . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl value CLOSE_PAREN

State 99:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params type_decl as_array
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl as_array . CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## OPEN_PAREN DEFINE_FUN var params type_decl as_array CLOSE_PAREN
## LR(1) items:
define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl as_array CLOSE_PAREN . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production define_fun -> OPEN_PAREN DEFINE_FUN var params type_decl as_array CLOSE_PAREN

State 101:
## Known stack suffix:
## OPEN_PAREN DECLARE_FUN
## LR(1) items:
universe_decl -> OPEN_PAREN DECLARE_FUN . IDENT params type_decl CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On IDENT shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## OPEN_PAREN DECLARE_FUN IDENT
## LR(1) items:
universe_decl -> OPEN_PAREN DECLARE_FUN IDENT . params type_decl CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 5
-- On params shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## OPEN_PAREN DECLARE_FUN IDENT params
## LR(1) items:
universe_decl -> OPEN_PAREN DECLARE_FUN IDENT params . type_decl CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 8
-- On IDENT shift to state 10
-- On type_decl shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## OPEN_PAREN DECLARE_FUN IDENT params type_decl
## LR(1) items:
universe_decl -> OPEN_PAREN DECLARE_FUN IDENT params type_decl . CLOSE_PAREN [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
-- On CLOSE_PAREN shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## OPEN_PAREN DECLARE_FUN IDENT params type_decl CLOSE_PAREN
## LR(1) items:
universe_decl -> OPEN_PAREN DECLARE_FUN IDENT params type_decl CLOSE_PAREN . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production universe_decl -> OPEN_PAREN DECLARE_FUN IDENT params type_decl CLOSE_PAREN

State 106:
## Known stack suffix:
## universe_decl
## LR(1) items:
assertion -> universe_decl . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production assertion -> universe_decl

State 107:
## Known stack suffix:
## define_fun
## LR(1) items:
assertion -> define_fun . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production assertion -> define_fun

State 108:
## Known stack suffix:
## cardinality_constraint
## LR(1) items:
assertion -> cardinality_constraint . [ OPEN_PAREN CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On OPEN_PAREN CLOSE_PAREN
--   reduce production assertion -> cardinality_constraint

State 109:
## Known stack suffix:
## OPEN_PAREN MODEL assertion_list
## LR(1) items:
generic_model -> OPEN_PAREN MODEL assertion_list . CLOSE_PAREN [ # ]
## Transitions:
-- On CLOSE_PAREN shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## OPEN_PAREN MODEL assertion_list CLOSE_PAREN
## LR(1) items:
generic_model -> OPEN_PAREN MODEL assertion_list CLOSE_PAREN . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production generic_model -> OPEN_PAREN MODEL assertion_list CLOSE_PAREN

State 111:
## Known stack suffix:
## assertion
## LR(1) items:
assertion_list -> assertion . [ CLOSE_PAREN ]
assertion_list -> assertion . assertion_list [ CLOSE_PAREN ]
## Transitions:
-- On OPEN_PAREN shift to state 3
-- On universe_decl shift to state 106
-- On define_fun shift to state 107
-- On cardinality_constraint shift to state 108
-- On assertion_list shift to state 112
-- On assertion shift to state 111
## Reductions:
-- On CLOSE_PAREN
--   reduce production assertion_list -> assertion

State 112:
## Known stack suffix:
## assertion assertion_list
## LR(1) items:
assertion_list -> assertion assertion_list . [ CLOSE_PAREN ]
## Transitions:
## Reductions:
-- On CLOSE_PAREN
--   reduce production assertion_list -> assertion assertion_list

State 113:
## Known stack suffix:
## generic_model
## LR(1) items:
generic_model' -> generic_model . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept generic_model

