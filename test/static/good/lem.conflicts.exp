
** Conflict (shift/reduce) in state 663.
** Token involved: Let_
** This state is reached from file after reading:

Declare target TargetRep component_term id x_ls Eq 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
defs Eof 
defs_help 
(?)

** In state 663, looking ahead at Let_, shifting is permitted
** because of the following sub-derivation:

def 
declaration 
Declare target TargetRep component_term id x_ls Eq target_rep_rhs_term 
                                                   exp 
                                                   imp_right_atomic_exp 
                                                   or_right_atomic_exp 
                                                   and_right_atomic_exp 
                                                   eq_right_atomic_exp 
                                                   at_right_atomic_exp 
                                                   cons_right_atomic_exp 
                                                   plus_right_atomic_exp 
                                                   star_right_atomic_exp 
                                                   starstar_right_atomic_exp 
                                                   right_atomic_exp 
                                                   . Let_ letbind In exp 

** In state 663, looking ahead at Let_, reducing production
** target_rep_rhs_term -> 
** is permitted because of the following sub-derivation:

def defs_help // lookahead token appears because defs_help can begin with Let_
declaration // lookahead token is inherited
Declare target TargetRep component_term id x_ls Eq target_rep_rhs_term // lookahead token is inherited
                                                   . 

** Conflict (shift/reduce) in state 553.
** Token involved: Rsquare
** This state is reached from file after reading:

Indreln targets_opt Lsquare x Colon typschm witness_clause 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
defs Eof 
defs_help 
def 
Indreln targets_opt and_indreln_names and_indreln_clauses 
                    indreln_name 
                    (?)

** In state 553, looking ahead at Rsquare, reducing production
** check_clause -> 
** is permitted because of the following sub-derivation:

Lsquare x Colon typschm witness_clause check_clause Rsquare // lookahead token appears
                                       . 

** In state 553, looking ahead at Rsquare, shifting is permitted
** because of the following sub-derivation:

Lsquare x Colon typschm witness_clause . Rsquare 

** Conflict (reduce/reduce) in state 101.
** Token involved: Semi
** This state is reached from file after reading:

Indreln targets_opt Lsquare x Colon Forall tnvs Dot id Nvar 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
defs Eof 
defs_help 
def 
Indreln targets_opt and_indreln_names and_indreln_clauses 
                    indreln_name 
                    (?)

** In state 101, looking ahead at Semi, reducing production
** atomic_nexp -> Nvar 
** is permitted because of the following sub-derivation:

Lsquare x Colon typschm witness_clause Rsquare // lookahead token appears because witness_clause can begin with Semi
                Forall tnvs Dot typ // lookahead token is inherited
                                star_typ // lookahead token is inherited
                                star_typ_list // lookahead token is inherited
                                app_typ // lookahead token is inherited
                                id atomic_typs // lookahead token is inherited
                                   appt_typ // lookahead token is inherited
                                   atomic_nexp // lookahead token is inherited
                                   Nvar . 

** In state 101, looking ahead at Semi, reducing production
** tnvar -> Nvar 
** is permitted because of the following sub-derivation:

Lsquare x Colon typschm Rsquare 
                Forall tnvs Dot cs Semi ranges EqGt typ // lookahead token appears
                                c // lookahead token is inherited
                                id tnvar // lookahead token is inherited
                                   Nvar . 

** Conflict (reduce/reduce) in state 100.
** Token involved: Semi
** This state is reached from file after reading:

Indreln targets_opt Lsquare x Colon Forall tnvs Dot id Tyvar 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
defs Eof 
defs_help 
def 
Indreln targets_opt and_indreln_names and_indreln_clauses 
                    indreln_name 
                    (?)

** In state 100, looking ahead at Semi, reducing production
** atomic_typ -> Tyvar 
** is permitted because of the following sub-derivation:

Lsquare x Colon typschm witness_clause Rsquare // lookahead token appears because witness_clause can begin with Semi
                Forall tnvs Dot typ // lookahead token is inherited
                                star_typ // lookahead token is inherited
                                star_typ_list // lookahead token is inherited
                                app_typ // lookahead token is inherited
                                id atomic_typs // lookahead token is inherited
                                   appt_typ // lookahead token is inherited
                                   atomic_typ // lookahead token is inherited
                                   Tyvar . 

** In state 100, looking ahead at Semi, reducing production
** tnvar -> Tyvar 
** is permitted because of the following sub-derivation:

Lsquare x Colon typschm Rsquare 
                Forall tnvs Dot cs Semi ranges EqGt typ // lookahead token appears
                                c // lookahead token is inherited
                                id tnvar // lookahead token is inherited
                                   Tyvar . 
