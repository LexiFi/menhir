Grammar has 3 nonterminal symbols, among which 1 start symbols.
Grammar has 14 terminal symbols.
Grammar has 15 productions.
nullable(sequent) = false
nullable(main) = false
nullable(formimp) = false
first(sequent) = VDASH VAR OP
first(main) = VDASH VAR OP DIRECTIVE
first(formimp) = VAR OP
minimal(sequent) = (* 1 *) VAR
minimal(main) = (* 2 *) VAR END
minimal(formimp) = (* 1 *) VAR
follow(sequent) = END
follow(main) = #
follow(formimp) = VDASH TIMES SEQ RIMP PAR NEXT NEG LIMP IMP END CP
Built an LR(0) automaton with 30 states.
The grammar is not SLR(1) -- 7 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 30 states.
20 shift/reduce conflicts were silently solved.
Warning: 7 states have shift/reduce conflicts.
Warning: 36 shift/reduce conflicts were arbitrarily resolved.
6 out of 30 states have a default reduction.
11 out of 30 states are represented.
0 out of 20 symbols keep track of their start position.
0 out of 20 symbols keep track of their end position.
6 out of 16 productions exploit shiftreduce optimization.
0 out of 30 states can peek at an error.
84 functions before inlining, 16 functions after inlining.
